{"mappings":"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AAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,MAAM;YAEV,KAAK,KAAK;gBACN,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,MAAM;YAEV,KAAK,KAAK;gBACN,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,MAAM;YAEV,KAAK,KAAK;gBACN,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,MAAM;YAEV,KAAK,KAAK;gBACN,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;gBACtC,MAAM;YAEV;gBACI,OAAO,CAAC,IAAI,CAAE,kEAAkE,GAAG,KAAK,CAAE,CAAC;SAElG;QAED,IAAK,MAAM,KAAK,KAAK,EAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEjD,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,CAAE,IAAI,EAAE,KAAK,EAAG;QAE5B,iGAAiG;QAEjG,6BAA6B;QAE7B,MAAM,SAAS,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,SAAS,CAAE,AAAC;QAEvD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,SAAS,CAAE,CAAC;QAEhC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,qBAAqB,CAAE,CAAC,EAAG;QAEvB,kGAAkG;QAElG,uEAAuE;QAEvE,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,EAEjB,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAC3C,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAC3C,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,EAE5C,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,AAAC;QAE5B,IAAK,KAAK,GAAG,CAAC,EAAG;YAEb,MAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAE,KAAK,GAAG,CAAG,CAAE,AAAC;YAEzC,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,EAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,EAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,EAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,CAAC,CAAC;SAE/B,MAAM,IAAK,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,EAAG;YAEjC,MAAM,CAAC,GAAG,CAAG,GAAG,IAAI,CAAC,IAAI,CAAE,CAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAE,AAAC;YAEnD,IAAI,CAAC,EAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,EAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,EAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,CAAC,CAAC;SAE/B,MAAM,IAAK,GAAG,GAAG,GAAG,EAAG;YAEpB,MAAM,CAAC,GAAG,CAAG,GAAG,IAAI,CAAC,IAAI,CAAE,CAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAE,AAAC;YAEnD,IAAI,CAAC,EAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,EAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,EAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,CAAC,CAAC;SAE/B,MAAM;YAEH,MAAM,CAAC,GAAG,CAAG,GAAG,IAAI,CAAC,IAAI,CAAE,CAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAE,AAAC;YAEnD,IAAI,CAAC,EAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,EAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,EAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;SAEtB;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,kBAAkB,CAAE,KAAK,EAAE,GAAG,EAAG;QAE7B,yDAAyD;QAEzD,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,AAAC;QAE7B,IAAK,CAAC,GAAG,MAAM,CAAC,OAAO,EAAG;YAEtB,6CAA6C;YAE7C,CAAC,GAAG,CAAC,CAAC;YAEN,IAAK,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,CAAC,CAAE,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,CAAC,CAAE,EAAG;gBAE7C,IAAI,CAAC,EAAE,GAAG,CAAE,KAAK,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;gBACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;aAEf,MAAM;gBAEH,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;gBACZ,IAAI,CAAC,EAAE,GAAG,CAAE,KAAK,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;aAEf;SAEJ,MAAM;YAEH,+EAA+E;YAE/E,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;SAEf;QAED,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;KAE3B;IAED,OAAO,CAAE,CAAC,EAAG;QAET,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,EAAE,EAAG,EAAE,CAAC,CAAE,CAAE,CAAE,CAAC;KAEtE;IAED,aAAa,CAAE,CAAC,EAAE,IAAI,EAAG;QAErB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAE,CAAC,CAAE,AAAC;QAEhC,IAAK,KAAK,KAAK,CAAC,EAAG,OAAO,IAAI,CAAC;QAE/B,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,IAAI,GAAG,KAAK,CAAE,AAAC;QAEtC,IAAI,CAAC,KAAK,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEnB,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,GAAG;QAEP,OAAO,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;KAEjC;IAED,MAAM,GAAG;QAEL,4CAA4C;QAE5C,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;KAE3B;IAED,SAAS,GAAG;QAER,IAAI,CAAC,EAAE,IAAI,EAAG,CAAC;QACf,IAAI,CAAC,EAAE,IAAI,EAAG,CAAC;QACf,IAAI,CAAC,EAAE,IAAI,EAAG,CAAC;QAEf,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,GAAG,CAAE,CAAC,EAAG;QAEL,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;KAE5E;IAED,QAAQ,GAAG;QAEP,OAAO,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;KAExF;IAED,MAAM,GAAG;QAEL,OAAO,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAE,CAAC;KAErG;IAED,SAAS,GAAG;QAER,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,AAAC;QAEtB,IAAK,CAAC,KAAK,CAAC,EAAG;YAEX,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;SAEf,MAAM;YAEH,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEV,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;SAEzB;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAG;QAEb,IAAK,CAAC,KAAK,SAAS,EAAG;YAEnB,OAAO,CAAC,IAAI,CAAE,wGAAwG,CAAE,CAAC;YACzH,OAAO,IAAI,CAAC,mBAAmB,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SAE3C;QAED,OAAO,IAAI,CAAC,mBAAmB,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC;KAE9C;IAED,WAAW,CAAE,CAAC,EAAG;QAEb,OAAO,IAAI,CAAC,mBAAmB,CAAE,CAAC,EAAE,IAAI,CAAE,CAAC;KAE9C;IAED,mBAAmB,CAAE,CAAC,EAAE,CAAC,EAAG;QAExB,gGAAgG;QAEhG,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,AAAC;QACrD,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,AAAC;QAErD,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACxD,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACxD,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACxD,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAExD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,EAAE,EAAE,CAAC,EAAG;QAEX,IAAK,CAAC,KAAK,CAAC,EAAG,OAAO,IAAI,CAAC;QAC3B,IAAK,CAAC,KAAK,CAAC,EAAG,OAAO,IAAI,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;QAEtC,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,AAAC;QAEzD,mFAAmF;QAEnF,IAAI,YAAY,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,AAAC;QAEjE,IAAK,YAAY,GAAG,CAAC,EAAG;YAEpB,IAAI,CAAC,EAAE,GAAG,CAAE,EAAE,CAAC,EAAE,CAAC;YAClB,IAAI,CAAC,EAAE,GAAG,CAAE,EAAE,CAAC,EAAE,CAAC;YAClB,IAAI,CAAC,EAAE,GAAG,CAAE,EAAE,CAAC,EAAE,CAAC;YAClB,IAAI,CAAC,EAAE,GAAG,CAAE,EAAE,CAAC,EAAE,CAAC;YAElB,YAAY,GAAG,CAAE,YAAY,CAAC;SAEjC,MAEG,IAAI,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;QAIpB,IAAK,YAAY,IAAI,CAAG,EAAG;YAEvB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;YAEZ,OAAO,IAAI,CAAC;SAEf;QAED,MAAM,eAAe,GAAG,CAAG,GAAG,YAAY,GAAG,YAAY,AAAC;QAE1D,IAAK,eAAe,IAAI,MAAM,CAAC,OAAO,EAAG;YAErC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;YAChB,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;YAE9B,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEzB,OAAO,IAAI,CAAC;SAEf;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAE,eAAe,CAAE,AAAC;QAClD,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAE,YAAY,EAAE,YAAY,CAAE,AAAC;QAC3D,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,AAAE,CAAA,CAAC,GAAG,CAAC,CAAA,GAAK,SAAS,CAAE,GAAG,YAAY,EAC3D,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,SAAS,CAAE,GAAG,YAAY,AAAC;QAEtD,IAAI,CAAC,EAAE,GAAK,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,AAAE,CAAC;QAC5C,IAAI,CAAC,EAAE,GAAK,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,AAAE,CAAC;QAC5C,IAAI,CAAC,EAAE,GAAK,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,AAAE,CAAC;QAC5C,IAAI,CAAC,EAAE,GAAK,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,AAAE,CAAC;QAE5C,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,CAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAG;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC,KAAK,CAAE,EAAE,EAAE,CAAC,CAAE,CAAC;KAEzC;IAED,MAAM,GAAG;QAEL,wDAAwD;QACxD,8CAA8C;QAC9C,8BAA8B;QAE9B,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,AAAC;QACzB,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAE,CAAC,GAAG,EAAE,CAAE,AAAC;QACpC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAE,EAAE,CAAE,AAAC;QAE/B,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,AAAC;QAEvC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,AAAC;QAEvC,OAAO,IAAI,CAAC,GAAG,CACX,OAAO,GAAG,IAAI,CAAC,GAAG,CAAE,EAAE,CAAE,EACxB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,EAAE,CAAE,EACvB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,EAAE,CAAE,EACvB,OAAO,GAAG,IAAI,CAAC,GAAG,CAAE,EAAE,CAAE,CAC3B,CAAC;KAEL;IAED,MAAM,CAAE,UAAU,EAAG;QAEjB,OAAO,AAAE,UAAU,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAQ,UAAU,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAQ,UAAU,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAQ,UAAU,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,AAAE,CAAC;KAE3I;IAED,SAAS,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAG;QAE3B,IAAI,CAAC,EAAE,GAAG,KAAK,CAAE,MAAM,CAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,CAAC;QAC9B,IAAI,CAAC,EAAE,GAAG,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,CAAC;QAC9B,IAAI,CAAC,EAAE,GAAG,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,CAAC;QAE9B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,EAAG;QAE9B,KAAK,CAAE,MAAM,CAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAC1B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAC9B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAC9B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAE9B,OAAO,KAAK,CAAC;KAEhB;IAED,mBAAmB,CAAE,SAAS,EAAE,KAAK,EAAG;QAEpC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QAClC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QAClC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QAClC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QAElC,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,QAAQ,EAAG;QAElB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QAElC,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,GAAG,EAAE;CAEzB;AAED,UAAU,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AAEzC,MAAM,OAAO;IAET,YAAa,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAG;QAE/B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;KAEd;IAED,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAEX,IAAK,CAAC,KAAK,SAAS,EAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,wBAAwB;QAE3D,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAEX,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;QAChB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;QAChB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;QAEhB,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,CAAC,EAAG;QAEN,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAEX,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,CAAC,EAAG;QAEN,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAEX,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,CAAC,EAAG;QAEN,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAEX,OAAO,IAAI,CAAC;KAEf;IAED,YAAY,CAAE,KAAK,EAAE,KAAK,EAAG;QAEzB,OAAS,KAAK;YAEV,KAAK,CAAC;gBAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;gBAAC,MAAM;YAC9B,KAAK,CAAC;gBAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;gBAAC,MAAM;YAC9B,KAAK,CAAC;gBAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;gBAAC,MAAM;YAC9B;gBAAS,MAAM,IAAI,KAAK,CAAE,yBAAyB,GAAG,KAAK,CAAE,CAAC;SAEjE;QAED,OAAO,IAAI,CAAC;KAEf;IAED,YAAY,CAAE,KAAK,EAAG;QAElB,OAAS,KAAK;YAEV,KAAK,CAAC;gBAAE,OAAO,IAAI,CAAC,CAAC,CAAC;YACtB,KAAK,CAAC;gBAAE,OAAO,IAAI,CAAC,CAAC,CAAC;YACtB,KAAK,CAAC;gBAAE,OAAO,IAAI,CAAC,CAAC,CAAC;YACtB;gBAAS,MAAM,IAAI,KAAK,CAAE,yBAAyB,GAAG,KAAK,CAAE,CAAC;SAEjE;KAEJ;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE,CAAC;KAEzD;IAED,IAAI,CAAE,CAAC,EAAG;QAEN,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACb,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACb,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAEb,OAAO,IAAI,CAAC;KAEf;IAED,GAAG,CAAE,CAAC,EAAE,CAAC,EAAG;QAER,IAAK,CAAC,KAAK,SAAS,EAAG;YAEnB,OAAO,CAAC,IAAI,CAAE,uFAAuF,CAAE,CAAC;YACxG,OAAO,IAAI,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SAElC;QAED,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEd,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,CAAC,EAAG;QAEX,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QAEZ,OAAO,IAAI,CAAC;KAEf;IAED,UAAU,CAAE,CAAC,EAAE,CAAC,EAAG;QAEf,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAEnB,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,CAAE,CAAC,EAAE,CAAC,EAAG;QAEpB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAElB,OAAO,IAAI,CAAC;KAEf;IAED,GAAG,CAAE,CAAC,EAAE,CAAC,EAAG;QAER,IAAK,CAAC,KAAK,SAAS,EAAG;YAEnB,OAAO,CAAC,IAAI,CAAE,uFAAuF,CAAE,CAAC;YACxG,OAAO,IAAI,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SAElC;QAED,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEd,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,CAAC,EAAG;QAEX,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QAEZ,OAAO,IAAI,CAAC;KAEf;IAED,UAAU,CAAE,CAAC,EAAE,CAAC,EAAG;QAEf,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAEnB,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAG;QAEb,IAAK,CAAC,KAAK,SAAS,EAAG;YAEnB,OAAO,CAAC,IAAI,CAAE,iGAAiG,CAAE,CAAC;YAClH,OAAO,IAAI,CAAC,eAAe,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SAEvC;QAED,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEd,OAAO,IAAI,CAAC;KAEf;IAED,cAAc,CAAE,MAAM,EAAG;QAErB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC;QACjB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC;QACjB,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC;QAEjB,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,CAAE,CAAC,EAAE,CAAC,EAAG;QAEpB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAEnB,OAAO,IAAI,CAAC;KAEf;IAED,UAAU,CAAE,KAAK,EAAG;QAEhB,IAAK,CAAI,CAAA,KAAK,IAAI,KAAK,CAAC,OAAO,CAAA,AAAE,EAE7B,OAAO,CAAC,KAAK,CAAE,6FAA6F,CAAE,CAAC;QAInH,OAAO,IAAI,CAAC,eAAe,CAAE,aAAa,CAAC,YAAY,CAAE,KAAK,CAAE,CAAE,CAAC;KAEtE;IAED,cAAc,CAAE,IAAI,EAAE,KAAK,EAAG;QAE1B,OAAO,IAAI,CAAC,eAAe,CAAE,aAAa,CAAC,gBAAgB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAE,CAAC;KAEhF;IAED,YAAY,CAAE,CAAC,EAAG;QAEd,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,AAAC;QACzC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,AAAC;QAErB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAC9C,IAAI,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAC9C,IAAI,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAE9C,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,CAAE,CAAC,EAAG;QAEnB,OAAO,IAAI,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC,SAAS,EAAE,CAAC;KAE7C;IAED,YAAY,CAAE,CAAC,EAAG;QAEd,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,AAAC;QACzC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,AAAC;QAErB,MAAM,CAAC,GAAG,CAAC,GAAK,CAAA,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,EAAE,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,EAAE,CAAE,CAAA,AAAE,AAAC;QAElE,IAAI,CAAC,CAAC,GAAG,AAAE,CAAA,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,EAAE,CAAE,CAAA,GAAK,CAAC,CAAC;QAChE,IAAI,CAAC,CAAC,GAAG,AAAE,CAAA,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,EAAE,CAAE,CAAA,GAAK,CAAC,CAAC;QAChE,IAAI,CAAC,CAAC,GAAG,AAAE,CAAA,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,EAAE,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,EAAE,CAAE,CAAA,GAAK,CAAC,CAAC;QAEjE,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,CAAE,CAAC,EAAG;QAEjB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,AAAC;QACzC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,AAAC;QAE7C,0BAA0B;QAE1B,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,AAAC;QACpC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,AAAC;QACpC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,AAAC;QACpC,MAAM,EAAE,GAAG,CAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,AAAC;QAEtC,kCAAkC;QAElC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,CAAE,EAAE,CAAC;QACrD,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,CAAE,EAAE,CAAC;QACrD,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,CAAE,EAAE,CAAC;QAErD,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,MAAM,EAAG;QAEd,OAAO,IAAI,CAAC,YAAY,CAAE,MAAM,CAAC,kBAAkB,CAAE,CAAC,YAAY,CAAE,MAAM,CAAC,gBAAgB,CAAE,CAAC;KAEjG;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,OAAO,IAAI,CAAC,YAAY,CAAE,MAAM,CAAC,uBAAuB,CAAE,CAAC,YAAY,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;KAEjG;IAED,kBAAkB,CAAE,CAAC,EAAG;QAEpB,qCAAqC;QACrC,oCAAoC;QAEpC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,AAAC;QACzC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,AAAC;QAErB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAC9C,IAAI,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAC9C,IAAI,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QAE/C,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;KAE3B;IAED,MAAM,CAAE,CAAC,EAAG;QAER,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEd,OAAO,IAAI,CAAC;KAEf;IAED,YAAY,CAAE,MAAM,EAAG;QAEnB,OAAO,IAAI,CAAC,cAAc,CAAE,CAAC,GAAG,MAAM,CAAE,CAAC;KAE5C;IAED,GAAG,CAAE,CAAC,EAAG;QAEL,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;QACjC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;QACjC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,GAAG,CAAE,CAAC,EAAG;QAEL,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;QACjC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;QACjC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,GAAG,EAAE,GAAG,EAAG;QAEd,mCAAmC;QAEnC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE,CAAE,CAAC;QACtD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE,CAAE,CAAC;QACtD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE,CAAE,CAAC;QAEtD,OAAO,IAAI,CAAC;KAEf;IAED,WAAW,CAAE,MAAM,EAAE,MAAM,EAAG;QAE1B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAE,CAAE,CAAC;QACxD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAE,CAAE,CAAC;QACxD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAE,CAAE,CAAC;QAExD,OAAO,IAAI,CAAC;KAEf;IAED,WAAW,CAAE,GAAG,EAAE,GAAG,EAAG;QAEpB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,AAAC;QAE7B,OAAO,IAAI,CAAC,YAAY,CAAE,MAAM,IAAI,CAAC,CAAE,CAAC,cAAc,CAAE,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,MAAM,CAAE,CAAE,CAAE,CAAC;KAEtG;IAED,KAAK,GAAG;QAEJ,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QAC9B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QAC9B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QAE9B,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,GAAG;QAEH,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QAC7B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QAC7B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QAE7B,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QAC9B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QAC9B,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QAE9B,OAAO,IAAI,CAAC;KAEf;IAED,WAAW,GAAG;QAEV,IAAI,CAAC,CAAC,GAAG,AAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAK,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,CAAE,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QACrE,IAAI,CAAC,CAAC,GAAG,AAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAK,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,CAAE,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QACrE,IAAI,CAAC,CAAC,GAAG,AAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAK,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,CAAE,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QAErE,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,IAAI,CAAC,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,CAAC;QAElB,OAAO,IAAI,CAAC;KAEf;IAED,GAAG,CAAE,CAAC,EAAG;QAEL,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAErD;IAED,sBAAsB;IAEtB,QAAQ,GAAG;QAEP,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;KAE9D;IAED,MAAM,GAAG;QAEL,OAAO,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAE,CAAC;KAE3E;IAED,eAAe,GAAG;QAEd,OAAO,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,CAAE,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,CAAE,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;KAEvE;IAED,SAAS,GAAG;QAER,OAAO,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAE,CAAC;KAElD;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,cAAc,CAAE,MAAM,CAAE,CAAC;KAEpD;IAED,IAAI,CAAE,CAAC,EAAE,KAAK,EAAG;QAEb,IAAI,CAAC,CAAC,IAAI,AAAE,CAAA,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAA,GAAK,KAAK,CAAC;QACnC,IAAI,CAAC,CAAC,IAAI,AAAE,CAAA,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAA,GAAK,KAAK,CAAC;QACnC,IAAI,CAAC,CAAC,IAAI,AAAE,CAAA,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAA,GAAK,KAAK,CAAC;QAEnC,OAAO,IAAI,CAAC;KAEf;IAED,WAAW,CAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAG;QAEzB,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,AAAE,CAAA,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA,GAAK,KAAK,CAAC;QACxC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,AAAE,CAAA,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA,GAAK,KAAK,CAAC;QACxC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,AAAE,CAAA,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA,GAAK,KAAK,CAAC;QAExC,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,CAAC,EAAE,CAAC,EAAG;QAEV,IAAK,CAAC,KAAK,SAAS,EAAG;YAEnB,OAAO,CAAC,IAAI,CAAE,2FAA2F,CAAE,CAAC;YAC5G,OAAO,IAAI,CAAC,YAAY,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SAEpC;QAED,OAAO,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC;KAEvC;IAED,YAAY,CAAE,CAAC,EAAE,CAAC,EAAG;QAEjB,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,AAAC;QACnC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,AAAC;QAEnC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QAE3B,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,CAAE,CAAC,EAAG;QAEjB,MAAM,WAAW,GAAG,CAAC,CAAC,QAAQ,EAAE,AAAC;QAEjC,IAAK,WAAW,KAAK,CAAC,EAAG,OAAO,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEpD,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,CAAE,IAAI,CAAE,GAAG,WAAW,AAAC;QAE3C,OAAO,IAAI,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,cAAc,CAAE,MAAM,CAAE,CAAC;KAElD;IAED,cAAc,CAAE,WAAW,EAAG;QAE1B,SAAS,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC,eAAe,CAAE,WAAW,CAAE,CAAC;QAEtD,OAAO,IAAI,CAAC,GAAG,CAAE,SAAS,CAAE,CAAC;KAEhC;IAED,OAAO,CAAE,MAAM,EAAG;QAEd,yDAAyD;QACzD,wCAAwC;QAExC,OAAO,IAAI,CAAC,GAAG,CAAE,SAAS,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC,cAAc,CAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,MAAM,CAAE,CAAE,CAAE,CAAC;KAExF;IAED,OAAO,CAAE,CAAC,EAAG;QAET,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAE,AAAC;QAEhE,IAAK,WAAW,KAAK,CAAC,EAAG,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QAE5C,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,GAAG,WAAW,AAAC;QAE1C,sCAAsC;QAEtC,OAAO,IAAI,CAAC,IAAI,CAAE,KAAK,CAAE,KAAK,EAAE,EAAG,EAAE,CAAC,CAAE,CAAE,CAAC;KAE9C;IAED,UAAU,CAAE,CAAC,EAAG;QAEZ,OAAO,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,iBAAiB,CAAE,CAAC,CAAE,CAAE,CAAC;KAEnD;IAED,iBAAiB,CAAE,CAAC,EAAG;QAEnB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;QAE9D,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;KAEtC;IAED,mBAAmB,CAAE,CAAC,EAAG;QAErB,OAAO,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE,CAAC;KAEzF;IAED,gBAAgB,CAAE,CAAC,EAAG;QAElB,OAAO,IAAI,CAAC,sBAAsB,CAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAE,CAAC;KAElE;IAED,sBAAsB,CAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAG;QAEzC,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,MAAM,AAAC;QAE9C,IAAI,CAAC,CAAC,GAAG,YAAY,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QAC1C,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,MAAM,CAAC;QAClC,IAAI,CAAC,CAAC,GAAG,YAAY,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QAE1C,OAAO,IAAI,CAAC;KAEf;IAED,kBAAkB,CAAE,CAAC,EAAG;QAEpB,OAAO,IAAI,CAAC,wBAAwB,CAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;KAElE;IAED,wBAAwB,CAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAG;QAEzC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QACpC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QAEpC,OAAO,IAAI,CAAC;KAEf;IAED,qBAAqB,CAAE,CAAC,EAAG;QAEvB,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,AAAC;QAErB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAE,EAAE,CAAE,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAE,EAAE,CAAE,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAE,EAAE,CAAE,CAAC;QAEjB,OAAO,IAAI,CAAC;KAEf;IAED,kBAAkB,CAAE,CAAC,EAAG;QAEpB,MAAM,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC,MAAM,EAAE,AAAC;QACrD,MAAM,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC,MAAM,EAAE,AAAC;QACrD,MAAM,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC,MAAM,EAAE,AAAC;QAErD,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;QACZ,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;QACZ,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;QAEZ,OAAO,IAAI,CAAC;KAEf;IAED,mBAAmB,CAAE,CAAC,EAAE,KAAK,EAAG;QAE5B,OAAO,IAAI,CAAC,SAAS,CAAE,CAAC,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,CAAE,CAAC;KAElD;IAED,oBAAoB,CAAE,CAAC,EAAE,KAAK,EAAG;QAE7B,OAAO,IAAI,CAAC,SAAS,CAAE,CAAC,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,CAAE,CAAC;KAElD;IAED,YAAY,CAAE,CAAC,EAAG;QAEd,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;QACd,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;QACd,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;QAEd,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,CAAC,EAAG;QAER,OAAS,AAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,AAAE,CAAG;KAE7E;IAED,SAAS,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAG;QAE3B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAE,MAAM,CAAE,CAAC;QACzB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,CAAC;QAC7B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,CAAC;QAE7B,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,EAAG;QAE9B,KAAK,CAAE,MAAM,CAAE,GAAG,IAAI,CAAC,CAAC,CAAC;QACzB,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC,CAAC,CAAC;QAC7B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC,CAAC,CAAC;QAE7B,OAAO,KAAK,CAAC;KAEhB;IAED,mBAAmB,CAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAG;QAE5C,IAAK,MAAM,KAAK,SAAS,EAErB,OAAO,CAAC,IAAI,CAAE,qEAAqE,CAAE,CAAC;QAI1F,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QACjC,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QACjC,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QACvB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QACvB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAEvB,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,GAAG;QAEd,qEAAqE;QAErE,MAAM,CAAC,GAAG,AAAE,CAAA,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAA,GAAK,CAAC,AAAC;QACtC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,AAAC;QACtC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAE,AAAC;QAElC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC;QAC3B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAEX,OAAO,IAAI,CAAC;KAEf;IAED,CAAC,CAAE,MAAM,CAAC,QAAQ,CAAE,GAAG;QAEnB,MAAM,IAAI,CAAC,CAAC,CAAC;QACb,MAAM,IAAI,CAAC,CAAC,CAAC;QACb,MAAM,IAAI,CAAC,CAAC,CAAC;KAEhB;CAEJ;AAED,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;AAEnC,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC9C,MAAM,aAAa,GAAG,aAAa,CAAC,IAAI,UAAU,EAAE,AAAC;AAErD,MAAM,IAAI;IAEN,YAAa,GAAG,GAAG,IAAI,OAAO,CAAE,QAAU,EAAE,QAAU,EAAE,QAAU,CAAE,EAAE,GAAG,GAAG,IAAI,OAAO,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,CAAG;QAE5H,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAElB;IAED,GAAG,CAAE,GAAG,EAAE,GAAG,EAAG;QAEZ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;QAErB,OAAO,IAAI,CAAC;KAEf;IAED,YAAY,CAAE,KAAK,EAAG;QAElB,IAAI,IAAI,GAAG,QAAU,AAAC;QACtB,IAAI,IAAI,GAAG,QAAU,AAAC;QACtB,IAAI,IAAI,GAAG,QAAU,AAAC;QAEtB,IAAI,IAAI,GAAG,CAAE,QAAQ,AAAC;QACtB,IAAI,IAAI,GAAG,CAAE,QAAQ,AAAC;QACtB,IAAI,IAAI,GAAG,CAAE,QAAQ,AAAC;QAEtB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,IAAI,CAAC,CAAG;YAE/C,MAAM,CAAC,GAAG,KAAK,CAAE,GAAC,CAAE,AAAC;YACrB,MAAM,CAAC,GAAG,KAAK,CAAE,GAAC,GAAG,CAAC,CAAE,AAAC;YACzB,MAAM,CAAC,GAAG,KAAK,CAAE,GAAC,GAAG,CAAC,CAAE,AAAC;YAEzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;YACzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;YACzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;YAEzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;YACzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;YACzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;SAE5B;QAED,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;QACjC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,sBAAsB,CAAE,SAAS,EAAG;QAEhC,IAAI,IAAI,GAAG,QAAU,AAAC;QACtB,IAAI,IAAI,GAAG,QAAU,AAAC;QACtB,IAAI,IAAI,GAAG,QAAU,AAAC;QAEtB,IAAI,IAAI,GAAG,CAAE,QAAQ,AAAC;QACtB,IAAI,IAAI,GAAG,CAAE,QAAQ,AAAC;QACtB,IAAI,IAAI,GAAG,CAAE,QAAQ,AAAC;QAEtB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,KAAK,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAEhD,MAAM,CAAC,GAAG,SAAS,CAAC,IAAI,CAAE,GAAC,CAAE,AAAC;YAC9B,MAAM,CAAC,GAAG,SAAS,CAAC,IAAI,CAAE,GAAC,CAAE,AAAC;YAC9B,MAAM,CAAC,GAAG,SAAS,CAAC,IAAI,CAAE,GAAC,CAAE,AAAC;YAE9B,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;YACzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;YACzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;YAEzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;YACzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;YACzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;SAE5B;QAED,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;QACjC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,MAAM,EAAG;QAEpB,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAE7C,IAAI,CAAC,aAAa,CAAE,MAAM,CAAE,GAAC,CAAE,CAAE,CAAC;QAItC,OAAO,IAAI,CAAC;KAEf;IAED,oBAAoB,CAAE,MAAM,EAAE,IAAI,EAAG;QAEjC,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC,cAAc,CAAE,GAAG,CAAE,AAAC;QAE9D,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QACxC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QAExC,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,MAAM,EAAE,OAAO,GAAG,KAAK,EAAG;QAErC,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,OAAO,IAAI,CAAC,cAAc,CAAE,MAAM,EAAE,OAAO,CAAE,CAAC;KAEjD;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;IAED,IAAI,CAAE,GAAG,EAAG;QAER,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAC,GAAG,CAAE,CAAC;QACzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAC,GAAG,CAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,GAAG;QAER,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,QAAU,CAAC;QAClD,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAE,QAAQ,CAAC;QAElD,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,GAAG;QAEN,oHAAoH;QAEpH,OAAO,AAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,AAAE,CAAC;KAEpG;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,GAAG,MAAM,CAAC,UAAU,CAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC,cAAc,CAAE,GAAG,CAAE,CAAC;KAEjH;IAED,OAAO,CAAE,MAAM,EAAG;QAEd,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,GAAG,MAAM,CAAC,UAAU,CAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC;KAE3F;IAED,aAAa,CAAE,KAAK,EAAG;QAEnB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QAEtB,OAAO,IAAI,CAAC;KAEf;IAED,cAAc,CAAE,MAAM,EAAG;QAErB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;QAEvB,OAAO,IAAI,CAAC;KAEf;IAED,cAAc,CAAE,MAAM,EAAG;QAErB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAE,CAAE,MAAM,CAAE,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC;QAE7B,OAAO,IAAI,CAAC;KAEf;IAED,cAAc,CAAE,MAAM,EAAE,OAAO,GAAG,KAAK,EAAG;QAEtC,sFAAsF;QACtF,qEAAqE;QAErE,MAAM,CAAC,iBAAiB,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC;QAEzC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;QAEjC,IAAK,QAAQ,KAAK,SAAS;YAEvB,IAAK,OAAO,IAAI,QAAQ,CAAC,UAAU,IAAI,SAAS,IAAI,QAAQ,CAAC,UAAU,CAAC,QAAQ,KAAK,SAAS,EAAG;gBAE7F,MAAM,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,AAAC;gBAC9C,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,KAAK,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;oBAE/C,SAAS,CAAC,mBAAmB,CAAE,QAAQ,EAAE,GAAC,CAAE,CAAC,YAAY,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;oBAChF,IAAI,CAAC,aAAa,CAAE,SAAS,CAAE,CAAC;iBAEnC;aAEJ,MAAM;gBAEH,IAAK,QAAQ,CAAC,WAAW,KAAK,IAAI,EAE9B,QAAQ,CAAC,kBAAkB,EAAE,CAAC;gBAIlC,MAAM,CAAC,IAAI,CAAE,QAAQ,CAAC,WAAW,CAAE,CAAC;gBACpC,MAAM,CAAC,YAAY,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;gBAE1C,IAAI,CAAC,KAAK,CAAE,MAAM,CAAE,CAAC;aAExB;SAEJ;QAED,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;QAEjC,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAE7C,IAAI,CAAC,cAAc,CAAE,QAAQ,CAAE,GAAC,CAAE,EAAE,OAAO,CAAE,CAAC;QAIlD,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,KAAK,EAAG;QAEnB,OAAO,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAC/C,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAC5C,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;KAEnE;IAED,WAAW,CAAE,GAAG,EAAG;QAEf,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IACrD,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IAClD,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;KAE1D;IAED,YAAY,CAAE,KAAK,EAAE,MAAM,EAAG;QAE1B,wDAAwD;QACxD,6BAA6B;QAE7B,OAAO,MAAM,CAAC,GAAG,CACb,AAAE,CAAA,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,GAAO,CAAA,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,AAAE,EACtD,AAAE,CAAA,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,GAAO,CAAA,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,AAAE,EACtD,AAAE,CAAA,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,GAAO,CAAA,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,AAAE,CACzD,CAAC;KAEL;IAED,aAAa,CAAE,GAAG,EAAG;QAEjB,sDAAsD;QACtD,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IACnD,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAChD,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;KAEvE;IAED,gBAAgB,CAAE,MAAM,EAAG;QAEvB,2DAA2D;QAC3D,IAAI,CAAC,UAAU,CAAE,MAAM,CAAC,MAAM,EAAE,SAAS,CAAE,CAAC;QAE5C,qEAAqE;QACrE,OAAO,SAAS,CAAC,iBAAiB,CAAE,MAAM,CAAC,MAAM,CAAE,IAAM,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,AAAE,CAAC;KAE5F;IAED,eAAe,CAAE,KAAK,EAAG;QAErB,yEAAyE;QACzE,oFAAoF;QAEpF,IAAI,GAAG,EAAE,GAAG,AAAC;QAEb,IAAK,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAG;YAEtB,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAClC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAErC,MAAM;YAEH,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAClC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAErC;QAED,IAAK,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAG;YAEtB,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACnC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAEtC,MAAM;YAEH,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACnC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAEtC;QAED,IAAK,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAG;YAEtB,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACnC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAEtC,MAAM;YAEH,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACnC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAEtC;QAED,OAAS,GAAG,IAAI,CAAE,KAAK,CAAC,QAAQ,IAAI,GAAG,IAAI,CAAE,KAAK,CAAC,QAAQ,CAAG;KAEjE;IAED,kBAAkB,CAAE,QAAQ,EAAG;QAE3B,IAAK,IAAI,CAAC,OAAO,EAAE,EAEf,OAAO,KAAK,CAAC;QAIjB,iCAAiC;QACjC,IAAI,CAAC,SAAS,CAAE,OAAO,CAAE,CAAC;QAC1B,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAC,GAAG,EAAE,OAAO,CAAE,CAAC;QAEzC,oCAAoC;QACpC,KAAK,CAAC,UAAU,CAAE,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;QACxC,KAAK,CAAC,UAAU,CAAE,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;QACxC,KAAK,CAAC,UAAU,CAAE,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;QAExC,oCAAoC;QACpC,GAAG,CAAC,UAAU,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC;QAC/B,GAAG,CAAC,UAAU,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC;QAC/B,GAAG,CAAC,UAAU,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC;QAE/B,wHAAwH;QACxH,6HAA6H;QAC7H,0GAA0G;QAC1G,IAAI,IAAI,GAAG;AACP,aAAC;YAAE,CAAE,GAAG,CAAC,CAAC;YAAE,GAAG,CAAC,CAAC;AAAE,aAAC;YAAE,CAAE,GAAG,CAAC,CAAC;YAAE,GAAG,CAAC,CAAC;AAAE,aAAC;YAAE,CAAE,GAAG,CAAC,CAAC;YAAE,GAAG,CAAC,CAAC;YACvD,GAAG,CAAC,CAAC;AAAE,aAAC;YAAE,CAAE,GAAG,CAAC,CAAC;YAAE,GAAG,CAAC,CAAC;AAAE,aAAC;YAAE,CAAE,GAAG,CAAC,CAAC;YAAE,GAAG,CAAC,CAAC;AAAE,aAAC;YAAE,CAAE,GAAG,CAAC,CAAC;YACvD,CAAE,GAAG,CAAC,CAAC;YAAE,GAAG,CAAC,CAAC;AAAE,aAAC;YAAE,CAAE,GAAG,CAAC,CAAC;YAAE,GAAG,CAAC,CAAC;AAAE,aAAC;YAAE,CAAE,GAAG,CAAC,CAAC;YAAE,GAAG,CAAC,CAAC;AAAE,aAAC;SAC1D,AAAC;QACF,IAAK,CAAE,UAAU,CAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAE,EAEpD,OAAO,KAAK,CAAC;QAIjB,oCAAoC;QACpC,IAAI,GAAG;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;SAAE,CAAC;QACrC,IAAK,CAAE,UAAU,CAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAE,EAEpD,OAAO,KAAK,CAAC;QAIjB,kDAAkD;QAClD,kDAAkD;QAClD,eAAe,CAAC,YAAY,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;QACzC,IAAI,GAAG;YAAE,eAAe,CAAC,CAAC;YAAE,eAAe,CAAC,CAAC;YAAE,eAAe,CAAC,CAAC;SAAE,CAAC;QAEnE,OAAO,UAAU,CAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;KAE5D;IAED,UAAU,CAAE,KAAK,EAAE,MAAM,EAAG;QAExB,OAAO,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,KAAK,CAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC;KAE3D;IAED,eAAe,CAAE,KAAK,EAAG;QAErB,MAAM,YAAY,GAAG,SAAS,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,KAAK,CAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAE,AAAC;QAEzE,OAAO,YAAY,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC,MAAM,EAAE,CAAC;KAE7C;IAED,iBAAiB,CAAE,MAAM,EAAG;QAExB,IAAI,CAAC,SAAS,CAAE,MAAM,CAAC,MAAM,CAAE,CAAC;QAEhC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAE,SAAS,CAAE,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;QAEzD,OAAO,MAAM,CAAC;KAEjB;IAED,SAAS,CAAE,GAAG,EAAG;QAEb,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,CAAC;QAExB,wLAAwL;QACxL,IAAK,IAAI,CAAC,OAAO,EAAE,EAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAEvC,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,GAAG,EAAG;QAET,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,CAAC;QAExB,OAAO,IAAI,CAAC;KAEf;IAED,YAAY,CAAE,MAAM,EAAG;QAEnB,0CAA0C;QAC1C,IAAK,IAAI,CAAC,OAAO,EAAE,EAAG,OAAO,IAAI,CAAC;QAElC,0EAA0E;QAC1E,OAAO,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC,CAAC,MAAM;QACrF,OAAO,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC,CAAC,MAAM;QACrF,OAAO,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC,CAAC,MAAM;QACrF,OAAO,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC,CAAC,MAAM;QACrF,OAAO,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC,CAAC,MAAM;QACrF,OAAO,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC,CAAC,MAAM;QACrF,OAAO,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC,CAAC,MAAM;QACrF,OAAO,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC,CAAC,MAAM;QAErF,IAAI,CAAC,aAAa,CAAE,OAAO,CAAE,CAAC;QAE9B,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;QAEvB,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,GAAG,EAAG;QAEV,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,CAAE,IAAI,CAAC,GAAG,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,CAAE,IAAI,CAAC,GAAG,CAAE,CAAC;KAEnE;CAEJ;AAED,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;AAE7B,MAAM,OAAO,GAAG;IACZ,aAAa,CAAC,IAAI,OAAO,EAAE;IAC3B,aAAa,CAAC,IAAI,OAAO,EAAE;IAC3B,aAAa,CAAC,IAAI,OAAO,EAAE;IAC3B,aAAa,CAAC,IAAI,OAAO,EAAE;IAC3B,aAAa,CAAC,IAAI,OAAO,EAAE;IAC3B,aAAa,CAAC,IAAI,OAAO,EAAE;IAC3B,aAAa,CAAC,IAAI,OAAO,EAAE;IAC3B,aAAa,CAAC,IAAI,OAAO,EAAE;CAC9B,AAAC;AAEF,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE9C,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,IAAI,EAAE,AAAC;AAExC,6BAA6B;AAE7B,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE1C,wBAAwB;AAExB,MAAM,GAAG,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACxC,MAAM,GAAG,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACxC,MAAM,GAAG,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAExC,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC5C,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC7C,MAAM,eAAe,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACpD,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE9C,SAAS,UAAU,CAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAG;IAE7C,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE,GAAC,IAAI,CAAC,CAAG;QAEnD,SAAS,CAAC,SAAS,CAAE,IAAI,EAAE,GAAC,CAAE,CAAC;QAC/B,4CAA4C;QAC5C,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,SAAS,CAAC,CAAC,CAAE,GAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,SAAS,CAAC,CAAC,CAAE,GAAG,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,SAAS,CAAC,CAAC,CAAE,AAAC;QAC1H,kEAAkE;QAClE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAE,SAAS,CAAE,AAAC;QAC/B,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAE,SAAS,CAAE,AAAC;QAC/B,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAE,SAAS,CAAE,AAAC;QAC/B,+FAA+F;QAC/F,IAAK,IAAI,CAAC,GAAG,CAAE,CAAE,IAAI,CAAC,GAAG,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,EAAE,IAAI,CAAC,GAAG,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAE,GAAG,CAAC,EAEjE,qFAAqF;QACrF,yCAAyC;QACzC,OAAO,KAAK,CAAC;KAIpB;IAED,OAAO,IAAI,CAAC;CAEf;AAED,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,IAAI,EAAE,AAAC;AACxC,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,MAAM,gBAAgB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACrD,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE7C,MAAM,MAAM;IAER,YAAa,MAAM,GAAG,IAAI,OAAO,EAAE,EAAE,MAAM,GAAG,EAAG,CAAG;QAEhD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KAExB;IAED,GAAG,CAAE,MAAM,EAAE,MAAM,EAAG;QAElB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,MAAM,EAAE,cAAc,EAAG;QAEpC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAK,cAAc,KAAK,SAAS,EAE7B,MAAM,CAAC,IAAI,CAAE,cAAc,CAAE,CAAC;aAI9B,MAAM,CAAC,aAAa,CAAE,MAAM,CAAE,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC;QAIvD,IAAI,WAAW,GAAG,CAAC,AAAC;QAEpB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAE7C,WAAW,GAAG,IAAI,CAAC,GAAG,CAAE,WAAW,EAAE,MAAM,CAAC,iBAAiB,CAAE,MAAM,CAAE,GAAC,CAAE,CAAE,CAAE,CAAC;QAInF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;QAEvC,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,CAAE,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,GAAG;QAEN,OAAS,IAAI,CAAC,MAAM,GAAG,CAAC,CAAG;KAE9B;IAED,SAAS,GAAG;QAER,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,EAAG,CAAC;QAElB,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,KAAK,EAAG;QAEnB,OAAS,KAAK,CAAC,iBAAiB,CAAE,IAAI,CAAC,MAAM,CAAE,IAAM,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,AAAE,CAAG;KAEtF;IAED,eAAe,CAAE,KAAK,EAAG;QAErB,OAAS,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,MAAM,CAAE,GAAG,IAAI,CAAC,MAAM,CAAG;KAE5D;IAED,gBAAgB,CAAE,MAAM,EAAG;QAEvB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,AAAC;QAE9C,OAAO,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAE,IAAI,CAAC,MAAM,CAAE,IAAM,SAAS,GAAG,SAAS,AAAE,CAAC;KAEtF;IAED,aAAa,CAAE,GAAG,EAAG;QAEjB,OAAO,GAAG,CAAC,gBAAgB,CAAE,IAAI,CAAE,CAAC;KAEvC;IAED,eAAe,CAAE,KAAK,EAAG;QAErB,OAAO,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,eAAe,CAAE,IAAI,CAAC,MAAM,CAAE,CAAE,IAAI,IAAI,CAAC,MAAM,CAAC;KAE1E;IAED,UAAU,CAAE,KAAK,EAAE,MAAM,EAAG;QAExB,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAE,KAAK,CAAE,AAAC;QAE7D,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QAErB,IAAK,aAAa,GAAK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,AAAE,EAAG;YAEjD,MAAM,CAAC,GAAG,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC,SAAS,EAAE,CAAC;YACtC,MAAM,CAAC,cAAc,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;SAE3D;QAED,OAAO,MAAM,CAAC;KAEjB;IAED,cAAc,CAAE,MAAM,EAAG;QAErB,IAAK,IAAI,CAAC,OAAO,EAAE,EAAG;YAElB,2CAA2C;YAC3C,MAAM,CAAC,SAAS,EAAE,CAAC;YACnB,OAAO,MAAM,CAAC;SAEjB;QAED,MAAM,CAAC,GAAG,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QACvC,MAAM,CAAC,cAAc,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAErC,OAAO,MAAM,CAAC;KAEjB;IAED,YAAY,CAAE,MAAM,EAAG;QAEnB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC;QACnC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,iBAAiB,EAAE,CAAC;QAEvD,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,KAAK,EAAG;QAEnB,yHAAyH;QAEzH,QAAQ,CAAC,UAAU,CAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAE1C,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,EAAE,AAAC;QAErC,IAAK,QAAQ,GAAK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,AAAE,EAAG;YAE5C,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAE,QAAQ,CAAE,AAAC;YACrC,MAAM,iBAAiB,GAAG,AAAE,CAAA,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA,GAAK,GAAG,AAAC;YAEzD,uFAAuF;YACvF,gFAAgF;YAChF,wDAAwD;YAExD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,QAAQ,CAAC,cAAc,CAAE,iBAAiB,GAAG,MAAM,CAAE,CAAE,CAAC;YACzE,IAAI,CAAC,MAAM,IAAI,iBAAiB,CAAC;SAEpC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,MAAM,EAAG;QAEZ,yHAAyH;QAEzH,kFAAkF;QAClF,sEAAsE;QACtE,wEAAwE;QAEvE,IAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,MAAM,CAAC,MAAM,CAAE,KAAK,IAAI,EAE7C,gBAAgB,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,cAAc,CAAE,MAAM,CAAC,MAAM,CAAE,CAAC;aAKjE,gBAAgB,CAAC,UAAU,CAAE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC,SAAS,EAAE,CAAC,cAAc,CAAE,MAAM,CAAC,MAAM,CAAE,CAAC;QAI1G,IAAI,CAAC,aAAa,CAAE,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,CAAE,CAAC,GAAG,CAAE,gBAAgB,CAAE,CAAE,CAAC;QAC1E,IAAI,CAAC,aAAa,CAAE,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,CAAE,CAAC,GAAG,CAAE,gBAAgB,CAAE,CAAE,CAAC;QAE1E,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,MAAM,EAAG;QAEb,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAE,IAAI,CAAC,MAAM,CAAE,IAAM,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,AAAE,CAAC;KAEnF;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;CAEJ;AAED,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC9C,MAAM,UAAU,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC/C,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC5C,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE1C,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC3C,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC3C,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE9C,MAAM,GAAG;IAEL,YAAa,MAAM,GAAG,IAAI,OAAO,EAAE,EAAE,SAAS,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE,CAAG;QAExE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAE9B;IAED,GAAG,CAAE,MAAM,EAAE,SAAS,EAAG;QAErB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,GAAG,EAAG;QAER,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,GAAG,CAAC,MAAM,CAAE,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,GAAG,CAAC,SAAS,CAAE,CAAC;QAErC,OAAO,IAAI,CAAC;KAEf;IAED,EAAE,CAAE,CAAC,EAAE,MAAM,EAAG;QAEZ,OAAO,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC,cAAc,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;KAE/E;IAED,MAAM,CAAE,CAAC,EAAG;QAER,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC,SAAS,EAAE,CAAC;QAExD,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,CAAC,EAAG;QAER,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC,EAAE,SAAS,CAAE,CAAE,CAAC;QAE5C,OAAO,IAAI,CAAC;KAEf;IAED,mBAAmB,CAAE,KAAK,EAAE,MAAM,EAAG;QAEjC,MAAM,CAAC,UAAU,CAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAExC,MAAM,iBAAiB,GAAG,MAAM,CAAC,GAAG,CAAE,IAAI,CAAC,SAAS,CAAE,AAAC;QAEvD,IAAK,iBAAiB,GAAG,CAAC,EAEtB,OAAO,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAItC,OAAO,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC,cAAc,CAAE,iBAAiB,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;KAE/F;IAED,eAAe,CAAE,KAAK,EAAG;QAErB,OAAO,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAE,CAAC;KAEvD;IAED,iBAAiB,CAAE,KAAK,EAAG;QAEvB,MAAM,iBAAiB,GAAG,SAAS,CAAC,UAAU,CAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,SAAS,CAAE,AAAC;QAE3F,uBAAuB;QAEvB,IAAK,iBAAiB,GAAG,CAAC,EAEtB,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAC;QAIlD,SAAS,CAAC,IAAI,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC,cAAc,CAAE,iBAAiB,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAExF,OAAO,SAAS,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAC;KAE/C;IAED,mBAAmB,CAAE,EAAE,EAAE,EAAE,EAAE,kBAAkB,EAAE,sBAAsB,EAAG;QAEtE,+GAA+G;QAC/G,8DAA8D;QAC9D,uBAAuB;QACvB,yCAAyC;QACzC,iCAAiC;QACjC,qCAAqC;QAErC,UAAU,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC,GAAG,CAAE,EAAE,CAAE,CAAC,cAAc,CAAE,GAAG,CAAE,CAAC;QACtD,OAAO,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC,GAAG,CAAE,EAAE,CAAE,CAAC,SAAS,EAAE,CAAC;QACzC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;QAE5C,MAAM,SAAS,GAAG,EAAE,CAAC,UAAU,CAAE,EAAE,CAAE,GAAG,GAAG,AAAC;QAC5C,MAAM,GAAG,GAAG,CAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;QAC5C,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,SAAS,CAAE,AAAC;QACvC,MAAM,EAAE,GAAG,CAAE,KAAK,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;QAClC,MAAM,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,AAAC;QAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,GAAG,GAAG,GAAG,CAAE,AAAC;QACtC,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,AAAC;QAE5B,IAAK,GAAG,GAAG,CAAC,EAAG;YAEX,wCAAwC;YAExC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;YACnB,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;YACnB,MAAM,GAAG,SAAS,GAAG,GAAG,CAAC;YAEzB,IAAK,EAAE,IAAI,CAAC;gBAER,IAAK,EAAE,IAAI,CAAE,MAAM;oBAEf,IAAK,EAAE,IAAI,MAAM,EAAG;wBAEhB,WAAW;wBACX,iDAAiD;wBAEjD,MAAM,MAAM,GAAG,CAAC,GAAG,GAAG,AAAC;wBACvB,EAAE,IAAI,MAAM,CAAC;wBACb,EAAE,IAAI,MAAM,CAAC;wBACb,OAAO,GAAG,EAAE,GAAK,CAAA,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA,GAAK,EAAE,GAAK,CAAA,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA,AAAE,GAAG,CAAC,CAAC;qBAEnF,MAAM;wBAEH,WAAW;wBAEX,EAAE,GAAG,SAAS,CAAC;wBACf,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAI,CAAA,GAAG,GAAG,EAAE,GAAG,EAAE,CAAA,AAAE,CAAE,CAAC;wBACxC,OAAO,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAK,CAAA,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA,AAAE,GAAG,CAAC,CAAC;qBAElD;uBAEE;oBAEH,WAAW;oBAEX,EAAE,GAAG,CAAE,SAAS,CAAC;oBACjB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAI,CAAA,GAAG,GAAG,EAAE,GAAG,EAAE,CAAA,AAAE,CAAE,CAAC;oBACxC,OAAO,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAK,CAAA,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA,AAAE,GAAG,CAAC,CAAC;iBAElD;mBAEE;gBAEH,IAAK,EAAE,IAAI,CAAE,MAAM,EAAG;oBAElB,WAAW;oBAEX,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAI,CAAA,CAAE,GAAG,GAAG,SAAS,GAAG,EAAE,CAAA,AAAE,CAAE,CAAC;oBACjD,EAAE,GAAG,AAAE,EAAE,GAAG,CAAC,GAAK,CAAE,SAAS,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,CAAE,CAAE,SAAS,EAAE,CAAE,EAAE,CAAE,EAAE,SAAS,CAAE,CAAC;oBACrF,OAAO,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAK,CAAA,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA,AAAE,GAAG,CAAC,CAAC;iBAElD,MAAM,IAAK,EAAE,IAAI,MAAM,EAAG;oBAEvB,WAAW;oBAEX,EAAE,GAAG,CAAC,CAAC;oBACP,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,CAAE,CAAE,SAAS,EAAE,CAAE,EAAE,CAAE,EAAE,SAAS,CAAE,CAAC;oBAC1D,OAAO,GAAG,EAAE,GAAK,CAAA,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA,GAAK,CAAC,CAAC;iBAEtC,MAAM;oBAEH,WAAW;oBAEX,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAI,CAAA,GAAG,GAAG,SAAS,GAAG,EAAE,CAAA,AAAE,CAAE,CAAC;oBAC/C,EAAE,GAAG,AAAE,EAAE,GAAG,CAAC,GAAK,SAAS,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,CAAE,CAAE,SAAS,EAAE,CAAE,EAAE,CAAE,EAAE,SAAS,CAAE,CAAC;oBACnF,OAAO,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAK,CAAA,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA,AAAE,GAAG,CAAC,CAAC;iBAElD;aAEJ;SAEJ,MAAM;YAEH,gCAAgC;YAEhC,EAAE,GAAG,AAAE,GAAG,GAAG,CAAC,GAAK,CAAE,SAAS,GAAG,SAAS,CAAC;YAC3C,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAI,CAAA,GAAG,GAAG,EAAE,GAAG,EAAE,CAAA,AAAE,CAAE,CAAC;YACxC,OAAO,GAAG,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAK,CAAA,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA,AAAE,GAAG,CAAC,CAAC;SAElD;QAED,IAAK,kBAAkB,EAEnB,kBAAkB,CAAC,IAAI,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC,cAAc,CAAE,EAAE,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAItF,IAAK,sBAAsB,EAEvB,sBAAsB,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC,cAAc,CAAE,EAAE,CAAE,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;QAIlF,OAAO,OAAO,CAAC;KAElB;IAED,eAAe,CAAE,MAAM,EAAE,MAAM,EAAG;QAE9B,SAAS,CAAC,UAAU,CAAE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QACnD,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG,CAAE,IAAI,CAAC,SAAS,CAAE,AAAC;QAC5C,MAAM,EAAE,GAAG,SAAS,CAAC,GAAG,CAAE,SAAS,CAAE,GAAG,GAAG,GAAG,GAAG,AAAC;QAClD,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,AAAC;QAE9C,IAAK,EAAE,GAAG,OAAO,EAAG,OAAO,IAAI,CAAC;QAEhC,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAE,OAAO,GAAG,EAAE,CAAE,AAAC;QAEtC,2DAA2D;QAC3D,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,AAAC;QAErB,6DAA6D;QAC7D,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,AAAC;QAErB,wEAAwE;QACxE,IAAK,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAG,OAAO,IAAI,CAAC;QAEpC,uCAAuC;QACvC,wFAAwF;QACxF,4EAA4E;QAC5E,IAAK,EAAE,GAAG,CAAC,EAAG,OAAO,IAAI,CAAC,EAAE,CAAE,EAAE,EAAE,MAAM,CAAE,CAAC;QAE3C,mFAAmF;QACnF,OAAO,IAAI,CAAC,EAAE,CAAE,EAAE,EAAE,MAAM,CAAE,CAAC;KAEhC;IAED,gBAAgB,CAAE,MAAM,EAAG;QAEvB,OAAO,IAAI,CAAC,iBAAiB,CAAE,MAAM,CAAC,MAAM,CAAE,IAAM,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,AAAE,CAAC;KAEvF;IAED,eAAe,CAAE,KAAK,EAAG;QAErB,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAE,IAAI,CAAC,SAAS,CAAE,AAAC;QAEvD,IAAK,WAAW,KAAK,CAAC,EAAG;YAErB,kCAAkC;YAClC,IAAK,KAAK,CAAC,eAAe,CAAE,IAAI,CAAC,MAAM,CAAE,KAAK,CAAC,EAE3C,OAAO,CAAC,CAAC;YAIb,4EAA4E;YAE5E,OAAO,IAAI,CAAC;SAEf;QAED,MAAM,CAAC,GAAG,CAAI,CAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,KAAK,CAAC,MAAM,CAAE,GAAG,KAAK,CAAC,QAAQ,CAAA,AAAE,GAAG,WAAW,AAAC;QAE/E,+CAA+C;QAE/C,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;KAE5B;IAED,cAAc,CAAE,KAAK,EAAE,MAAM,EAAG;QAE5B,MAAM,CAAC,GAAG,IAAI,CAAC,eAAe,CAAE,KAAK,CAAE,AAAC;QAExC,IAAK,CAAC,KAAK,IAAI,EAEX,OAAO,IAAI,CAAC;QAIhB,OAAO,IAAI,CAAC,EAAE,CAAE,CAAC,EAAE,MAAM,CAAE,CAAC;KAE/B;IAED,eAAe,CAAE,KAAK,EAAG;QAErB,2CAA2C;QAE3C,MAAM,WAAW,GAAG,KAAK,CAAC,eAAe,CAAE,IAAI,CAAC,MAAM,CAAE,AAAC;QAEzD,IAAK,WAAW,KAAK,CAAC,EAElB,OAAO,IAAI,CAAC;QAIhB,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAE,IAAI,CAAC,SAAS,CAAE,AAAC;QAEvD,IAAK,WAAW,GAAG,WAAW,GAAG,CAAC,EAE9B,OAAO,IAAI,CAAC;QAIhB,6DAA6D;QAE7D,OAAO,KAAK,CAAC;KAEhB;IAED,YAAY,CAAE,GAAG,EAAE,MAAM,EAAG;QAExB,IAAI,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,AAAC;QAE3C,MAAM,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAChC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAC9B,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,AAAC;QAEnC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAK,OAAO,IAAI,CAAC,EAAG;YAEhB,IAAI,GAAG,AAAE,CAAA,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA,GAAK,OAAO,CAAC;YAC1C,IAAI,GAAG,AAAE,CAAA,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA,GAAK,OAAO,CAAC;SAE7C,MAAM;YAEH,IAAI,GAAG,AAAE,CAAA,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA,GAAK,OAAO,CAAC;YAC1C,IAAI,GAAG,AAAE,CAAA,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA,GAAK,OAAO,CAAC;SAE7C;QAED,IAAK,OAAO,IAAI,CAAC,EAAG;YAEhB,KAAK,GAAG,AAAE,CAAA,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA,GAAK,OAAO,CAAC;YAC3C,KAAK,GAAG,AAAE,CAAA,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA,GAAK,OAAO,CAAC;SAE9C,MAAM;YAEH,KAAK,GAAG,AAAE,CAAA,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA,GAAK,OAAO,CAAC;YAC3C,KAAK,GAAG,AAAE,CAAA,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA,GAAK,OAAO,CAAC;SAE9C;QAED,IAAK,AAAE,IAAI,GAAG,KAAK,IAAQ,KAAK,GAAG,IAAI,AAAE,EAAG,OAAO,IAAI,CAAC;QAExD,6DAA6D;QAC7D,6DAA6D;QAE7D,IAAK,KAAK,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI,EAAG,IAAI,GAAG,KAAK,CAAC;QAElD,IAAK,KAAK,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI,EAAG,IAAI,GAAG,KAAK,CAAC;QAElD,IAAK,OAAO,IAAI,CAAC,EAAG;YAEhB,KAAK,GAAG,AAAE,CAAA,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA,GAAK,OAAO,CAAC;YAC3C,KAAK,GAAG,AAAE,CAAA,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA,GAAK,OAAO,CAAC;SAE9C,MAAM;YAEH,KAAK,GAAG,AAAE,CAAA,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA,GAAK,OAAO,CAAC;YAC3C,KAAK,GAAG,AAAE,CAAA,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA,GAAK,OAAO,CAAC;SAE9C;QAED,IAAK,AAAE,IAAI,GAAG,KAAK,IAAQ,KAAK,GAAG,IAAI,AAAE,EAAG,OAAO,IAAI,CAAC;QAExD,IAAK,KAAK,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI,EAAG,IAAI,GAAG,KAAK,CAAC;QAElD,IAAK,KAAK,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI,EAAG,IAAI,GAAG,KAAK,CAAC;QAElD,iDAAiD;QAEjD,IAAK,IAAI,GAAG,CAAC,EAAG,OAAO,IAAI,CAAC;QAE5B,OAAO,IAAI,CAAC,EAAE,CAAE,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE,MAAM,CAAE,CAAC;KAErD;IAED,aAAa,CAAE,GAAG,EAAG;QAEjB,OAAO,IAAI,CAAC,YAAY,CAAE,GAAG,EAAE,SAAS,CAAE,KAAK,IAAI,CAAC;KAEvD;IAED,iBAAiB,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,eAAe,EAAE,MAAM,EAAG;QAElD,gDAAgD;QAEhD,kHAAkH;QAElH,MAAM,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC1B,MAAM,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC1B,SAAS,CAAC,YAAY,CAAE,MAAM,EAAE,MAAM,CAAE,CAAC;QAEzC,+DAA+D;QAC/D,iDAAiD;QACjD,sDAAsD;QACtD,sDAAsD;QACtD,4CAA4C;QAC5C,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAE,SAAS,CAAE,AAAC;QAC1C,IAAI,KAAI,AAAC;QAET,IAAK,GAAG,GAAG,CAAC,EAAG;YAEX,IAAK,eAAe,EAAG,OAAO,IAAI,CAAC;YACnC,KAAI,GAAG,CAAC,CAAC;SAEZ,MAAM,IAAK,GAAG,GAAG,CAAC,EAAG;YAElB,KAAI,GAAG,EAAG,CAAC;YACX,GAAG,GAAG,CAAE,GAAG,CAAC;SAEf,MAEG,OAAO,IAAI,CAAC;QAIhB,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAE,CAAC;QACnC,MAAM,MAAM,GAAG,KAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAE,MAAM,CAAC,YAAY,CAAE,KAAK,EAAE,MAAM,CAAE,CAAE,AAAC;QAEjF,0BAA0B;QAC1B,IAAK,MAAM,GAAG,CAAC,EAEX,OAAO,IAAI,CAAC;QAIhB,MAAM,MAAM,GAAG,KAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAE,MAAM,CAAC,KAAK,CAAE,KAAK,CAAE,CAAE,AAAC;QAElE,0BAA0B;QAC1B,IAAK,MAAM,GAAG,CAAC,EAEX,OAAO,IAAI,CAAC;QAIhB,6BAA6B;QAC7B,IAAK,MAAM,GAAG,MAAM,GAAG,GAAG,EAEtB,OAAO,IAAI,CAAC;QAIhB,+CAA+C;QAC/C,MAAM,GAAG,GAAG,CAAE,KAAI,GAAG,KAAK,CAAC,GAAG,CAAE,SAAS,CAAE,AAAC;QAE5C,yBAAyB;QACzB,IAAK,GAAG,GAAG,CAAC,EAER,OAAO,IAAI,CAAC;QAIhB,2BAA2B;QAC3B,OAAO,IAAI,CAAC,EAAE,CAAE,GAAG,GAAG,GAAG,EAAE,MAAM,CAAE,CAAC;KAEvC;IAED,YAAY,CAAE,OAAO,EAAG;QAEpB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAE,OAAO,CAAE,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAE,OAAO,CAAE,CAAC;QAE7C,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,GAAG,EAAG;QAEV,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,CAAE,IAAI,CAAC,MAAM,CAAE,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC;KAErF;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;CAEJ;AAED,MAAM,OAAO;IAET,aAAc;QAEV,IAAI,CAAC,QAAQ,GAAG;AAEZ,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AACV,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AACV,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AACV,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;SAEb,CAAC;QAEF,IAAK,SAAS,CAAC,MAAM,GAAG,CAAC,EAErB,OAAO,CAAC,KAAK,CAAE,+EAA+E,CAAE,CAAC;KAIxG;IAED,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAG;QAElF,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QAEzB,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC;QAC5D,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC;QAC5D,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC;QAC7D,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC;QAE7D,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,GAAG;QAEP,IAAI,CAAC,GAAG,CAEJ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEb,CAAC;QAEF,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,OAAO,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;KAEnD;IAED,IAAI,CAAE,CAAC,EAAG;QAEN,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QACzB,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,AAAC;QAEtB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAC3E,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAC3E,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAC/E,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAEnF,OAAO,IAAI,CAAC;KAEf;IAED,YAAY,CAAE,CAAC,EAAG;QAEd,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,EAAE,GAAG,CAAC,CAAC,QAAQ,AAAC;QAE1C,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QACpB,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QACpB,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAEpB,OAAO,IAAI,CAAC;KAEf;IAED,cAAc,CAAE,CAAC,EAAG;QAEhB,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,AAAC;QAEtB,IAAI,CAAC,GAAG,CAEJ,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5B,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5B,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEb,CAAC;QAEF,OAAO,IAAI,CAAC;KAEf;IAED,YAAY,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAG;QAEhC,KAAK,CAAC,mBAAmB,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC;QACrC,KAAK,CAAC,mBAAmB,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC;QACrC,KAAK,CAAC,mBAAmB,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC;QAErC,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAG;QAE7B,IAAI,CAAC,GAAG,CACJ,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,EAC5B,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,EAC5B,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACb,CAAC;QAEF,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,CAAE,CAAC,EAAG;QAEjB,mDAAmD;QAEnD,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QACzB,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,AAAC;QAEtB,MAAM,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,mBAAmB,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC,MAAM,EAAE,AAAC;QAC9D,MAAM,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,mBAAmB,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC,MAAM,EAAE,AAAC;QAC9D,MAAM,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,mBAAmB,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC,MAAM,EAAE,AAAC;QAE9D,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC;QAC3B,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC;QAC3B,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC;QAC3B,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAEZ,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC;QAC3B,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC;QAC3B,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC;QAC3B,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAEZ,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC;QAC3B,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC;QAC3B,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,GAAG,MAAM,CAAC;QAC7B,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QAEb,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QACb,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QACb,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QACb,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QAEb,OAAO,IAAI,CAAC;KAEf;IAED,qBAAqB,CAAE,KAAK,EAAG;QAE3B,IAAK,CAAI,CAAA,KAAK,IAAI,KAAK,CAAC,OAAO,CAAA,AAAE,EAE7B,OAAO,CAAC,KAAK,CAAE,uGAAuG,CAAE,CAAC;QAI7H,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QAEzB,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,AAAC;QAC5C,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,AAAC;QAC3C,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,AAAC;QAC3C,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,AAAC;QAE3C,IAAK,KAAK,CAAC,KAAK,KAAK,KAAK,EAAG;YAEzB,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;YAErD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAC;YAClB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;YAEZ,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACtB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACtB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAC;YAElB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACtB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACtB,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;SAEpB,MAAM,IAAK,KAAK,CAAC,KAAK,KAAK,KAAK,EAAG;YAEhC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;YAErD,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACtB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YACtB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAEhB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,CAAC;YAEd,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YACtB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACtB,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;SAEpB,MAAM,IAAK,KAAK,CAAC,KAAK,KAAK,KAAK,EAAG;YAEhC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;YAErD,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACtB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAC;YAClB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAEtB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACtB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAEtB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAC;YAClB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;YACZ,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;SAEpB,MAAM,IAAK,KAAK,CAAC,KAAK,KAAK,KAAK,EAAG;YAEhC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;YAErD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YACtB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YAEtB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YACtB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YAEtB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,CAAC;YACd,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;SAEpB,MAAM,IAAK,KAAK,CAAC,KAAK,KAAK,KAAK,EAAG;YAEhC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;YAErD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACtB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YAEtB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;YACZ,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAC;YAElB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAC;YAClB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YACtB,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SAE1B,MAAM,IAAK,KAAK,CAAC,KAAK,KAAK,KAAK,EAAG;YAEhC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;YAErD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,CAAC;YACd,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAEhB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YACtB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YAEtB,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YACtB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;SAE1B;QAED,aAAa;QACb,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QACZ,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QACZ,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QAEb,cAAc;QACd,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QACb,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QACb,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QACb,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QAEb,OAAO,IAAI,CAAC;KAEf;IAED,0BAA0B,CAAE,CAAC,EAAG;QAE5B,OAAO,IAAI,CAAC,OAAO,CAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAE,CAAC;KAEzC;IAED,MAAM,CAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAG;QAEtB,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QAEzB,EAAE,CAAC,UAAU,CAAE,GAAG,EAAE,MAAM,CAAE,CAAC;QAE7B,IAAK,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC,EAEpB,0CAA0C;QAE1C,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;QAIb,EAAE,CAAC,SAAS,EAAE,CAAC;QACf,EAAE,CAAC,YAAY,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAE1B,IAAK,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAG;YAEvB,wBAAwB;YAExB,IAAK,IAAI,CAAC,GAAG,CAAE,EAAE,CAAC,CAAC,CAAE,KAAK,CAAC,EAEvB,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC;iBAIf,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC;YAInB,EAAE,CAAC,SAAS,EAAE,CAAC;YACf,EAAE,CAAC,YAAY,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;SAE7B;QAED,EAAE,CAAC,SAAS,EAAE,CAAC;QACf,EAAE,CAAC,YAAY,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAE1B,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAC/C,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAC/C,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAEhD,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAG;QAEb,IAAK,CAAC,KAAK,SAAS,EAAG;YAEnB,OAAO,CAAC,IAAI,CAAE,kGAAkG,CAAE,CAAC;YACnH,OAAO,IAAI,CAAC,gBAAgB,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SAExC;QAED,OAAO,IAAI,CAAC,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC;KAE3C;IAED,WAAW,CAAE,CAAC,EAAG;QAEb,OAAO,IAAI,CAAC,gBAAgB,CAAE,CAAC,EAAE,IAAI,CAAE,CAAC;KAE3C;IAED,gBAAgB,CAAE,CAAC,EAAE,CAAC,EAAG;QAErB,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,AAAC;QACtB,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,AAAC;QACtB,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QAEzB,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QAClE,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QAClE,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QACnE,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QAEnE,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QAClE,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QAClE,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QACnE,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QAEnE,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACxD,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACxD,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACxD,EAAE,CAAE,EAAE,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAEzD,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACxD,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACxD,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACxD,EAAE,CAAE,EAAE,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAEzD,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACxD,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACxD,EAAE,CAAE,EAAE,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACzD,EAAE,CAAE,EAAE,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAEzD,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACxD,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACxD,EAAE,CAAE,EAAE,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACzD,EAAE,CAAE,EAAE,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAEzD,OAAO,IAAI,CAAC;KAEf;IAED,cAAc,CAAE,CAAC,EAAG;QAEhB,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QAEzB,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,IAAI,CAAC,CAAC;QACxD,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,IAAI,CAAC,CAAC;QACxD,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,IAAI,CAAC,CAAC;QACzD,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,IAAI,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC;KAEf;IAED,WAAW,GAAG;QAEV,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QAEzB,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QAClE,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QAClE,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QACnE,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QAEnE,gCAAgC;QAChC,mGAAmG;QAEnG,OACI,GAAG,GACC,CAAA,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GACd,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAEtB,GAAG,GACC,CAAA,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GACd,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,AACrB,GACD,GAAG,GACC,CAAA,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GACd,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,AACrB,GACD,GAAG,GACC,CAAA,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GACd,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,GACf,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,AACrB,CAEH;KAEL;IAED,SAAS,GAAG;QAER,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QACzB,IAAI,IAAG,AAAC;QAER,IAAG,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,IAAG,CAAC;QAChD,IAAG,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,IAAG,CAAC;QAChD,IAAG,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,IAAG,CAAC;QAEhD,IAAG,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,IAAG,CAAC;QAClD,IAAG,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,IAAG,CAAC;QAClD,IAAG,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,IAAG,CAAC;QAEpD,OAAO,IAAI,CAAC;KAEf;IAED,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAEnB,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QAEzB,IAAK,CAAC,CAAC,SAAS,EAAG;YAEf,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;SAElB,MAAM;YAEH,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;YACb,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;YACb,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;SAEhB;QAED,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,gGAAgG;QAChG,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,EAEpB,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAC1D,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAC1D,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,EAC5D,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,EAE9D,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAC/G,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAC/G,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAC/G,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,AAAC;QAEpH,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,AAAC;QAE1D,IAAK,GAAG,KAAK,CAAC,EAAG,OAAO,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEnF,MAAM,MAAM,GAAG,CAAC,GAAG,GAAG,AAAC;QAEvB,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,MAAM,CAAC;QACvB,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAAK,MAAM,CAAC;QACjI,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAAK,MAAM,CAAC;QACjI,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAAK,MAAM,CAAC;QAEjI,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,MAAM,CAAC;QACvB,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAAK,MAAM,CAAC;QACjI,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAAK,MAAM,CAAC;QACjI,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAAK,MAAM,CAAC;QAEjI,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,MAAM,CAAC;QACvB,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAAK,MAAM,CAAC;QACjI,EAAE,CAAE,EAAE,CAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAAK,MAAM,CAAC;QAClI,EAAE,CAAE,EAAE,CAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAAK,MAAM,CAAC;QAElI,EAAE,CAAE,EAAE,CAAE,GAAG,GAAG,GAAG,MAAM,CAAC;QACxB,EAAE,CAAE,EAAE,CAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAAK,MAAM,CAAC;QAClI,EAAE,CAAE,EAAE,CAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAAK,MAAM,CAAC;QAClI,EAAE,CAAE,EAAE,CAAE,GAAG,AAAE,CAAA,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA,GAAK,MAAM,CAAC;QAElI,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,CAAC,EAAG;QAEP,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QACzB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;QAEhC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QACzC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QACzC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,IAAI,CAAC,CAAC;QAC1C,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,IAAI,CAAC,CAAC;QAE1C,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,GAAG;QAEhB,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QAEzB,MAAM,QAAQ,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,AAAC;QAC3E,MAAM,QAAQ,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,AAAC;QAC3E,MAAM,QAAQ,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QAE7E,OAAO,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,GAAG,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,CAAE,CAAC;KAEhE;IAED,eAAe,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAEvB,IAAI,CAAC,GAAG,CAEJ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEb,CAAC;QAEF,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,KAAK,EAAG;QAEnB,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;QAEnD,IAAI,CAAC,GAAG,CAEJ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEb,CAAC;QAEF,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,KAAK,EAAG;QAEnB,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;QAEnD,IAAI,CAAC,GAAG,CAEH,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEd,CAAC;QAEF,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,KAAK,EAAG;QAEnB,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;QAEnD,IAAI,CAAC,GAAG,CAEJ,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEb,CAAC;QAEF,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,CAAE,IAAI,EAAE,KAAK,EAAG;QAE5B,qEAAqE;QAErE,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;QAC5B,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;QAC5B,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;QAChB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,AAAC;QACzC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;QAE7B,IAAI,CAAC,GAAG,CAEJ,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAC7C,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAC7C,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEb,CAAC;QAEF,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAEjB,IAAI,CAAC,GAAG,CAEJ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEb,CAAC;QAEF,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG;QAEhC,IAAI,CAAC,GAAG,CAEJ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACZ,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEb,CAAC;QAEF,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAG;QAEnC,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QAEzB,MAAM,CAAC,GAAG,UAAU,CAAC,EAAE,EAAE,CAAC,GAAG,UAAU,CAAC,EAAE,EAAE,CAAC,GAAG,UAAU,CAAC,EAAE,EAAE,CAAC,GAAG,UAAU,CAAC,EAAE,AAAC;QACjF,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;QACzC,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,AAAC;QAC5C,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,AAAC;QAC5C,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,AAAC;QAE5C,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,AAAC;QAE/C,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,CAAC,GAAK,CAAA,EAAE,GAAG,EAAE,CAAA,AAAE,CAAA,GAAK,EAAE,CAAC;QACnC,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAK,EAAE,CAAC;QAC3B,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAK,EAAE,CAAC;QAC3B,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAEZ,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAK,EAAE,CAAC;QAC3B,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,CAAC,GAAK,CAAA,EAAE,GAAG,EAAE,CAAA,AAAE,CAAA,GAAK,EAAE,CAAC;QACnC,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAK,EAAE,CAAC;QAC3B,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAEZ,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAK,EAAE,CAAC;QAC3B,EAAE,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAK,EAAE,CAAC;QAC3B,EAAE,CAAE,EAAE,CAAE,GAAG,AAAE,CAAA,CAAC,GAAK,CAAA,EAAE,GAAG,EAAE,CAAA,AAAE,CAAA,GAAK,EAAE,CAAC;QACpC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QAEb,EAAE,CAAE,EAAE,CAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;QACtB,EAAE,CAAE,EAAE,CAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;QACtB,EAAE,CAAE,EAAE,CAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;QACtB,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QAEb,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAG;QAErC,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QAEzB,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,CAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,CAAE,CAAC,MAAM,EAAE,AAAC;QACzD,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,CAAE,CAAC,MAAM,EAAE,AAAC;QAC3D,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,EAAE,CAAE,CAAE,CAAC,MAAM,EAAE,AAAC;QAE5D,wDAAwD;QACxD,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,AAAC;QAC/B,IAAK,GAAG,GAAG,CAAC,EAAG,EAAE,GAAG,CAAE,EAAE,CAAC;QAEzB,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QACtB,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QACtB,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAEtB,0BAA0B;QAC1B,KAAK,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;QAEnB,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,AAAC;QACrB,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,AAAC;QACrB,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,AAAC;QAErB,KAAK,CAAC,QAAQ,CAAE,CAAC,CAAE,IAAI,KAAK,CAAC;QAC7B,KAAK,CAAC,QAAQ,CAAE,CAAC,CAAE,IAAI,KAAK,CAAC;QAC7B,KAAK,CAAC,QAAQ,CAAE,CAAC,CAAE,IAAI,KAAK,CAAC;QAE7B,KAAK,CAAC,QAAQ,CAAE,CAAC,CAAE,IAAI,KAAK,CAAC;QAC7B,KAAK,CAAC,QAAQ,CAAE,CAAC,CAAE,IAAI,KAAK,CAAC;QAC7B,KAAK,CAAC,QAAQ,CAAE,CAAC,CAAE,IAAI,KAAK,CAAC;QAE7B,KAAK,CAAC,QAAQ,CAAE,CAAC,CAAE,IAAI,KAAK,CAAC;QAC7B,KAAK,CAAC,QAAQ,CAAE,CAAC,CAAE,IAAI,KAAK,CAAC;QAC7B,KAAK,CAAC,QAAQ,CAAE,EAAE,CAAE,IAAI,KAAK,CAAC;QAE9B,UAAU,CAAC,qBAAqB,CAAE,KAAK,CAAE,CAAC;QAE1C,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;QACb,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;QACb,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;QAEb,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,CAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAG;QAEnD,IAAK,GAAG,KAAK,SAAS,EAElB,OAAO,CAAC,IAAI,CAAE,sGAAsG,CAAE,CAAC;QAI3H,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QACzB,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,GAAK,CAAA,KAAK,GAAG,IAAI,CAAA,AAAE,AAAC;QACtC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,GAAK,CAAA,GAAG,GAAG,MAAM,CAAA,AAAE,AAAC;QAEtC,MAAM,CAAC,GAAG,AAAE,CAAA,KAAK,GAAG,IAAI,CAAA,GAAO,CAAA,KAAK,GAAG,IAAI,CAAA,AAAE,AAAC;QAC9C,MAAM,CAAC,GAAG,AAAE,CAAA,GAAG,GAAG,MAAM,CAAA,GAAO,CAAA,GAAG,GAAG,MAAM,CAAA,AAAE,AAAC;QAC9C,MAAM,CAAC,GAAG,CAAI,CAAA,GAAG,GAAG,IAAI,CAAA,AAAE,GAAK,CAAA,GAAG,GAAG,IAAI,CAAA,AAAE,AAAC;QAC5C,MAAM,CAAC,GAAG,EAAG,GAAG,GAAG,GAAG,IAAI,GAAK,CAAA,GAAG,GAAG,IAAI,CAAA,AAAE,AAAC;QAE5C,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QACpD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QACpD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QACrD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,EAAG,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QAEvD,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,CAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAG;QAEpD,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QACzB,MAAM,CAAC,GAAG,CAAG,GAAK,CAAA,KAAK,GAAG,IAAI,CAAA,AAAE,AAAC;QACjC,MAAM,CAAC,GAAG,CAAG,GAAK,CAAA,GAAG,GAAG,MAAM,CAAA,AAAE,AAAC;QACjC,MAAM,CAAC,GAAG,CAAG,GAAK,CAAA,GAAG,GAAG,IAAI,CAAA,AAAE,AAAC;QAE/B,MAAM,CAAC,GAAG,AAAE,CAAA,KAAK,GAAG,IAAI,CAAA,GAAK,CAAC,AAAC;QAC/B,MAAM,CAAC,GAAG,AAAE,CAAA,GAAG,GAAG,MAAM,CAAA,GAAK,CAAC,AAAC;QAC/B,MAAM,CAAC,GAAG,AAAE,CAAA,GAAG,GAAG,IAAI,CAAA,GAAK,CAAC,AAAC;QAE7B,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC,CAAC;QAC1D,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC,CAAC;QAC1D,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,EAAG,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC,CAAC;QAC7D,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QAAC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAAC;QAErD,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,MAAM,EAAG;QAEb,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QACzB,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,AAAC;QAE3B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAAG;YAE5B,IAAK,EAAE,CAAE,GAAC,CAAE,KAAK,EAAE,CAAE,GAAC,CAAE,EAAG,OAAO,KAAK,CAAC;SAE3C;QAED,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAG;QAE3B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAEzB,IAAI,CAAC,QAAQ,CAAE,GAAC,CAAE,GAAG,KAAK,CAAE,GAAC,GAAG,MAAM,CAAE,CAAC;QAI7C,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,EAAG;QAE9B,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QAEzB,KAAK,CAAE,MAAM,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAC1B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAC9B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAC9B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAE9B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAC9B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAC9B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAC9B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAE9B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAC9B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;QAC9B,KAAK,CAAE,MAAM,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAChC,KAAK,CAAE,MAAM,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAEhC,KAAK,CAAE,MAAM,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAChC,KAAK,CAAE,MAAM,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAChC,KAAK,CAAE,MAAM,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAChC,KAAK,CAAE,MAAM,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;QAEhC,OAAO,KAAK,CAAC;KAEhB;CAEJ;AAED,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;AAEnC,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,AAAC;AACnD,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,AAAC;AAClD,MAAM,EAAE,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACvC,MAAM,EAAE,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACvC,MAAM,EAAE,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAEvC,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC9C,MAAM,aAAa,GAAG,aAAa,CAAC,IAAI,UAAU,EAAE,AAAC;AAErD,MAAM,KAAK;IAEP,YAAa,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC,YAAY,CAAG;QAE3D,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KAEvB;IAED,IAAI,CAAC,GAAG;QAEJ,OAAO,IAAI,CAAC,EAAE,CAAC;KAElB;IAED,IAAI,CAAC,CAAE,KAAK,EAAG;QAEX,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAE5B;IAED,IAAI,CAAC,GAAG;QAEJ,OAAO,IAAI,CAAC,EAAE,CAAC;KAElB;IAED,IAAI,CAAC,CAAE,KAAK,EAAG;QAEX,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAE5B;IAED,IAAI,CAAC,GAAG;QAEJ,OAAO,IAAI,CAAC,EAAE,CAAC;KAElB;IAED,IAAI,CAAC,CAAE,KAAK,EAAG;QAEX,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAE5B;IAED,IAAI,KAAK,GAAG;QAER,OAAO,IAAI,CAAC,MAAM,CAAC;KAEtB;IAED,IAAI,KAAK,CAAE,KAAK,EAAG;QAEf,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAE5B;IAED,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,EAAG;QAEhC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;KAEzE;IAED,IAAI,CAAE,KAAK,EAAG;QAEV,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;QACnB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;QACnB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAE3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,qBAAqB,CAAE,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,EAAG;QAE3D,uEAAuE;QAEvE,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,AAAC;QACtB,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,AAAC;QAClD,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,AAAC;QAClD,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QAEnD,OAAS,KAAK;YAEV,KAAK,KAAK;gBAEN,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAE,KAAK,CAAE,GAAG,EAAE,EAAG,EAAE,CAAC,CAAE,CAAE,CAAC;gBAE5C,IAAK,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,SAAS,EAAG;oBAE/B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;oBACnC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;iBAEtC,MAAM;oBAEH,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;oBACjC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;iBAEf;gBAED,MAAM;YAEV,KAAK,KAAK;gBAEN,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAE,CAAE,KAAK,CAAE,GAAG,EAAE,EAAG,EAAE,CAAC,CAAE,CAAE,CAAC;gBAE9C,IAAK,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,SAAS,EAAG;oBAE/B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;oBACjC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;iBAEpC,MAAM;oBAEH,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;oBACnC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;iBAEf;gBAED,MAAM;YAEV,KAAK,KAAK;gBAEN,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAE,KAAK,CAAE,GAAG,EAAE,EAAG,EAAE,CAAC,CAAE,CAAE,CAAC;gBAE5C,IAAK,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,SAAS,EAAG;oBAE/B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;oBACnC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;iBAEtC,MAAM;oBAEH,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;oBACZ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;iBAEpC;gBAED,MAAM;YAEV,KAAK,KAAK;gBAEN,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAE,CAAE,KAAK,CAAE,GAAG,EAAE,EAAG,EAAE,CAAC,CAAE,CAAE,CAAC;gBAE9C,IAAK,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,SAAS,EAAG;oBAE/B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;oBACjC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;iBAEpC,MAAM;oBAEH,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;oBACZ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;iBAEtC;gBAED,MAAM;YAEV,KAAK,KAAK;gBAEN,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAE,KAAK,CAAE,GAAG,EAAE,EAAG,EAAE,CAAC,CAAE,CAAE,CAAC;gBAE5C,IAAK,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,SAAS,EAAG;oBAE/B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;oBACnC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;iBAEtC,MAAM;oBAEH,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;oBACZ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;iBAEpC;gBAED,MAAM;YAEV,KAAK,KAAK;gBAEN,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAE,CAAE,KAAK,CAAE,GAAG,EAAE,EAAG,EAAE,CAAC,CAAE,CAAE,CAAC;gBAE9C,IAAK,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,SAAS,EAAG;oBAE/B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;oBACjC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;iBAEpC,MAAM;oBAEH,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;oBACnC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;iBAEf;gBAED,MAAM;YAEV;gBAEI,OAAO,CAAC,IAAI,CAAE,sEAAsE,GAAG,KAAK,CAAE,CAAC;SAEtG;QAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAK,MAAM,KAAK,IAAI,EAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEhD,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,CAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAG;QAElC,SAAS,CAAC,0BAA0B,CAAE,CAAC,CAAE,CAAC;QAE1C,OAAO,IAAI,CAAC,qBAAqB,CAAE,SAAS,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;KAEjE;IAED,cAAc,CAAE,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,EAAG;QAErC,OAAO,IAAI,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAE,CAAC;KAE3C;IAED,OAAO,CAAE,QAAQ,EAAG;QAEhB,0DAA0D;QAE1D,aAAa,CAAC,YAAY,CAAE,IAAI,CAAE,CAAC;QAEnC,OAAO,IAAI,CAAC,iBAAiB,CAAE,aAAa,EAAE,QAAQ,CAAE,CAAC;KAE5D;IAED,MAAM,CAAE,KAAK,EAAG;QAEZ,OAAO,AAAE,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAQ,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAQ,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,IAAQ,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,AAAE,CAAC;KAE/H;IAED,SAAS,CAAE,KAAK,EAAG;QAEf,IAAI,CAAC,EAAE,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;QACrB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;QACrB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;QACrB,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,SAAS,EAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;QAEzD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,EAAG;QAE9B,KAAK,CAAE,MAAM,CAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAC1B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAC9B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAC9B,KAAK,CAAE,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAElC,OAAO,KAAK,CAAC;KAEhB;IAED,SAAS,CAAE,QAAQ,EAAG;QAElB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QAElC,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,GAAG,EAAE;CAEzB;AAED,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;AAE/B,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC;AAC3B,KAAK,CAAC,cAAc,GAAG;IAAE,KAAK;IAAE,KAAK;IAAE,KAAK;IAAE,KAAK;IAAE,KAAK;IAAE,KAAK;CAAE,CAAC;AAEpE,MAAM,MAAM;IAER,aAAc;QAEV,IAAI,CAAC,IAAI,GAAG,CAAK,CAAC;KAErB;IAED,GAAG,CAAE,OAAO,EAAG;QAEX,IAAI,CAAC,IAAI,GAAG,AAAE,CAAA,CAAC,IAAI,OAAO,GAAG,CAAC,CAAA,KAAO,CAAC,CAAC;KAE1C;IAED,MAAM,CAAE,OAAO,EAAG;QAEd,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,GAAG,CAAC,CAAC;KAEjC;IAED,SAAS,GAAG;QAER,IAAI,CAAC,IAAI,GAAG,EAAc,CAAC;KAE9B;IAED,MAAM,CAAE,OAAO,EAAG;QAEd,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,GAAG,CAAC,CAAC;KAEjC;IAED,OAAO,CAAE,OAAO,EAAG;QAEf,IAAI,CAAC,IAAI,IAAI,CAAI,CAAA,CAAC,IAAI,OAAO,GAAG,CAAC,CAAA,AAAE,CAAC;KAEvC;IAED,UAAU,GAAG;QAET,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KAEjB;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,OAAO,AAAE,CAAA,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAA,KAAO,CAAC,CAAC;KAE5C;IAED,SAAS,CAAE,OAAO,EAAG;QAEjB,OAAO,AAAE,CAAA,IAAI,CAAC,IAAI,GAAK,CAAA,CAAC,IAAI,OAAO,GAAG,CAAC,CAAA,AAAE,CAAA,KAAO,CAAC,CAAC;KAErD;CAEJ;AAED,IAAI,WAAW,GAAG,CAAC,AAAC;AAEpB,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,MAAM,GAAG,GAAG,aAAa,CAAC,IAAI,UAAU,EAAE,AAAC;AAC3C,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE5C,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAChD,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC7C,MAAM,aAAa,GAAG,aAAa,CAAC,IAAI,UAAU,EAAE,AAAC;AAErD,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,AAAC;AACpD,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,AAAC;AACpD,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,AAAC;AAEpD,MAAM,WAAW,GAAG;IAAE,IAAI,EAAE,OAAO;CAAE,AAAC;AACtC,MAAM,aAAa,GAAG;IAAE,IAAI,EAAE,SAAS;CAAE,AAAC;AAE1C,MAAM,QAAQ,SAAS,eAAe;IAElC,aAAc;QAEV,KAAK,EAAE,CAAC;QAER,MAAM,CAAC,cAAc,CAAE,IAAI,EAAE,IAAI,EAAE;YAAE,KAAK,EAAE,WAAW,EAAG;SAAE,CAAE,CAAC;QAE/D,IAAI,CAAC,IAAI,GAAG,YAAY,EAAE,CAAC;QAE3B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QAEvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAErC,MAAM,QAAQ,GAAG,IAAI,OAAO,EAAE,AAAC;QAC/B,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,AAAC;QAC7B,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,AAAC;QACpC,MAAM,KAAK,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,AAAC;QAErC,SAAS,gBAAgB,GAAG;YAExB,UAAU,CAAC,YAAY,CAAE,QAAQ,EAAE,KAAK,CAAE,CAAC;SAE9C;QAED,SAAS,kBAAkB,GAAG;YAE1B,QAAQ,CAAC,iBAAiB,CAAE,UAAU,EAAE,SAAS,EAAE,KAAK,CAAE,CAAC;SAE9D;QAED,QAAQ,CAAC,SAAS,CAAE,gBAAgB,CAAE,CAAC;QACvC,UAAU,CAAC,SAAS,CAAE,kBAAkB,CAAE,CAAC;QAE3C,MAAM,CAAC,gBAAgB,CAAE,IAAI,EAAE;YAC3B,QAAQ,EAAE;gBACN,YAAY,EAAE,IAAI;gBAClB,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,QAAQ;aAClB;YACD,QAAQ,EAAE;gBACN,YAAY,EAAE,IAAI;gBAClB,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,QAAQ;aAClB;YACD,UAAU,EAAE;gBACR,YAAY,EAAE,IAAI;gBAClB,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,UAAU;aACpB;YACD,KAAK,EAAE;gBACH,YAAY,EAAE,IAAI;gBAClB,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,KAAK;aACf;YACD,eAAe,EAAE;gBACb,KAAK,EAAE,IAAI,OAAO,EAAE;aACvB;YACD,YAAY,EAAE;gBACV,KAAK,EAAE,IAAI,OAAO,EAAE;aACvB;SACJ,CAAE,CAAC;QAEJ,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;QAEjC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,uBAAuB,CAAC;QACzD,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QAEpC,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QAErB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KAEtB;IAED,cAAc,GAA6D,EAAE;IAE7E,aAAa,GAA6D,EAAE;IAE5E,YAAY,CAAE,MAAM,EAAG;QAEnB,IAAK,IAAI,CAAC,gBAAgB,EAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEjD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAE,MAAM,CAAE,CAAC;QAElC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAE,CAAC;KAEvE;IAED,eAAe,CAAE,CAAC,EAAG;QAEjB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAE,CAAC,CAAE,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,wBAAwB,CAAE,IAAI,EAAE,KAAK,EAAG;QAEpC,6BAA6B;QAE7B,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;KAEnD;IAED,oBAAoB,CAAE,KAAK,EAAG;QAE1B,IAAI,CAAC,UAAU,CAAC,YAAY,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;KAE/C;IAED,qBAAqB,CAAE,CAAC,EAAG;QAEvB,uEAAuE;QAEvE,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;KAE9C;IAED,yBAAyB,CAAE,CAAC,EAAG;QAE3B,0BAA0B;QAE1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;KAE7B;IAED,YAAY,CAAE,IAAI,EAAE,KAAK,EAAG;QAExB,wCAAwC;QACxC,mCAAmC;QAEnC,GAAG,CAAC,gBAAgB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;QAEpC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAE,GAAG,CAAE,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,CAAE,IAAI,EAAE,KAAK,EAAG;QAE7B,uCAAuC;QACvC,mCAAmC;QACnC,mCAAmC;QAEnC,GAAG,CAAC,gBAAgB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;QAEpC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAE,GAAG,CAAE,CAAC;QAEnC,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,KAAK,EAAG;QAEb,OAAO,IAAI,CAAC,YAAY,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;KAE7C;IAED,OAAO,CAAE,KAAK,EAAG;QAEb,OAAO,IAAI,CAAC,YAAY,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;KAE7C;IAED,OAAO,CAAE,KAAK,EAAG;QAEb,OAAO,IAAI,CAAC,YAAY,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;KAE7C;IAED,eAAe,CAAE,IAAI,EAAE,QAAQ,EAAG;QAE9B,0DAA0D;QAC1D,mCAAmC;QAEnC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC,eAAe,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QAEtD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAE,KAAK,CAAC,cAAc,CAAE,QAAQ,CAAE,CAAE,CAAC;QAEtD,OAAO,IAAI,CAAC;KAEf;IAED,UAAU,CAAE,QAAQ,EAAG;QAEnB,OAAO,IAAI,CAAC,eAAe,CAAE,MAAM,EAAE,QAAQ,CAAE,CAAC;KAEnD;IAED,UAAU,CAAE,QAAQ,EAAG;QAEnB,OAAO,IAAI,CAAC,eAAe,CAAE,MAAM,EAAE,QAAQ,CAAE,CAAC;KAEnD;IAED,UAAU,CAAE,QAAQ,EAAG;QAEnB,OAAO,IAAI,CAAC,eAAe,CAAE,MAAM,EAAE,QAAQ,CAAE,CAAC;KAEnD;IAED,YAAY,CAAE,MAAM,EAAG;QAEnB,OAAO,MAAM,CAAC,YAAY,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;KAElD;IAED,YAAY,CAAE,MAAM,EAAG;QAEnB,OAAO,MAAM,CAAC,YAAY,CAAE,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC,MAAM,EAAE,CAAE,CAAC;KAEzE;IAED,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAEd,6EAA6E;QAE7E,IAAK,CAAC,CAAC,SAAS,EAEZ,OAAO,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;aAIlB,OAAO,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAI3B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAI,CAAC,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;QAEtC,WAAW,CAAC,qBAAqB,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;QAEtD,IAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,EAE9B,KAAK,CAAC,MAAM,CAAE,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,CAAE,CAAC;aAI9C,KAAK,CAAC,MAAM,CAAE,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAIlD,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAE,KAAK,CAAE,CAAC;QAE/C,IAAK,MAAM,EAAG;YAEV,KAAK,CAAC,eAAe,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;YAC5C,GAAG,CAAC,qBAAqB,CAAE,KAAK,CAAE,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAE,GAAG,CAAC,MAAM,EAAE,CAAE,CAAC;SAE/C;KAEJ;IAED,GAAG,CAAE,MAAM,EAAG;QAEV,IAAK,SAAS,CAAC,MAAM,GAAG,CAAC,EAAG;YAExB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,SAAS,CAAC,MAAM,EAAE,GAAC,EAAG,CAEvC,IAAI,CAAC,GAAG,CAAE,SAAS,CAAE,GAAC,CAAE,CAAE,CAAC;YAI/B,OAAO,IAAI,CAAC;SAEf;QAED,IAAK,MAAM,KAAK,IAAI,EAAG;YAEnB,OAAO,CAAC,KAAK,CAAE,kEAAkE,EAAE,MAAM,CAAE,CAAC;YAC5F,OAAO,IAAI,CAAC;SAEf;QAED,IAAK,MAAM,IAAI,MAAM,CAAC,UAAU,EAAG;YAE/B,IAAK,MAAM,CAAC,MAAM,KAAK,IAAI,EAEvB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAE,MAAM,CAAE,CAAC;YAInC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;YAE7B,MAAM,CAAC,aAAa,CAAE,WAAW,CAAE,CAAC;SAEvC,MAEG,OAAO,CAAC,KAAK,CAAE,+DAA+D,EAAE,MAAM,CAAE,CAAC;QAI7F,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,MAAM,EAAG;QAEb,IAAK,SAAS,CAAC,MAAM,GAAG,CAAC,EAAG;YAExB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,SAAS,CAAC,MAAM,EAAE,GAAC,EAAG,CAEvC,IAAI,CAAC,MAAM,CAAE,SAAS,CAAE,GAAC,CAAE,CAAE,CAAC;YAIlC,OAAO,IAAI,CAAC;SAEf;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAE,MAAM,CAAE,AAAC;QAE9C,IAAK,KAAK,KAAK,EAAG,EAAG;YAEjB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;YAEjC,MAAM,CAAC,aAAa,CAAE,aAAa,CAAE,CAAC;SAEzC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,GAAG;QAEf,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAK,MAAM,KAAK,IAAI,EAEhB,MAAM,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC;QAI1B,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAC,EAAG,CAAG;YAE9C,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAE,GAAC,CAAE,AAAC;YAElC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;YAErB,MAAM,CAAC,aAAa,CAAE,aAAa,CAAE,CAAC;SAEzC;QAED,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAEzB,OAAO,IAAI,CAAC;KAGf;IAED,MAAM,CAAE,MAAM,EAAG;QAEb,iFAAiF;QAEjF,uFAAuF;QAEvF,IAAI,CAAC,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;QAEtC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC,MAAM,EAAE,CAAC;QAExC,IAAK,MAAM,CAAC,MAAM,KAAK,IAAI,EAAG;YAE1B,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;YAE/C,KAAK,CAAC,QAAQ,CAAE,MAAM,CAAC,MAAM,CAAC,WAAW,CAAE,CAAC;SAE/C;QAED,MAAM,CAAC,YAAY,CAAE,KAAK,CAAE,CAAC;QAE7B,IAAI,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;QAEnB,MAAM,CAAC,iBAAiB,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;QAExC,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,EAAE,EAAG;QAEhB,OAAO,IAAI,CAAC,mBAAmB,CAAE,IAAI,EAAE,EAAE,CAAE,CAAC;KAE/C;IAED,eAAe,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,CAAC,mBAAmB,CAAE,MAAM,EAAE,IAAI,CAAE,CAAC;KAEnD;IAED,mBAAmB,CAAE,IAAI,EAAE,KAAK,EAAG;QAE/B,IAAK,IAAI,CAAE,IAAI,CAAE,KAAK,KAAK,EAAG,OAAO,IAAI,CAAC;QAE1C,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAErD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAE,GAAC,CAAE,AAAC;YACjC,MAAM,MAAM,GAAG,KAAK,CAAC,mBAAmB,CAAE,IAAI,EAAE,KAAK,CAAE,AAAC;YAExD,IAAK,MAAM,KAAK,SAAS,EAErB,OAAO,MAAM,CAAC;SAIrB;QAED,OAAO,SAAS,CAAC;KAEpB;IAED,gBAAgB,CAAE,MAAM,EAAG;QAEvB,IAAI,CAAC,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;QAEtC,OAAO,MAAM,CAAC,qBAAqB,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;KAE3D;IAED,kBAAkB,CAAE,MAAM,EAAG;QAEzB,IAAI,CAAC,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;QAEtC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,CAAE,CAAC;QAE5D,OAAO,MAAM,CAAC;KAEjB;IAED,aAAa,CAAE,MAAM,EAAG;QAEpB,IAAI,CAAC,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;QAEtC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAE,WAAW,EAAE,aAAa,EAAE,MAAM,CAAE,CAAC;QAEjE,OAAO,MAAM,CAAC;KAEjB;IAED,iBAAiB,CAAE,MAAM,EAAG;QAExB,IAAI,CAAC,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;QAEtC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,AAAC;QAEpC,OAAO,MAAM,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAC,CAAE,EAAE,CAAE,CAAE,CAAC,SAAS,EAAE,CAAC;KAE5D;IAED,OAAO,GAAgC,EAAE;IAEzC,QAAQ,CAAE,QAAQ,EAAG;QAEjB,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEjB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAE/B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAE7C,QAAQ,CAAE,GAAC,CAAE,CAAC,QAAQ,CAAE,QAAQ,CAAE,CAAC;KAI1C;IAED,eAAe,CAAE,QAAQ,EAAG;QAExB,IAAK,IAAI,CAAC,OAAO,KAAK,KAAK,EAAG,OAAO;QAErC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEjB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAE/B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAE7C,QAAQ,CAAE,GAAC,CAAE,CAAC,eAAe,CAAE,QAAQ,CAAE,CAAC;KAIjD;IAED,iBAAiB,CAAE,QAAQ,EAAG;QAE1B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAK,MAAM,KAAK,IAAI,EAAG;YAEnB,QAAQ,CAAE,MAAM,CAAE,CAAC;YAEnB,MAAM,CAAC,iBAAiB,CAAE,QAAQ,CAAE,CAAC;SAExC;KAEJ;IAED,YAAY,GAAG;QAEX,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAE,CAAC;QAElE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;KAEtC;IAED,iBAAiB,CAAE,KAAK,EAAG;QAEvB,IAAK,IAAI,CAAC,gBAAgB,EAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEjD,IAAK,IAAI,CAAC,sBAAsB,IAAI,KAAK,EAAG;YAExC,IAAK,IAAI,CAAC,MAAM,KAAK,IAAI,EAErB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;iBAIrC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;YAI9E,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;YAEpC,KAAK,GAAG,IAAI,CAAC;SAEhB;QAED,kBAAkB;QAElB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAE/B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAE7C,QAAQ,CAAE,GAAC,CAAE,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAC;KAIhD;IAED,iBAAiB,CAAE,aAAa,EAAE,cAAc,EAAG;QAE/C,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAK,aAAa,KAAK,IAAI,IAAI,MAAM,KAAK,IAAI,EAE1C,MAAM,CAAC,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;QAI5C,IAAK,IAAI,CAAC,gBAAgB,EAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEjD,IAAK,IAAI,CAAC,MAAM,KAAK,IAAI,EAErB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;aAIrC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAI9E,kBAAkB;QAElB,IAAK,cAAc,KAAK,IAAI,EAAG;YAE3B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;YAE/B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAE7C,QAAQ,CAAE,GAAC,CAAE,CAAC,iBAAiB,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;SAItD;KAEJ;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,mDAAmD;QACnD,MAAM,YAAY,GAAK,IAAI,KAAK,SAAS,IAAI,OAAO,IAAI,KAAK,QAAQ,AAAE,AAAC;QAExE,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,wDAAwD;QACxD,wDAAwD;QACxD,oBAAoB;QACpB,IAAK,YAAY,EAAG;YAEhB,sBAAsB;YACtB,IAAI,GAAG;gBACH,UAAU,EAAE,EAAE;gBACd,SAAS,EAAE,EAAE;gBACb,QAAQ,EAAE,EAAE;gBACZ,MAAM,EAAE,EAAE;gBACV,MAAM,EAAE,EAAE;gBACV,SAAS,EAAE,EAAE;gBACb,UAAU,EAAE,EAAE;gBACd,KAAK,EAAE,EAAE;aACZ,CAAC;YAEF,MAAM,CAAC,QAAQ,GAAG;gBACd,OAAO,EAAE,GAAG;gBACZ,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,iBAAiB;aAC/B,CAAC;SAEL;QAED,kCAAkC;QAElC,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAExB,IAAK,IAAI,CAAC,IAAI,KAAK,EAAE,EAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAChD,IAAK,IAAI,CAAC,UAAU,KAAK,IAAI,EAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;QACzD,IAAK,IAAI,CAAC,aAAa,KAAK,IAAI,EAAG,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC;QAC/D,IAAK,IAAI,CAAC,OAAO,KAAK,KAAK,EAAG,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;QACrD,IAAK,IAAI,CAAC,aAAa,KAAK,KAAK,EAAG,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC;QACjE,IAAK,IAAI,CAAC,WAAW,KAAK,CAAC,EAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpE,IAAK,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,QAAQ,CAAE,KAAK,IAAI,EAAG,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEhF,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QACjC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QAEtC,IAAK,IAAI,CAAC,gBAAgB,KAAK,KAAK,EAAG,MAAM,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAEvE,6BAA6B;QAE7B,IAAK,IAAI,CAAC,eAAe,EAAG;YAExB,MAAM,CAAC,IAAI,GAAG,eAAe,CAAC;YAC9B,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAC1B,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;YACrD,IAAK,IAAI,CAAC,aAAa,KAAK,IAAI,EAAG,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;SAEzF;QAED,EAAE;QAEF,SAAS,SAAS,CAAE,OAAO,EAAE,OAAO,EAAG;YAEnC,IAAK,OAAO,CAAE,OAAO,CAAC,IAAI,CAAE,KAAK,SAAS,EAEtC,OAAO,CAAE,OAAO,CAAC,IAAI,CAAE,GAAG,OAAO,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC;YAIrD,OAAO,OAAO,CAAC,IAAI,CAAC;SAEvB;QAED,IAAK,IAAI,CAAC,OAAO,EAAG;YAEhB,IAAK,IAAI,CAAC,UAAU,EAAG;gBAEnB,IAAK,IAAI,CAAC,UAAU,CAAC,OAAO,EAExB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;qBAE1C,IAAK,IAAI,CAAC,UAAU,CAAC,SAAS,EAEjC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;aAI/D;YAED,IAAK,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAE/C,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;SAIjE,MAAM,IAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAG;YAEtD,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;YAE9D,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,AAAC;YAE5C,IAAK,UAAU,KAAK,SAAS,IAAI,UAAU,CAAC,MAAM,KAAK,SAAS,EAAG;gBAE/D,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,AAAC;gBAEjC,IAAK,KAAK,CAAC,OAAO,CAAE,MAAM,CAAE,EAExB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;oBAE9C,MAAM,KAAK,GAAG,MAAM,CAAE,GAAC,CAAE,AAAC;oBAE1B,SAAS,CAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAE,CAAC;iBAEnC;qBAID,SAAS,CAAE,IAAI,CAAC,MAAM,EAAE,MAAM,CAAE,CAAC;aAIxC;SAEJ;QAED,IAAK,IAAI,CAAC,aAAa,EAAG;YAEtB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAChC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;YAE9C,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG;gBAE/B,SAAS,CAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;gBAE3C,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;aAExC;SAEJ;QAED,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS;YAE5B,IAAK,KAAK,CAAC,OAAO,CAAE,IAAI,CAAC,QAAQ,CAAE,EAAG;gBAElC,MAAM,KAAK,GAAG,EAAE,AAAC;gBAEjB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAElD,KAAK,CAAC,IAAI,CAAE,SAAS,CAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAE,GAAC,CAAE,CAAE,CAAE,CAAC;gBAIlE,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;aAE3B,MAEG,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;SAIpE;QAED,EAAE;QAEF,IAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAG;YAE5B,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;YAErB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAC,EAAG,CAE3C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAE,IAAI,CAAC,QAAQ,CAAE,GAAC,CAAE,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,MAAM,CAAE,CAAC;SAIxE;QAED,EAAE;QAEF,IAAK,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAG;YAE9B,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;YAEvB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,GAAC,EAAG,CAAG;gBAEhD,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAE,GAAC,CAAE,AAAC;gBAEvC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAE,SAAS,CAAE,IAAI,CAAC,UAAU,EAAE,SAAS,CAAE,CAAE,CAAC;aAErE;SAEJ;QAED,IAAK,YAAY,EAAG;YAEhB,MAAM,UAAU,GAAG,gBAAgB,CAAE,IAAI,CAAC,UAAU,CAAE,AAAC;YACvD,MAAM,SAAS,GAAG,gBAAgB,CAAE,IAAI,CAAC,SAAS,CAAE,AAAC;YACrD,MAAM,QAAQ,GAAG,gBAAgB,CAAE,IAAI,CAAC,QAAQ,CAAE,AAAC;YACnD,MAAM,MAAM,GAAG,gBAAgB,CAAE,IAAI,CAAC,MAAM,CAAE,AAAC;YAC/C,MAAM,MAAM,GAAG,gBAAgB,CAAE,IAAI,CAAC,MAAM,CAAE,AAAC;YAC/C,MAAM,SAAS,GAAG,gBAAgB,CAAE,IAAI,CAAC,SAAS,CAAE,AAAC;YACrD,MAAM,UAAU,GAAG,gBAAgB,CAAE,IAAI,CAAC,UAAU,CAAE,AAAC;YACvD,MAAM,KAAK,GAAG,gBAAgB,CAAE,IAAI,CAAC,KAAK,CAAE,AAAC;YAE7C,IAAK,UAAU,CAAC,MAAM,GAAG,CAAC,EAAG,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;YAC5D,IAAK,SAAS,CAAC,MAAM,GAAG,CAAC,EAAG,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;YACzD,IAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAG,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACtD,IAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YAChD,IAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YAChD,IAAK,SAAS,CAAC,MAAM,GAAG,CAAC,EAAG,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;YACzD,IAAK,UAAU,CAAC,MAAM,GAAG,CAAC,EAAG,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;YAC5D,IAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EAAG,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;SAEhD;QAED,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAEvB,OAAO,MAAM,CAAC;QAEd,mCAAmC;QACnC,+BAA+B;QAC/B,sBAAsB;QACtB,SAAS,gBAAgB,CAAE,KAAK,EAAG;YAE/B,MAAM,MAAM,GAAG,EAAE,AAAC;YAClB,IAAM,MAAM,GAAG,IAAI,KAAK,CAAG;gBAEvB,MAAM,IAAI,GAAG,KAAK,CAAE,GAAG,CAAE,AAAC;gBAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC;gBACrB,MAAM,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;aAEvB;YAED,OAAO,MAAM,CAAC;SAEjB;KAEJ;IAED,KAAK,CAAE,SAAS,EAAG;QAEf,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,EAAE,SAAS,CAAE,CAAC;KAEzD;IAED,IAAI,CAAE,MAAM,EAAE,SAAS,GAAG,IAAI,EAAG;QAE7B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QAExB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAE1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,MAAM,CAAC,QAAQ,CAAE,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,MAAM,CAAC,UAAU,CAAE,CAAC;QAC1C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAEhC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,CAAE,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;QAE5C,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC,sBAAsB,CAAC;QAE5D,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAE9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAE1C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,SAAS,CAAE,MAAM,CAAC,QAAQ,CAAE,CAAE,CAAC;QAEhE,IAAK,SAAS,KAAK,IAAI,EAEnB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAC,EAAG,CAAG;YAEhD,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAE,GAAC,CAAE,AAAC;YACnC,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,KAAK,EAAE,CAAE,CAAC;SAE7B;QAIL,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,QAAQ,CAAC,SAAS,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;AAC5C,QAAQ,CAAC,uBAAuB,GAAG,IAAI,CAAC;AAExC,QAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;AAErC,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE1C,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACzC,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACzC,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACzC,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACzC,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACzC,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAEzC,MAAM,QAAQ;IAEV,YAAa,CAAC,GAAG,IAAI,OAAO,EAAE,EAAE,CAAC,GAAG,IAAI,OAAO,EAAE,EAAE,CAAC,GAAG,IAAI,OAAO,EAAE,CAAG;QAEnE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;KAEd;IAED,OAAO,SAAS,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAG;QAEhC,MAAM,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC1B,KAAK,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACzB,MAAM,CAAC,KAAK,CAAE,KAAK,CAAE,CAAC;QAEtB,MAAM,cAAc,GAAG,MAAM,CAAC,QAAQ,EAAE,AAAC;QACzC,IAAK,cAAc,GAAG,CAAC,EAEnB,OAAO,MAAM,CAAC,cAAc,CAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAE,cAAc,CAAE,CAAE,CAAC;QAIpE,OAAO,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;KAEhC;IAED,8DAA8D;IAC9D,oEAAoE;IACpE,OAAO,YAAY,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAG;QAE1C,KAAK,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACzB,KAAK,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACzB,KAAK,CAAC,UAAU,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;QAE7B,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;QACjC,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;QACjC,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;QACjC,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;QACjC,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;QAEjC,MAAM,KAAK,GAAK,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,AAAE,AAAC;QAEhD,iCAAiC;QACjC,IAAK,KAAK,KAAK,CAAC,EAEZ,0CAA0C;QAC1C,yEAAyE;QACzE,OAAO,MAAM,CAAC,GAAG,CAAE,EAAG,EAAE,EAAG,EAAE,EAAG,CAAE,CAAC;QAIvC,MAAM,QAAQ,GAAG,CAAC,GAAG,KAAK,AAAC;QAC3B,MAAM,CAAC,GAAG,AAAE,CAAA,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CAAA,GAAK,QAAQ,AAAC;QACvD,MAAM,CAAC,GAAG,AAAE,CAAA,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CAAA,GAAK,QAAQ,AAAC;QAEvD,+CAA+C;QAC/C,OAAO,MAAM,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;KAExC;IAED,OAAO,aAAa,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAEnC,IAAI,CAAC,YAAY,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAE,CAAC;QAE3C,OAAO,AAAE,KAAK,CAAC,CAAC,IAAI,CAAC,IAAQ,KAAK,CAAC,CAAC,IAAI,CAAC,IAAQ,AAAE,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IAAM,CAAC,AAAE,CAAC;KAEjF;IAED,OAAO,KAAK,CAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAG;QAErD,IAAI,CAAC,YAAY,CAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAE,CAAC;QAE9C,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACnB,MAAM,CAAC,eAAe,CAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAE,CAAC;QACvC,MAAM,CAAC,eAAe,CAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAE,CAAC;QACvC,MAAM,CAAC,eAAe,CAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAE,CAAC;QAEvC,OAAO,MAAM,CAAC;KAEjB;IAED,OAAO,aAAa,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAG;QAEvC,KAAK,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACzB,KAAK,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEzB,wBAAwB;QACxB,OAAO,AAAE,KAAK,CAAC,KAAK,CAAE,KAAK,CAAE,CAAC,GAAG,CAAE,SAAS,CAAE,GAAG,CAAC,GAAK,IAAI,GAAG,KAAK,CAAC;KAEvE;IAED,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAEX,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;QACjB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;QACjB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;QAEjB,OAAO,IAAI,CAAC;KAEf;IAED,uBAAuB,CAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG;QAE1C,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE,MAAM,CAAE,EAAE,CAAE,CAAE,CAAC;QAC5B,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE,MAAM,CAAE,EAAE,CAAE,CAAE,CAAC;QAC5B,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE,MAAM,CAAE,EAAE,CAAE,CAAE,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IAED,0BAA0B,CAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG;QAEhD,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAE,SAAS,EAAE,EAAE,CAAE,CAAC;QAC5C,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAE,SAAS,EAAE,EAAE,CAAE,CAAC;QAC5C,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAE,SAAS,EAAE,EAAE,CAAE,CAAC;QAE5C,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;IAED,IAAI,CAAE,QAAQ,EAAG;QAEb,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE,QAAQ,CAAC,CAAC,CAAE,CAAC;QAC1B,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE,QAAQ,CAAC,CAAC,CAAE,CAAC;QAC1B,IAAI,CAAC,CAAC,CAAC,IAAI,CAAE,QAAQ,CAAC,CAAC,CAAE,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,GAAG;QAEN,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QACnC,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QAEnC,OAAO,KAAK,CAAC,KAAK,CAAE,KAAK,CAAE,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;KAE9C;IAED,WAAW,CAAE,MAAM,EAAG;QAElB,OAAO,MAAM,CAAC,UAAU,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC,cAAc,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC;KAEpF;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,OAAO,QAAQ,CAAC,SAAS,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAE,CAAC;KAE/D;IAED,QAAQ,CAAE,MAAM,EAAG;QAEf,OAAO,MAAM,CAAC,qBAAqB,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE,CAAC;KAEjE;IAED,YAAY,CAAE,KAAK,EAAE,MAAM,EAAG;QAE1B,OAAO,QAAQ,CAAC,YAAY,CAAE,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAE,CAAC;KAEzE;IAED,KAAK,CAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAG;QAElC,OAAO,QAAQ,CAAC,KAAK,CAAE,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,CAAE,CAAC;KAEjF;IAED,aAAa,CAAE,KAAK,EAAG;QAEnB,OAAO,QAAQ,CAAC,aAAa,CAAE,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE,CAAC;KAElE;IAED,aAAa,CAAE,SAAS,EAAG;QAEvB,OAAO,QAAQ,CAAC,aAAa,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,SAAS,CAAE,CAAC;KAEtE;IAED,aAAa,CAAE,GAAG,EAAG;QAEjB,OAAO,GAAG,CAAC,kBAAkB,CAAE,IAAI,CAAE,CAAC;KAEzC;IAED,mBAAmB,CAAE,CAAC,EAAE,MAAM,EAAG;QAE7B,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,AAAC;QACzC,IAAI,CAAC,EAAE,CAAC,AAAC;QAET,yEAAyE;QACzE,mEAAmE;QACnE,8EAA8E;QAC9E,+EAA+E;QAC/E,sEAAsE;QAEtE,IAAI,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACxB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAE,AAAC;QAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAE,AAAC;QAC5B,IAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAEnB,mDAAmD;QACnD,OAAO,MAAM,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;QAI5B,IAAI,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACxB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAE,AAAC;QAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAE,AAAC;QAC5B,IAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAEpB,mDAAmD;QACnD,OAAO,MAAM,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;QAI5B,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,AAAC;QAC7B,IAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAG;YAEjC,CAAC,GAAG,EAAE,GAAK,CAAA,EAAE,GAAG,EAAE,CAAA,AAAE,CAAC;YACrB,oDAAoD;YACpD,OAAO,MAAM,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,eAAe,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC;SAEtD;QAED,IAAI,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACxB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAE,AAAC;QAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAE,AAAC;QAC5B,IAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAEpB,mDAAmD;QACnD,OAAO,MAAM,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;QAI5B,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,AAAC;QAC7B,IAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAG;YAEjC,CAAC,GAAG,EAAE,GAAK,CAAA,EAAE,GAAG,EAAE,CAAA,AAAE,CAAC;YACrB,oDAAoD;YACpD,OAAO,MAAM,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,eAAe,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC;SAEtD;QAED,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,AAAC;QAC7B,IAAK,EAAE,IAAI,CAAC,IAAI,AAAE,EAAE,GAAG,EAAE,IAAM,CAAC,IAAI,AAAE,EAAE,GAAG,EAAE,IAAM,CAAC,EAAG;YAEnD,IAAI,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YACxB,CAAC,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAO,CAAA,AAAE,EAAE,GAAG,EAAE,GAAO,CAAA,EAAE,GAAG,EAAE,CAAA,AAAE,CAAA,AAAE,CAAC;YAChD,oDAAoD;YACpD,OAAO,MAAM,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,eAAe,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC,CAAC,oBAAoB;SAE3E;QAED,cAAc;QACd,MAAM,KAAK,GAAG,CAAC,GAAK,CAAA,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA,AAAE,AAAC;QACnC,iBAAiB;QACjB,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;QACf,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;QAEf,OAAO,MAAM,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,eAAe,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC,eAAe,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC;KAEjF;IAED,MAAM,CAAE,QAAQ,EAAG;QAEf,OAAO,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAE,IAAI,CAAC,CAAC,CAAE,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAE,IAAI,CAAC,CAAC,CAAE,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;KAEpG;CAEJ;AAED,IAAI,UAAU,GAAG,CAAC,AAAC;AAEnB,MAAM,QAAQ,SAAS,eAAe;IAElC,aAAc;QAEV,KAAK,EAAE,CAAC;QAER,MAAM,CAAC,cAAc,CAAE,IAAI,EAAE,IAAI,EAAE;YAAE,KAAK,EAAE,UAAU,EAAG;SAAE,CAAE,CAAC;QAE9D,IAAI,CAAC,IAAI,GAAG,YAAY,EAAE,CAAC;QAE3B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QAEvB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,sBAAsB,CAAC;QACvC,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,gBAAgB,GAAG,GAAI,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,GAAI,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,8DAA8D;QAErF,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAE5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAEhC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QAEjB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;KAEvB;IAED,IAAI,SAAS,GAAG;QAEZ,OAAO,IAAI,CAAC,UAAU,CAAC;KAE1B;IAED,IAAI,SAAS,CAAE,KAAK,EAAG;QAEnB,IAAK,IAAI,CAAC,UAAU,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,EAElC,IAAI,CAAC,OAAO,EAAG,CAAC;QAIpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KAE3B;IAED,OAAO,GAAiC,EAAE;IAE1C,cAAc,GAA2D,EAAE;IAE3E,eAAe,GAAiC,EAAE;IAElD,qBAAqB,GAAG;QAEpB,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;KAE1C;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,IAAK,MAAM,KAAK,SAAS,EAAG,OAAO;QAEnC,IAAM,MAAM,GAAG,IAAI,MAAM,CAAG;YAExB,MAAM,QAAQ,GAAG,MAAM,CAAE,GAAG,CAAE,AAAC;YAE/B,IAAK,QAAQ,KAAK,SAAS,EAAG;gBAE1B,OAAO,CAAC,IAAI,CAAE,oBAAoB,GAAG,GAAG,GAAG,4BAA4B,CAAE,CAAC;gBAC1E,SAAS;aAEZ;YAED,kEAAkE;YAClE,IAAK,GAAG,KAAK,SAAS,EAAG;gBAErB,OAAO,CAAC,IAAI,CAAE,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,oEAAoE,CAAE,CAAC;gBAC5G,IAAI,CAAC,WAAW,GAAG,AAAE,QAAQ,KAAK,WAAW,GAAK,IAAI,GAAG,KAAK,CAAC;gBAC/D,SAAS;aAEZ;YAED,MAAM,YAAY,GAAG,IAAI,CAAE,GAAG,CAAE,AAAC;YAEjC,IAAK,YAAY,KAAK,SAAS,EAAG;gBAE9B,OAAO,CAAC,IAAI,CAAE,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,wCAAwC,CAAE,CAAC;gBAC/F,SAAS;aAEZ;YAED,IAAK,YAAY,IAAI,YAAY,CAAC,OAAO,EAErC,YAAY,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;iBAE1B,IAAK,AAAE,YAAY,IAAI,YAAY,CAAC,SAAS,IAAQ,QAAQ,IAAI,QAAQ,CAAC,SAAS,AAAE,EAExF,YAAY,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC;iBAI9B,IAAI,CAAE,GAAG,CAAE,GAAG,QAAQ,CAAC;SAI9B;KAEJ;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,MAAM,YAAY,GAAK,IAAI,KAAK,SAAS,IAAI,OAAO,IAAI,KAAK,QAAQ,AAAE,AAAC;QAExE,IAAK,YAAY,EAEb,IAAI,GAAG;YACH,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,EAAE;SACb,CAAC;QAIN,MAAM,KAAI,GAAG;YACT,QAAQ,EAAE;gBACN,OAAO,EAAE,GAAG;gBACZ,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,iBAAiB;aAC/B;SACJ,AAAC;QAEF,kCAAkC;QAClC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,IAAK,IAAI,CAAC,IAAI,KAAK,EAAE,EAAG,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAE9C,IAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAG,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QAEzE,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACpE,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAEpE,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAAG,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxD,IAAK,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAG,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QAC7F,IAAK,IAAI,CAAC,cAAc,KAAK,SAAS,EAAG,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QACnF,IAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAG,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACrF,IAAK,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,KAAK,CAAC,EAAG,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAE9G,IAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAG,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACrF,IAAK,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAG,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAC5F,IAAK,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAG,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;QACzG,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACpE,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACpE,IAAK,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAG,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAE/F,IAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,EAEjD,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAI9D,IAAK,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAEnE,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAIhF,IAAK,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAG;YAEhE,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;YACtE,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;SAEnE;QAED,IAAK,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAG,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAC9E,IAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAG,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAC1F,IAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAG,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAElG,IAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAG;YAE5C,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;YAClD,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;SAEnD;QAED,IAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAG;YAEtC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;YAC5C,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;SAE7C;QAED,IAAK,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAG;YAE1C,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;YAChD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SAEnC;QAED,IAAK,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAG;YAE9C,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;YACpD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YACxC,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;SAEjD;QAED,IAAK,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,SAAS,EAAG;YAE1D,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;YAChE,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAChD,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;SAEjD;QAED,IAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,EAAG,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAClH,IAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,EAAG,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAElH,IAAK,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAG,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAC9G,IAAK,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAG,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAC9G,IAAK,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAG,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAClJ,IAAK,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAG,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAElI,IAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAG;YAExC,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;YAE9C,IAAK,IAAI,CAAC,OAAO,KAAK,SAAS,EAAG,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAEjE;QAED,IAAK,IAAI,CAAC,eAAe,KAAK,SAAS,EAAG,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QACtF,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAAG,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAC7E,IAAK,IAAI,CAAC,eAAe,KAAK,SAAS,EAAG,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAEtF,IAAK,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAE/C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAI5D,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAAG,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAC7E,IAAK,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,SAAS,EAAG,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAC9H,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACpE,IAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,EAAG,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI,CAAC;QAClH,IAAK,IAAI,CAAC,mBAAmB,KAAK,SAAS,EAAG,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAClG,IAAK,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAG,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;QAElG,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrD,IAAK,IAAI,CAAC,UAAU,KAAK,IAAI,EAAG,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAClE,IAAK,IAAI,CAAC,eAAe,KAAK,SAAS,EAAG,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAEtF,IAAK,IAAI,CAAC,QAAQ,KAAK,cAAc,EAAG,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACtE,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrD,IAAK,IAAI,CAAC,YAAY,EAAG,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAElD,IAAK,IAAI,CAAC,OAAO,GAAG,CAAC,EAAG,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACpD,IAAK,IAAI,CAAC,WAAW,KAAK,IAAI,EAAG,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAErE,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAClC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAElC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC9C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAClC,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAEtC,4BAA4B;QAC5B,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAG,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAExF,IAAK,IAAI,CAAC,aAAa,KAAK,IAAI,EAAG,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC7D,IAAK,IAAI,CAAC,mBAAmB,KAAK,CAAC,EAAG,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC1F,IAAK,IAAI,CAAC,kBAAkB,KAAK,CAAC,EAAG,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAEvF,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAG,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5F,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjE,IAAK,IAAI,CAAC,OAAO,KAAK,SAAS,EAAG,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC9D,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAAG,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAExD,IAAK,IAAI,CAAC,SAAS,KAAK,IAAI,EAAG,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAErD,IAAK,IAAI,CAAC,SAAS,GAAG,CAAC,EAAG,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1D,IAAK,IAAI,CAAC,eAAe,KAAK,IAAI,EAAG,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QACjF,IAAK,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAG,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAE1F,IAAK,IAAI,CAAC,SAAS,KAAK,IAAI,EAAG,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/D,IAAK,IAAI,CAAC,kBAAkB,GAAG,CAAC,EAAG,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACrF,IAAK,IAAI,CAAC,gBAAgB,KAAK,OAAO,EAAG,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACvF,IAAK,IAAI,CAAC,iBAAiB,KAAK,OAAO,EAAG,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAE1F,IAAK,IAAI,CAAC,WAAW,KAAK,IAAI,EAAG,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAErE,IAAK,IAAI,CAAC,OAAO,KAAK,KAAK,EAAG,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAEnD,IAAK,IAAI,CAAC,UAAU,KAAK,KAAK,EAAG,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAEzD,IAAK,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,QAAQ,CAAE,KAAK,IAAI,EAAG,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE9E,oCAAoC;QAEpC,SAAS,gBAAgB,CAAE,KAAK,EAAG;YAE/B,MAAM,MAAM,GAAG,EAAE,AAAC;YAElB,IAAM,MAAM,GAAG,IAAI,KAAK,CAAG;gBAEvB,MAAM,IAAI,GAAG,KAAK,CAAE,GAAG,CAAE,AAAC;gBAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC;gBACrB,MAAM,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;aAEvB;YAED,OAAO,MAAM,CAAC;SAEjB;QAED,IAAK,YAAY,EAAG;YAEhB,MAAM,QAAQ,GAAG,gBAAgB,CAAE,IAAI,CAAC,QAAQ,CAAE,AAAC;YACnD,MAAM,MAAM,GAAG,gBAAgB,CAAE,IAAI,CAAC,MAAM,CAAE,AAAC;YAE/C,IAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAG,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACpD,IAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EAAG,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SAEjD;QAED,OAAO,KAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QAExB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QAEtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QAExC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QAEpD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QAEpC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QAExC,MAAM,SAAS,GAAG,MAAM,CAAC,cAAc,AAAC;QACxC,IAAI,SAAS,GAAG,IAAI,AAAC;QAErB,IAAK,SAAS,KAAK,IAAI,EAAG;YAEtB,MAAM,CAAC,GAAG,SAAS,CAAC,MAAM,AAAC;YAC3B,SAAS,GAAG,IAAI,KAAK,CAAE,CAAC,CAAE,CAAC;YAE3B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,KAAK,CAAC,EAAE,EAAG,GAAC,CAE1B,SAAS,CAAE,GAAC,CAAE,GAAG,SAAS,CAAE,GAAC,CAAE,CAAC,KAAK,EAAE,CAAC;SAI/C;QAED,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QAEpC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QAEpC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,CAAC;QACtD,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QAEpD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QAEpD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAE9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QAEpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,SAAS,CAAE,MAAM,CAAC,QAAQ,CAAE,CAAE,CAAC;QAEhE,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,aAAa,CAAE;YAAE,IAAI,EAAE,SAAS;SAAE,CAAE,CAAC;KAE7C;IAED,IAAI,WAAW,CAAE,KAAK,EAAG;QAErB,IAAK,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC,OAAO,EAAG,CAAC;KAEzC;CAEJ;AAED,QAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;AAErC,QAAQ,CAAC,QAAQ,GAAG,WAAsB;IAEtC,uCAAuC;IAEvC,OAAO,IAAI,CAAC;CAEf,CAAC;AAEF,MAAM,iBAAiB,SAAS,QAAQ;IAEpC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;QAEhC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC,WAAW;QAE/C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,CAAG,CAAC;QAE7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,CAAG,CAAC;QAE1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;QAEjC,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAEhC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QAEtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAE5C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAE9C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QACpD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAEvD,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC9C,MAAM,UAAU,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE/C,MAAM,eAAe;IAEjB,YAAa,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAG;QAEvC,IAAK,KAAK,CAAC,OAAO,CAAE,KAAK,CAAE,EAEvB,MAAM,IAAI,SAAS,CAAE,uDAAuD,CAAE,CAAC;QAInF,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAEf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,QAAQ,GAAG,CAAC,CAAC;QAC/D,IAAI,CAAC,UAAU,GAAG,UAAU,KAAK,IAAI,CAAC;QAEtC,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG;YAAE,MAAM,EAAE,CAAC;YAAE,KAAK,EAAE,EAAG;SAAE,CAAC;QAE7C,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;KAEpB;IAED,gBAAgB,GAAG,EAAE;IAErB,IAAI,WAAW,CAAE,KAAK,EAAG;QAErB,IAAK,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC,OAAO,EAAG,CAAC;KAEzC;IAED,QAAQ,CAAE,KAAK,EAAG;QAEd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QAEpC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAG;QAEhC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC;QACxB,MAAM,IAAI,SAAS,CAAC,QAAQ,CAAC;QAE7B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAE3C,IAAI,CAAC,KAAK,CAAE,MAAM,GAAG,GAAC,CAAE,GAAG,SAAS,CAAC,KAAK,CAAE,MAAM,GAAG,GAAC,CAAE,CAAC;QAI7D,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,KAAK,EAAG;QAEf,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QAExB,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,CAAE,MAAM,EAAG;QAEtB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;QACzB,IAAI,MAAM,GAAG,CAAC,AAAC;QAEf,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE9C,IAAI,KAAK,GAAG,MAAM,CAAE,GAAC,CAAE,AAAC;YAExB,IAAK,KAAK,KAAK,SAAS,EAAG;gBAEvB,OAAO,CAAC,IAAI,CAAE,6DAA6D,EAAE,GAAC,CAAE,CAAC;gBACjF,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;aAEvB;YAED,KAAK,CAAE,MAAM,EAAG,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC;YAC7B,KAAK,CAAE,MAAM,EAAG,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC;YAC7B,KAAK,CAAE,MAAM,EAAG,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC;SAEhC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,CAAE,OAAO,EAAG;QAEzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;QACzB,IAAI,MAAM,GAAG,CAAC,AAAC;QAEf,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE/C,IAAI,MAAM,GAAG,OAAO,CAAE,GAAC,CAAE,AAAC;YAE1B,IAAK,MAAM,KAAK,SAAS,EAAG;gBAExB,OAAO,CAAC,IAAI,CAAE,gEAAgE,EAAE,GAAC,CAAE,CAAC;gBACpF,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;aAE1B;YAED,KAAK,CAAE,MAAM,EAAG,CAAE,GAAG,MAAM,CAAC,CAAC,CAAC;YAC9B,KAAK,CAAE,MAAM,EAAG,CAAE,GAAG,MAAM,CAAC,CAAC,CAAC;SAEjC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,CAAE,OAAO,EAAG;QAEzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;QACzB,IAAI,MAAM,GAAG,CAAC,AAAC;QAEf,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE/C,IAAI,MAAM,GAAG,OAAO,CAAE,GAAC,CAAE,AAAC;YAE1B,IAAK,MAAM,KAAK,SAAS,EAAG;gBAExB,OAAO,CAAC,IAAI,CAAE,gEAAgE,EAAE,GAAC,CAAE,CAAC;gBACpF,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;aAE1B;YAED,KAAK,CAAE,MAAM,EAAG,CAAE,GAAG,MAAM,CAAC,CAAC,CAAC;YAC9B,KAAK,CAAE,MAAM,EAAG,CAAE,GAAG,MAAM,CAAC,CAAC,CAAC;YAC9B,KAAK,CAAE,MAAM,EAAG,CAAE,GAAG,MAAM,CAAC,CAAC,CAAC;SAEjC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,CAAE,OAAO,EAAG;QAEzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;QACzB,IAAI,MAAM,GAAG,CAAC,AAAC;QAEf,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE/C,IAAI,MAAM,GAAG,OAAO,CAAE,GAAC,CAAE,AAAC;YAE1B,IAAK,MAAM,KAAK,SAAS,EAAG;gBAExB,OAAO,CAAC,IAAI,CAAE,gEAAgE,EAAE,GAAC,CAAE,CAAC;gBACpF,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;aAE1B;YAED,KAAK,CAAE,MAAM,EAAG,CAAE,GAAG,MAAM,CAAC,CAAC,CAAC;YAC9B,KAAK,CAAE,MAAM,EAAG,CAAE,GAAG,MAAM,CAAC,CAAC,CAAC;YAC9B,KAAK,CAAE,MAAM,EAAG,CAAE,GAAG,MAAM,CAAC,CAAC,CAAC;YAC9B,KAAK,CAAE,MAAM,EAAG,CAAE,GAAG,MAAM,CAAC,CAAC,CAAC;SAEjC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,YAAY,CAAE,CAAC,EAAG;QAEd,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,EAEpB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE3C,UAAU,CAAC,mBAAmB,CAAE,IAAI,EAAE,GAAC,CAAE,CAAC;YAC1C,UAAU,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC;YAE7B,IAAI,CAAC,KAAK,CAAE,GAAC,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAE,CAAC;SAE/C;aAEE,IAAK,IAAI,CAAC,QAAQ,KAAK,CAAC,EAE3B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAC,GAAG,IAAI,CAAC,KAAK,EAAE,GAAC,GAAG,EAAC,EAAE,GAAC,EAAG,CAAG;YAE3C,SAAS,CAAC,mBAAmB,CAAE,IAAI,EAAE,GAAC,CAAE,CAAC;YACzC,SAAS,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC;YAE5B,IAAI,CAAC,MAAM,CAAE,GAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAE,CAAC;SAE3D;QAIL,OAAO,IAAI,CAAC;KAEf;IAED,YAAY,CAAE,CAAC,EAAG;QAEd,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE3C,SAAS,CAAC,mBAAmB,CAAE,IAAI,EAAE,GAAC,CAAE,CAAC;YAEzC,SAAS,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC;YAE5B,IAAI,CAAC,MAAM,CAAE,GAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAE,CAAC;SAE3D;QAED,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,CAAE,CAAC,EAAG;QAEnB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE3C,SAAS,CAAC,mBAAmB,CAAE,IAAI,EAAE,GAAC,CAAE,CAAC;YAEzC,SAAS,CAAC,iBAAiB,CAAE,CAAC,CAAE,CAAC;YAEjC,IAAI,CAAC,MAAM,CAAE,GAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAE,CAAC;SAE3D;QAED,OAAO,IAAI,CAAC;KAEf;IAED,kBAAkB,CAAE,CAAC,EAAG;QAEpB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE3C,SAAS,CAAC,mBAAmB,CAAE,IAAI,EAAE,GAAC,CAAE,CAAC;YAEzC,SAAS,CAAC,kBAAkB,CAAE,CAAC,CAAE,CAAC;YAElC,IAAI,CAAC,MAAM,CAAE,GAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAE,CAAC;SAE3D;QAED,OAAO,IAAI,CAAC;KAEf;IAED,GAAG,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAG;QAErB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,KAAK,EAAG;QAEV,OAAO,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAE,CAAC;KAE9C;IAED,IAAI,CAAE,KAAK,EAAE,CAAC,EAAG;QAEb,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAE,GAAG,CAAC,CAAC;QAExC,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,KAAK,EAAG;QAEV,OAAO,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAE,CAAC;KAElD;IAED,IAAI,CAAE,KAAK,EAAE,CAAC,EAAG;QAEb,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAE5C,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,KAAK,EAAG;QAEV,OAAO,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAE,CAAC;KAElD;IAED,IAAI,CAAE,KAAK,EAAE,CAAC,EAAG;QAEb,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAE5C,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,KAAK,EAAG;QAEV,OAAO,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAE,CAAC;KAElD;IAED,IAAI,CAAE,KAAK,EAAE,CAAC,EAAG;QAEb,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAE5C,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAG;QAEjB,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC;QAEvB,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAErB,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC;QAEvB,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAEzB,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC;QAEvB,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,QAAQ,EAAG;QAEjB,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAEzE;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG;YACT,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI;YACjC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAE;YAC/C,UAAU,EAAE,IAAI,CAAC,UAAU;SAC9B,AAAC;QAEF,IAAK,IAAI,CAAC,IAAI,KAAK,EAAE,EAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9C,IAAK,IAAI,CAAC,KAAK,KAAK,eAAe,EAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9D,IAAK,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,EAAG,EAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAE3G,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,eAAe,CAAC,SAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAEnD,EAAE;AAEF,MAAM,mBAAmB,SAAS,eAAe;IAE7C,YAAa,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAG;QAEvC,KAAK,CAAE,IAAI,SAAS,CAAE,KAAK,CAAE,EAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;KAEzD;CAEJ;AAED,MAAM,oBAAoB,SAAS,eAAe;IAE9C,YAAa,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAG;QAEvC,KAAK,CAAE,IAAI,UAAU,CAAE,KAAK,CAAE,EAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;KAE1D;CAEJ;AAED,MAAM,2BAA2B,SAAS,eAAe;IAErD,YAAa,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAG;QAEvC,KAAK,CAAE,IAAI,iBAAiB,CAAE,KAAK,CAAE,EAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;KAEjE;CAEJ;AAED,MAAM,oBAAoB,SAAS,eAAe;IAE9C,YAAa,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAG;QAEvC,KAAK,CAAE,IAAI,UAAU,CAAE,KAAK,CAAE,EAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;KAE1D;CAEJ;AAED,MAAM,qBAAqB,SAAS,eAAe;IAE/C,YAAa,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAG;QAEvC,KAAK,CAAE,IAAI,WAAW,CAAE,KAAK,CAAE,EAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;KAE3D;CAEJ;AAED,MAAM,oBAAoB,SAAS,eAAe;IAE9C,YAAa,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAG;QAEvC,KAAK,CAAE,IAAI,UAAU,CAAE,KAAK,CAAE,EAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;KAE1D;CAEJ;AAED,MAAM,qBAAqB,SAAS,eAAe;IAE/C,YAAa,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAG;QAEvC,KAAK,CAAE,IAAI,WAAW,CAAE,KAAK,CAAE,EAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;KAE3D;CAEJ;AAED,MAAM,sBAAsB,SAAS,eAAe;IAEhD,YAAa,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAG;QAEvC,KAAK,CAAE,IAAI,WAAW,CAAE,KAAK,CAAE,EAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;KAE3D;CAEJ;AAED,sBAAsB,CAAC,SAAS,CAAC,wBAAwB,GAAG,IAAI,CAAC;AAEjE,MAAM,sBAAsB,SAAS,eAAe;IAEhD,YAAa,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAG;QAEvC,KAAK,CAAE,IAAI,YAAY,CAAE,KAAK,CAAE,EAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;KAE5D;CAEJ;AAED,MAAM,sBAAsB,SAAS,eAAe;IAEhD,YAAa,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAG;QAEvC,KAAK,CAAE,IAAI,YAAY,CAAE,KAAK,CAAE,EAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;KAE5D;CAEJ;AAED,IAAI,KAAK,GAAG,CAAC,AAAC;AAEd,MAAM,GAAG,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACxC,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,QAAQ,EAAE,AAAC;AAC1C,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC5C,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,IAAI,EAAE,AAAC;AACxC,MAAM,gBAAgB,GAAG,aAAa,CAAC,IAAI,IAAI,EAAE,AAAC;AAClD,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE9C,MAAM,cAAc,SAAS,eAAe;IAExC,aAAc;QAEV,KAAK,EAAE,CAAC;QAER,MAAM,CAAC,cAAc,CAAE,IAAI,EAAE,IAAI,EAAE;YAAE,KAAK,EAAE,KAAK,EAAG;SAAE,CAAE,CAAC;QAEzD,IAAI,CAAC,IAAI,GAAG,YAAY,EAAE,CAAC;QAE3B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;QAE7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAElC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,IAAI,CAAC,SAAS,GAAG;YAAE,KAAK,EAAE,CAAC;YAAE,KAAK,EAAE,QAAQ;SAAE,CAAC;QAE/C,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KAEtB;IAED,QAAQ,GAAG;QAEP,OAAO,IAAI,CAAC,KAAK,CAAC;KAErB;IAED,QAAQ,CAAE,KAAK,EAAG;QAEd,IAAK,KAAK,CAAC,OAAO,CAAE,KAAK,CAAE,EAEvB,IAAI,CAAC,KAAK,GAAG,IAAM,CAAA,gBAAgB,CAAE,KAAK,CAAE,GAAG,qBAAqB,GAAG,qBAAqB,CAAA,CAAI,KAAK,EAAE,CAAC,CAAE,CAAC;aAI3G,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAIvB,OAAO,IAAI,CAAC;KAEf;IAED,YAAY,CAAE,IAAI,EAAG;QAEjB,OAAO,IAAI,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;KAElC;IAED,YAAY,CAAE,IAAI,EAAE,SAAS,EAAG;QAE5B,IAAI,CAAC,UAAU,CAAE,IAAI,CAAE,GAAG,SAAS,CAAC;QAEpC,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;QAE/B,OAAO,IAAI,CAAC;KAEf;IAED,YAAY,CAAE,IAAI,EAAG;QAEjB,OAAO,IAAI,CAAC,UAAU,CAAE,IAAI,CAAE,KAAK,SAAS,CAAC;KAEhD;IAED,QAAQ,CAAE,KAAK,EAAE,KAAK,EAAE,aAAa,GAAG,CAAC,EAAG;QAExC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE;YAEd,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,KAAK;YACZ,aAAa,EAAE,aAAa;SAE/B,CAAE,CAAC;KAEP;IAED,WAAW,GAAG;QAEV,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;KAEpB;IAED,YAAY,CAAE,KAAK,EAAE,KAAK,EAAG;QAEzB,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;KAEhC;IAED,YAAY,CAAE,MAAM,EAAG;QAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,AAAC;QAE1C,IAAK,QAAQ,KAAK,SAAS,EAAG;YAE1B,QAAQ,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC;YAEhC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;SAE/B;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,AAAC;QAEtC,IAAK,MAAM,KAAK,SAAS,EAAG;YAExB,MAAM,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC,eAAe,CAAE,MAAM,CAAE,AAAC;YAE7D,MAAM,CAAC,iBAAiB,CAAE,YAAY,CAAE,CAAC;YAEzC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;SAE7B;QAED,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,AAAC;QAExC,IAAK,OAAO,KAAK,SAAS,EAAG;YAEzB,OAAO,CAAC,kBAAkB,CAAE,MAAM,CAAE,CAAC;YAErC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;SAE9B;QAED,IAAK,IAAI,CAAC,WAAW,KAAK,IAAI,EAE1B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAI9B,IAAK,IAAI,CAAC,cAAc,KAAK,IAAI,EAE7B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAIjC,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,CAAE,CAAC,EAAG;QAEjB,GAAG,CAAC,0BAA0B,CAAE,CAAC,CAAE,CAAC;QAEpC,IAAI,CAAC,YAAY,CAAE,GAAG,CAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,KAAK,EAAG;QAEb,sCAAsC;QAEtC,GAAG,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;QAE3B,IAAI,CAAC,YAAY,CAAE,GAAG,CAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,KAAK,EAAG;QAEb,sCAAsC;QAEtC,GAAG,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;QAE3B,IAAI,CAAC,YAAY,CAAE,GAAG,CAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,KAAK,EAAG;QAEb,sCAAsC;QAEtC,GAAG,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;QAE3B,IAAI,CAAC,YAAY,CAAE,GAAG,CAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAEjB,qBAAqB;QAErB,GAAG,CAAC,eAAe,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAE/B,IAAI,CAAC,YAAY,CAAE,GAAG,CAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAEb,iBAAiB;QAEjB,GAAG,CAAC,SAAS,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEzB,IAAI,CAAC,YAAY,CAAE,GAAG,CAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,MAAM,EAAG;QAEb,IAAI,CAAC,MAAM,CAAE,MAAM,CAAE,CAAC;QAEtB,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAE,OAAO,CAAE,CAAC,MAAM,EAAE,CAAC;QAE/C,IAAI,CAAC,SAAS,CAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAE,CAAC;QAElD,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,MAAM,EAAG;QAEpB,MAAM,QAAQ,GAAG,EAAE,AAAC;QAEpB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE9C,MAAM,KAAK,GAAG,MAAM,CAAE,GAAC,CAAE,AAAC;YAC1B,QAAQ,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,CAAE,CAAC;SAEnD;QAED,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAE3E,OAAO,IAAI,CAAC;KAEf;IAED,kBAAkB,GAAG;QAEjB,IAAK,IAAI,CAAC,WAAW,KAAK,IAAI,EAE1B,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAIlC,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,AAAC;QAC1C,MAAM,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,AAAC;QAE9D,IAAK,QAAQ,IAAI,QAAQ,CAAC,mBAAmB,EAAG;YAE5C,OAAO,CAAC,KAAK,CAAE,iJAAiJ,EAAE,IAAI,CAAE,CAAC;YAEzK,IAAI,CAAC,WAAW,CAAC,GAAG,CAChB,IAAI,OAAO,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,EACjD,IAAI,OAAO,CAAE,QAAU,EAAE,QAAU,EAAE,QAAU,CAAE,CACpD,CAAC;YAEF,OAAO;SAEV;QAED,IAAK,QAAQ,KAAK,SAAS,EAAG;YAE1B,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAE,QAAQ,CAAE,CAAC;YAEpD,sCAAsC;YAEtC,IAAK,uBAAuB,EAExB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,uBAAuB,CAAC,MAAM,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAAG;gBAEjE,MAAM,cAAc,GAAG,uBAAuB,CAAE,GAAC,CAAE,AAAC;gBACpD,MAAM,CAAC,sBAAsB,CAAE,cAAc,CAAE,CAAC;gBAEhD,IAAK,IAAI,CAAC,oBAAoB,EAAG;oBAE7B,SAAS,CAAC,UAAU,CAAE,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAE,CAAC;oBACzD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAE,SAAS,CAAE,CAAC;oBAE5C,SAAS,CAAC,UAAU,CAAE,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAE,CAAC;oBACzD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAE,SAAS,CAAE,CAAC;iBAE/C,MAAM;oBAEH,IAAI,CAAC,WAAW,CAAC,aAAa,CAAE,MAAM,CAAC,GAAG,CAAE,CAAC;oBAC7C,IAAI,CAAC,WAAW,CAAC,aAAa,CAAE,MAAM,CAAC,GAAG,CAAE,CAAC;iBAEhD;aAEJ;SAIR,MAEG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;QAIjC,IAAK,KAAK,CAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE,IAAI,KAAK,CAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE,IAAI,KAAK,CAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE,EAEtG,OAAO,CAAC,KAAK,CAAE,qIAAqI,EAAE,IAAI,CAAE,CAAC;KAIpK;IAED,qBAAqB,GAAG;QAEpB,IAAK,IAAI,CAAC,cAAc,KAAK,IAAI,EAE7B,IAAI,CAAC,cAAc,GAAG,IAAI,MAAM,EAAE,CAAC;QAIvC,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,AAAC;QAC1C,MAAM,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,AAAC;QAE9D,IAAK,QAAQ,IAAI,QAAQ,CAAC,mBAAmB,EAAG;YAE5C,OAAO,CAAC,KAAK,CAAE,uJAAuJ,EAAE,IAAI,CAAE,CAAC;YAE/K,IAAI,CAAC,cAAc,CAAC,GAAG,CAAE,IAAI,OAAO,EAAE,EAAE,QAAQ,CAAE,CAAC;YAEnD,OAAO;SAEV;QAED,IAAK,QAAQ,EAAG;YAEZ,gDAAgD;YAEhD,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,AAAC;YAE1C,MAAM,CAAC,sBAAsB,CAAE,QAAQ,CAAE,CAAC;YAE1C,sCAAsC;YAEtC,IAAK,uBAAuB,EAExB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,uBAAuB,CAAC,MAAM,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAAG;gBAEjE,MAAM,cAAc,GAAG,uBAAuB,CAAE,GAAC,CAAE,AAAC;gBACpD,gBAAgB,CAAC,sBAAsB,CAAE,cAAc,CAAE,CAAC;gBAE1D,IAAK,IAAI,CAAC,oBAAoB,EAAG;oBAE7B,SAAS,CAAC,UAAU,CAAE,MAAM,CAAC,GAAG,EAAE,gBAAgB,CAAC,GAAG,CAAE,CAAC;oBACzD,MAAM,CAAC,aAAa,CAAE,SAAS,CAAE,CAAC;oBAElC,SAAS,CAAC,UAAU,CAAE,MAAM,CAAC,GAAG,EAAE,gBAAgB,CAAC,GAAG,CAAE,CAAC;oBACzD,MAAM,CAAC,aAAa,CAAE,SAAS,CAAE,CAAC;iBAErC,MAAM;oBAEH,MAAM,CAAC,aAAa,CAAE,gBAAgB,CAAC,GAAG,CAAE,CAAC;oBAC7C,MAAM,CAAC,aAAa,CAAE,gBAAgB,CAAC,GAAG,CAAE,CAAC;iBAEhD;aAEJ;YAIL,MAAM,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC;YAE3B,sEAAsE;YACtE,sEAAsE;YAEtE,IAAI,WAAW,GAAG,CAAC,AAAC;YAEpB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAE,GAAG,QAAQ,CAAC,KAAK,EAAE,GAAC,GAAG,GAAE,EAAE,GAAC,EAAG,CAAG;gBAEjD,SAAS,CAAC,mBAAmB,CAAE,QAAQ,EAAE,GAAC,CAAE,CAAC;gBAE7C,WAAW,GAAG,IAAI,CAAC,GAAG,CAAE,WAAW,EAAE,MAAM,CAAC,iBAAiB,CAAE,SAAS,CAAE,CAAE,CAAC;aAEhF;YAED,sCAAsC;YAEtC,IAAK,uBAAuB,EAExB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAE,GAAG,uBAAuB,CAAC,MAAM,EAAE,GAAC,GAAG,GAAE,EAAE,GAAC,EAAG,CAAG;gBAEjE,MAAM,cAAc,GAAG,uBAAuB,CAAE,GAAC,CAAE,AAAC;gBACpD,MAAM,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,AAAC;gBAEvD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,cAAc,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;oBAEvD,SAAS,CAAC,mBAAmB,CAAE,cAAc,EAAE,CAAC,CAAE,CAAC;oBAEnD,IAAK,oBAAoB,EAAG;wBAExB,OAAO,CAAC,mBAAmB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAC;wBAC3C,SAAS,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;qBAE5B;oBAED,WAAW,GAAG,IAAI,CAAC,GAAG,CAAE,WAAW,EAAE,MAAM,CAAC,iBAAiB,CAAE,SAAS,CAAE,CAAE,CAAC;iBAEhF;aAEJ;YAIL,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;YAEtD,IAAK,KAAK,CAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAE,EAEpC,OAAO,CAAC,KAAK,CAAE,8HAA8H,EAAE,IAAI,CAAE,CAAC;SAI7J;KAEJ;IAED,eAAe,GAAG;QAEd,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;QACzB,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,AAAC;QAEnC,qDAAqD;QACrD,wBAAwB;QAExB,IAAK,KAAK,KAAK,IAAI,IACd,UAAU,CAAC,QAAQ,KAAK,SAAS,IACjC,UAAU,CAAC,MAAM,KAAK,SAAS,IAC/B,UAAU,CAAC,EAAE,KAAK,SAAS,EAAG;YAE/B,OAAO,CAAC,KAAK,CAAE,8GAA8G,CAAE,CAAC;YAChI,OAAO;SAEV;QAED,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,AAAC;QAC5B,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,AAAC;QAC5C,MAAM,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,AAAC;QACxC,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,KAAK,AAAC;QAEhC,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,AAAC;QAEvC,IAAK,IAAI,CAAC,YAAY,CAAE,SAAS,CAAE,KAAK,KAAK,EAEzC,IAAI,CAAC,YAAY,CAAE,SAAS,EAAE,IAAI,eAAe,CAAE,IAAI,YAAY,CAAE,CAAC,GAAG,SAAS,CAAE,EAAE,CAAC,CAAE,CAAE,CAAC;QAIhG,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAE,SAAS,CAAE,CAAC,KAAK,AAAC;QAEtD,MAAM,IAAI,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,AAAC;QAE3B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,SAAS,EAAE,GAAC,EAAG,CAAG;YAEnC,IAAI,CAAE,GAAC,CAAE,GAAG,IAAI,OAAO,EAAE,CAAC;YAC1B,IAAI,CAAE,GAAC,CAAE,GAAG,IAAI,OAAO,EAAE,CAAC;SAE7B;QAED,MAAM,EAAE,GAAG,IAAI,OAAO,EAAE,EACpB,EAAE,GAAG,IAAI,OAAO,EAAE,EAClB,EAAE,GAAG,IAAI,OAAO,EAAE,EAElB,GAAG,GAAG,IAAI,OAAO,EAAE,EACnB,GAAG,GAAG,IAAI,OAAO,EAAE,EACnB,GAAG,GAAG,IAAI,OAAO,EAAE,EAEnB,IAAI,GAAG,IAAI,OAAO,EAAE,EACpB,IAAI,GAAG,IAAI,OAAO,EAAE,AAAC;QAEzB,SAAS,cAAc,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;YAE/B,EAAE,CAAC,SAAS,CAAE,SAAS,EAAE,CAAC,GAAG,CAAC,CAAE,CAAC;YACjC,EAAE,CAAC,SAAS,CAAE,SAAS,EAAE,CAAC,GAAG,CAAC,CAAE,CAAC;YACjC,EAAE,CAAC,SAAS,CAAE,SAAS,EAAE,CAAC,GAAG,CAAC,CAAE,CAAC;YAEjC,GAAG,CAAC,SAAS,CAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAE,CAAC;YAC5B,GAAG,CAAC,SAAS,CAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAE,CAAC;YAC5B,GAAG,CAAC,SAAS,CAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAE,CAAC;YAE5B,EAAE,CAAC,GAAG,CAAE,EAAE,CAAE,CAAC;YACb,EAAE,CAAC,GAAG,CAAE,EAAE,CAAE,CAAC;YAEb,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,CAAC;YACf,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,CAAC;YAEf,MAAM,CAAC,GAAG,CAAG,GAAK,CAAA,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAA,AAAE,AAAC;YAElD,iFAAiF;YAEjF,IAAK,CAAE,QAAQ,CAAE,CAAC,CAAE,EAAG,OAAO;YAE9B,IAAI,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC,cAAc,CAAE,GAAG,CAAC,CAAC,CAAE,CAAC,eAAe,CAAE,EAAE,EAAE,CAAE,GAAG,CAAC,CAAC,CAAE,CAAC,cAAc,CAAE,CAAC,CAAE,CAAC;YAC3F,IAAI,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC,cAAc,CAAE,GAAG,CAAC,CAAC,CAAE,CAAC,eAAe,CAAE,EAAE,EAAE,CAAE,GAAG,CAAC,CAAC,CAAE,CAAC,cAAc,CAAE,CAAC,CAAE,CAAC;YAE3F,IAAI,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;YACtB,IAAI,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;YACtB,IAAI,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;YAEtB,IAAI,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;YACtB,IAAI,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;YACtB,IAAI,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;SAEzB;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAEzB,IAAK,MAAM,CAAC,MAAM,KAAK,CAAC,EAEpB,MAAM,GAAG;YAAE;gBACP,KAAK,EAAE,CAAC;gBACR,KAAK,EAAE,OAAO,CAAC,MAAM;aACxB;SAAE,CAAC;QAIR,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,GAAC,GAAG,EAAE,EAAE,EAAG,GAAC,CAAG;YAEhD,MAAM,KAAK,GAAG,MAAM,CAAE,GAAC,CAAE,AAAC;YAE1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,AAAC;YAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,AAAC;YAE1B,IAAM,IAAI,CAAC,GAAG,KAAK,EAAE,EAAE,GAAG,KAAK,GAAG,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,CAEnD,cAAc,CACV,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,EAChB,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,EAChB,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,CACnB,CAAC;SAIT;QAED,MAAM,IAAG,GAAG,IAAI,OAAO,EAAE,EAAE,IAAI,GAAG,IAAI,OAAO,EAAE,AAAC;QAChD,MAAM,CAAC,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,AAAC;QAE5C,SAAS,YAAY,CAAE,CAAC,EAAG;YAEvB,CAAC,CAAC,SAAS,CAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAE,CAAC;YAC9B,EAAE,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;YAEb,MAAM,CAAC,GAAG,IAAI,CAAE,CAAC,CAAE,AAAC;YAEpB,6BAA6B;YAE7B,IAAG,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;YACd,IAAG,CAAC,GAAG,CAAE,CAAC,CAAC,cAAc,CAAE,CAAC,CAAC,GAAG,CAAE,CAAC,CAAE,CAAE,CAAE,CAAC,SAAS,EAAE,CAAC;YAEtD,uBAAuB;YAEvB,IAAI,CAAC,YAAY,CAAE,EAAE,EAAE,CAAC,CAAE,CAAC;YAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,AAAC;YACnC,MAAM,CAAC,GAAG,AAAE,IAAI,GAAG,CAAG,GAAK,EAAK,GAAG,CAAG,AAAC;YAEvC,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,IAAG,CAAC,CAAC,CAAC;YAC1B,QAAQ,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAG,IAAG,CAAC,CAAC,CAAC;YAC9B,QAAQ,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAG,IAAG,CAAC,CAAC,CAAC;YAC9B,QAAQ,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;SAE7B;QAED,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAE,GAAG,MAAM,CAAC,MAAM,EAAE,GAAC,GAAG,GAAE,EAAE,EAAG,GAAC,CAAG;YAEhD,MAAM,KAAK,GAAG,MAAM,CAAE,GAAC,CAAE,AAAC;YAE1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,AAAC;YAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,AAAC;YAE1B,IAAM,IAAI,CAAC,GAAG,KAAK,EAAE,EAAE,GAAG,KAAK,GAAG,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,CAAG;gBAEtD,YAAY,CAAE,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBACjC,YAAY,CAAE,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBACjC,YAAY,CAAE,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;aAEpC;SAEJ;KAEJ;IAED,oBAAoB,GAAG;QAEnB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;QACzB,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAE,UAAU,CAAE,AAAC;QAE1D,IAAK,iBAAiB,KAAK,SAAS,EAAG;YAEnC,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAE,QAAQ,CAAE,AAAC;YAEpD,IAAK,eAAe,KAAK,SAAS,EAAG;gBAEjC,eAAe,GAAG,IAAI,eAAe,CAAE,IAAI,YAAY,CAAE,iBAAiB,CAAC,KAAK,GAAG,CAAC,CAAE,EAAE,CAAC,CAAE,CAAC;gBAC5F,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,eAAe,CAAE,CAAC;aAElD,MAEG,iCAAiC;YAEjC,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,eAAe,CAAC,KAAK,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAErD,eAAe,CAAC,MAAM,CAAE,GAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YAM7C,MAAM,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,AAAC;YACjE,MAAM,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,AAAC;YACjE,MAAM,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,AAAC;YAE7C,mBAAmB;YAEnB,IAAK,KAAK,EAEN,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAE,GAAG,KAAK,CAAC,KAAK,EAAE,GAAC,GAAG,GAAE,EAAE,GAAC,IAAI,CAAC,CAAG;gBAEhD,MAAM,EAAE,GAAG,KAAK,CAAC,IAAI,CAAE,GAAC,GAAG,CAAC,CAAE,AAAC;gBAC/B,MAAM,EAAE,GAAG,KAAK,CAAC,IAAI,CAAE,GAAC,GAAG,CAAC,CAAE,AAAC;gBAC/B,MAAM,EAAE,GAAG,KAAK,CAAC,IAAI,CAAE,GAAC,GAAG,CAAC,CAAE,AAAC;gBAE/B,EAAE,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,EAAE,CAAE,CAAC;gBAChD,EAAE,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,EAAE,CAAE,CAAC;gBAChD,EAAE,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,EAAE,CAAE,CAAC;gBAEhD,EAAE,CAAC,UAAU,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;gBACxB,EAAE,CAAC,UAAU,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;gBACxB,EAAE,CAAC,KAAK,CAAE,EAAE,CAAE,CAAC;gBAEf,EAAE,CAAC,mBAAmB,CAAE,eAAe,EAAE,EAAE,CAAE,CAAC;gBAC9C,EAAE,CAAC,mBAAmB,CAAE,eAAe,EAAE,EAAE,CAAE,CAAC;gBAC9C,EAAE,CAAC,mBAAmB,CAAE,eAAe,EAAE,EAAE,CAAE,CAAC;gBAE9C,EAAE,CAAC,GAAG,CAAE,EAAE,CAAE,CAAC;gBACb,EAAE,CAAC,GAAG,CAAE,EAAE,CAAE,CAAC;gBACb,EAAE,CAAC,GAAG,CAAE,EAAE,CAAE,CAAC;gBAEb,eAAe,CAAC,MAAM,CAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;gBAC/C,eAAe,CAAC,MAAM,CAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;gBAC/C,eAAe,CAAC,MAAM,CAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;aAElD;iBAID,mDAAmD;YAEnD,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAE,GAAG,iBAAiB,CAAC,KAAK,EAAE,GAAC,GAAG,GAAE,EAAE,GAAC,IAAI,CAAC,CAAG;gBAE5D,EAAE,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,GAAC,GAAG,CAAC,CAAE,CAAC;gBACnD,EAAE,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,GAAC,GAAG,CAAC,CAAE,CAAC;gBACnD,EAAE,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,GAAC,GAAG,CAAC,CAAE,CAAC;gBAEnD,EAAE,CAAC,UAAU,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;gBACxB,EAAE,CAAC,UAAU,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;gBACxB,EAAE,CAAC,KAAK,CAAE,EAAE,CAAE,CAAC;gBAEf,eAAe,CAAC,MAAM,CAAE,GAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;gBAClD,eAAe,CAAC,MAAM,CAAE,GAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;gBAClD,eAAe,CAAC,MAAM,CAAE,GAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;aAErD;YAIL,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAExB,eAAe,CAAC,WAAW,GAAG,IAAI,CAAC;SAEtC;KAEJ;IAED,KAAK,CAAE,QAAQ,EAAE,MAAM,EAAG;QAEtB,IAAK,CAAI,CAAA,QAAQ,IAAI,QAAQ,CAAC,gBAAgB,CAAA,AAAE,EAAG;YAE/C,OAAO,CAAC,KAAK,CAAE,iFAAiF,EAAE,QAAQ,CAAE,CAAC;YAC7G,OAAO;SAEV;QAED,IAAK,MAAM,KAAK,SAAS,EAAG;YAExB,MAAM,GAAG,CAAC,CAAC;YAEX,OAAO,CAAC,IAAI,CACR,wJACuE,CAC1E,CAAC;SAEL;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,AAAC;QAEnC,IAAM,MAAM,GAAG,IAAI,UAAU,CAAG;YAE5B,IAAK,QAAQ,CAAC,UAAU,CAAE,GAAG,CAAE,KAAK,SAAS,EAAG,SAAS;YAEzD,MAAM,UAAU,GAAG,UAAU,CAAE,GAAG,CAAE,AAAC;YACrC,MAAM,eAAe,GAAG,UAAU,CAAC,KAAK,AAAC;YAEzC,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAE,GAAG,CAAE,AAAC;YAC9C,MAAM,eAAe,GAAG,UAAU,CAAC,KAAK,AAAC;YAEzC,MAAM,eAAe,GAAG,UAAU,CAAC,QAAQ,GAAG,MAAM,AAAC;YACrD,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,eAAe,CAAC,MAAM,EAAE,eAAe,CAAC,MAAM,GAAG,eAAe,CAAE,AAAC;YAE5F,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,GAAC,GAAG,MAAM,EAAE,GAAC,EAAG,EAAE,CAAC,EAAG,CAExD,eAAe,CAAE,CAAC,CAAE,GAAG,eAAe,CAAE,GAAC,CAAE,CAAC;SAInD;QAED,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,GAAG;QAEf,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,AAAC;QAEvC,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,KAAK,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAAG;YAEhD,SAAS,CAAC,mBAAmB,CAAE,OAAO,EAAE,GAAC,CAAE,CAAC;YAE5C,SAAS,CAAC,SAAS,EAAE,CAAC;YAEtB,OAAO,CAAC,MAAM,CAAE,GAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAE,CAAC;SAE9D;KAEJ;IAED,YAAY,GAAG;QAEX,SAAS,sBAAsB,CAAE,SAAS,EAAE,OAAO,EAAG;YAElD,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,AAAC;YAC9B,MAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,AAAC;YACpC,MAAM,UAAU,GAAG,SAAS,CAAC,UAAU,AAAC;YAExC,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,WAAW,CAAE,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAE,AAAC;YAElE,IAAI,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,AAAC;YAE1B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;gBAE/C,IAAK,SAAS,CAAC,4BAA4B,EAEvC,KAAK,GAAG,OAAO,CAAE,GAAC,CAAE,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;qBAIhE,KAAK,GAAG,OAAO,CAAE,GAAC,CAAE,GAAG,QAAQ,CAAC;gBAIpC,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAG,CAE/B,MAAM,CAAE,MAAM,EAAG,CAAE,GAAG,KAAK,CAAE,KAAK,EAAG,CAAE,CAAC;aAI/C;YAED,OAAO,IAAI,eAAe,CAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;SAE9D;QAED,EAAE;QAEF,IAAK,IAAI,CAAC,KAAK,KAAK,IAAI,EAAG;YAEvB,OAAO,CAAC,IAAI,CAAE,6EAA6E,CAAE,CAAC;YAC9F,OAAO,IAAI,CAAC;SAEf;QAED,MAAM,SAAS,GAAG,IAAI,cAAc,EAAE,AAAC;QAEvC,MAAM,QAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,AAAC;QACjC,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,AAAC;QAEnC,aAAa;QAEb,IAAM,MAAM,IAAI,IAAI,UAAU,CAAG;YAE7B,MAAM,SAAS,GAAG,UAAU,CAAE,IAAI,CAAE,AAAC;YAErC,MAAM,YAAY,GAAG,sBAAsB,CAAE,SAAS,EAAE,QAAO,CAAE,AAAC;YAElE,SAAS,CAAC,YAAY,CAAE,IAAI,EAAE,YAAY,CAAE,CAAC;SAEhD;QAED,mBAAmB;QAEnB,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,AAAC;QAE7C,IAAM,MAAM,KAAI,IAAI,eAAe,CAAG;YAElC,MAAM,UAAU,GAAG,EAAE,AAAC;YACtB,MAAM,cAAc,GAAG,eAAe,CAAE,KAAI,CAAE,AAAC,EAAC,mDAAmD;YAEnG,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,cAAc,CAAC,MAAM,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAAG;gBAExD,MAAM,SAAS,GAAG,cAAc,CAAE,GAAC,CAAE,AAAC;gBAEtC,MAAM,YAAY,GAAG,sBAAsB,CAAE,SAAS,EAAE,QAAO,CAAE,AAAC;gBAElE,UAAU,CAAC,IAAI,CAAE,YAAY,CAAE,CAAC;aAEnC;YAED,SAAS,CAAC,eAAe,CAAE,KAAI,CAAE,GAAG,UAAU,CAAC;SAElD;QAED,SAAS,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAE3D,SAAS;QAET,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAC,GAAG,MAAM,CAAC,MAAM,EAAE,GAAC,GAAG,EAAC,EAAE,GAAC,EAAG,CAAG;YAE9C,MAAM,KAAK,GAAG,MAAM,CAAE,GAAC,CAAE,AAAC;YAC1B,SAAS,CAAC,QAAQ,CAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,aAAa,CAAE,CAAC;SAEvE;QAED,OAAO,SAAS,CAAC;KAEpB;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG;YACT,QAAQ,EAAE;gBACN,OAAO,EAAE,GAAG;gBACZ,IAAI,EAAE,gBAAgB;gBACtB,SAAS,EAAE,uBAAuB;aACrC;SACJ,AAAC;QAEF,wCAAwC;QAExC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAK,IAAI,CAAC,IAAI,KAAK,EAAE,EAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9C,IAAK,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC,MAAM,GAAG,CAAC,EAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE7E,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG;YAEjC,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,AAAC;YAEnC,IAAM,MAAM,GAAG,IAAI,UAAU,CAEzB,IAAK,UAAU,CAAE,GAAG,CAAE,KAAK,SAAS,EAAG,IAAI,CAAE,GAAG,CAAE,GAAG,UAAU,CAAE,GAAG,CAAE,CAAC;YAI3E,OAAO,IAAI,CAAC;SAEf;QAED,0FAA0F;QAE1F,IAAI,CAAC,IAAI,GAAG;YAAE,UAAU,EAAE,EAAE;SAAE,CAAC;QAE/B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;QAEzB,IAAK,KAAK,KAAK,IAAI,EAEf,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG;YACd,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI;YAClC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAE,KAAK,CAAC,KAAK,CAAE;SACnD,CAAC;QAIN,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,AAAC;QAEnC,IAAM,MAAM,GAAG,IAAI,UAAU,CAAG;YAE5B,MAAM,SAAS,GAAG,UAAU,CAAE,GAAG,CAAE,AAAC;YAEpC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAE,GAAG,CAAE,GAAG,SAAS,CAAC,MAAM,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;SAE/D;QAED,MAAM,eAAe,GAAG,EAAE,AAAC;QAC3B,IAAI,kBAAkB,GAAG,KAAK,AAAC;QAE/B,IAAM,MAAM,IAAG,IAAI,IAAI,CAAC,eAAe,CAAG;YAEtC,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAE,IAAG,CAAE,AAAC;YAEnD,MAAM,KAAK,GAAG,EAAE,AAAC;YAEjB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,cAAc,CAAC,MAAM,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAAG;gBAExD,MAAM,SAAS,GAAG,cAAc,CAAE,GAAC,CAAE,AAAC;gBAEtC,KAAK,CAAC,IAAI,CAAE,SAAS,CAAC,MAAM,CAAE,IAAI,CAAC,IAAI,CAAE,CAAE,CAAC;aAE/C;YAED,IAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EAAG;gBAEpB,eAAe,CAAE,IAAG,CAAE,GAAG,KAAK,CAAC;gBAE/B,kBAAkB,GAAG,IAAI,CAAC;aAE7B;SAEJ;QAED,IAAK,kBAAkB,EAAG;YAEtB,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;YAC5C,IAAI,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;SAE9D;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EAElB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,SAAS,CAAE,MAAM,CAAE,CAAE,CAAC;QAI9D,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,AAAC;QAE3C,IAAK,cAAc,KAAK,IAAI,EAExB,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG;YACvB,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE;YACvC,MAAM,EAAE,cAAc,CAAC,MAAM;SAChC,CAAC;QAIN,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEH,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE/C;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,QAAQ;QAER,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,uCAAuC;QAEvC,MAAM,IAAI,GAAG,EAAE,AAAC;QAEhB,OAAO;QAEP,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QAExB,QAAQ;QAER,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,AAAC;QAE3B,IAAK,KAAK,KAAK,IAAI,EAEf,IAAI,CAAC,QAAQ,CAAE,KAAK,CAAC,KAAK,CAAE,IAAI,CAAE,CAAE,CAAC;QAIzC,aAAa;QAEb,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,AAAC;QAErC,IAAM,MAAM,IAAI,IAAI,UAAU,CAAG;YAE7B,MAAM,SAAS,GAAG,UAAU,CAAE,IAAI,CAAE,AAAC;YACrC,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,SAAS,CAAC,KAAK,CAAE,IAAI,CAAE,CAAE,CAAC;SAEtD;QAED,mBAAmB;QAEnB,MAAM,eAAe,GAAG,MAAM,CAAC,eAAe,AAAC;QAE/C,IAAM,MAAM,KAAI,IAAI,eAAe,CAAG;YAElC,MAAM,KAAK,GAAG,EAAE,AAAC;YACjB,MAAM,cAAc,GAAG,eAAe,CAAE,KAAI,CAAE,AAAC,EAAC,mDAAmD;YAEnG,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAEnD,KAAK,CAAC,IAAI,CAAE,cAAc,CAAE,GAAC,CAAE,CAAC,KAAK,CAAE,IAAI,CAAE,CAAE,CAAC;YAIpD,IAAI,CAAC,eAAe,CAAE,KAAI,CAAE,GAAG,KAAK,CAAC;SAExC;QAED,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,CAAC;QAExD,SAAS;QAET,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,AAAC;QAE7B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE9C,MAAM,KAAK,GAAG,MAAM,CAAE,GAAC,CAAE,AAAC;YAC1B,IAAI,CAAC,QAAQ,CAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,aAAa,CAAE,CAAC;SAElE;QAED,eAAe;QAEf,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,AAAC;QAEvC,IAAK,WAAW,KAAK,IAAI,EAErB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;QAI3C,kBAAkB;QAElB,MAAM,cAAc,GAAG,MAAM,CAAC,cAAc,AAAC;QAE7C,IAAK,cAAc,KAAK,IAAI,EAExB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC,KAAK,EAAE,CAAC;QAIjD,aAAa;QAEb,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC;QAC9C,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC;QAE9C,YAAY;QAEZ,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,gCAAgC;QAEhC,IAAK,MAAM,CAAC,UAAU,KAAK,SAAS,EAAG,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,MAAM,CAAC,UAAU,CAAE,CAAC;QAEhG,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,aAAa,CAAE;YAAE,IAAI,EAAE,SAAS;SAAE,CAAE,CAAC;KAE7C;CAEJ;AAED,cAAc,CAAC,SAAS,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAEjD,MAAM,gBAAgB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACrD,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,GAAG,EAAE,AAAC;AACvC,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,MAAM,EAAE,AAAC;AAE7C,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE1C,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC3C,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC3C,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE3C,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC5C,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC5C,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE5C,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC3C,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC3C,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE3C,MAAM,kBAAkB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACvD,MAAM,uBAAuB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE5D,MAAM,IAAI,SAAS,QAAQ;IAEvB,YAAa,QAAQ,GAAG,IAAI,cAAc,EAAE,EAAE,QAAQ,GAAG,IAAI,iBAAiB,EAAE,CAAG;QAE/E,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QAEnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAE7B;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAK,MAAM,CAAC,qBAAqB,KAAK,SAAS,EAE3C,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC,qBAAqB,CAAC,KAAK,EAAE,CAAC;QAItE,IAAK,MAAM,CAAC,qBAAqB,KAAK,SAAS,EAE3C,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,MAAM,CAAC,qBAAqB,CAAE,CAAC;QAInF,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,kBAAkB,GAAG;QAEjB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAE/B,IAAK,QAAQ,CAAC,gBAAgB,EAAG;YAE7B,MAAM,eAAe,GAAG,QAAQ,CAAC,eAAe,AAAC;YACjD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAE,eAAe,CAAE,AAAC;YAE5C,IAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAG;gBAEnB,MAAM,cAAc,GAAG,eAAe,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,AAAC;gBAEpD,IAAK,cAAc,KAAK,SAAS,EAAG;oBAEhC,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;oBAChC,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;oBAEhC,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;wBAExD,MAAM,IAAI,GAAG,cAAc,CAAE,CAAC,CAAE,CAAC,IAAI,IAAI,MAAM,CAAE,CAAC,CAAE,AAAC;wBAErD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;wBACrC,IAAI,CAAC,qBAAqB,CAAE,IAAI,CAAE,GAAG,CAAC,CAAC;qBAE1C;iBAEJ;aAEJ;SAEJ,MAAM;YAEH,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,AAAC;YAE3C,IAAK,YAAY,KAAK,SAAS,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAEtD,OAAO,CAAC,KAAK,CAAE,sGAAsG,CAAE,CAAC;SAI/H;KAEJ;IAED,OAAO,CAAE,SAAS,EAAE,WAAU,EAAG;QAE7B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,AAAC;QAErC,IAAK,QAAQ,KAAK,SAAS,EAAG,OAAO;QAErC,0CAA0C;QAE1C,IAAK,QAAQ,CAAC,cAAc,KAAK,IAAI,EAAG,QAAQ,CAAC,qBAAqB,EAAE,CAAC;QAEzE,SAAS,CAAC,IAAI,CAAE,QAAQ,CAAC,cAAc,CAAE,CAAC;QAC1C,SAAS,CAAC,YAAY,CAAE,WAAW,CAAE,CAAC;QAEtC,IAAK,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAE,SAAS,CAAE,KAAK,KAAK,EAAG,OAAO;QAEpE,EAAE;QAEF,gBAAgB,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC,MAAM,EAAE,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAE,SAAS,CAAC,GAAG,CAAE,CAAC,YAAY,CAAE,gBAAgB,CAAE,CAAC;QAE9D,sCAAsC;QAEtC,IAAK,QAAQ,CAAC,WAAW,KAAK,IAAI,EAAG;YAEjC,IAAK,MAAM,CAAC,aAAa,CAAE,QAAQ,CAAC,WAAW,CAAE,KAAK,KAAK,EAAG,OAAO;SAExE;QAED,IAAI,YAAY,AAAC;QAEjB,IAAK,QAAQ,CAAC,gBAAgB,EAAG;YAE7B,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,AAAC;YAC7B,MAAM,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,AAAC;YAC9C,MAAM,aAAa,GAAG,QAAQ,CAAC,eAAe,CAAC,QAAQ,AAAC;YACxD,MAAM,oBAAoB,GAAG,QAAQ,CAAC,oBAAoB,AAAC;YAC3D,MAAM,EAAE,GAAG,QAAQ,CAAC,UAAU,CAAC,EAAE,AAAC;YAClC,MAAM,GAAG,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,AAAC;YACpC,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,AAAC;YAC/B,MAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,AAAC;YAErC,IAAK,KAAK,KAAK,IAAI,EAAG;gBAElB,0BAA0B;gBAE1B,IAAK,KAAK,CAAC,OAAO,CAAE,QAAQ,CAAE,EAE1B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAAG;oBAEhD,MAAM,KAAK,GAAG,MAAM,CAAE,GAAC,CAAE,AAAC;oBAC1B,MAAM,aAAa,GAAG,QAAQ,CAAE,KAAK,CAAC,aAAa,CAAE,AAAC;oBAEtD,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAE,AAAC;oBACvD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAI,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,EAAM,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAI,CAAE,AAAC;oBAEtH,IAAM,IAAI,CAAC,GAAG,KAAK,EAAE,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,CAAG;wBAE5C,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAE,CAAC,CAAE,AAAC;wBAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAE,CAAC,GAAG,CAAC,CAAE,AAAC;wBAC9B,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAE,CAAC,GAAG,CAAC,CAAE,AAAC;wBAE9B,YAAY,GAAG,+BAA+B,CAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,oBAAoB,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;wBAE1J,IAAK,YAAY,EAAG;4BAEhB,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,8CAA8C;4BAC5F,YAAY,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;4BACtD,WAAU,CAAC,IAAI,CAAE,YAAY,CAAE,CAAC;yBAEnC;qBAEJ;iBAEJ;qBAEE;oBAEH,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,SAAS,CAAC,KAAK,CAAE,AAAC;oBAC7C,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,KAAK,EAAI,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAI,AAAC;oBAE3E,IAAM,IAAI,GAAC,GAAG,KAAK,EAAE,EAAE,GAAG,GAAG,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,IAAI,CAAC,CAAG;wBAE5C,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAE,GAAC,CAAE,AAAC;wBAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAE,GAAC,GAAG,CAAC,CAAE,AAAC;wBAC9B,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAE,GAAC,GAAG,CAAC,CAAE,AAAC;wBAE9B,YAAY,GAAG,+BAA+B,CAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,oBAAoB,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;wBAErJ,IAAK,YAAY,EAAG;4BAEhB,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAE,GAAC,GAAG,CAAC,CAAE,CAAC,CAAC,8CAA8C;4BAC5F,WAAU,CAAC,IAAI,CAAE,YAAY,CAAE,CAAC;yBAEnC;qBAEJ;iBAEJ;aAEJ,MAAM,IAAK,QAAQ,KAAK,SAAS,EAAG;gBAEjC,8BAA8B;gBAE9B,IAAK,KAAK,CAAC,OAAO,CAAE,QAAQ,CAAE,EAE1B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAAG;oBAEhD,MAAM,KAAK,GAAG,MAAM,CAAE,GAAC,CAAE,AAAC;oBAC1B,MAAM,aAAa,GAAG,QAAQ,CAAE,KAAK,CAAC,aAAa,CAAE,AAAC;oBAEtD,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAE,AAAC;oBACvD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAI,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,EAAM,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAI,CAAE,AAAC;oBAEzH,IAAM,IAAI,CAAC,GAAG,KAAK,EAAE,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,CAAG;wBAE5C,MAAM,CAAC,GAAG,CAAC,AAAC;wBACZ,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;wBAChB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;wBAEhB,YAAY,GAAG,+BAA+B,CAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,oBAAoB,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;wBAE1J,IAAK,YAAY,EAAG;4BAEhB,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,kDAAkD;4BAChG,YAAY,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;4BACtD,WAAU,CAAC,IAAI,CAAE,YAAY,CAAE,CAAC;yBAEnC;qBAEJ;iBAEJ;qBAEE;oBAEH,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,SAAS,CAAC,KAAK,CAAE,AAAC;oBAC7C,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAC,KAAK,EAAI,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAI,AAAC;oBAE9E,IAAM,IAAI,GAAC,GAAG,KAAK,EAAE,EAAE,GAAG,GAAG,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,IAAI,CAAC,CAAG;wBAE5C,MAAM,CAAC,GAAG,GAAC,AAAC;wBACZ,MAAM,CAAC,GAAG,GAAC,GAAG,CAAC,AAAC;wBAChB,MAAM,CAAC,GAAG,GAAC,GAAG,CAAC,AAAC;wBAEhB,YAAY,GAAG,+BAA+B,CAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,oBAAoB,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;wBAErJ,IAAK,YAAY,EAAG;4BAEhB,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAE,GAAC,GAAG,CAAC,CAAE,CAAC,CAAC,kDAAkD;4BAChG,WAAU,CAAC,IAAI,CAAE,YAAY,CAAE,CAAC;yBAEnC;qBAEJ;iBAEJ;aAEJ;SAEJ,MAAM,IAAK,QAAQ,CAAC,UAAU,EAE3B,OAAO,CAAC,KAAK,CAAE,2FAA2F,CAAE,CAAC;KAIpH;CAEJ;AAED,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;AAE7B,SAAS,iBAAiB,CAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAG;IAE9E,IAAI,SAAS,AAAC;IAEd,IAAK,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAE3B,SAAS,GAAG,GAAG,CAAC,iBAAiB,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,CAAE,CAAC;SAI7D,SAAS,GAAG,GAAG,CAAC,iBAAiB,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE,KAAK,CAAE,CAAC;IAIzF,IAAK,SAAS,KAAK,IAAI,EAAG,OAAO,IAAI,CAAC;IAEtC,uBAAuB,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;IACtC,uBAAuB,CAAC,YAAY,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;IAE3D,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAE,uBAAuB,CAAE,AAAC;IAE5E,IAAK,QAAQ,GAAG,SAAS,CAAC,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,EAAG,OAAO,IAAI,CAAC;IAEzE,OAAO;QACH,QAAQ,EAAE,QAAQ;QAClB,KAAK,EAAE,uBAAuB,CAAC,KAAK,EAAE;QACtC,MAAM,EAAE,MAAM;KACjB,CAAC;CAEL;AAED,SAAS,+BAA+B,CAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,aAAa,EAAE,oBAAoB,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;IAE1I,KAAK,CAAC,mBAAmB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAC;IACzC,KAAK,CAAC,mBAAmB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAC;IACzC,KAAK,CAAC,mBAAmB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAC;IAEzC,MAAM,eAAe,GAAG,MAAM,CAAC,qBAAqB,AAAC;IAErD,IAAK,aAAa,IAAI,eAAe,EAAG;QAEpC,OAAO,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACvB,OAAO,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACvB,OAAO,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEvB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,aAAa,CAAC,MAAM,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAAG;YAEvD,MAAM,SAAS,GAAG,eAAe,CAAE,GAAC,CAAE,AAAC;YACvC,MAAM,cAAc,GAAG,aAAa,CAAE,GAAC,CAAE,AAAC;YAE1C,IAAK,SAAS,KAAK,CAAC,EAAG,SAAS;YAEhC,MAAM,CAAC,mBAAmB,CAAE,cAAc,EAAE,CAAC,CAAE,CAAC;YAChD,MAAM,CAAC,mBAAmB,CAAE,cAAc,EAAE,CAAC,CAAE,CAAC;YAChD,MAAM,CAAC,mBAAmB,CAAE,cAAc,EAAE,CAAC,CAAE,CAAC;YAEhD,IAAK,oBAAoB,EAAG;gBAExB,OAAO,CAAC,eAAe,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;gBAC7C,OAAO,CAAC,eAAe,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;gBAC7C,OAAO,CAAC,eAAe,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;aAEhD,MAAM;gBAEH,OAAO,CAAC,eAAe,CAAE,MAAM,CAAC,GAAG,CAAE,KAAK,CAAE,EAAE,SAAS,CAAE,CAAC;gBAC1D,OAAO,CAAC,eAAe,CAAE,MAAM,CAAC,GAAG,CAAE,KAAK,CAAE,EAAE,SAAS,CAAE,CAAC;gBAC1D,OAAO,CAAC,eAAe,CAAE,MAAM,CAAC,GAAG,CAAE,KAAK,CAAE,EAAE,SAAS,CAAE,CAAC;aAE7D;SAEJ;QAED,KAAK,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;QACrB,KAAK,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;QACrB,KAAK,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;KAExB;IAED,IAAK,MAAM,CAAC,aAAa,EAAG;QAExB,MAAM,CAAC,aAAa,CAAE,CAAC,EAAE,KAAK,CAAE,CAAC;QACjC,MAAM,CAAC,aAAa,CAAE,CAAC,EAAE,KAAK,CAAE,CAAC;QACjC,MAAM,CAAC,aAAa,CAAE,CAAC,EAAE,KAAK,CAAE,CAAC;KAEpC;IAED,MAAM,YAAY,GAAG,iBAAiB,CAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,CAAE,AAAC;IAEpH,IAAK,YAAY,EAAG;QAEhB,IAAK,EAAE,EAAG;YAEN,MAAM,CAAC,mBAAmB,CAAE,EAAE,EAAE,CAAC,CAAE,CAAC;YACpC,MAAM,CAAC,mBAAmB,CAAE,EAAE,EAAE,CAAC,CAAE,CAAC;YACpC,MAAM,CAAC,mBAAmB,CAAE,EAAE,EAAE,CAAC,CAAE,CAAC;YAEpC,YAAY,CAAC,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAE,kBAAkB,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,OAAO,EAAE,CAAE,CAAC;SAEtH;QAED,IAAK,GAAG,EAAG;YAEP,MAAM,CAAC,mBAAmB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAC;YACrC,MAAM,CAAC,mBAAmB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAC;YACrC,MAAM,CAAC,mBAAmB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAC;YAErC,YAAY,CAAC,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAE,kBAAkB,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,OAAO,EAAE,CAAE,CAAC;SAEvH;QAED,MAAM,IAAI,GAAG;YACT,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;YACJ,MAAM,EAAE,IAAI,OAAO,EAAE;YACrB,aAAa,EAAE,CAAC;SACnB,AAAC;QAEF,QAAQ,CAAC,SAAS,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAEvD,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC;KAE5B;IAED,OAAO,YAAY,CAAC;CAEvB;AAED,MAAM,WAAW,SAAS,cAAc;IAEpC,YAAa,MAAK,GAAG,CAAC,EAAE,OAAM,GAAG,CAAC,EAAE,MAAK,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC,EAAE,cAAc,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC,CAAG;QAEtG,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;QAE1B,IAAI,CAAC,UAAU,GAAG;YACd,KAAK,EAAE,MAAK;YACZ,MAAM,EAAE,OAAM;YACd,KAAK,EAAE,MAAK;YACZ,aAAa,EAAE,aAAa;YAC5B,cAAc,EAAE,cAAc;YAC9B,aAAa,EAAE,aAAa;SAC/B,CAAC;QAEF,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,WAAW;QAEX,aAAa,GAAG,IAAI,CAAC,KAAK,CAAE,aAAa,CAAE,CAAC;QAC5C,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,cAAc,CAAE,CAAC;QAC9C,aAAa,GAAG,IAAI,CAAC,KAAK,CAAE,aAAa,CAAE,CAAC;QAE5C,UAAU;QAEV,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,GAAG,GAAG,EAAE,AAAC;QAEf,mBAAmB;QAEnB,IAAI,gBAAgB,GAAG,CAAC,AAAC;QACzB,IAAI,UAAU,GAAG,CAAC,AAAC;QAEnB,sCAAsC;QAEtC,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAG,EAAE,EAAG,EAAE,MAAK,EAAE,OAAM,EAAE,MAAK,EAAE,aAAa,EAAE,cAAc,EAAE,CAAC,CAAE,CAAC,CAAC,KAAK;QACpG,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAG,EAAE,MAAK,EAAE,OAAM,EAAE,CAAE,MAAK,EAAE,aAAa,EAAE,cAAc,EAAE,CAAC,CAAE,CAAC,CAAC,KAAK;QACpG,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,MAAK,EAAE,MAAK,EAAE,OAAM,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAE,CAAC,CAAC,KAAK;QAC/F,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAG,EAAE,MAAK,EAAE,MAAK,EAAE,CAAE,OAAM,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAE,CAAC,CAAC,KAAK;QACnG,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAG,EAAE,MAAK,EAAE,OAAM,EAAE,MAAK,EAAE,aAAa,EAAE,cAAc,EAAE,CAAC,CAAE,CAAC,CAAC,KAAK;QAClG,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAG,EAAE,EAAG,EAAE,MAAK,EAAE,OAAM,EAAE,CAAE,MAAK,EAAE,aAAa,EAAE,cAAc,EAAE,CAAC,CAAE,CAAC,CAAC,KAAK;QAEtG,iBAAiB;QAEjB,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,IAAI,sBAAsB,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;QACxE,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,sBAAsB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAE,CAAC;QAEhE,SAAS,UAAU,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAG;YAE1F,MAAM,YAAY,GAAG,KAAK,GAAG,KAAK,AAAC;YACnC,MAAM,aAAa,GAAG,MAAM,GAAG,KAAK,AAAC;YAErC,MAAM,SAAS,GAAG,KAAK,GAAG,CAAC,AAAC;YAC5B,MAAM,UAAU,GAAG,MAAM,GAAG,CAAC,AAAC;YAC9B,MAAM,SAAS,GAAG,KAAK,GAAG,CAAC,AAAC;YAE5B,MAAM,MAAM,GAAG,KAAK,GAAG,CAAC,AAAC;YACzB,MAAM,MAAM,GAAG,KAAK,GAAG,CAAC,AAAC;YAEzB,IAAI,aAAa,GAAG,CAAC,AAAC;YACtB,IAAI,UAAU,GAAG,CAAC,AAAC;YAEnB,MAAM,MAAM,GAAG,IAAI,OAAO,EAAE,AAAC;YAE7B,qCAAqC;YAErC,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,EAAE,EAAE,EAAG,CAAG;gBAEnC,MAAM,CAAC,GAAG,EAAE,GAAG,aAAa,GAAG,UAAU,AAAC;gBAE1C,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,EAAE,EAAE,EAAG,CAAG;oBAEnC,MAAM,CAAC,GAAG,EAAE,GAAG,YAAY,GAAG,SAAS,AAAC;oBAExC,yCAAyC;oBAEzC,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,IAAI,CAAC;oBACvB,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,IAAI,CAAC;oBACvB,MAAM,CAAE,CAAC,CAAE,GAAG,SAAS,CAAC;oBAExB,oCAAoC;oBAEpC,QAAQ,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC;oBAE9C,yCAAyC;oBAEzC,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;oBAChB,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;oBAChB,MAAM,CAAE,CAAC,CAAE,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,EAAG,CAAC;oBAElC,oCAAoC;oBAEpC,OAAO,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC;oBAE7C,MAAM;oBAEN,GAAG,CAAC,IAAI,CAAE,EAAE,GAAG,KAAK,CAAE,CAAC;oBACvB,GAAG,CAAC,IAAI,CAAE,CAAC,GAAK,EAAE,GAAG,KAAK,AAAE,CAAE,CAAC;oBAE/B,WAAW;oBAEX,aAAa,IAAI,CAAC,CAAC;iBAEtB;aAEJ;YAED,UAAU;YAEV,kDAAkD;YAClD,4CAA4C;YAC5C,0DAA0D;YAE1D,IAAM,IAAI,GAAE,GAAG,CAAC,EAAE,GAAE,GAAG,KAAK,EAAE,GAAE,EAAG,CAE/B,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,EAAG,CAAG;gBAElC,MAAM,CAAC,GAAG,gBAAgB,GAAG,EAAE,GAAG,MAAM,GAAG,GAAE,AAAC;gBAC9C,MAAM,CAAC,GAAG,gBAAgB,GAAG,EAAE,GAAG,MAAM,GAAK,CAAA,GAAE,GAAG,CAAC,CAAA,AAAE,AAAC;gBACtD,MAAM,CAAC,GAAG,gBAAgB,GAAK,CAAA,EAAE,GAAG,CAAC,CAAA,GAAK,MAAM,GAAK,CAAA,GAAE,GAAG,CAAC,CAAA,AAAE,AAAC;gBAC9D,MAAM,CAAC,GAAG,gBAAgB,GAAK,CAAA,EAAE,GAAG,CAAC,CAAA,GAAK,MAAM,GAAG,GAAE,AAAC;gBAEtD,QAAQ;gBAER,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACxB,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBAExB,mBAAmB;gBAEnB,UAAU,IAAI,CAAC,CAAC;aAEnB;YAIL,uEAAuE;YAEvE,KAAK,CAAC,QAAQ,CAAE,UAAU,EAAE,UAAU,EAAE,aAAa,CAAE,CAAC;YAExD,uCAAuC;YAEvC,UAAU,IAAI,UAAU,CAAC;YAEzB,kCAAkC;YAElC,gBAAgB,IAAI,aAAa,CAAC;SAErC;KAEJ;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,WAAW,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAE,CAAC;KAE9H;CAEJ;AAED;;IAEG,CAEH,SAAS,aAAa,CAAE,GAAG,EAAG;IAE1B,MAAM,GAAG,GAAG,EAAE,AAAC;IAEf,IAAM,MAAM,CAAC,IAAI,GAAG,CAAG;QAEnB,GAAG,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC;QAEd,IAAM,MAAM,CAAC,IAAI,GAAG,CAAE,CAAC,CAAE,CAAG;YAExB,MAAM,QAAQ,GAAG,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC,CAAE,AAAC;YAE/B,IAAK,QAAQ,IAAM,CAAA,QAAQ,CAAC,OAAO,IAC/B,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,SAAS,IACxC,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,SAAS,IAC9D,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,YAAY,CAAA,AAAE,EAE7C,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC,CAAE,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;iBAE9B,IAAK,KAAK,CAAC,OAAO,CAAE,QAAQ,CAAE,EAEjC,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC,CAAE,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;iBAIjC,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC,CAAE,GAAG,QAAQ,CAAC;SAIhC;KAEJ;IAED,OAAO,GAAG,CAAC;CAEd;AAED,SAAS,aAAa,CAAE,QAAQ,EAAG;IAE/B,MAAM,MAAM,GAAG,EAAE,AAAC;IAElB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAG,CAAG;QAEzC,MAAM,IAAG,GAAG,aAAa,CAAE,QAAQ,CAAE,CAAC,CAAE,CAAE,AAAC;QAE3C,IAAM,MAAM,CAAC,IAAI,IAAG,CAEhB,MAAM,CAAE,CAAC,CAAE,GAAG,IAAG,CAAE,CAAC,CAAE,CAAC;KAI9B;IAED,OAAO,MAAM,CAAC;CAEjB;AAED,SAAS;AAET,MAAM,aAAa,GAAG;IAAE,KAAK,EAAE,aAAa;IAAE,KAAK,EAAE,aAAa;CAAE,AAAC;AAErE,IAAI,cAAc,GAAG,+FAA+F,AAAC;AAErH,IAAI,gBAAgB,GAAG,gEAAgE,AAAC;AAExF,MAAM,cAAc,SAAS,QAAQ;IAEjC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;QAE7B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;QAEvC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAE5B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,uBAAuB;QACzC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,0BAA0B;QAC/C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,0CAA0C;QAEjE,IAAI,CAAC,UAAU,GAAG;YACd,WAAW,EAAE,KAAK;YAClB,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,KAAK;YAClB,gBAAgB,EAAE,KAAK,CAAC,gCAAgC;SAC3D,CAAC;QAEF,iFAAiF;QACjF,qFAAqF;QACrF,IAAI,CAAC,sBAAsB,GAAG;YAC1B,OAAO,EAAE;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;aAAE;YACpB,IAAI,EAAE;AAAE,iBAAC;AAAE,iBAAC;aAAE;YACd,KAAK,EAAE;AAAE,iBAAC;AAAE,iBAAC;aAAE;SAClB,CAAC;QAEF,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;QACrC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAEhC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAK,UAAU,KAAK,SAAS,EAAG;YAE5B,IAAK,UAAU,CAAC,UAAU,KAAK,SAAS,EAEpC,OAAO,CAAC,KAAK,CAAE,yFAAyF,CAAE,CAAC;YAI/G,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;SAEhC;KAEJ;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QAExC,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAE,MAAM,CAAC,QAAQ,CAAE,CAAC;QAEjD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,MAAM,CAAC,OAAO,CAAE,CAAC;QAEnD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QAEpD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,MAAM,CAAC,UAAU,CAAE,CAAC;QAEzD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAE,IAAI,CAAE,AAAC;QAElC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,IAAM,MAAM,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAG;YAEhC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,AAAC;YACtC,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,AAAC;YAE5B,IAAK,KAAK,IAAI,KAAK,CAAC,SAAS,EAEzB,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,GAAG;gBACpB,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,KAAK,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC,IAAI;aACnC,CAAC;iBAEC,IAAK,KAAK,IAAI,KAAK,CAAC,OAAO,EAE9B,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,GAAG;gBACpB,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE;aACxB,CAAC;iBAEC,IAAK,KAAK,IAAI,KAAK,CAAC,SAAS,EAEhC,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,GAAG;gBACpB,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE;aACzB,CAAC;iBAEC,IAAK,KAAK,IAAI,KAAK,CAAC,SAAS,EAEhC,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,GAAG;gBACpB,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE;aACzB,CAAC;iBAEC,IAAK,KAAK,IAAI,KAAK,CAAC,SAAS,EAEhC,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,GAAG;gBACpB,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE;aACzB,CAAC;iBAEC,IAAK,KAAK,IAAI,KAAK,CAAC,SAAS,EAEhC,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,GAAG;gBACpB,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE;aACzB,CAAC;iBAEC,IAAK,KAAK,IAAI,KAAK,CAAC,SAAS,EAEhC,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,GAAG;gBACpB,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE;aACzB,CAAC;iBAIF,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,GAAG;gBACpB,KAAK,EAAE,KAAK;aACf,CAAC;SAMT;QAED,IAAK,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,OAAO,CAAE,CAAC,MAAM,GAAG,CAAC,EAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAE1E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAE1C,MAAM,UAAU,GAAG,EAAE,AAAC;QAEtB,IAAM,MAAM,GAAG,IAAI,IAAI,CAAC,UAAU,CAE9B,IAAK,IAAI,CAAC,UAAU,CAAE,GAAG,CAAE,KAAK,IAAI,EAAG,UAAU,CAAE,GAAG,CAAE,GAAG,IAAI,CAAC;QAIpE,IAAK,MAAM,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC,MAAM,GAAG,CAAC,EAAG,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAEzE,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,cAAc,CAAC,SAAS,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAEjD,MAAM,MAAM,SAAS,QAAQ;IAEzB,aAAc;QAEV,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QAErB,IAAI,CAAC,kBAAkB,GAAG,IAAI,OAAO,EAAE,CAAC;QAExC,IAAI,CAAC,gBAAgB,GAAG,IAAI,OAAO,EAAE,CAAC;QACtC,IAAI,CAAC,uBAAuB,GAAG,IAAI,OAAO,EAAE,CAAC;KAEhD;IAED,IAAI,CAAE,MAAM,EAAE,SAAS,EAAG;QAEtB,KAAK,CAAC,IAAI,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;QAEhC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAE,MAAM,CAAC,kBAAkB,CAAE,CAAC;QAE1D,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAE,MAAM,CAAC,gBAAgB,CAAE,CAAC;QACtD,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAE,MAAM,CAAC,uBAAuB,CAAE,CAAC;QAEpE,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,CAAE,MAAM,EAAG;QAExB,IAAI,CAAC,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;QAEtC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,AAAC;QAEpC,OAAO,MAAM,CAAC,GAAG,CAAE,CAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAE,CAAC,CAAE,EAAE,CAAE,CAAE,CAAC,SAAS,EAAE,CAAC;KAElE;IAED,iBAAiB,CAAE,KAAK,EAAG;QAEvB,KAAK,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAC;QAEjC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC,MAAM,EAAE,CAAC;KAE7D;IAED,iBAAiB,CAAE,aAAa,EAAE,cAAc,EAAG;QAE/C,KAAK,CAAC,iBAAiB,CAAE,aAAa,EAAE,cAAc,CAAE,CAAC;QAEzD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC,MAAM,EAAE,CAAC;KAE7D;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;CAEJ;AAED,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;AAEjC,MAAM,iBAAiB,SAAS,MAAM;IAElC,YAAa,IAAG,GAAG,EAAE,EAAE,OAAM,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAG;QAExD,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;QAEhC,IAAI,CAAC,GAAG,GAAG,IAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAEd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,CAAC,MAAM,GAAG,OAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC,6CAA6C;QAClE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,8CAA8C;QAEnE,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAEjC;IAED,IAAI,CAAE,MAAM,EAAE,SAAS,EAAG;QAEtB,KAAK,CAAC,IAAI,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;QAEhC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QAExB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAE1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAE,CAAC;QAE3E,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QAEpC,OAAO,IAAI,CAAC;KAEf;IAED;;;;;;;QAOG,CACH,cAAc,CAAE,WAAW,EAAG;QAE1B,oFAAoF,CACpF,MAAM,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,WAAW,AAAC;QAE9D,IAAI,CAAC,GAAG,GAAG,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAE,YAAY,CAAE,CAAC;QACnD,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAEjC;IAED;;QAEG,CACH,cAAc,GAAG;QAEb,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAE,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,AAAC;QAE1D,OAAO,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,YAAY,CAAC;KAEpD;IAED,eAAe,GAAG;QAEd,OAAO,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAC1B,IAAI,CAAC,GAAG,CAAE,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,GAAG,IAAI,CAAC,IAAI,CAAE,CAAC;KAE1D;IAED,YAAY,GAAG;QAEX,8DAA8D;QAC9D,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAE,CAAC;KAEtD;IAED,aAAa,GAAG;QAEZ,+DAA+D;QAC/D,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAE,CAAC;KAEtD;IAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAkCG,CACH,aAAa,CAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAG;QAExD,IAAI,CAAC,MAAM,GAAG,SAAS,GAAG,UAAU,CAAC;QAErC,IAAK,IAAI,CAAC,IAAI,KAAK,IAAI,EAEnB,IAAI,CAAC,IAAI,GAAG;YACR,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,CAAC;YACZ,UAAU,EAAE,CAAC;YACb,OAAO,EAAE,CAAC;YACV,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;SACZ,CAAC;QAIN,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAE1B,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAEjC;IAED,eAAe,GAAG;QAEd,IAAK,IAAI,CAAC,IAAI,KAAK,IAAI,EAEnB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAI9B,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAEjC;IAED,sBAAsB,GAAG;QAErB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,AAAC;QACvB,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAE,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,GAAG,IAAI,CAAC,IAAI,AAAC;QAClE,IAAI,MAAM,GAAG,CAAC,GAAG,GAAG,AAAC;QACrB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,AAAC;QACjC,IAAI,IAAI,GAAG,IAAK,GAAG,KAAK,AAAC;QACzB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,AAAC;QAEvB,IAAK,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAG;YAE3C,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,EAC5B,UAAU,GAAG,IAAI,CAAC,UAAU,AAAC;YAEjC,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,KAAK,GAAG,SAAS,CAAC;YACzC,GAAG,IAAI,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,UAAU,CAAC;YAC1C,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;YAChC,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;SAEtC;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,AAAC;QAC7B,IAAK,IAAI,KAAK,CAAC,EAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAE5D,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAE,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE,GAAG,EAAE,GAAG,GAAG,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC;QAE/F,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC,MAAM,EAAE,CAAC;KAEvE;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAE,IAAI,CAAE,AAAC;QAElC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAE7B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAE/B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAEjC,IAAK,IAAI,CAAC,IAAI,KAAK,IAAI,EAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAE5E,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAEzC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAEvD,MAAM,GAAG,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,AAAC;AAE3B,MAAM,UAAU,SAAS,QAAQ;IAE7B,YAAa,IAAI,EAAE,GAAG,EAAE,YAAY,CAAG;QAEnC,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;QAEzB,IAAK,YAAY,CAAC,uBAAuB,KAAK,IAAI,EAAG;YAEjD,OAAO,CAAC,KAAK,CAAE,wGAAwG,CAAE,CAAC;YAC1H,OAAO;SAEV;QAED,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QAEjC,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAE,AAAC;QACjE,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,EAAE,EAAG,EAAE,CAAC,CAAE,CAAC;QAC7B,QAAQ,CAAC,MAAM,CAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QAErB,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAE,AAAC;QACjE,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,EAAE,EAAG,EAAE,CAAC,CAAE,CAAC;QAC7B,QAAQ,CAAC,MAAM,CAAE,IAAI,OAAO,CAAE,EAAG,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE,CAAC;QAC5C,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QAErB,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAE,AAAC;QACjE,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC3B,QAAQ,CAAC,MAAM,CAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QAErB,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAE,AAAC;QACjE,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE,CAAC;QAC7B,QAAQ,CAAC,MAAM,CAAE,IAAI,OAAO,CAAE,CAAC,EAAE,EAAG,EAAE,CAAC,CAAE,CAAE,CAAC;QAC5C,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QAErB,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAE,AAAC;QACjE,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,EAAE,EAAG,EAAE,CAAC,CAAE,CAAC;QAC7B,QAAQ,CAAC,MAAM,CAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QAErB,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAE,AAAC;QACjE,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,EAAE,EAAG,EAAE,CAAC,CAAE,CAAC;QAC7B,QAAQ,CAAC,MAAM,CAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE,CAAE,CAAC;QAC5C,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;KAExB;IAED,MAAM,CAAE,QAAQ,EAAE,KAAK,EAAG;QAEtB,IAAK,IAAI,CAAC,MAAM,KAAK,IAAI,EAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAErD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,AAAC;QAEvC,MAAM,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAE,GAAG,IAAI,CAAC,QAAQ,AAAC;QAErF,MAAM,mBAAmB,GAAG,QAAQ,CAAC,eAAe,EAAE,AAAC;QAEvD,MAAM,qBAAqB,GAAG,QAAQ,CAAC,cAAc,AAAC;QACtD,MAAM,kBAAkB,GAAG,QAAQ,CAAC,WAAW,AAAC;QAChD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,EAAE,CAAC,OAAO,AAAC;QAE7C,QAAQ,CAAC,cAAc,GAAG,cAAc,CAAC;QACzC,QAAQ,CAAC,WAAW,GAAG,aAAa,CAAC;QACrC,QAAQ,CAAC,EAAE,CAAC,OAAO,GAAG,KAAK,CAAC;QAE5B,MAAM,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,AAAC;QAE7D,YAAY,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;QAE7C,QAAQ,CAAC,eAAe,CAAE,YAAY,EAAE,CAAC,CAAE,CAAC;QAC5C,QAAQ,CAAC,MAAM,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;QAEnC,QAAQ,CAAC,eAAe,CAAE,YAAY,EAAE,CAAC,CAAE,CAAC;QAC5C,QAAQ,CAAC,MAAM,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;QAEnC,QAAQ,CAAC,eAAe,CAAE,YAAY,EAAE,CAAC,CAAE,CAAC;QAC5C,QAAQ,CAAC,MAAM,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;QAEnC,QAAQ,CAAC,eAAe,CAAE,YAAY,EAAE,CAAC,CAAE,CAAC;QAC5C,QAAQ,CAAC,MAAM,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;QAEnC,QAAQ,CAAC,eAAe,CAAE,YAAY,EAAE,CAAC,CAAE,CAAC;QAC5C,QAAQ,CAAC,MAAM,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;QAEnC,YAAY,CAAC,OAAO,CAAC,eAAe,GAAG,eAAe,CAAC;QAEvD,QAAQ,CAAC,eAAe,CAAE,YAAY,EAAE,CAAC,CAAE,CAAC;QAC5C,QAAQ,CAAC,MAAM,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;QAEnC,QAAQ,CAAC,eAAe,CAAE,mBAAmB,CAAE,CAAC;QAEhD,QAAQ,CAAC,cAAc,GAAG,qBAAqB,CAAC;QAChD,QAAQ,CAAC,WAAW,GAAG,kBAAkB,CAAC;QAC1C,QAAQ,CAAC,EAAE,CAAC,OAAO,GAAG,gBAAgB,CAAC;QAEvC,YAAY,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAEhD;CAEJ;AAED,MAAM,WAAW,SAAS,OAAO;IAE7B,YAAa,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAG;QAEnG,MAAM,GAAG,MAAM,KAAK,SAAS,GAAG,MAAM,GAAG,EAAE,CAAC;QAC5C,OAAO,GAAG,OAAO,KAAK,SAAS,GAAG,OAAO,GAAG,qBAAqB,CAAC;QAElE,KAAK,CAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAE,CAAC;QAEjG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KAEtB;IAED,IAAI,MAAM,GAAG;QAET,OAAO,IAAI,CAAC,KAAK,CAAC;KAErB;IAED,IAAI,MAAM,CAAE,KAAK,EAAG;QAEhB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KAEtB;CAEJ;AAED,WAAW,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;AAE3C,MAAM,qBAAqB,SAAS,iBAAiB;IAEjD,YAAa,IAAI,EAAE,OAAO,GAAG,EAAE,CAAG;QAE9B,KAAK,CAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAE,CAAC;QAE7B,MAAM,KAAK,GAAG;YAAE,KAAK,EAAE,IAAI;YAAE,MAAM,EAAE,IAAI;YAAE,KAAK,EAAE,CAAC;SAAE,AAAC;QACtD,MAAM,MAAM,GAAG;YAAE,KAAK;YAAE,KAAK;YAAE,KAAK;YAAE,KAAK;YAAE,KAAK;YAAE,KAAK;SAAE,AAAC;QAE5D,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAE,MAAM,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,QAAQ,CAAE,CAAC;QAElM,yHAAyH;QACzH,oHAAoH;QACpH,0HAA0H;QAE1H,wHAAwH;QACxH,iIAAiI;QACjI,oGAAoG;QAEpG,IAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAE1C,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,KAAK,SAAS,GAAG,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;QACvG,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,KAAK,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,YAAY,CAAC;KAE/F;IAED,0BAA0B,CAAE,QAAQ,EAAE,OAAO,EAAG;QAE5C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAEzC,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;QACvD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QAE3C,MAAM,MAAM,GAAG;YAEX,QAAQ,EAAE;gBACN,SAAS,EAAE;oBAAE,KAAK,EAAE,IAAI;iBAAE;aAC7B;YAED,YAAY,EAAE,UAAU,CAAA,CAAC;;;;;;;;;;;;;;;;;;aAkBzB,CAAC;YAED,cAAc,EAAE,UAAU,CAAA,CAAC;;;;;;;;;;;;;;;;;aAiB3B,CAAC;SACJ,AAAC;QAEF,MAAM,QAAQ,GAAG,IAAI,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,AAAC;QAE5C,MAAM,QAAQ,GAAG,IAAI,cAAc,CAAE;YAEjC,IAAI,EAAE,qBAAqB;YAE3B,QAAQ,EAAE,aAAa,CAAE,MAAM,CAAC,QAAQ,CAAE;YAC1C,YAAY,EAAE,MAAM,CAAC,YAAY;YACjC,cAAc,EAAE,MAAM,CAAC,cAAc;YACrC,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,UAAU;SAEvB,CAAE,AAAC;QAEJ,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC;QAE5C,MAAM,IAAI,GAAG,IAAI,IAAI,CAAE,QAAQ,EAAE,QAAQ,CAAE,AAAC;QAE5C,MAAM,gBAAgB,GAAG,OAAO,CAAC,SAAS,AAAC;QAE3C,sBAAsB;QACtB,IAAK,OAAO,CAAC,SAAS,KAAK,wBAAwB,EAAG,OAAO,CAAC,SAAS,GAAG,YAAY,CAAC;QAEvF,MAAM,MAAM,GAAG,IAAI,UAAU,CAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAE,AAAC;QAC7C,MAAM,CAAC,MAAM,CAAE,QAAQ,EAAE,IAAI,CAAE,CAAC;QAEhC,OAAO,CAAC,SAAS,GAAG,gBAAgB,CAAC;QAErC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAExB,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAG;QAErC,MAAM,mBAAmB,GAAG,QAAQ,CAAC,eAAe,EAAE,AAAC;QAEvD,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE3B,QAAQ,CAAC,eAAe,CAAE,IAAI,EAAE,GAAC,CAAE,CAAC;YAEpC,QAAQ,CAAC,KAAK,CAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAE,CAAC;SAE3C;QAED,QAAQ,CAAC,eAAe,CAAE,mBAAmB,CAAE,CAAC;KAEnD;CAEJ;AAED,qBAAqB,CAAC,SAAS,CAAC,uBAAuB,GAAG,IAAI,CAAC;AAE/D,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC7C,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC7C,MAAM,aAAa,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAElD,MAAM,KAAK;IAEP,YAAa,MAAM,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,QAAQ,GAAG,CAAC,CAAG;QAEzD,qCAAqC;QAErC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAE5B;IAED,GAAG,CAAE,MAAM,EAAE,QAAQ,EAAG;QAEpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAExB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAElB,OAAO,IAAI,CAAC;KAEf;IAED,6BAA6B,CAAE,MAAM,EAAE,KAAK,EAAG;QAE3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,CAAE,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAE3C,OAAO,IAAI,CAAC;KAEf;IAED,qBAAqB,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAE7B,MAAM,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC,KAAK,CAAE,QAAQ,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE,CAAC,SAAS,EAAE,AAAC;QAE5F,0EAA0E;QAE1E,IAAI,CAAC,6BAA6B,CAAE,MAAM,EAAE,CAAC,CAAE,CAAC;QAEhD,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,KAAK,EAAG;QAEV,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,MAAM,CAAE,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAE/B,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,GAAG;QAER,+DAA+D;QAE/D,MAAM,mBAAmB,GAAG,CAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,AAAC;QACvD,IAAI,CAAC,MAAM,CAAC,cAAc,CAAE,mBAAmB,CAAE,CAAC;QAClD,IAAI,CAAC,QAAQ,IAAI,mBAAmB,CAAC;QAErC,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,IAAI,CAAC,QAAQ,IAAI,EAAG,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QAErB,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,CAAE,KAAK,EAAG;QAErB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,KAAK,CAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;KAEnD;IAED,gBAAgB,CAAE,MAAM,EAAG;QAEvB,OAAO,IAAI,CAAC,eAAe,CAAE,MAAM,CAAC,MAAM,CAAE,GAAG,MAAM,CAAC,MAAM,CAAC;KAEhE;IAED,YAAY,CAAE,KAAK,EAAE,MAAM,EAAG;QAE1B,OAAO,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC,cAAc,CAAE,CAAE,IAAI,CAAC,eAAe,CAAE,KAAK,CAAE,CAAE,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;KAEpG;IAED,aAAa,CAAE,IAAI,EAAE,MAAM,EAAG;QAE1B,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAE,QAAQ,CAAE,AAAC;QAEzC,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,SAAS,CAAE,AAAC;QAEjD,IAAK,WAAW,KAAK,CAAC,EAAG;YAErB,kCAAkC;YAClC,IAAK,IAAI,CAAC,eAAe,CAAE,IAAI,CAAC,KAAK,CAAE,KAAK,CAAC,EAEzC,OAAO,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;YAIrC,4DAA4D;YAC5D,OAAO,IAAI,CAAC;SAEf;QAED,MAAM,CAAC,GAAG,CAAI,CAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,MAAM,CAAE,GAAG,IAAI,CAAC,QAAQ,CAAA,AAAE,GAAG,WAAW,AAAC;QAE5E,IAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAEf,OAAO,IAAI,CAAC;QAIhB,OAAO,MAAM,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC,cAAc,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;KAEzE;IAED,cAAc,CAAE,IAAI,EAAG;QAEnB,4GAA4G;QAE5G,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAE,IAAI,CAAC,KAAK,CAAE,AAAC;QACrD,MAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAE,IAAI,CAAC,GAAG,CAAE,AAAC;QAEjD,OAAO,AAAE,SAAS,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,IAAQ,OAAO,GAAG,CAAC,IAAI,SAAS,GAAG,CAAC,AAAE,CAAC;KAE/E;IAED,aAAa,CAAE,GAAG,EAAG;QAEjB,OAAO,GAAG,CAAC,eAAe,CAAE,IAAI,CAAE,CAAC;KAEtC;IAED,gBAAgB,CAAE,MAAM,EAAG;QAEvB,OAAO,MAAM,CAAC,eAAe,CAAE,IAAI,CAAE,CAAC;KAEzC;IAED,aAAa,CAAE,MAAM,EAAG;QAEpB,OAAO,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC,cAAc,CAAE,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;KAEvE;IAED,YAAY,CAAE,MAAM,EAAE,oBAAoB,EAAG;QAEzC,MAAM,YAAY,GAAG,oBAAoB,IAAI,aAAa,CAAC,eAAe,CAAE,MAAM,CAAE,AAAC;QAErF,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAE,QAAQ,CAAE,CAAC,YAAY,CAAE,MAAM,CAAE,AAAC;QAE7E,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAE,YAAY,CAAE,CAAC,SAAS,EAAE,AAAC;QAEpE,IAAI,CAAC,QAAQ,GAAG,CAAE,cAAc,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;QAE/C,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAE3C,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,KAAK,EAAG;QAEZ,OAAO,KAAK,CAAC,MAAM,CAAC,MAAM,CAAE,IAAI,CAAC,MAAM,CAAE,IAAM,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,AAAE,CAAC;KAErF;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;CAEJ;AAED,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;AAE/B,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,MAAM,EAAE,AAAC;AAC7C,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE9C,MAAM,OAAO;IAET,YAAa,EAAE,GAAG,IAAI,KAAK,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK,EAAE,CAAG;QAEtH,IAAI,CAAC,MAAM,GAAG;YAAE,EAAE;YAAE,EAAE;YAAE,EAAE;YAAE,EAAE;YAAE,EAAE;YAAE,EAAE;SAAE,CAAC;KAE5C;IAED,GAAG,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG;QAE1B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,MAAM,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;QACvB,MAAM,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;QACvB,MAAM,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;QACvB,MAAM,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;QACvB,MAAM,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;QACvB,MAAM,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;QAEvB,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,OAAO,EAAG;QAEZ,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAExB,MAAM,CAAE,GAAC,CAAE,CAAC,IAAI,CAAE,OAAO,CAAC,MAAM,CAAE,GAAC,CAAE,CAAE,CAAC;QAI5C,OAAO,IAAI,CAAC;KAEf;IAED,uBAAuB,CAAE,CAAC,EAAG;QAEzB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAC3B,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,AAAC;QACtB,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,AAAC;QACjE,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,AAAC;QACjE,MAAM,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,EAAE,IAAI,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,IAAI,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QACrE,MAAM,IAAI,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,IAAI,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,IAAI,GAAG,EAAE,CAAE,EAAE,CAAE,EAAE,IAAI,GAAG,EAAE,CAAE,EAAE,CAAE,AAAC;QAEzE,MAAM,CAAE,CAAC,CAAE,CAAC,aAAa,CAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,CAAE,CAAC,SAAS,EAAE,CAAC;QACvF,MAAM,CAAE,CAAC,CAAE,CAAC,aAAa,CAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,CAAE,CAAC,SAAS,EAAE,CAAC;QACvF,MAAM,CAAE,CAAC,CAAE,CAAC,aAAa,CAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,CAAE,CAAC,SAAS,EAAE,CAAC;QACvF,MAAM,CAAE,CAAC,CAAE,CAAC,aAAa,CAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,CAAE,CAAC,SAAS,EAAE,CAAC;QACvF,MAAM,CAAE,CAAC,CAAE,CAAC,aAAa,CAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAE,CAAC,SAAS,EAAE,CAAC;QACxF,MAAM,CAAE,CAAC,CAAE,CAAC,aAAa,CAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAE,CAAC,SAAS,EAAE,CAAC;QAExF,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,CAAE,MAAM,EAAG;QAEvB,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;QAEjC,IAAK,QAAQ,CAAC,cAAc,KAAK,IAAI,EAAG,QAAQ,CAAC,qBAAqB,EAAE,CAAC;QAEzE,SAAS,CAAC,IAAI,CAAE,QAAQ,CAAC,cAAc,CAAE,CAAC,YAAY,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;QAE7E,OAAO,IAAI,CAAC,gBAAgB,CAAE,SAAS,CAAE,CAAC;KAE7C;IAED,gBAAgB,CAAE,MAAM,EAAG;QAEvB,SAAS,CAAC,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAChC,SAAS,CAAC,MAAM,GAAG,kBAAkB,CAAC;QACtC,SAAS,CAAC,YAAY,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;QAE7C,OAAO,IAAI,CAAC,gBAAgB,CAAE,SAAS,CAAE,CAAC;KAE7C;IAED,gBAAgB,CAAE,MAAM,EAAG;QAEvB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAC3B,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,AAAC;QAC7B,MAAM,SAAS,GAAG,CAAE,MAAM,CAAC,MAAM,AAAC;QAElC,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE3B,MAAM,QAAQ,GAAG,MAAM,CAAE,GAAC,CAAE,CAAC,eAAe,CAAE,MAAM,CAAE,AAAC;YAEvD,IAAK,QAAQ,GAAG,SAAS,EAErB,OAAO,KAAK,CAAC;SAIpB;QAED,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,GAAG,EAAG;QAEjB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE3B,MAAM,KAAK,GAAG,MAAM,CAAE,GAAC,CAAE,AAAC;YAE1B,yBAAyB;YAEzB,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACzD,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACzD,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAEzD,IAAK,KAAK,CAAC,eAAe,CAAE,SAAS,CAAE,GAAG,CAAC,EAEvC,OAAO,KAAK,CAAC;SAIpB;QAED,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,KAAK,EAAG;QAEnB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE3B,IAAK,MAAM,CAAE,GAAC,CAAE,CAAC,eAAe,CAAE,KAAK,CAAE,GAAG,CAAC,EAEzC,OAAO,KAAK,CAAC;SAIpB;QAED,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;CAEJ;AAED,SAAS,cAAc,GAAG;IAEtB,IAAI,OAAO,GAAG,IAAI,AAAC;IACnB,IAAI,WAAW,GAAG,KAAK,AAAC;IACxB,IAAI,aAAa,GAAG,IAAI,AAAC;IACzB,IAAI,SAAS,GAAG,IAAI,AAAC;IAErB,SAAS,gBAAgB,CAAE,IAAI,EAAE,KAAK,EAAG;QAErC,aAAa,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;QAE7B,SAAS,GAAG,OAAO,CAAC,qBAAqB,CAAE,gBAAgB,CAAE,CAAC;KAEjE;IAED,OAAO;QAEH,KAAK,EAAE,WAAY;YAEf,IAAK,WAAW,KAAK,IAAI,EAAG,OAAO;YACnC,IAAK,aAAa,KAAK,IAAI,EAAG,OAAO;YAErC,SAAS,GAAG,OAAO,CAAC,qBAAqB,CAAE,gBAAgB,CAAE,CAAC;YAE9D,WAAW,GAAG,IAAI,CAAC;SAEtB;QAED,IAAI,EAAE,WAAY;YAEd,OAAO,CAAC,oBAAoB,CAAE,SAAS,CAAE,CAAC;YAE1C,WAAW,GAAG,KAAK,CAAC;SAEvB;QAED,gBAAgB,EAAE,SAAW,QAAQ,EAAG;YAEpC,aAAa,GAAG,QAAQ,CAAC;SAE5B;QAED,UAAU,EAAE,SAAW,KAAK,EAAG;YAE3B,OAAO,GAAG,KAAK,CAAC;SAEnB;KAEJ,CAAC;CAEL;AAED,SAAS,eAAe,CAAE,EAAE,EAAE,YAAY,EAAG;IAEzC,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,AAAC;IAEvC,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,AAAC;IAE9B,SAAS,YAAY,CAAE,SAAS,EAAE,UAAU,EAAG;QAE3C,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,AAAC;QAC9B,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,AAAC;QAE9B,MAAM,MAAM,GAAG,EAAE,CAAC,YAAY,EAAE,AAAC;QAEjC,EAAE,CAAC,UAAU,CAAE,UAAU,EAAE,MAAM,CAAE,CAAC;QACpC,EAAE,CAAC,UAAU,CAAE,UAAU,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC;QAE1C,SAAS,CAAC,gBAAgB,EAAE,CAAC;QAE7B,IAAI,IAAI,AAAC;QAET,IAAK,KAAK,YAAY,YAAY,EAE9B,IAAI,GAAG,IAAI,CAAC;aAET,IAAK,KAAK,YAAY,WAAW;YAEpC,IAAK,SAAS,CAAC,wBAAwB,EAAG;gBAEtC,IAAK,QAAQ,EAET,IAAI,GAAG,IAAI,CAAC;qBAIZ,MAAM,IAAI,KAAK,CAAE,yEAAyE,CAAE,CAAC;aAIpG,MAEG,IAAI,GAAG,IAAI,CAAC;eAIb,IAAK,KAAK,YAAY,UAAU,EAEnC,IAAI,GAAG,IAAI,CAAC;aAET,IAAK,KAAK,YAAY,WAAW,EAEpC,IAAI,GAAG,IAAI,CAAC;aAET,IAAK,KAAK,YAAY,UAAU,EAEnC,IAAI,GAAG,IAAI,CAAC;aAET,IAAK,KAAK,YAAY,SAAS,EAElC,IAAI,GAAG,IAAI,CAAC;aAET,IAAK,KAAK,YAAY,UAAU,EAEnC,IAAI,GAAG,IAAI,CAAC;aAET,IAAK,KAAK,YAAY,iBAAiB,EAE1C,IAAI,GAAG,IAAI,CAAC;aAIZ,MAAM,IAAI,KAAK,CAAE,yDAAyD,GAAG,KAAK,CAAE,CAAC;QAIzF,OAAO;YACH,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI;YACV,eAAe,EAAE,KAAK,CAAC,iBAAiB;YACxC,OAAO,EAAE,SAAS,CAAC,OAAO;SAC7B,CAAC;KAEL;IAED,SAAS,YAAY,CAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAG;QAEnD,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,AAAC;QAC9B,MAAM,WAAW,GAAG,SAAS,CAAC,WAAW,AAAC;QAE1C,EAAE,CAAC,UAAU,CAAE,UAAU,EAAE,MAAM,CAAE,CAAC;QAEpC,IAAK,WAAW,CAAC,KAAK,KAAK,EAAG,EAE1B,0BAA0B;QAE1B,EAAE,CAAC,aAAa,CAAE,UAAU,EAAE,CAAC,EAAE,KAAK,CAAE,CAAC;aAEtC;YAEH,IAAK,QAAQ,EAET,EAAE,CAAC,aAAa,CAAE,UAAU,EAAE,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC,iBAAiB,EACtE,KAAK,EAAE,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,KAAK,CAAE,CAAC;iBAInD,EAAE,CAAC,aAAa,CAAE,UAAU,EAAE,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC,iBAAiB,EACtE,KAAK,CAAC,QAAQ,CAAE,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC,KAAK,CAAE,CAAE,CAAC;YAIvF,WAAW,CAAC,KAAK,GAAG,EAAG,CAAC,CAAC,cAAc;SAE1C;KAEJ;IAED,EAAE;IAEF,SAAS,GAAG,CAAE,SAAS,EAAG;QAEtB,IAAK,SAAS,CAAC,4BAA4B,EAAG,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC;QAEzE,OAAO,OAAO,CAAC,GAAG,CAAE,SAAS,CAAE,CAAC;KAEnC;IAED,SAAS,MAAM,CAAE,SAAS,EAAG;QAEzB,IAAK,SAAS,CAAC,4BAA4B,EAAG,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC;QAEzE,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAE,SAAS,CAAE,AAAC;QAEtC,IAAK,IAAI,EAAG;YAER,EAAE,CAAC,YAAY,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;YAE/B,OAAO,CAAC,MAAM,CAAE,SAAS,CAAE,CAAC;SAE/B;KAEJ;IAED,SAAS,MAAM,CAAE,SAAS,EAAE,UAAU,EAAG;QAErC,IAAK,SAAS,CAAC,mBAAmB,EAAG;YAEjC,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAE,SAAS,CAAE,AAAC;YAExC,IAAK,CAAE,MAAM,IAAI,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,EAE/C,OAAO,CAAC,GAAG,CAAE,SAAS,EAAE;gBACpB,MAAM,EAAE,SAAS,CAAC,MAAM;gBACxB,IAAI,EAAE,SAAS,CAAC,IAAI;gBACpB,eAAe,EAAE,SAAS,CAAC,WAAW;gBACtC,OAAO,EAAE,SAAS,CAAC,OAAO;aAC7B,CAAE,CAAC;YAIR,OAAO;SAEV;QAED,IAAK,SAAS,CAAC,4BAA4B,EAAG,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC;QAEzE,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAE,SAAS,CAAE,AAAC;QAEtC,IAAK,IAAI,KAAK,SAAS,EAEnB,OAAO,CAAC,GAAG,CAAE,SAAS,EAAE,YAAY,CAAE,SAAS,EAAE,UAAU,CAAE,CAAE,CAAC;aAE7D,IAAK,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,EAAG;YAE3C,YAAY,CAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,CAAE,CAAC;YAEnD,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;SAEpC;KAEJ;IAED,OAAO;QAEH,GAAG,EAAE,GAAG;QACR,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,MAAM;KAEjB,CAAC;CAEL;AAED,MAAM,aAAa,SAAS,cAAc;IAEtC,YAAa,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC,EAAE,cAAc,GAAG,CAAC,CAAG;QAExE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAE5B,IAAI,CAAC,UAAU,GAAG;YACd,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,MAAM;YACd,aAAa,EAAE,aAAa;YAC5B,cAAc,EAAE,cAAc;SACjC,CAAC;QAEF,MAAM,UAAU,GAAG,KAAK,GAAG,CAAC,AAAC;QAC7B,MAAM,WAAW,GAAG,MAAM,GAAG,CAAC,AAAC;QAE/B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAE,aAAa,CAAE,AAAC;QAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAE,cAAc,CAAE,AAAC;QAE3C,MAAM,MAAM,GAAG,KAAK,GAAG,CAAC,AAAC;QACzB,MAAM,MAAM,GAAG,KAAK,GAAG,CAAC,AAAC;QAEzB,MAAM,aAAa,GAAG,KAAK,GAAG,KAAK,AAAC;QACpC,MAAM,cAAc,GAAG,MAAM,GAAG,KAAK,AAAC;QAEtC,EAAE;QAEF,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,GAAG,GAAG,EAAE,AAAC;QAEf,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,EAAE,EAAE,EAAG,CAAG;YAEnC,MAAM,CAAC,GAAG,EAAE,GAAG,cAAc,GAAG,WAAW,AAAC;YAE5C,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,EAAE,EAAE,EAAG,CAAG;gBAEnC,MAAM,CAAC,GAAG,EAAE,GAAG,aAAa,GAAG,UAAU,AAAC;gBAE1C,QAAQ,CAAC,IAAI,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBAE3B,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBAExB,GAAG,CAAC,IAAI,CAAE,EAAE,GAAG,KAAK,CAAE,CAAC;gBACvB,GAAG,CAAC,IAAI,CAAE,CAAC,GAAK,EAAE,GAAG,KAAK,AAAE,CAAE,CAAC;aAElC;SAEJ;QAED,IAAM,IAAI,GAAE,GAAG,CAAC,EAAE,GAAE,GAAG,KAAK,EAAE,GAAE,EAAG,CAE/B,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,EAAG,CAAG;YAElC,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,GAAE,AAAC;YAC3B,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,GAAK,CAAA,GAAE,GAAG,CAAC,CAAA,AAAE,AAAC;YACnC,MAAM,CAAC,GAAG,AAAE,EAAE,GAAG,CAAC,GAAK,MAAM,GAAK,CAAA,GAAE,GAAG,CAAC,CAAA,AAAE,AAAC;YAC3C,MAAM,CAAC,GAAG,AAAE,EAAE,GAAG,CAAC,GAAK,MAAM,GAAG,GAAE,AAAC;YAEnC,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YACxB,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SAE3B;QAIL,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,IAAI,sBAAsB,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;QACxE,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,sBAAsB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAE,CAAC;KAEnE;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,aAAa,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAE,CAAC;KAEhG;CAEJ;AAED,IAAI,iBAAiB,GAAG,gFAAgF,AAAC;AAEzG,IAAI,sBAAsB,GAAG,4DAA4D,AAAC;AAE1F,IAAI,kBAAkB,GAAG,4EAA4E,AAAC;AAEtG,IAAI,uBAAuB,GAAG,0DAA0D,AAAC;AAEzF,IAAI,cAAc,GAAG,kaAAka,AAAC;AAExb,IAAI,mBAAmB,GAAG,uFAAuF,AAAC;AAElH,IAAI,YAAY,GAAG,sCAAsC,AAAC;AAE1D,IAAI,kBAAkB,GAAG,8GAA8G,AAAC;AAExI,IAAI,KAAK,GAAG,ykKAAykK,AAAC;AAEtlK,IAAI,qBAAqB,GAAG,+7BAA+7B,AAAC;AAE59B,IAAI,wBAAwB,GAAG,4nBAA4nB,AAAC;AAE5pB,IAAI,6BAA6B,GAAG,2HAA2H,AAAC;AAEhK,IAAI,2BAA2B,GAAG,oEAAoE,AAAC;AAEvG,IAAI,sBAAsB,GAAG,0EAA0E,AAAC;AAExG,IAAI,cAAc,GAAG,8HAA8H,AAAC;AAEpJ,IAAI,mBAAmB,GAAG,oHAAoH,AAAC;AAE/I,IAAI,iBAAiB,GAAG,uJAAuJ,AAAC;AAEhL,IAAI,YAAY,GAAG,gRAAgR,AAAC;AAEpS,IAAI,MAAM,GAAG,kxEAAkxE,AAAC;AAEhyE,IAAI,2BAA2B,GAAG,s2GAAs2G,AAAC;AAEz4G,IAAI,oBAAoB,GAAG,0jBAA0jB,AAAC;AAEtlB,IAAI,2BAA2B,GAAG,iJAAiJ,AAAC;AAEpL,IAAI,sBAAsB,GAAG,kKAAkK,AAAC;AAEhM,IAAI,oBAAoB,GAAG,sIAAsI,AAAC;AAElK,IAAI,yBAAyB,GAAG,kEAAkE,AAAC;AAEnG,IAAI,kBAAkB,GAAG,qDAAqD,AAAC;AAE/E,IAAI,uBAAuB,GAAG,4QAA4Q,AAAC;AAE3S,IAAI,eAAe,GAAG,qxCAAqxC,AAAC;AAE5yC,IAAI,2BAA2B,GAAG,4MAA4M,AAAC;AAE/O,IAAI,oBAAoB,GAAG,wTAAwT,AAAC;AAEpV,IAAI,kBAAkB,GAAG,8RAA8R,AAAC;AAExT,IAAI,aAAa,GAAG,2oBAA2oB,AAAC;AAEhqB,IAAI,UAAU,GAAG,uDAAuD,AAAC;AAEzE,IAAI,eAAe,GAAG,oDAAoD,AAAC;AAE3E,IAAI,YAAY,GAAG,0RAA0R,AAAC;AAE9S,IAAI,iBAAiB,GAAG,0MAA0M,AAAC;AAEnO,IAAI,yBAAyB,GAAG,sYAAsY,AAAC;AAEva,IAAI,iBAAiB,GAAG,+MAA+M,AAAC;AAExO,IAAI,sBAAsB,GAAG,gGAAgG,AAAC;AAE9H,IAAI,qBAAqB,GAAG,mvFAAmvF,AAAC;AAEhxF,IAAI,iBAAiB,GAAG,gwJAAgwJ,AAAC;AAEzxJ,IAAI,6BAA6B,GAAG,y4BAAy4B,AAAC;AAE96B,IAAI,oBAAoB,GAAG,mEAAmE,AAAC;AAE/F,IAAI,yBAAyB,GAAG,00BAA00B,AAAC;AAE32B,IAAI,qBAAqB,GAAG,qMAAqM,AAAC;AAElO,IAAI,0BAA0B,GAAG,kqCAAkqC,AAAC;AAEpsC,IAAI,wBAAwB,GAAG,owEAAowE,AAAC;AAEpyE,IAAI,6BAA6B,GAAG,+kNAA+kN,AAAC;AAEpnN,IAAI,qBAAqB,GAAG,01HAA01H,AAAC;AAEv3H,IAAI,oBAAoB,GAAG,+rBAA+rB,AAAC;AAE3tB,IAAI,mBAAmB,GAAG,0QAA0Q,AAAC;AAErS,IAAI,oBAAoB,GAAG,kLAAkL,AAAC;AAE9M,IAAI,yBAAyB,GAAG,wKAAwK,AAAC;AAEzM,IAAI,uBAAuB,GAAG,qLAAqL,AAAC;AAEpN,IAAI,kBAAkB,GAAG,8XAA8X,AAAC;AAExZ,IAAI,YAAY,GAAG,6ZAA6Z,AAAC;AAEjb,IAAI,iBAAiB,GAAG,kDAAkD,AAAC;AAE3E,IAAI,qBAAqB,GAAG,gSAAgS,AAAC;AAE7T,IAAI,0BAA0B,GAAG,sMAAsM,AAAC;AAExO,IAAI,qBAAqB,GAAG,sKAAsK,AAAC;AAEnM,IAAI,0BAA0B,GAAG,oEAAoE,AAAC;AAEtG,IAAI,iBAAiB,GAAG,4eAA4e,AAAC;AAErgB,IAAI,kBAAkB,GAAG,8jBAA8jB,AAAC;AAExlB,IAAI,uBAAuB,GAAG,i1BAAi1B,AAAC;AAEh3B,IAAI,kBAAkB,GAAG,s2BAAs2B,AAAC;AAEh4B,IAAI,qBAAqB,GAAG,m2BAAm2B,AAAC;AAEh4B,IAAI,oBAAoB,GAAG,kqBAAkqB,AAAC;AAE9rB,IAAI,oBAAoB,GAAG,gJAAgJ,AAAC;AAE5K,IAAI,kBAAkB,GAAG,gJAAgJ,AAAC;AAE1K,IAAI,aAAa,GAAG,kOAAkO,AAAC;AAEvP,IAAI,uBAAuB,GAAG,4+BAA4+B,AAAC;AAE3gC,IAAI,+BAA+B,GAAG,wEAAwE,AAAC;AAE/G,IAAI,8BAA8B,GAAG,kXAAkX,AAAC;AAExZ,IAAI,uBAAuB,GAAG,kRAAkR,AAAC;AAEjT,IAAI,eAAe,GAAG,kLAAkL,AAAC;AAEzM,IAAI,OAAO,GAAG,2jDAA2jD,AAAC;AAE1kD,IAAI,4BAA4B,GAAG,2EAA2E,AAAC;AAE/G,IAAI,cAAc,GAAG,mNAAmN,AAAC;AAEzO,IAAI,kBAAkB,GAAG,+EAA+E,AAAC;AAEzG,IAAI,uBAAuB,GAAG,0UAA0U,AAAC;AAEzW,IAAI,qBAAqB,GAAG,sKAAsK,AAAC;AAEnM,IAAI,0BAA0B,GAAG,oEAAoE,AAAC;AAEtG,IAAI,uBAAuB,GAAG,06RAA06R,AAAC;AAEz8R,IAAI,qBAAqB,GAAG,kxCAAkxC,AAAC;AAE/yC,IAAI,gBAAgB,GAAG,izCAAizC,AAAC;AAEz0C,IAAI,wBAAwB,GAAG,i5CAAi5C,AAAC;AAEj7C,IAAI,eAAe,GAAG,iOAAiO,AAAC;AAExP,IAAI,oBAAoB,GAAG,+gCAA+gC,AAAC;AAE3iC,IAAI,eAAe,GAAG,8XAA8X,AAAC;AAErZ,IAAI,iBAAiB,GAAG,odAAod,AAAC;AAE7e,IAAI,oBAAoB,GAAG,yLAAyL,AAAC;AAErN,IAAI,yBAAyB,GAAG,kEAAkE,AAAC;AAEnG,IAAI,oBAAoB,GAAG,4FAA4F,AAAC;AAExH,IAAI,yBAAyB,GAAG,myCAAmyC,AAAC;AAEp0C,IAAI,qBAAqB,GAAG,i5BAAi5B,AAAC;AAE96B,IAAI,0BAA0B,GAAG,smGAAsmG,AAAC;AAExoG,IAAI,gBAAgB,GAAG,wFAAwF,AAAC;AAEhH,IAAI,cAAc,GAAG,uIAAuI,AAAC;AAE7J,IAAI,SAAS,GAAG,oEAAoE,AAAC;AAErF,IAAI,iBAAiB,GAAG,mFAAmF,AAAC;AAE5G,IAAI,eAAe,GAAG,wIAAwI,AAAC;AAE/J,IAAI,UAAU,GAAG,6GAA6G,AAAC;AAE/H,IAAI,eAAe,GAAG,iTAAiT,AAAC;AAExU,MAAM,QAAQ,GAAG,6JAA6J,AAAC;AAE/K,MAAM,UAAU,GAAG,+aAA+a,AAAC;AAEnc,MAAM,QAAQ,GAAG,gOAAgO,AAAC;AAElP,MAAM,UAAU,GAAG,yVAAyV,AAAC;AAE7W,MAAM,QAAQ,GAAG,uuBAAuuB,AAAC;AAEzvB,MAAM,UAAU,GAAG,63BAA63B,AAAC;AAEj5B,MAAM,QAAQ,GAAG,itBAAitB,AAAC;AAEnuB,MAAM,UAAU,GAAG,guBAAguB,AAAC;AAEpvB,MAAM,QAAQ,GAAG,8LAA8L,AAAC;AAEhN,MAAM,UAAU,GAAG,wTAAwT,AAAC;AAE5U,MAAM,QAAQ,GAAG,8jBAA8jB,AAAC;AAEhlB,MAAM,UAAU,GAAG,uwBAAuwB,AAAC;AAE3xB,MAAM,QAAQ,GAAG,m7BAAm7B,AAAC;AAEr8B,MAAM,UAAU,GAAG,4pDAA4pD,AAAC;AAEhrD,MAAM,QAAQ,GAAG,4pCAA4pC,AAAC;AAE9qC,MAAM,UAAU,GAAG,q0EAAq0E,AAAC;AAEz1E,MAAM,QAAQ,GAAG,i7BAAi7B,AAAC;AAEn8B,MAAM,UAAU,GAAG,w+CAAw+C,AAAC;AAE5/C,MAAM,QAAQ,GAAG,2+BAA2+B,AAAC;AAE7/B,MAAM,UAAU,GAAG,yqBAAyqB,AAAC;AAE7rB,MAAM,QAAQ,GAAG,+nCAA+nC,AAAC;AAEjpC,MAAM,UAAU,GAAG,2kEAA2kE,AAAC;AAE/lE,MAAM,QAAQ,GAAG,gtCAAgtC,AAAC;AAEluC,MAAM,UAAU,GAAG,4mHAA4mH,AAAC;AAEhoH,MAAM,QAAQ,GAAG,mkCAAmkC,AAAC;AAErlC,MAAM,UAAU,GAAG,kyDAAkyD,AAAC;AAEtzD,MAAM,QAAQ,GAAG,otBAAotB,AAAC;AAEtuB,MAAM,UAAU,GAAG,4vBAA4vB,AAAC;AAEhxB,MAAM,QAAQ,GAAG,whBAAwhB,AAAC;AAE1iB,MAAM,UAAU,GAAG,kaAAka,AAAC;AAEtb,MAAM,QAAQ,GAAG,qnCAAqnC,AAAC;AAEvoC,MAAM,UAAU,GAAG,kuBAAkuB,AAAC;AAEtvB,MAAM,WAAW,GAAG;IAChB,iBAAiB,EAAE,iBAAiB;IACpC,sBAAsB,EAAE,sBAAsB;IAC9C,kBAAkB,EAAE,kBAAkB;IACtC,uBAAuB,EAAE,uBAAuB;IAChD,cAAc,EAAE,cAAc;IAC9B,mBAAmB,EAAE,mBAAmB;IACxC,YAAY,EAAE,YAAY;IAC1B,kBAAkB,EAAE,kBAAkB;IACtC,KAAK,EAAE,KAAK;IACZ,qBAAqB,EAAE,qBAAqB;IAC5C,wBAAwB,EAAE,wBAAwB;IAClD,6BAA6B,EAAE,6BAA6B;IAC5D,2BAA2B,EAAE,2BAA2B;IACxD,sBAAsB,EAAE,sBAAsB;IAC9C,cAAc,EAAE,cAAc;IAC9B,mBAAmB,EAAE,mBAAmB;IACxC,iBAAiB,EAAE,iBAAiB;IACpC,YAAY,EAAE,YAAY;IAC1B,MAAM,EAAE,MAAM;IACd,2BAA2B,EAAE,2BAA2B;IACxD,oBAAoB,EAAE,oBAAoB;IAC1C,2BAA2B,EAAE,2BAA2B;IACxD,sBAAsB,EAAE,sBAAsB;IAC9C,oBAAoB,EAAE,oBAAoB;IAC1C,yBAAyB,EAAE,yBAAyB;IACpD,kBAAkB,EAAE,kBAAkB;IACtC,uBAAuB,EAAE,uBAAuB;IAChD,eAAe,EAAE,eAAe;IAChC,2BAA2B,EAAE,2BAA2B;IACxD,oBAAoB,EAAE,oBAAoB;IAC1C,kBAAkB,EAAE,kBAAkB;IACtC,6BAA6B,EAAE,6BAA6B;IAC5D,aAAa,EAAE,aAAa;IAC5B,UAAU,EAAE,UAAU;IACtB,eAAe,EAAE,eAAe;IAChC,YAAY,EAAE,YAAY;IAC1B,iBAAiB,EAAE,iBAAiB;IACpC,yBAAyB,EAAE,yBAAyB;IACpD,iBAAiB,EAAE,iBAAiB;IACpC,sBAAsB,EAAE,sBAAsB;IAC9C,qBAAqB,EAAE,qBAAqB;IAC5C,iBAAiB,EAAE,iBAAiB;IACpC,oBAAoB,EAAE,oBAAoB;IAC1C,yBAAyB,EAAE,yBAAyB;IACpD,qBAAqB,EAAE,qBAAqB;IAC5C,0BAA0B,EAAE,0BAA0B;IACtD,wBAAwB,EAAE,wBAAwB;IAClD,6BAA6B,EAAE,6BAA6B;IAC5D,qBAAqB,EAAE,qBAAqB;IAC5C,oBAAoB,EAAE,oBAAoB;IAC1C,mBAAmB,EAAE,mBAAmB;IACxC,oBAAoB,EAAE,oBAAoB;IAC1C,yBAAyB,EAAE,yBAAyB;IACpD,uBAAuB,EAAE,uBAAuB;IAChD,kBAAkB,EAAE,kBAAkB;IACtC,YAAY,EAAE,YAAY;IAC1B,iBAAiB,EAAE,iBAAiB;IACpC,qBAAqB,EAAE,qBAAqB;IAC5C,0BAA0B,EAAE,0BAA0B;IACtD,qBAAqB,EAAE,qBAAqB;IAC5C,0BAA0B,EAAE,0BAA0B;IACtD,iBAAiB,EAAE,iBAAiB;IACpC,kBAAkB,EAAE,kBAAkB;IACtC,uBAAuB,EAAE,uBAAuB;IAChD,kBAAkB,EAAE,kBAAkB;IACtC,qBAAqB,EAAE,qBAAqB;IAC5C,oBAAoB,EAAE,oBAAoB;IAC1C,oBAAoB,EAAE,oBAAoB;IAC1C,kBAAkB,EAAE,kBAAkB;IACtC,aAAa,EAAE,aAAa;IAC5B,uBAAuB,EAAE,uBAAuB;IAChD,+BAA+B,EAAE,+BAA+B;IAChE,8BAA8B,EAAE,8BAA8B;IAC9D,uBAAuB,EAAE,uBAAuB;IAChD,eAAe,EAAE,eAAe;IAChC,OAAO,EAAE,OAAO;IAChB,4BAA4B,EAAE,4BAA4B;IAC1D,cAAc,EAAE,cAAc;IAC9B,kBAAkB,EAAE,kBAAkB;IACtC,uBAAuB,EAAE,uBAAuB;IAChD,qBAAqB,EAAE,qBAAqB;IAC5C,0BAA0B,EAAE,0BAA0B;IACtD,uBAAuB,EAAE,uBAAuB;IAChD,qBAAqB,EAAE,qBAAqB;IAC5C,gBAAgB,EAAE,gBAAgB;IAClC,wBAAwB,EAAE,wBAAwB;IAClD,eAAe,EAAE,eAAe;IAChC,oBAAoB,EAAE,oBAAoB;IAC1C,eAAe,EAAE,eAAe;IAChC,iBAAiB,EAAE,iBAAiB;IACpC,oBAAoB,EAAE,oBAAoB;IAC1C,yBAAyB,EAAE,yBAAyB;IACpD,oBAAoB,EAAE,oBAAoB;IAC1C,yBAAyB,EAAE,yBAAyB;IACpD,qBAAqB,EAAE,qBAAqB;IAC5C,0BAA0B,EAAE,0BAA0B;IACtD,gBAAgB,EAAE,gBAAgB;IAClC,cAAc,EAAE,cAAc;IAC9B,SAAS,EAAE,SAAS;IACpB,iBAAiB,EAAE,iBAAiB;IACpC,eAAe,EAAE,eAAe;IAChC,UAAU,EAAE,UAAU;IACtB,eAAe,EAAE,eAAe;IAEhC,eAAe,EAAE,QAAQ;IACzB,eAAe,EAAE,UAAU;IAC3B,SAAS,EAAE,QAAQ;IACnB,SAAS,EAAE,UAAU;IACrB,UAAU,EAAE,QAAQ;IACpB,UAAU,EAAE,UAAU;IACtB,iBAAiB,EAAE,QAAQ;IAC3B,iBAAiB,EAAE,UAAU;IAC7B,aAAa,EAAE,QAAQ;IACvB,aAAa,EAAE,UAAU;IACzB,eAAe,EAAE,QAAQ;IACzB,eAAe,EAAE,UAAU;IAC3B,cAAc,EAAE,QAAQ;IACxB,cAAc,EAAE,UAAU;IAC1B,gBAAgB,EAAE,QAAQ;IAC1B,gBAAgB,EAAE,UAAU;IAC5B,eAAe,EAAE,QAAQ;IACzB,eAAe,EAAE,UAAU;IAC3B,eAAe,EAAE,QAAQ;IACzB,eAAe,EAAE,UAAU;IAC3B,cAAc,EAAE,QAAQ;IACxB,cAAc,EAAE,UAAU;IAC1B,iBAAiB,EAAE,QAAQ;IAC3B,iBAAiB,EAAE,UAAU;IAC7B,aAAa,EAAE,QAAQ;IACvB,aAAa,EAAE,UAAU;IACzB,WAAW,EAAE,QAAQ;IACrB,WAAW,EAAE,UAAU;IACvB,WAAW,EAAE,QAAQ;IACrB,WAAW,EAAE,UAAU;IACvB,WAAW,EAAE,QAAQ;IACrB,WAAW,EAAE,UAAU;CAC1B,AAAC;AAEF;;IAEG,CAEH,MAAM,WAAW,GAAG;IAEhB,MAAM,EAAE;QAEJ,OAAO,EAAE;YAAE,KAAK,EAAE,IAAI,KAAK,CAAE,QAAQ,CAAE;SAAE;QACzC,OAAO,EAAE;YAAE,KAAK,EAAE,CAAG;SAAE;QAEvB,GAAG,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QACpB,WAAW,EAAE;YAAE,KAAK,EAAE,IAAI,OAAO,EAAE;SAAE;QACrC,YAAY,EAAE;YAAE,KAAK,EAAE,IAAI,OAAO,EAAE;SAAE;QAEtC,QAAQ,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QACzB,SAAS,EAAE;YAAE,KAAK,EAAE,CAAC;SAAE;KAE1B;IAED,WAAW,EAAE;QAET,WAAW,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;KAE/B;IAED,MAAM,EAAE;QAEJ,MAAM,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QACvB,UAAU,EAAE;YAAE,KAAK,EAAE,EAAG;SAAE;QAC1B,YAAY,EAAE;YAAE,KAAK,EAAE,CAAG;SAAE;QAC5B,GAAG,EAAE;YAAE,KAAK,EAAE,GAAG;SAAE;QACnB,eAAe,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE,CAAC,wBAAwB;KAE5D;IAED,KAAK,EAAE;QAEH,KAAK,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QACtB,cAAc,EAAE;YAAE,KAAK,EAAE,CAAC;SAAE;KAE/B;IAED,QAAQ,EAAE;QAEN,QAAQ,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QACzB,iBAAiB,EAAE;YAAE,KAAK,EAAE,CAAC;SAAE;KAElC;IAED,WAAW,EAAE;QAET,WAAW,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;KAE/B;IAED,OAAO,EAAE;QAEL,OAAO,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QACxB,SAAS,EAAE;YAAE,KAAK,EAAE,CAAC;SAAE;KAE1B;IAED,SAAS,EAAE;QAEP,SAAS,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QAC1B,WAAW,EAAE;YAAE,KAAK,EAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;SAAE;KAE9C;IAED,eAAe,EAAE;QAEb,eAAe,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QAChC,iBAAiB,EAAE;YAAE,KAAK,EAAE,CAAC;SAAE;QAC/B,gBAAgB,EAAE;YAAE,KAAK,EAAE,CAAC;SAAE;KAEjC;IAED,YAAY,EAAE;QAEV,YAAY,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;KAEhC;IAED,YAAY,EAAE;QAEV,YAAY,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;KAEhC;IAED,WAAW,EAAE;QAET,WAAW,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;KAE/B;IAED,GAAG,EAAE;QAED,UAAU,EAAE;YAAE,KAAK,EAAE,OAAO;SAAE;QAC9B,OAAO,EAAE;YAAE,KAAK,EAAE,CAAC;SAAE;QACrB,MAAM,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QACvB,QAAQ,EAAE;YAAE,KAAK,EAAE,IAAI,KAAK,CAAE,QAAQ,CAAE;SAAE;KAE7C;IAED,MAAM,EAAE;QAEJ,iBAAiB,EAAE;YAAE,KAAK,EAAE,EAAE;SAAE;QAEhC,UAAU,EAAE;YAAE,KAAK,EAAE,EAAE;SAAE;QAEzB,iBAAiB,EAAE;YAAE,KAAK,EAAE,EAAE;YAAE,UAAU,EAAE;gBACxC,SAAS,EAAE,EAAE;gBACb,KAAK,EAAE,EAAE;aACZ;SAAE;QAEH,uBAAuB,EAAE;YAAE,KAAK,EAAE,EAAE;YAAE,UAAU,EAAE;gBAC9C,UAAU,EAAE,EAAE;gBACd,gBAAgB,EAAE,EAAE;gBACpB,YAAY,EAAE,EAAE;gBAChB,aAAa,EAAE,EAAE;aACpB;SAAE;QAEH,oBAAoB,EAAE;YAAE,KAAK,EAAE,EAAE;SAAE;QACnC,uBAAuB,EAAE;YAAE,KAAK,EAAE,EAAE;SAAE;QAEtC,UAAU,EAAE;YAAE,KAAK,EAAE,EAAE;YAAE,UAAU,EAAE;gBACjC,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,EAAE;gBACb,QAAQ,EAAE,EAAE;gBACZ,OAAO,EAAE,EAAE;gBACX,WAAW,EAAE,EAAE;gBACf,KAAK,EAAE,EAAE;aACZ;SAAE;QAEH,gBAAgB,EAAE;YAAE,KAAK,EAAE,EAAE;YAAE,UAAU,EAAE;gBACvC,UAAU,EAAE,EAAE;gBACd,gBAAgB,EAAE,EAAE;gBACpB,YAAY,EAAE,EAAE;gBAChB,aAAa,EAAE,EAAE;aACpB;SAAE;QAEH,aAAa,EAAE;YAAE,KAAK,EAAE,EAAE;SAAE;QAC5B,gBAAgB,EAAE;YAAE,KAAK,EAAE,EAAE;SAAE;QAE/B,WAAW,EAAE;YAAE,KAAK,EAAE,EAAE;YAAE,UAAU,EAAE;gBAClC,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,EAAE;gBACZ,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,EAAE;aACf;SAAE;QAEH,iBAAiB,EAAE;YAAE,KAAK,EAAE,EAAE;YAAE,UAAU,EAAE;gBACxC,UAAU,EAAE,EAAE;gBACd,gBAAgB,EAAE,EAAE;gBACpB,YAAY,EAAE,EAAE;gBAChB,aAAa,EAAE,EAAE;gBACjB,gBAAgB,EAAE,EAAE;gBACpB,eAAe,EAAE,EAAE;aACtB;SAAE;QAEH,cAAc,EAAE;YAAE,KAAK,EAAE,EAAE;SAAE;QAC7B,iBAAiB,EAAE;YAAE,KAAK,EAAE,EAAE;SAAE;QAEhC,gBAAgB,EAAE;YAAE,KAAK,EAAE,EAAE;YAAE,UAAU,EAAE;gBACvC,SAAS,EAAE,EAAE;gBACb,QAAQ,EAAE,EAAE;gBACZ,WAAW,EAAE,EAAE;aAClB;SAAE;QAEH,wFAAwF;QACxF,cAAc,EAAE;YAAE,KAAK,EAAE,EAAE;YAAE,UAAU,EAAE;gBACrC,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,EAAE;gBACZ,KAAK,EAAE,EAAE;gBACT,MAAM,EAAE,EAAE;aACb;SAAE;QAEH,KAAK,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QACtB,KAAK,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;KAEzB;IAED,MAAM,EAAE;QAEJ,OAAO,EAAE;YAAE,KAAK,EAAE,IAAI,KAAK,CAAE,QAAQ,CAAE;SAAE;QACzC,OAAO,EAAE;YAAE,KAAK,EAAE,CAAG;SAAE;QACvB,IAAI,EAAE;YAAE,KAAK,EAAE,CAAG;SAAE;QACpB,KAAK,EAAE;YAAE,KAAK,EAAE,CAAG;SAAE;QACrB,GAAG,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QACpB,QAAQ,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QACzB,SAAS,EAAE;YAAE,KAAK,EAAE,CAAC;SAAE;QACvB,WAAW,EAAE;YAAE,KAAK,EAAE,IAAI,OAAO,EAAE;SAAE;KAExC;IAED,MAAM,EAAE;QAEJ,OAAO,EAAE;YAAE,KAAK,EAAE,IAAI,KAAK,CAAE,QAAQ,CAAE;SAAE;QACzC,OAAO,EAAE;YAAE,KAAK,EAAE,CAAG;SAAE;QACvB,MAAM,EAAE;YAAE,KAAK,EAAE,IAAI,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE;SAAE;QAC1C,QAAQ,EAAE;YAAE,KAAK,EAAE,CAAG;SAAE;QACxB,GAAG,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QACpB,QAAQ,EAAE;YAAE,KAAK,EAAE,IAAI;SAAE;QACzB,SAAS,EAAE;YAAE,KAAK,EAAE,CAAC;SAAE;QACvB,WAAW,EAAE;YAAE,KAAK,EAAE,IAAI,OAAO,EAAE;SAAE;KAExC;CAEJ,AAAC;AAEF,MAAM,SAAS,GAAG;IAEd,KAAK,EAAE;QAEH,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,WAAW;YACvB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,KAAK;YACjB,WAAW,CAAC,QAAQ;YACpB,WAAW,CAAC,GAAG;SAClB,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,cAAc;QACxC,cAAc,EAAE,WAAW,CAAC,cAAc;KAE7C;IAED,OAAO,EAAE;QAEL,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,WAAW;YACvB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,KAAK;YACjB,WAAW,CAAC,QAAQ;YACpB,WAAW,CAAC,WAAW;YACvB,WAAW,CAAC,GAAG;YACf,WAAW,CAAC,MAAM;YAClB;gBACI,QAAQ,EAAE;oBAAE,KAAK,EAAE,IAAI,KAAK,CAAE,CAAQ,CAAE;iBAAE;aAC7C;SACJ,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,gBAAgB;QAC1C,cAAc,EAAE,WAAW,CAAC,gBAAgB;KAE/C;IAED,KAAK,EAAE;QAEH,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,WAAW;YACvB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,KAAK;YACjB,WAAW,CAAC,QAAQ;YACpB,WAAW,CAAC,WAAW;YACvB,WAAW,CAAC,OAAO;YACnB,WAAW,CAAC,SAAS;YACrB,WAAW,CAAC,eAAe;YAC3B,WAAW,CAAC,GAAG;YACf,WAAW,CAAC,MAAM;YAClB;gBACI,QAAQ,EAAE;oBAAE,KAAK,EAAE,IAAI,KAAK,CAAE,CAAQ,CAAE;iBAAE;gBAC1C,QAAQ,EAAE;oBAAE,KAAK,EAAE,IAAI,KAAK,CAAE,OAAQ,CAAE;iBAAE;gBAC1C,SAAS,EAAE;oBAAE,KAAK,EAAE,EAAE;iBAAE;aAC3B;SACJ,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,cAAc;QACxC,cAAc,EAAE,WAAW,CAAC,cAAc;KAE7C;IAED,QAAQ,EAAE;QAEN,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,KAAK;YACjB,WAAW,CAAC,QAAQ;YACpB,WAAW,CAAC,WAAW;YACvB,WAAW,CAAC,OAAO;YACnB,WAAW,CAAC,SAAS;YACrB,WAAW,CAAC,eAAe;YAC3B,WAAW,CAAC,YAAY;YACxB,WAAW,CAAC,YAAY;YACxB,WAAW,CAAC,GAAG;YACf,WAAW,CAAC,MAAM;YAClB;gBACI,QAAQ,EAAE;oBAAE,KAAK,EAAE,IAAI,KAAK,CAAE,CAAQ,CAAE;iBAAE;gBAC1C,SAAS,EAAE;oBAAE,KAAK,EAAE,CAAG;iBAAE;gBACzB,SAAS,EAAE;oBAAE,KAAK,EAAE,CAAG;iBAAE;gBACzB,eAAe,EAAE;oBAAE,KAAK,EAAE,CAAC;iBAAE,CAAC,YAAY;aAC7C;SACJ,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,iBAAiB;QAC3C,cAAc,EAAE,WAAW,CAAC,iBAAiB;KAEhD;IAED,IAAI,EAAE;QAEF,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,KAAK;YACjB,WAAW,CAAC,QAAQ;YACpB,WAAW,CAAC,WAAW;YACvB,WAAW,CAAC,OAAO;YACnB,WAAW,CAAC,SAAS;YACrB,WAAW,CAAC,eAAe;YAC3B,WAAW,CAAC,WAAW;YACvB,WAAW,CAAC,GAAG;YACf,WAAW,CAAC,MAAM;YAClB;gBACI,QAAQ,EAAE;oBAAE,KAAK,EAAE,IAAI,KAAK,CAAE,CAAQ,CAAE;iBAAE;aAC7C;SACJ,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,aAAa;QACvC,cAAc,EAAE,WAAW,CAAC,aAAa;KAE5C;IAED,MAAM,EAAE;QAEJ,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,OAAO;YACnB,WAAW,CAAC,SAAS;YACrB,WAAW,CAAC,eAAe;YAC3B,WAAW,CAAC,GAAG;YACf;gBACI,MAAM,EAAE;oBAAE,KAAK,EAAE,IAAI;iBAAE;aAC1B;SACJ,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,eAAe;QACzC,cAAc,EAAE,WAAW,CAAC,eAAe;KAE9C;IAED,MAAM,EAAE;QAEJ,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,GAAG;SAClB,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,WAAW;QACrC,cAAc,EAAE,WAAW,CAAC,WAAW;KAE1C;IAED,MAAM,EAAE;QAEJ,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,GAAG;YACf;gBACI,KAAK,EAAE;oBAAE,KAAK,EAAE,CAAC;iBAAE;gBACnB,QAAQ,EAAE;oBAAE,KAAK,EAAE,CAAC;iBAAE;gBACtB,SAAS,EAAE;oBAAE,KAAK,EAAE,CAAC;iBAAE;aAC1B;SACJ,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,eAAe;QACzC,cAAc,EAAE,WAAW,CAAC,eAAe;KAE9C;IAED,KAAK,EAAE;QAEH,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,eAAe;SAC9B,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,UAAU;QACpC,cAAc,EAAE,WAAW,CAAC,UAAU;KAEzC;IAED,MAAM,EAAE;QAEJ,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,OAAO;YACnB,WAAW,CAAC,SAAS;YACrB,WAAW,CAAC,eAAe;YAC3B;gBACI,OAAO,EAAE;oBAAE,KAAK,EAAE,CAAG;iBAAE;aAC1B;SACJ,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,eAAe;QACzC,cAAc,EAAE,WAAW,CAAC,eAAe;KAE9C;IAED,MAAM,EAAE;QAEJ,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,GAAG;SAClB,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,WAAW;QACrC,cAAc,EAAE,WAAW,CAAC,WAAW;KAE1C;IAED,UAAU,EAAE;QAER,QAAQ,EAAE;YACN,WAAW,EAAE;gBAAE,KAAK,EAAE,IAAI,OAAO,EAAE;aAAE;YACrC,GAAG,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;SACvB;QAED,YAAY,EAAE,WAAW,CAAC,eAAe;QACzC,cAAc,EAAE,WAAW,CAAC,eAAe;KAE9C;IACD;;kFAE6E,CAE7E,IAAI,EAAE;QAEF,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB;gBACI,OAAO,EAAE;oBAAE,KAAK,EAAE,CAAG;iBAAE;aAC1B;SACJ,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,SAAS;QACnC,cAAc,EAAE,WAAW,CAAC,SAAS;KAExC;IAED,QAAQ,EAAE;QAEN,QAAQ,EAAE;YACN,SAAS,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;SAC7B;QAED,YAAY,EAAE,WAAW,CAAC,aAAa;QACvC,cAAc,EAAE,WAAW,CAAC,aAAa;KAE5C;IAED,YAAY,EAAE;QAEV,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,eAAe;YAC3B;gBACI,iBAAiB,EAAE;oBAAE,KAAK,EAAE,IAAI,OAAO,EAAE;iBAAE;gBAC3C,YAAY,EAAE;oBAAE,KAAK,EAAE,CAAC;iBAAE;gBAC1B,WAAW,EAAE;oBAAE,KAAK,EAAE,IAAI;iBAAE;aAC/B;SACJ,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,iBAAiB;QAC3C,cAAc,EAAE,WAAW,CAAC,iBAAiB;KAEhD;IAED,MAAM,EAAE;QAEJ,QAAQ,EAAE,aAAa,CAAE;YACrB,WAAW,CAAC,MAAM;YAClB,WAAW,CAAC,GAAG;YACf;gBACI,KAAK,EAAE;oBAAE,KAAK,EAAE,IAAI,KAAK,CAAE,CAAO,CAAE;iBAAE;gBACtC,OAAO,EAAE;oBAAE,KAAK,EAAE,CAAG;iBAAE;aAC1B;SACJ,CAAE;QAEH,YAAY,EAAE,WAAW,CAAC,WAAW;QACrC,cAAc,EAAE,WAAW,CAAC,WAAW;KAE1C;CAEJ,AAAC;AAEF,SAAS,CAAC,QAAQ,GAAG;IAEjB,QAAQ,EAAE,aAAa,CAAE;QACrB,SAAS,CAAC,QAAQ,CAAC,QAAQ;QAC3B;YACI,SAAS,EAAE;gBAAE,KAAK,EAAE,CAAC;aAAE;YACvB,YAAY,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;YAC7B,kBAAkB,EAAE;gBAAE,KAAK,EAAE,CAAC;aAAE;YAChC,qBAAqB,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;YACtC,oBAAoB,EAAE;gBAAE,KAAK,EAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;aAAE;YACpD,kBAAkB,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;YACnC,KAAK,EAAE;gBAAE,KAAK,EAAE,CAAC;aAAE;YACnB,UAAU,EAAE;gBAAE,KAAK,EAAE,IAAI,KAAK,CAAE,CAAQ,CAAE;aAAE;YAC5C,aAAa,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;YAC9B,cAAc,EAAE;gBAAE,KAAK,EAAE,CAAC;aAAE;YAC5B,iBAAiB,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;YAClC,YAAY,EAAE;gBAAE,KAAK,EAAE,CAAC;aAAE;YAC1B,eAAe,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;YAChC,uBAAuB,EAAE;gBAAE,KAAK,EAAE,IAAI,OAAO,EAAE;aAAE;YACjD,sBAAsB,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;YACvC,SAAS,EAAE;gBAAE,KAAK,EAAE,CAAC;aAAE;YACvB,YAAY,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;YAC7B,mBAAmB,EAAE;gBAAE,KAAK,EAAE,CAAC;aAAE;YACjC,gBAAgB,EAAE;gBAAE,KAAK,EAAE,IAAI,KAAK,CAAE,CAAQ,CAAE;aAAE;YAClD,iBAAiB,EAAE;gBAAE,KAAK,EAAE,CAAC;aAAE;YAC/B,oBAAoB,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;YACrC,aAAa,EAAE;gBAAE,KAAK,EAAE,IAAI,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;aAAE;YAC9C,gBAAgB,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;SACpC;KACJ,CAAE;IAEH,YAAY,EAAE,WAAW,CAAC,iBAAiB;IAC3C,cAAc,EAAE,WAAW,CAAC,iBAAiB;CAEhD,CAAC;AAEF,SAAS,eAAe,CAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,MAAK,EAAE,kBAAkB,EAAG;IAEtF,MAAM,UAAU,GAAG,IAAI,KAAK,CAAE,CAAQ,CAAE,AAAC;IACzC,IAAI,UAAU,GAAG,MAAK,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,AAAC;IAExC,IAAI,SAAS,AAAC;IACd,IAAI,OAAO,AAAC;IAEZ,IAAI,iBAAiB,GAAG,IAAI,AAAC;IAC7B,IAAI,wBAAwB,GAAG,CAAC,AAAC;IACjC,IAAI,kBAAkB,GAAG,IAAI,AAAC;IAE9B,SAAS,MAAM,CAAE,UAAU,EAAE,KAAK,EAAG;QAEjC,IAAI,UAAU,GAAG,KAAK,AAAC;QACvB,IAAI,UAAU,GAAG,KAAK,CAAC,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,UAAU,GAAG,IAAI,AAAC;QAElE,IAAK,UAAU,IAAI,UAAU,CAAC,SAAS,EAEnC,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;QAI5C,0BAA0B;QAC1B,yBAAyB;QAEzB,MAAM,EAAE,GAAG,QAAQ,CAAC,EAAE,AAAC;QACvB,MAAM,OAAO,GAAG,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,UAAU,EAAE,AAAC;QAEjD,IAAK,OAAO,IAAI,OAAO,CAAC,oBAAoB,KAAK,UAAU,EAEvD,UAAU,GAAG,IAAI,CAAC;QAItB,IAAK,UAAU,KAAK,IAAI,EAEpB,QAAQ,CAAE,UAAU,EAAE,UAAU,CAAE,CAAC;aAEhC,IAAK,UAAU,IAAI,UAAU,CAAC,OAAO,EAAG;YAE3C,QAAQ,CAAE,UAAU,EAAE,CAAC,CAAE,CAAC;YAC1B,UAAU,GAAG,IAAI,CAAC;SAErB;QAED,IAAK,QAAQ,CAAC,SAAS,IAAI,UAAU,EAEjC,QAAQ,CAAC,KAAK,CAAE,QAAQ,CAAC,cAAc,EAAE,QAAQ,CAAC,cAAc,EAAE,QAAQ,CAAC,gBAAgB,CAAE,CAAC;QAIlG,IAAK,UAAU,IAAM,CAAA,UAAU,CAAC,aAAa,IAAI,UAAU,CAAC,OAAO,KAAK,uBAAuB,CAAA,AAAE,EAAG;YAEhG,IAAK,OAAO,KAAK,SAAS,EAAG;gBAEzB,OAAO,GAAG,IAAI,IAAI,CACd,IAAI,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAC1B,IAAI,cAAc,CAAE;oBAChB,IAAI,EAAE,wBAAwB;oBAC9B,QAAQ,EAAE,aAAa,CAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAE;oBAClD,YAAY,EAAE,SAAS,CAAC,IAAI,CAAC,YAAY;oBACzC,cAAc,EAAE,SAAS,CAAC,IAAI,CAAC,cAAc;oBAC7C,IAAI,EAAE,QAAQ;oBACd,SAAS,EAAE,KAAK;oBAChB,UAAU,EAAE,KAAK;oBACjB,GAAG,EAAE,KAAK;iBACb,CAAE,CACN,CAAC;gBAEF,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAE,QAAQ,CAAE,CAAC;gBAC7C,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAE,IAAI,CAAE,CAAC;gBAEzC,OAAO,CAAC,cAAc,GAAG,SAAW,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAG;oBAE1D,IAAI,CAAC,WAAW,CAAC,YAAY,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;iBAEvD,CAAC;gBAEF,kDAAkD;gBAClD,MAAM,CAAC,cAAc,CAAE,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE;oBAE/C,GAAG,EAAE,WAAY;wBAEb,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;qBAErC;iBAEJ,CAAE,CAAC;gBAEJ,OAAO,CAAC,MAAM,CAAE,OAAO,CAAE,CAAC;aAE7B;YAED,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC;YACpD,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,AAAE,UAAU,CAAC,aAAa,IAAI,UAAU,CAAC,qBAAqB,KAAK,KAAK,GAAK,EAAG,GAAG,CAAC,CAAC;YAElI,IAAK,iBAAiB,KAAK,UAAU,IACjC,wBAAwB,KAAK,UAAU,CAAC,OAAO,IAC/C,kBAAkB,KAAK,QAAQ,CAAC,WAAW,EAAG;gBAE9C,OAAO,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;gBAEpC,iBAAiB,GAAG,UAAU,CAAC;gBAC/B,wBAAwB,GAAG,UAAU,CAAC,OAAO,CAAC;gBAC9C,kBAAkB,GAAG,QAAQ,CAAC,WAAW,CAAC;aAE7C;YAED,4CAA4C;YAC5C,UAAU,CAAC,OAAO,CAAE,OAAO,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAE,CAAC;SAEjF,MAAM,IAAK,UAAU,IAAI,UAAU,CAAC,SAAS,EAAG;YAE7C,IAAK,SAAS,KAAK,SAAS,EAAG;gBAE3B,SAAS,GAAG,IAAI,IAAI,CAChB,IAAI,aAAa,CAAE,CAAC,EAAE,CAAC,CAAE,EACzB,IAAI,cAAc,CAAE;oBAChB,IAAI,EAAE,oBAAoB;oBAC1B,QAAQ,EAAE,aAAa,CAAE,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAE;oBACxD,YAAY,EAAE,SAAS,CAAC,UAAU,CAAC,YAAY;oBAC/C,cAAc,EAAE,SAAS,CAAC,UAAU,CAAC,cAAc;oBACnD,IAAI,EAAE,SAAS;oBACf,SAAS,EAAE,KAAK;oBAChB,UAAU,EAAE,KAAK;oBACjB,GAAG,EAAE,KAAK;iBACb,CAAE,CACN,CAAC;gBAEF,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAE,QAAQ,CAAE,CAAC;gBAE/C,kDAAkD;gBAClD,MAAM,CAAC,cAAc,CAAE,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE;oBAE9C,GAAG,EAAE,WAAY;wBAEb,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;qBAElC;iBAEJ,CAAE,CAAC;gBAEJ,OAAO,CAAC,MAAM,CAAE,SAAS,CAAE,CAAC;aAE/B;YAED,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,UAAU,CAAC;YAEnD,IAAK,UAAU,CAAC,gBAAgB,KAAK,IAAI,EAErC,UAAU,CAAC,YAAY,EAAE,CAAC;YAI9B,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,MAAM,CAAE,CAAC;YAExE,IAAK,iBAAiB,KAAK,UAAU,IACjC,wBAAwB,KAAK,UAAU,CAAC,OAAO,IAC/C,kBAAkB,KAAK,QAAQ,CAAC,WAAW,EAAG;gBAE9C,SAAS,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;gBAEtC,iBAAiB,GAAG,UAAU,CAAC;gBAC/B,wBAAwB,GAAG,UAAU,CAAC,OAAO,CAAC;gBAC9C,kBAAkB,GAAG,QAAQ,CAAC,WAAW,CAAC;aAE7C;YAGD,4CAA4C;YAC5C,UAAU,CAAC,OAAO,CAAE,SAAS,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAE,CAAC;SAEvF;KAEJ;IAED,SAAS,QAAQ,CAAE,KAAK,EAAE,KAAK,EAAG;QAE9B,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,kBAAkB,CAAE,CAAC;KAExF;IAED,OAAO;QAEH,aAAa,EAAE,WAAY;YAEvB,OAAO,UAAU,CAAC;SAErB;QACD,aAAa,EAAE,SAAW,KAAK,EAAE,KAAK,GAAG,CAAC,EAAG;YAEzC,UAAU,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;YACxB,UAAU,GAAG,KAAK,CAAC;YACnB,QAAQ,CAAE,UAAU,EAAE,UAAU,CAAE,CAAC;SAEtC;QACD,aAAa,EAAE,WAAY;YAEvB,OAAO,UAAU,CAAC;SAErB;QACD,aAAa,EAAE,SAAW,KAAK,EAAG;YAE9B,UAAU,GAAG,KAAK,CAAC;YACnB,QAAQ,CAAE,UAAU,EAAE,UAAU,CAAE,CAAC;SAEtC;QACD,MAAM,EAAE,MAAM;KAEjB,CAAC;CAEL;AAED,SAAS,kBAAkB,CAAE,EAAE,EAAE,UAAU,EAAE,WAAU,EAAE,YAAY,EAAG;IAEpE,MAAM,mBAAmB,GAAG,EAAE,CAAC,YAAY,CAAE,KAAK,CAAE,AAAC;IAErD,MAAM,UAAS,GAAG,YAAY,CAAC,QAAQ,GAAG,IAAI,GAAG,UAAU,CAAC,GAAG,CAAE,yBAAyB,CAAE,AAAC;IAC7F,MAAM,YAAY,GAAG,YAAY,CAAC,QAAQ,IAAI,UAAS,KAAK,IAAI,AAAC;IAEjE,MAAM,aAAa,GAAG,EAAE,AAAC;IAEzB,MAAM,YAAY,GAAG,kBAAkB,CAAE,IAAI,CAAE,AAAC;IAChD,IAAI,YAAY,GAAG,YAAY,AAAC;IAChC,IAAI,WAAW,GAAG,KAAK,AAAC;IAExB,SAAS,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAG;QAEzD,IAAI,aAAa,GAAG,KAAK,AAAC;QAE1B,IAAK,YAAY,EAAG;YAEhB,MAAM,KAAK,GAAG,eAAe,CAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAE,AAAC;YAE7D,IAAK,YAAY,KAAK,KAAK,EAAG;gBAE1B,YAAY,GAAG,KAAK,CAAC;gBACrB,qBAAqB,CAAE,YAAY,CAAC,MAAM,CAAE,CAAC;aAEhD;YAED,aAAa,GAAG,WAAW,CAAE,QAAQ,EAAE,KAAK,CAAE,CAAC;YAE/C,IAAK,aAAa,EAAG,SAAS,CAAE,QAAQ,EAAE,KAAK,CAAE,CAAC;SAErD,MAAM;YAEH,MAAM,SAAS,GAAK,QAAQ,CAAC,SAAS,KAAK,IAAI,AAAE,AAAC;YAElD,IAAK,YAAY,CAAC,QAAQ,KAAK,QAAQ,CAAC,EAAE,IACtC,YAAY,CAAC,OAAO,KAAK,OAAO,CAAC,EAAE,IACnC,YAAY,CAAC,SAAS,KAAK,SAAS,EAAG;gBAEvC,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC,EAAE,CAAC;gBACpC,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC,EAAE,CAAC;gBAClC,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;gBAEnC,aAAa,GAAG,IAAI,CAAC;aAExB;SAEJ;QAED,IAAK,MAAM,CAAC,eAAe,KAAK,IAAI,EAEhC,aAAa,GAAG,IAAI,CAAC;QAIzB,IAAK,KAAK,KAAK,IAAI,EAEf,WAAU,CAAC,MAAM,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC;QAItC,IAAK,aAAa,IAAI,WAAW,EAAG;YAEhC,WAAW,GAAG,KAAK,CAAC;YAEpB,qBAAqB,CAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAE,CAAC;YAE7D,IAAK,KAAK,KAAK,IAAI,EAEf,EAAE,CAAC,UAAU,CAAE,KAAK,EAAE,WAAU,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC,MAAM,CAAE,CAAC;SAI9D;KAEJ;IAED,SAAS,uBAAuB,GAAG;QAE/B,IAAK,YAAY,CAAC,QAAQ,EAAG,OAAO,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAE3D,OAAO,UAAS,CAAC,oBAAoB,EAAE,CAAC;KAE3C;IAED,SAAS,qBAAqB,CAAE,GAAG,EAAG;QAElC,IAAK,YAAY,CAAC,QAAQ,EAAG,OAAO,EAAE,CAAC,eAAe,CAAE,GAAG,CAAE,CAAC;QAE9D,OAAO,UAAS,CAAC,kBAAkB,CAAE,GAAG,CAAE,CAAC;KAE9C;IAED,SAAS,uBAAuB,CAAE,GAAG,EAAG;QAEpC,IAAK,YAAY,CAAC,QAAQ,EAAG,OAAO,EAAE,CAAC,iBAAiB,CAAE,GAAG,CAAE,CAAC;QAEhE,OAAO,UAAS,CAAC,oBAAoB,CAAE,GAAG,CAAE,CAAC;KAEhD;IAED,SAAS,eAAe,CAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAG;QAEpD,MAAM,SAAS,GAAK,QAAQ,CAAC,SAAS,KAAK,IAAI,AAAE,AAAC;QAElD,IAAI,UAAU,GAAG,aAAa,CAAE,QAAQ,CAAC,EAAE,CAAE,AAAC;QAE9C,IAAK,UAAU,KAAK,SAAS,EAAG;YAE5B,UAAU,GAAG,EAAE,CAAC;YAChB,aAAa,CAAE,QAAQ,CAAC,EAAE,CAAE,GAAG,UAAU,CAAC;SAE7C;QAED,IAAI,QAAQ,GAAG,UAAU,CAAE,OAAO,CAAC,EAAE,CAAE,AAAC;QAExC,IAAK,QAAQ,KAAK,SAAS,EAAG;YAE1B,QAAQ,GAAG,EAAE,CAAC;YACd,UAAU,CAAE,OAAO,CAAC,EAAE,CAAE,GAAG,QAAQ,CAAC;SAEvC;QAED,IAAI,KAAK,GAAG,QAAQ,CAAE,SAAS,CAAE,AAAC;QAElC,IAAK,KAAK,KAAK,SAAS,EAAG;YAEvB,KAAK,GAAG,kBAAkB,CAAE,uBAAuB,EAAE,CAAE,CAAC;YACxD,QAAQ,CAAE,SAAS,CAAE,GAAG,KAAK,CAAC;SAEjC;QAED,OAAO,KAAK,CAAC;KAEhB;IAED,SAAS,kBAAkB,CAAE,GAAG,EAAG;QAE/B,MAAM,aAAa,GAAG,EAAE,AAAC;QACzB,MAAM,iBAAiB,GAAG,EAAE,AAAC;QAC7B,MAAM,iBAAiB,GAAG,EAAE,AAAC;QAE7B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,mBAAmB,EAAE,GAAC,EAAG,CAAG;YAE7C,aAAa,CAAE,GAAC,CAAE,GAAG,CAAC,CAAC;YACvB,iBAAiB,CAAE,GAAC,CAAE,GAAG,CAAC,CAAC;YAC3B,iBAAiB,CAAE,GAAC,CAAE,GAAG,CAAC,CAAC;SAE9B;QAED,OAAO;YAEH,wDAAwD;YACxD,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,KAAK;YAEhB,aAAa,EAAE,aAAa;YAC5B,iBAAiB,EAAE,iBAAiB;YACpC,iBAAiB,EAAE,iBAAiB;YACpC,MAAM,EAAE,GAAG;YACX,UAAU,EAAE,EAAE;YACd,KAAK,EAAE,IAAI;SAEd,CAAC;KAEL;IAED,SAAS,WAAW,CAAE,QAAQ,EAAE,KAAK,EAAG;QAEpC,MAAM,gBAAgB,GAAG,YAAY,CAAC,UAAU,AAAC;QACjD,MAAM,kBAAkB,GAAG,QAAQ,CAAC,UAAU,AAAC;QAE/C,IAAI,aAAa,GAAG,CAAC,AAAC;QAEtB,IAAM,MAAM,GAAG,IAAI,kBAAkB,CAAG;YAEpC,MAAM,eAAe,GAAG,gBAAgB,CAAE,GAAG,CAAE,AAAC;YAChD,MAAM,iBAAiB,GAAG,kBAAkB,CAAE,GAAG,CAAE,AAAC;YAEpD,IAAK,eAAe,KAAK,SAAS,EAAG,OAAO,IAAI,CAAC;YAEjD,IAAK,eAAe,CAAC,SAAS,KAAK,iBAAiB,EAAG,OAAO,IAAI,CAAC;YAEnE,IAAK,eAAe,CAAC,IAAI,KAAK,iBAAiB,CAAC,IAAI,EAAG,OAAO,IAAI,CAAC;YAEnE,aAAa,EAAG,CAAC;SAEpB;QAED,IAAK,YAAY,CAAC,aAAa,KAAK,aAAa,EAAG,OAAO,IAAI,CAAC;QAEhE,IAAK,YAAY,CAAC,KAAK,KAAK,KAAK,EAAG,OAAO,IAAI,CAAC;QAEhD,OAAO,KAAK,CAAC;KAEhB;IAED,SAAS,SAAS,CAAE,QAAQ,EAAE,KAAK,EAAG;QAElC,MAAM,KAAK,GAAG,EAAE,AAAC;QACjB,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,AAAC;QACvC,IAAI,aAAa,GAAG,CAAC,AAAC;QAEtB,IAAM,MAAM,GAAG,IAAI,UAAU,CAAG;YAE5B,MAAM,SAAS,GAAG,UAAU,CAAE,GAAG,CAAE,AAAC;YAEpC,MAAM,IAAI,GAAG,EAAE,AAAC;YAChB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAE3B,IAAK,SAAS,CAAC,IAAI,EAEf,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;YAI/B,KAAK,CAAE,GAAG,CAAE,GAAG,IAAI,CAAC;YAEpB,aAAa,EAAG,CAAC;SAEpB;QAED,YAAY,CAAC,UAAU,GAAG,KAAK,CAAC;QAChC,YAAY,CAAC,aAAa,GAAG,aAAa,CAAC;QAE3C,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;KAE9B;IAED,SAAS,cAAc,GAAG;QAEtB,MAAM,aAAa,GAAG,YAAY,CAAC,aAAa,AAAC;QAEjD,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,aAAa,CAAC,MAAM,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAEpD,aAAa,CAAE,GAAC,CAAE,GAAG,CAAC,CAAC;KAI9B;IAED,SAAS,eAAe,CAAE,SAAS,EAAG;QAElC,yBAAyB,CAAE,SAAS,EAAE,CAAC,CAAE,CAAC;KAE7C;IAED,SAAS,yBAAyB,CAAE,SAAS,EAAE,gBAAgB,EAAG;QAE9D,MAAM,aAAa,GAAG,YAAY,CAAC,aAAa,AAAC;QACjD,MAAM,iBAAiB,GAAG,YAAY,CAAC,iBAAiB,AAAC;QACzD,MAAM,iBAAiB,GAAG,YAAY,CAAC,iBAAiB,AAAC;QAEzD,aAAa,CAAE,SAAS,CAAE,GAAG,CAAC,CAAC;QAE/B,IAAK,iBAAiB,CAAE,SAAS,CAAE,KAAK,CAAC,EAAG;YAExC,EAAE,CAAC,uBAAuB,CAAE,SAAS,CAAE,CAAC;YACxC,iBAAiB,CAAE,SAAS,CAAE,GAAG,CAAC,CAAC;SAEtC;QAED,IAAK,iBAAiB,CAAE,SAAS,CAAE,KAAK,gBAAgB,EAAG;YAEvD,MAAM,SAAS,GAAG,YAAY,CAAC,QAAQ,GAAG,EAAE,GAAG,UAAU,CAAC,GAAG,CAAE,wBAAwB,CAAE,AAAC;YAE1F,SAAS,CAAE,YAAY,CAAC,QAAQ,GAAG,qBAAqB,GAAG,0BAA0B,CAAE,CAAE,SAAS,EAAE,gBAAgB,CAAE,CAAC;YACvH,iBAAiB,CAAE,SAAS,CAAE,GAAG,gBAAgB,CAAC;SAErD;KAEJ;IAED,SAAS,uBAAuB,GAAG;QAE/B,MAAM,aAAa,GAAG,YAAY,CAAC,aAAa,AAAC;QACjD,MAAM,iBAAiB,GAAG,YAAY,CAAC,iBAAiB,AAAC;QAEzD,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,iBAAiB,CAAC,MAAM,EAAE,GAAC,GAAG,EAAE,EAAE,GAAC,EAAG,CAExD,IAAK,iBAAiB,CAAE,GAAC,CAAE,KAAK,aAAa,CAAE,GAAC,CAAE,EAAG;YAEjD,EAAE,CAAC,wBAAwB,CAAE,GAAC,CAAE,CAAC;YACjC,iBAAiB,CAAE,GAAC,CAAE,GAAG,CAAC,CAAC;SAE9B;KAIR;IAED,SAAS,mBAAmB,CAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAG;QAE1E,IAAK,YAAY,CAAC,QAAQ,KAAK,IAAI,IAAM,CAAA,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,CAAA,AAAE,EAErE,EAAE,CAAC,oBAAoB,CAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,CAAE,CAAC;aAI7D,EAAE,CAAC,mBAAmB,CAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,CAAE,CAAC;KAI/E;IAED,SAAS,qBAAqB,CAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAG;QAElE,IAAK,YAAY,CAAC,QAAQ,KAAK,KAAK,IAAM,CAAA,MAAM,CAAC,eAAe,IAAI,QAAQ,CAAC,yBAAyB,CAAA,AAAE,EAAG;YAEvG,IAAK,UAAU,CAAC,GAAG,CAAE,wBAAwB,CAAE,KAAK,IAAI,EAAG,OAAO;SAErE;QAED,cAAc,EAAE,CAAC;QAEjB,MAAM,kBAAkB,GAAG,QAAQ,CAAC,UAAU,AAAC;QAE/C,MAAM,iBAAiB,GAAG,OAAO,CAAC,aAAa,EAAE,AAAC;QAElD,MAAM,8BAA8B,GAAG,QAAQ,CAAC,sBAAsB,AAAC;QAEvE,IAAM,MAAM,IAAI,IAAI,iBAAiB,CAAG;YAEpC,MAAM,gBAAgB,GAAG,iBAAiB,CAAE,IAAI,CAAE,AAAC;YAEnD,IAAK,gBAAgB,CAAC,QAAQ,IAAI,CAAC,EAAG;gBAElC,IAAI,iBAAiB,GAAG,kBAAkB,CAAE,IAAI,CAAE,AAAC;gBAEnD,IAAK,iBAAiB,KAAK,SAAS,EAAG;oBAEnC,IAAK,IAAI,KAAK,gBAAgB,IAAI,MAAM,CAAC,cAAc,EAAG,iBAAiB,GAAG,MAAM,CAAC,cAAc,CAAC;oBACpG,IAAK,IAAI,KAAK,eAAe,IAAI,MAAM,CAAC,aAAa,EAAG,iBAAiB,GAAG,MAAM,CAAC,aAAa,CAAC;iBAEpG;gBAED,IAAK,iBAAiB,KAAK,SAAS,EAAG;oBAEnC,MAAM,UAAU,GAAG,iBAAiB,CAAC,UAAU,AAAC;oBAChD,MAAM,IAAI,GAAG,iBAAiB,CAAC,QAAQ,AAAC;oBAExC,MAAM,SAAS,GAAG,WAAU,CAAC,GAAG,CAAE,iBAAiB,CAAE,AAAC;oBAEtD,yDAAyD;oBAEzD,IAAK,SAAS,KAAK,SAAS,EAAG,SAAS;oBAExC,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM,AAAC;oBAChC,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,AAAC;oBAC5B,MAAM,eAAe,GAAG,SAAS,CAAC,eAAe,AAAC;oBAElD,IAAK,iBAAiB,CAAC,4BAA4B,EAAG;wBAElD,MAAM,IAAI,GAAG,iBAAiB,CAAC,IAAI,AAAC;wBACpC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;wBAC3B,MAAM,MAAM,GAAG,iBAAiB,CAAC,MAAM,AAAC;wBAExC,IAAK,IAAI,CAAC,4BAA4B,EAAG;4BAErC,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,gBAAgB,CAAC,YAAY,EAAE,GAAC,EAAG,CAEpD,yBAAyB,CAAE,gBAAgB,CAAC,QAAQ,GAAG,GAAC,EAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC;4BAItF,IAAK,MAAM,CAAC,eAAe,KAAK,IAAI,IAAI,QAAQ,CAAC,iBAAiB,KAAK,SAAS,EAE5E,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC;yBAIvE,MAEG,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,gBAAgB,CAAC,YAAY,EAAE,GAAC,EAAG,CAEpD,eAAe,CAAE,gBAAgB,CAAC,QAAQ,GAAG,GAAC,CAAE,CAAC;wBAMzD,EAAE,CAAC,UAAU,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;wBAE/B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,gBAAgB,CAAC,YAAY,EAAE,GAAC,EAAG,CAEpD,mBAAmB,CACf,gBAAgB,CAAC,QAAQ,GAAG,GAAC,EAC7B,IAAI,GAAG,gBAAgB,CAAC,YAAY,EACpC,IAAI,EACJ,UAAU,EACV,MAAM,GAAG,eAAe,EACxB,AAAE,CAAA,MAAM,GAAG,AAAE,IAAI,GAAG,gBAAgB,CAAC,YAAY,GAAK,GAAC,CAAA,GAAK,eAAe,CAC9E,CAAC;qBAIT,MAAM;wBAEH,IAAK,iBAAiB,CAAC,0BAA0B,EAAG;4BAEhD,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,gBAAgB,CAAC,YAAY,EAAE,GAAC,EAAG,CAEpD,yBAAyB,CAAE,gBAAgB,CAAC,QAAQ,GAAG,GAAC,EAAE,iBAAiB,CAAC,gBAAgB,CAAE,CAAC;4BAInG,IAAK,MAAM,CAAC,eAAe,KAAK,IAAI,IAAI,QAAQ,CAAC,iBAAiB,KAAK,SAAS,EAE5E,QAAQ,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,gBAAgB,GAAG,iBAAiB,CAAC,KAAK,CAAC;yBAIjG,MAEG,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,gBAAgB,CAAC,YAAY,EAAE,GAAC,EAAG,CAEpD,eAAe,CAAE,gBAAgB,CAAC,QAAQ,GAAG,GAAC,CAAE,CAAC;wBAMzD,EAAE,CAAC,UAAU,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;wBAE/B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,gBAAgB,CAAC,YAAY,EAAE,GAAC,EAAG,CAEpD,mBAAmB,CACf,gBAAgB,CAAC,QAAQ,GAAG,GAAC,EAC7B,IAAI,GAAG,gBAAgB,CAAC,YAAY,EACpC,IAAI,EACJ,UAAU,EACV,IAAI,GAAG,eAAe,EACtB,AAAE,IAAI,GAAG,gBAAgB,CAAC,YAAY,GAAK,GAAC,GAAG,eAAe,CACjE,CAAC;qBAIT;iBAEJ,MAAM,IAAK,8BAA8B,KAAK,SAAS,EAAG;oBAEvD,MAAM,KAAK,GAAG,8BAA8B,CAAE,IAAI,CAAE,AAAC;oBAErD,IAAK,KAAK,KAAK,SAAS,EAEpB,OAAS,KAAK,CAAC,MAAM;wBAEjB,KAAK,CAAC;4BACF,EAAE,CAAC,eAAe,CAAE,gBAAgB,CAAC,QAAQ,EAAE,KAAK,CAAE,CAAC;4BACvD,MAAM;wBAEV,KAAK,CAAC;4BACF,EAAE,CAAC,eAAe,CAAE,gBAAgB,CAAC,QAAQ,EAAE,KAAK,CAAE,CAAC;4BACvD,MAAM;wBAEV,KAAK,CAAC;4BACF,EAAE,CAAC,eAAe,CAAE,gBAAgB,CAAC,QAAQ,EAAE,KAAK,CAAE,CAAC;4BACvD,MAAM;wBAEV;4BACI,EAAE,CAAC,eAAe,CAAE,gBAAgB,CAAC,QAAQ,EAAE,KAAK,CAAE,CAAC;qBAE9D;iBAIR;aAEJ;SAEJ;QAED,uBAAuB,EAAE,CAAC;KAE7B;IAED,SAAS,OAAO,GAAG;QAEf,KAAK,EAAE,CAAC;QAER,IAAM,MAAM,UAAU,IAAI,aAAa,CAAG;YAEtC,MAAM,UAAU,GAAG,aAAa,CAAE,UAAU,CAAE,AAAC;YAE/C,IAAM,MAAM,SAAS,IAAI,UAAU,CAAG;gBAElC,MAAM,QAAQ,GAAG,UAAU,CAAE,SAAS,CAAE,AAAC;gBAEzC,IAAM,MAAM,SAAS,IAAI,QAAQ,CAAG;oBAEhC,uBAAuB,CAAE,QAAQ,CAAE,SAAS,CAAE,CAAC,MAAM,CAAE,CAAC;oBAExD,OAAO,QAAQ,CAAE,SAAS,CAAE,CAAC;iBAEhC;gBAED,OAAO,UAAU,CAAE,SAAS,CAAE,CAAC;aAElC;YAED,OAAO,aAAa,CAAE,UAAU,CAAE,CAAC;SAEtC;KAEJ;IAED,SAAS,uBAAuB,CAAE,QAAQ,EAAG;QAEzC,IAAK,aAAa,CAAE,QAAQ,CAAC,EAAE,CAAE,KAAK,SAAS,EAAG,OAAO;QAEzD,MAAM,UAAU,GAAG,aAAa,CAAE,QAAQ,CAAC,EAAE,CAAE,AAAC;QAEhD,IAAM,MAAM,SAAS,IAAI,UAAU,CAAG;YAElC,MAAM,QAAQ,GAAG,UAAU,CAAE,SAAS,CAAE,AAAC;YAEzC,IAAM,MAAM,SAAS,IAAI,QAAQ,CAAG;gBAEhC,uBAAuB,CAAE,QAAQ,CAAE,SAAS,CAAE,CAAC,MAAM,CAAE,CAAC;gBAExD,OAAO,QAAQ,CAAE,SAAS,CAAE,CAAC;aAEhC;YAED,OAAO,UAAU,CAAE,SAAS,CAAE,CAAC;SAElC;QAED,OAAO,aAAa,CAAE,QAAQ,CAAC,EAAE,CAAE,CAAC;KAEvC;IAED,SAAS,sBAAsB,CAAE,OAAO,EAAG;QAEvC,IAAM,MAAM,UAAU,IAAI,aAAa,CAAG;YAEtC,MAAM,UAAU,GAAG,aAAa,CAAE,UAAU,CAAE,AAAC;YAE/C,IAAK,UAAU,CAAE,OAAO,CAAC,EAAE,CAAE,KAAK,SAAS,EAAG,SAAS;YAEvD,MAAM,QAAQ,GAAG,UAAU,CAAE,OAAO,CAAC,EAAE,CAAE,AAAC;YAE1C,IAAM,MAAM,SAAS,IAAI,QAAQ,CAAG;gBAEhC,uBAAuB,CAAE,QAAQ,CAAE,SAAS,CAAE,CAAC,MAAM,CAAE,CAAC;gBAExD,OAAO,QAAQ,CAAE,SAAS,CAAE,CAAC;aAEhC;YAED,OAAO,UAAU,CAAE,OAAO,CAAC,EAAE,CAAE,CAAC;SAEnC;KAEJ;IAED,SAAS,KAAK,GAAG;QAEb,iBAAiB,EAAE,CAAC;QACpB,WAAW,GAAG,IAAI,CAAC;QAEnB,IAAK,YAAY,KAAK,YAAY,EAAG,OAAO;QAE5C,YAAY,GAAG,YAAY,CAAC;QAC5B,qBAAqB,CAAE,YAAY,CAAC,MAAM,CAAE,CAAC;KAEhD;IAED,6BAA6B;IAE7B,SAAS,iBAAiB,GAAG;QAEzB,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC;QAC5B,YAAY,CAAC,SAAS,GAAG,KAAK,CAAC;KAElC;IAED,OAAO;QAEH,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,KAAK;QACZ,iBAAiB,EAAE,iBAAiB;QACpC,OAAO,EAAE,OAAO;QAChB,uBAAuB,EAAE,uBAAuB;QAChD,sBAAsB,EAAE,sBAAsB;QAE9C,cAAc,EAAE,cAAc;QAC9B,eAAe,EAAE,eAAe;QAChC,uBAAuB,EAAE,uBAAuB;KAEnD,CAAC;CAEL;AAED,SAAS,mBAAmB,CAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAG;IAE/D,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,AAAC;IAEvC,IAAI,IAAI,AAAC;IAET,SAAS,OAAO,CAAE,KAAK,EAAG;QAEtB,IAAI,GAAG,KAAK,CAAC;KAEhB;IAED,SAAS,MAAM,CAAE,KAAK,EAAE,KAAK,EAAG;QAE5B,EAAE,CAAC,UAAU,CAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC;QAEpC,IAAI,CAAC,MAAM,CAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAE,CAAC;KAEjC;IAED,SAAS,eAAe,CAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAG;QAEhD,IAAK,SAAS,KAAK,CAAC,EAAG,OAAO;QAE9B,IAAI,SAAS,EAAE,UAAU,AAAC;QAE1B,IAAK,QAAQ,EAAG;YAEZ,SAAS,GAAG,EAAE,CAAC;YACf,UAAU,GAAG,qBAAqB,CAAC;SAEtC,MAAM;YAEH,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,wBAAwB,CAAE,CAAC;YACvD,UAAU,GAAG,0BAA0B,CAAC;YAExC,IAAK,SAAS,KAAK,IAAI,EAAG;gBAEtB,OAAO,CAAC,KAAK,CAAE,gIAAgI,CAAE,CAAC;gBAClJ,OAAO;aAEV;SAEJ;QAED,SAAS,CAAE,UAAU,CAAE,CAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,CAAE,CAAC;QAEzD,IAAI,CAAC,MAAM,CAAE,KAAK,EAAE,IAAI,EAAE,SAAS,CAAE,CAAC;KAEzC;IAED,EAAE;IAEF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACrB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;CAE1C;AAED,SAAS,iBAAiB,CAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAG;IAErD,IAAI,aAAa,AAAC;IAElB,SAAS,gBAAgB,GAAG;QAExB,IAAK,aAAa,KAAK,SAAS,EAAG,OAAO,aAAa,CAAC;QAExD,IAAK,UAAU,CAAC,GAAG,CAAE,gCAAgC,CAAE,KAAK,IAAI,EAAG;YAE/D,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,gCAAgC,CAAE,AAAC;YAErE,aAAa,GAAG,EAAE,CAAC,YAAY,CAAE,SAAS,CAAC,8BAA8B,CAAE,CAAC;SAE/E,MAEG,aAAa,GAAG,CAAC,CAAC;QAItB,OAAO,aAAa,CAAC;KAExB;IAED,SAAS,eAAe,CAAE,SAAS,EAAG;QAElC,IAAK,SAAS,KAAK,OAAO,EAAG;YAEzB,IAAK,EAAE,CAAC,wBAAwB,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC,SAAS,GAAG,CAAC,IAC1D,EAAE,CAAC,wBAAwB,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC,SAAS,GAAG,CAAC,EAEzD,OAAO,OAAO,CAAC;YAInB,SAAS,GAAG,SAAS,CAAC;SAEzB;QAED,IAAK,SAAS,KAAK,SAAS,EAAG;YAE3B,IAAK,EAAE,CAAC,wBAAwB,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC,SAAS,GAAG,CAAC,IAC1D,EAAE,CAAC,wBAAwB,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC,SAAS,GAAG,CAAC,EAEzD,OAAO,SAAS,CAAC;SAIxB;QAED,OAAO,MAAM,CAAC;KAEjB;IAED,MAAM,QAAQ,GAAG,AAAE,OAAO,sBAAsB,KAAK,WAAW,IAAI,EAAE,YAAY,sBAAsB,IAClG,OAAO,6BAA6B,KAAK,WAAW,IAAI,EAAE,YAAY,6BAA6B,AAAE,AAAC;IAE5G,IAAI,UAAS,GAAG,UAAU,CAAC,SAAS,KAAK,SAAS,GAAG,UAAU,CAAC,SAAS,GAAG,OAAO,AAAC;IACpF,MAAM,YAAY,GAAG,eAAe,CAAE,UAAS,CAAE,AAAC;IAElD,IAAK,YAAY,KAAK,UAAS,EAAG;QAE9B,OAAO,CAAC,IAAI,CAAE,sBAAsB,EAAE,UAAS,EAAE,sBAAsB,EAAE,YAAY,EAAE,UAAU,CAAE,CAAC;QACpG,UAAS,GAAG,YAAY,CAAC;KAE5B;IAED,MAAM,WAAW,GAAG,QAAQ,IAAI,UAAU,CAAC,GAAG,CAAE,oBAAoB,CAAE,AAAC;IAEvE,MAAM,sBAAsB,GAAG,UAAU,CAAC,sBAAsB,KAAK,IAAI,AAAC;IAE1E,MAAM,WAAW,GAAG,EAAE,CAAC,YAAY,CAAE,KAAK,CAAE,AAAC;IAC7C,MAAM,iBAAiB,GAAG,EAAE,CAAC,YAAY,CAAE,KAAK,CAAE,AAAC;IACnD,MAAM,cAAc,GAAG,EAAE,CAAC,YAAY,CAAE,IAAI,CAAE,AAAC;IAC/C,MAAM,cAAc,GAAG,EAAE,CAAC,YAAY,CAAE,KAAK,CAAE,AAAC;IAEhD,MAAM,aAAa,GAAG,EAAE,CAAC,YAAY,CAAE,KAAK,CAAE,AAAC;IAC/C,MAAM,iBAAiB,GAAG,EAAE,CAAC,YAAY,CAAE,KAAK,CAAE,AAAC;IACnD,MAAM,WAAW,GAAG,EAAE,CAAC,YAAY,CAAE,KAAK,CAAE,AAAC;IAC7C,MAAM,mBAAmB,GAAG,EAAE,CAAC,YAAY,CAAE,KAAK,CAAE,AAAC;IAErD,MAAM,cAAc,GAAG,iBAAiB,GAAG,CAAC,AAAC;IAC7C,MAAM,qBAAqB,GAAG,QAAQ,IAAI,UAAU,CAAC,GAAG,CAAE,mBAAmB,CAAE,AAAC;IAChF,MAAM,mBAAmB,GAAG,cAAc,IAAI,qBAAqB,AAAC;IAEpE,MAAM,UAAU,GAAG,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAE,KAAK,CAAE,GAAG,CAAC,AAAC;IAE3D,OAAO;QAEH,QAAQ,EAAE,QAAQ;QAElB,WAAW,EAAE,WAAW;QAExB,gBAAgB,EAAE,gBAAgB;QAClC,eAAe,EAAE,eAAe;QAEhC,SAAS,EAAE,UAAS;QACpB,sBAAsB,EAAE,sBAAsB;QAE9C,WAAW,EAAE,WAAW;QACxB,iBAAiB,EAAE,iBAAiB;QACpC,cAAc,EAAE,cAAc;QAC9B,cAAc,EAAE,cAAc;QAE9B,aAAa,EAAE,aAAa;QAC5B,iBAAiB,EAAE,iBAAiB;QACpC,WAAW,EAAE,WAAW;QACxB,mBAAmB,EAAE,mBAAmB;QAExC,cAAc,EAAE,cAAc;QAC9B,qBAAqB,EAAE,qBAAqB;QAC5C,mBAAmB,EAAE,mBAAmB;QAExC,UAAU,EAAE,UAAU;KAEzB,CAAC;CAEL;AAED,SAAS,aAAa,CAAE,UAAU,EAAG;IAEjC,MAAM,KAAK,GAAG,IAAI,AAAC;IAEnB,IAAI,WAAW,GAAG,IAAI,EAClB,eAAe,GAAG,CAAC,EACnB,oBAAoB,GAAG,KAAK,EAC5B,gBAAgB,GAAG,KAAK,AAAC;IAE7B,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,EACrB,gBAAgB,GAAG,IAAI,OAAO,EAAE,EAEhC,OAAO,GAAG;QAAE,KAAK,EAAE,IAAI;QAAE,WAAW,EAAE,KAAK;KAAE,AAAC;IAElD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;IAEzB,IAAI,CAAC,IAAI,GAAG,SAAW,MAAM,EAAE,mBAAmB,EAAE,MAAM,EAAG;QAEzD,MAAM,OAAO,GACT,MAAM,CAAC,MAAM,KAAK,CAAC,IACnB,mBAAmB,IACnB,4DAA4D;QAC5D,iDAAiD;QACjD,eAAe,KAAK,CAAC,IACrB,oBAAoB,AAAC;QAEzB,oBAAoB,GAAG,mBAAmB,CAAC;QAE3C,WAAW,GAAG,aAAa,CAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAE,CAAC;QACjD,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC;QAEhC,OAAO,OAAO,CAAC;KAElB,CAAC;IAEF,IAAI,CAAC,YAAY,GAAG,WAAY;QAE5B,gBAAgB,GAAG,IAAI,CAAC;QACxB,aAAa,CAAE,IAAI,CAAE,CAAC;KAEzB,CAAC;IAEF,IAAI,CAAC,UAAU,GAAG,WAAY;QAE1B,gBAAgB,GAAG,KAAK,CAAC;QACzB,gBAAgB,EAAE,CAAC;KAEtB,CAAC;IAEF,IAAI,CAAC,QAAQ,GAAG,SAAW,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAG;QAEpD,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,EAClC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,EAC5C,WAAW,GAAG,QAAQ,CAAC,WAAW,AAAC;QAEvC,MAAM,kBAAkB,GAAG,UAAU,CAAC,GAAG,CAAE,QAAQ,CAAE,AAAC;QAEtD,IAAK,CAAE,oBAAoB,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,gBAAgB,IAAI,CAAE,WAAW;YAEtG,4BAA4B;YAE5B,IAAK,gBAAgB,EAEjB,6BAA6B;YAE7B,aAAa,CAAE,IAAI,CAAE,CAAC;iBAItB,gBAAgB,EAAE,CAAC;eAIpB;YAEH,MAAM,OAAO,GAAG,gBAAgB,GAAG,CAAC,GAAG,eAAe,EAClD,OAAO,GAAG,OAAO,GAAG,CAAC,AAAC;YAE1B,IAAI,QAAQ,GAAG,kBAAkB,CAAC,aAAa,IAAI,IAAI,AAAC;YAExD,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,sBAAsB;YAEhD,QAAQ,GAAG,aAAa,CAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAE,CAAC;YAE9D,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,KAAK,OAAO,EAAE,EAAG,GAAC,CAEhC,QAAQ,CAAE,GAAC,CAAE,GAAG,WAAW,CAAE,GAAC,CAAE,CAAC;YAIrC,kBAAkB,CAAC,aAAa,GAAG,QAAQ,CAAC;YAC5C,IAAI,CAAC,eAAe,GAAG,gBAAgB,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YAC7D,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC;SAE7B;KAGJ,CAAC;IAEF,SAAS,gBAAgB,GAAG;QAExB,IAAK,OAAO,CAAC,KAAK,KAAK,WAAW,EAAG;YAEjC,OAAO,CAAC,KAAK,GAAG,WAAW,CAAC;YAC5B,OAAO,CAAC,WAAW,GAAG,eAAe,GAAG,CAAC,CAAC;SAE7C;QAED,KAAK,CAAC,SAAS,GAAG,eAAe,CAAC;QAClC,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC;KAE7B;IAED,SAAS,aAAa,CAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,aAAa,EAAG;QAE/D,MAAM,OAAO,GAAG,MAAM,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,AAAC;QACpD,IAAI,QAAQ,GAAG,IAAI,AAAC;QAEpB,IAAK,OAAO,KAAK,CAAC,EAAG;YAEjB,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;YAEzB,IAAK,aAAa,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAG;gBAE/C,MAAM,QAAQ,GAAG,SAAS,GAAG,OAAO,GAAG,CAAC,EACpC,UAAU,GAAG,MAAM,CAAC,kBAAkB,AAAC;gBAE3C,gBAAgB,CAAC,eAAe,CAAE,UAAU,CAAE,CAAC;gBAE/C,IAAK,QAAQ,KAAK,IAAI,IAAI,QAAQ,CAAC,MAAM,GAAG,QAAQ,EAEhD,QAAQ,GAAG,IAAI,YAAY,CAAE,QAAQ,CAAE,CAAC;gBAI5C,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,EAAE,GAAC,KAAK,OAAO,EAAE,EAAG,GAAC,EAAE,EAAE,IAAI,CAAC,CAAG;oBAE5D,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,GAAC,CAAE,CAAE,CAAC,YAAY,CAAE,UAAU,EAAE,gBAAgB,CAAE,CAAC;oBAEvE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAE,QAAQ,EAAE,EAAE,CAAE,CAAC;oBACrC,QAAQ,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,QAAQ,CAAC;iBAEvC;aAEJ;YAED,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC;YACzB,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;SAE9B;QAED,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC;QAC1B,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC;QAE1B,OAAO,QAAQ,CAAC;KAEnB;CAEJ;AAED,SAAS,aAAa,CAAE,QAAQ,EAAG;IAE/B,IAAI,QAAQ,GAAG,IAAI,OAAO,EAAE,AAAC;IAE7B,SAAS,iBAAiB,CAAE,OAAO,EAAE,OAAO,EAAG;QAE3C,IAAK,OAAO,KAAK,gCAAgC,EAE7C,OAAO,CAAC,OAAO,GAAG,qBAAqB,CAAC;aAErC,IAAK,OAAO,KAAK,gCAAgC,EAEpD,OAAO,CAAC,OAAO,GAAG,qBAAqB,CAAC;QAI5C,OAAO,OAAO,CAAC;KAElB;IAED,SAAS,GAAG,CAAE,OAAO,EAAG;QAEpB,IAAK,OAAO,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,qBAAqB,KAAK,KAAK,EAAG;YAE3E,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,AAAC;YAEhC,IAAK,OAAO,KAAK,gCAAgC,IAAI,OAAO,KAAK,gCAAgC;gBAE7F,IAAK,QAAQ,CAAC,GAAG,CAAE,OAAO,CAAE,EAAG;oBAE3B,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC,OAAO,AAAC;oBAChD,OAAO,iBAAiB,CAAE,OAAO,EAAE,OAAO,CAAC,OAAO,CAAE,CAAC;iBAExD,MAAM;oBAEH,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,AAAC;oBAE5B,IAAK,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAG;wBAE7B,MAAM,YAAY,GAAG,IAAI,qBAAqB,CAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAE,AAAC;wBACnE,YAAY,CAAC,0BAA0B,CAAE,QAAQ,EAAE,OAAO,CAAE,CAAC;wBAC7D,QAAQ,CAAC,GAAG,CAAE,OAAO,EAAE,YAAY,CAAE,CAAC;wBAEtC,OAAO,CAAC,gBAAgB,CAAE,SAAS,EAAE,gBAAgB,CAAE,CAAC;wBAExD,OAAO,iBAAiB,CAAE,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAE,CAAC;qBAErE,MAEG,qDAAqD;oBAErD,OAAO,IAAI,CAAC;iBAInB;aAEJ;SAEJ;QAED,OAAO,OAAO,CAAC;KAElB;IAED,SAAS,gBAAgB,CAAE,KAAK,EAAG;QAE/B,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,AAAC;QAE7B,OAAO,CAAC,mBAAmB,CAAE,SAAS,EAAE,gBAAgB,CAAE,CAAC;QAE3D,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;QAExC,IAAK,OAAO,KAAK,SAAS,EAAG;YAEzB,QAAQ,CAAC,MAAM,CAAE,OAAO,CAAE,CAAC;YAC3B,OAAO,CAAC,OAAO,EAAE,CAAC;SAErB;KAEJ;IAED,SAAS,OAAO,GAAG;QAEf,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;KAE5B;IAED,OAAO;QACH,GAAG,EAAE,GAAG;QACR,OAAO,EAAE,OAAO;KACnB,CAAC;CAEL;AAED,MAAM,kBAAkB,SAAS,MAAM;IAEnC,YAAa,IAAI,GAAG,EAAG,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,MAAM,GAAG,EAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAG;QAEhF,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;QAEjC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEf,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAEjC;IAED,IAAI,CAAE,MAAM,EAAE,SAAS,EAAG;QAEtB,KAAK,CAAC,IAAI,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;QAEhC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QAEtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAE,CAAC;QAE3E,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAG;QAExD,IAAK,IAAI,CAAC,IAAI,KAAK,IAAI,EAEnB,IAAI,CAAC,IAAI,GAAG;YACR,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,CAAC;YACZ,UAAU,EAAE,CAAC;YACb,OAAO,EAAE,CAAC;YACV,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;SACZ,CAAC;QAIN,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAE1B,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAEjC;IAED,eAAe,GAAG;QAEd,IAAK,IAAI,CAAC,IAAI,KAAK,IAAI,EAEnB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAI9B,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAEjC;IAED,sBAAsB,GAAG;QAErB,MAAM,EAAE,GAAG,AAAE,CAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAA,GAAO,CAAA,CAAC,GAAG,IAAI,CAAC,IAAI,CAAA,AAAE,AAAC;QAC1D,MAAM,EAAE,GAAG,AAAE,CAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAA,GAAO,CAAA,CAAC,GAAG,IAAI,CAAC,IAAI,CAAA,AAAE,AAAC;QAC1D,MAAM,EAAE,GAAG,AAAE,CAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAA,GAAK,CAAC,AAAC;QAC1C,MAAM,EAAE,GAAG,AAAE,CAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAA,GAAK,CAAC,AAAC;QAE1C,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,AAAC;QACnB,IAAI,KAAK,GAAG,EAAE,GAAG,EAAE,AAAC;QACpB,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,AAAC;QAClB,IAAI,MAAM,GAAG,EAAE,GAAG,EAAE,AAAC;QAErB,IAAK,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAG;YAE3C,MAAM,MAAM,GAAG,AAAE,CAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAA,GAAK,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,AAAC;YAC5E,MAAM,MAAM,GAAG,AAAE,CAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAA,GAAK,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,AAAC;YAE7E,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YACnC,KAAK,GAAG,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YACxC,GAAG,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YAClC,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;SAE5C;QAED,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC;QAExF,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC,MAAM,EAAE,CAAC;KAEvE;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAE,IAAI,CAAE,AAAC;QAElC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAE3B,IAAK,IAAI,CAAC,IAAI,KAAK,IAAI,EAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAE5E,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,kBAAkB,CAAC,SAAS,CAAC,oBAAoB,GAAG,IAAI,CAAC;AAEzD,MAAM,OAAO,GAAG,CAAC,AAAC;AAElB,8EAA8E;AAC9E,2EAA2E;AAC3E,0EAA0E;AAC1E,4DAA4D;AAC5D,MAAM,eAAe,GAAG;AAAE,SAAK;AAAE,SAAK;AAAE,QAAI;AAAE,SAAK;AAAE,SAAK;AAAE,SAAK;CAAE,AAAC;AAEpE,yEAAyE;AACzE,wDAAwD;AACxD,MAAM,WAAW,GAAG,EAAE,AAAC;AAEvB,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,kBAAkB,EAAE,AAAC;AAC3D,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,KAAK,EAAE,AAAC;AAC9C,IAAI,UAAU,GAAG,IAAI,AAAC;AAEtB,eAAe;AACf,MAAM,GAAG,GAAG,AAAE,CAAA,CAAC,GAAG,IAAI,CAAC,IAAI,CAAE,CAAC,CAAE,CAAA,GAAK,CAAC,AAAC;AACvC,MAAM,OAAO,GAAG,CAAC,GAAG,GAAG,AAAC;AAExB,wEAAwE;AACxE,iEAAiE;AACjE,MAAM,eAAe,GAAG;IACpB,aAAa,CAAC,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACpC,aAAa,CAAC,IAAI,OAAO,CAAE,EAAG,EAAE,CAAC,EAAE,CAAC,CAAE;IACtC,aAAa,CAAC,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE;IACtC,aAAa,CAAC,IAAI,OAAO,CAAE,EAAG,EAAE,CAAC,EAAE,EAAG,CAAE;IACxC,aAAa,CAAC,IAAI,OAAO,CAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAE;IAC5C,aAAa,CAAC,IAAI,OAAO,CAAE,CAAC,EAAE,GAAG,EAAE,CAAE,OAAO,CAAE;IAC9C,aAAa,CAAC,IAAI,OAAO,CAAE,OAAO,EAAE,CAAC,EAAE,GAAG,CAAE;IAC5C,aAAa,CAAC,IAAI,OAAO,CAAE,CAAE,OAAO,EAAE,CAAC,EAAE,GAAG,CAAE;IAC9C,aAAa,CAAC,IAAI,OAAO,CAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAE;IAC5C,aAAa,CAAC,IAAI,OAAO,CAAE,CAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAE;CAAE,AAAC;AAErD;;;;;;;;;;;;;GAaE,CAEF,MAAM,cAAc;IAEhB,YAAa,QAAQ,CAAG;QAEpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAElC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAE9B,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;KAE/C;IAED;;;;;;QAMG,CACH,SAAS,CAAE,KAAK,EAAE,KAAK,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG;QAEjD,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;QAE9C,IAAI,CAAC,QAAQ,CAAE,GAAG,CAAE,CAAC;QAErB,MAAM,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,EAAE,AAAC;QACnD,kBAAkB,CAAC,WAAW,GAAG,IAAI,CAAC;QAEtC,IAAI,CAAC,cAAc,CAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,kBAAkB,CAAE,CAAC;QAE5D,IAAK,KAAK,GAAG,CAAC,EAEV,IAAI,CAAC,KAAK,CAAE,kBAAkB,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAE,CAAC;QAIlD,IAAI,CAAC,WAAW,CAAE,kBAAkB,CAAE,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAE,kBAAkB,CAAE,CAAC;QAEpC,OAAO,kBAAkB,CAAC;KAE7B;IAED;;;;QAIG,CACH,mBAAmB,CAAE,eAAe,EAAE,YAAY,GAAG,IAAI,EAAG;QAExD,OAAO,IAAI,CAAC,YAAY,CAAE,eAAe,EAAE,YAAY,CAAE,CAAC;KAE7D;IAED;;;;QAIG,CACH,WAAW,CAAE,OAAO,EAAE,YAAY,GAAG,IAAI,EAAG;QAExC,OAAO,IAAI,CAAC,YAAY,CAAE,OAAO,EAAE,YAAY,CAAE,CAAC;KAErD;IAED;;;QAGG,CACH,oBAAoB,GAAG;QAEnB,IAAK,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAAG;YAElC,IAAI,CAAC,gBAAgB,GAAG,mBAAmB,EAAE,CAAC;YAC9C,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC;SAElD;KAEJ;IAED;;;QAGG,CACH,4BAA4B,GAAG;QAE3B,IAAK,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAAG;YAEnC,IAAI,CAAC,iBAAiB,GAAG,oBAAoB,EAAE,CAAC;YAChD,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,iBAAiB,CAAE,CAAC;SAEnD;KAEJ;IAED;;;;QAIG,CACH,OAAO,GAAG;QAEN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAK,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;QACtE,IAAK,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;KAE3E;IAED,oBAAoB;IAEpB,QAAQ,CAAE,QAAQ,EAAG;QAEjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAE,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAE,CAAC;KAEhD;IAED,QAAQ,GAAG;QAEP,IAAK,IAAI,CAAC,aAAa,KAAK,IAAI,EAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QAEhE,IAAK,IAAI,CAAC,qBAAqB,KAAK,IAAI,EAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;QAEhF,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,GAAC,EAAG,CAE7C,IAAI,CAAC,UAAU,CAAE,GAAC,CAAE,CAAC,OAAO,EAAE,CAAC;KAItC;IAED,QAAQ,CAAE,YAAY,EAAG;QAErB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAE,UAAU,CAAE,CAAC;QAC7C,YAAY,CAAC,WAAW,GAAG,KAAK,CAAC;QACjC,YAAY,CAAE,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAE,CAAC;KAE/E;IAED,YAAY,CAAE,OAAO,EAAE,YAAY,EAAG;QAElC,IAAK,OAAO,CAAC,OAAO,KAAK,qBAAqB,IAAI,OAAO,CAAC,OAAO,KAAK,qBAAqB,EAEvF,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,EAAE,GAAK,OAAO,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,KAAK,CAAC,KAAK,AAAE,CAAE,CAAC;aAIlH,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAE,CAAC;QAI7C,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;QAE9C,MAAM,kBAAkB,GAAG,YAAY,IAAI,IAAI,CAAC,gBAAgB,EAAE,AAAC;QACnE,IAAI,CAAC,gBAAgB,CAAE,OAAO,EAAE,kBAAkB,CAAE,CAAC;QACrD,IAAI,CAAC,WAAW,CAAE,kBAAkB,CAAE,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAE,kBAAkB,CAAE,CAAC;QAEpC,OAAO,kBAAkB,CAAC;KAE7B;IAED,gBAAgB,GAAG;QAEf,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,SAAS,EAAE,GAAM,CAAE,AAAC;QACrD,MAAM,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,EAAE,AAAC;QAEvC,MAAM,MAAM,GAAG;YACX,SAAS,EAAE,YAAY;YACvB,SAAS,EAAE,YAAY;YACvB,eAAe,EAAE,KAAK;YACtB,IAAI,EAAE,aAAa;YACnB,MAAM,EAAE,UAAU;YAClB,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,KAAK;SACrB,AAAC;QAEF,MAAM,kBAAkB,GAAG,mBAAmB,CAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAE,AAAC;QAExE,IAAK,IAAI,CAAC,qBAAqB,KAAK,IAAI,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,KAAK,KAAK,EAAG;YAErF,IAAK,IAAI,CAAC,qBAAqB,KAAK,IAAI,EAEpC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAIpB,IAAI,CAAC,qBAAqB,GAAG,mBAAmB,CAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAE,CAAC;YAE1E,MAAM,EAAE,OAAO,CAAA,EAAE,GAAG,IAAI,AAAC;YACvB,CAAA,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAA,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,CAAA,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAA,EAAE,GAAG,aAAa,CAAE,OAAO,CAAE,CAAA,CAAG;YAE9G,IAAI,CAAC,aAAa,GAAG,cAAc,CAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;SAEjE;QAED,OAAO,kBAAkB,CAAC;KAE7B;IAED,gBAAgB,CAAE,QAAQ,EAAG;QAEzB,MAAM,OAAO,GAAG,IAAI,IAAI,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC,CAAE,EAAE,QAAQ,CAAE,AAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,OAAO,CAAE,OAAO,EAAE,WAAW,CAAE,CAAC;KAElD;IAED,cAAc,CAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,kBAAkB,EAAG;QAEnD,MAAM,IAAG,GAAG,EAAE,AAAC;QACf,MAAM,OAAM,GAAG,CAAC,AAAC;QACjB,MAAM,UAAU,GAAG,IAAI,iBAAiB,CAAE,IAAG,EAAE,OAAM,EAAE,IAAI,EAAE,GAAG,CAAE,AAAC;QACnE,MAAM,MAAM,GAAG;AAAE,aAAC;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;SAAE,AAAC;QACtC,MAAM,WAAW,GAAG;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,cAAG;AAAE,cAAG;SAAE,AAAC;QAC/C,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,AAAC;QAEhC,MAAM,iBAAiB,GAAG,QAAQ,CAAC,SAAS,AAAC;QAC7C,MAAM,WAAW,GAAG,QAAQ,CAAC,WAAW,AAAC;QACzC,QAAQ,CAAC,aAAa,CAAE,WAAW,CAAE,CAAC;QAEtC,QAAQ,CAAC,WAAW,GAAG,aAAa,CAAC;QACrC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;QAE3B,MAAM,kBAAkB,GAAG,IAAI,iBAAiB,CAAE;YAC9C,IAAI,EAAE,kBAAkB;YACxB,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE,KAAK;YACjB,SAAS,EAAE,KAAK;SACnB,CAAE,AAAC;QAEJ,MAAM,aAAa,GAAG,IAAI,IAAI,CAAE,IAAI,WAAW,EAAE,EAAE,kBAAkB,CAAE,AAAC;QAExE,IAAI,aAAa,GAAG,KAAK,AAAC;QAC1B,MAAM,UAAU,GAAG,KAAK,CAAC,UAAU,AAAC;QAEpC,IAAK,UAAU,EAEX;YAAA,IAAK,UAAU,CAAC,OAAO,EAAG;gBAEtB,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC;gBAC5C,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;gBACxB,aAAa,GAAG,IAAI,CAAC;aAExB;SAAA,MAEE;YAEH,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;YAC7C,aAAa,GAAG,IAAI,CAAC;SAExB;QAED,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAAG;YAE3B,MAAM,GAAG,GAAG,GAAC,GAAG,CAAC,AAAC;YAElB,IAAK,GAAG,KAAK,CAAC,EAAG;gBAEb,UAAU,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,EAAE,MAAM,CAAE,GAAC,CAAE,EAAE,CAAC,CAAE,CAAC;gBACvC,UAAU,CAAC,MAAM,CAAE,WAAW,CAAE,GAAC,CAAE,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;aAE/C,MAAM,IAAK,GAAG,KAAK,CAAC,EAAG;gBAEpB,UAAU,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,GAAC,CAAE,CAAE,CAAC;gBACvC,UAAU,CAAC,MAAM,CAAE,CAAC,EAAE,WAAW,CAAE,GAAC,CAAE,EAAE,CAAC,CAAE,CAAC;aAE/C,MAAM;gBAEH,UAAU,CAAC,EAAE,CAAC,GAAG,CAAE,CAAC,EAAE,MAAM,CAAE,GAAC,CAAE,EAAE,CAAC,CAAE,CAAC;gBACvC,UAAU,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,WAAW,CAAE,GAAC,CAAE,CAAE,CAAC;aAE/C;YAED,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,AAAC;YAE5B,YAAY,CAAE,kBAAkB,EAAE,GAAG,GAAG,IAAI,EAAE,GAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;YAE7E,QAAQ,CAAC,eAAe,CAAE,kBAAkB,CAAE,CAAC;YAE/C,IAAK,aAAa,EAEd,QAAQ,CAAC,MAAM,CAAE,aAAa,EAAE,UAAU,CAAE,CAAC;YAIjD,QAAQ,CAAC,MAAM,CAAE,KAAK,EAAE,UAAU,CAAE,CAAC;SAExC;QAED,aAAa,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACjC,aAAa,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAEjC,QAAQ,CAAC,WAAW,GAAG,WAAW,CAAC;QACnC,QAAQ,CAAC,SAAS,GAAG,iBAAiB,CAAC;QACvC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;KAEjC;IAED,gBAAgB,CAAE,OAAO,EAAE,kBAAkB,EAAG;QAE5C,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,AAAC;QAEhC,MAAM,aAAa,GAAK,OAAO,CAAC,OAAO,KAAK,qBAAqB,IAAI,OAAO,CAAC,OAAO,KAAK,qBAAqB,AAAE,AAAC;QAEjH,IAAK,aAAa,EAAG;YAEjB,IAAK,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAE/B,IAAI,CAAC,gBAAgB,GAAG,mBAAmB,EAAE,CAAC;YAIlD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,AAAE,OAAO,CAAC,qBAAqB,KAAK,KAAK,GAAK,EAAG,GAAG,CAAC,CAAC;SAE3G,MAEG,IAAK,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAEhC,IAAI,CAAC,iBAAiB,GAAG,oBAAoB,EAAE,CAAC;QAMxD,MAAM,QAAQ,GAAG,aAAa,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,AAAC;QAChF,MAAM,IAAI,GAAG,IAAI,IAAI,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC,CAAE,EAAE,QAAQ,CAAE,AAAC;QAExD,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,AAAC;QAEnC,QAAQ,CAAE,QAAQ,CAAE,CAAC,KAAK,GAAG,OAAO,CAAC;QAErC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,AAAC;QAE5B,YAAY,CAAE,kBAAkB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,CAAE,CAAC;QAE7D,QAAQ,CAAC,eAAe,CAAE,kBAAkB,CAAE,CAAC;QAC/C,QAAQ,CAAC,MAAM,CAAE,IAAI,EAAE,WAAW,CAAE,CAAC;KAExC;IAED,WAAW,CAAE,kBAAkB,EAAG;QAE9B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,AAAC;QAChC,MAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,AAAC;QACrC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;QAE3B,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,GAAC,EAAG,CAAG;YAEhD,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,OAAO,CAAE,GAAC,CAAE,GAAG,IAAI,CAAC,OAAO,CAAE,GAAC,CAAE,GAAG,IAAI,CAAC,OAAO,CAAE,GAAC,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC,OAAO,CAAE,GAAC,GAAG,CAAC,CAAE,CAAE,AAAC;YAEjH,MAAM,QAAQ,GAAG,eAAe,CAAE,AAAE,CAAA,GAAC,GAAG,CAAC,CAAA,GAAK,eAAe,CAAC,MAAM,CAAE,AAAC;YAEvE,IAAI,CAAC,KAAK,CAAE,kBAAkB,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;SAE/D;QAED,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAC;KAElC;IAED;;;;;;QAMG,CACH,KAAK,CAAE,kBAAkB,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAG;QAExD,MAAM,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,AAAC;QAExD,IAAI,CAAC,SAAS,CACV,kBAAkB,EAClB,oBAAoB,EACpB,KAAK,EACL,MAAM,EACN,KAAK,EACL,aAAa,EACb,QAAQ,CAAE,CAAC;QAEf,IAAI,CAAC,SAAS,CACV,oBAAoB,EACpB,kBAAkB,EAClB,MAAM,EACN,MAAM,EACN,KAAK,EACL,cAAc,EACd,QAAQ,CAAE,CAAC;KAElB;IAED,SAAS,CAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,QAAQ,EAAG;QAE/E,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,AAAC;QAChC,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,AAAC;QAExC,IAAK,SAAS,KAAK,aAAa,IAAI,SAAS,KAAK,cAAc,EAE5D,OAAO,CAAC,KAAK,CACT,4DAA4D,CAAE,CAAC;QAIvE,gFAAgF;QAChF,MAAM,mBAAmB,GAAG,CAAC,AAAC;QAE9B,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAE,IAAI,CAAC,UAAU,CAAE,MAAM,CAAE,EAAE,YAAY,CAAE,AAAC;QACrE,MAAM,YAAY,GAAG,YAAY,CAAC,QAAQ,AAAC;QAE3C,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAE,KAAK,CAAE,GAAG,CAAC,AAAC;QAC3C,MAAM,eAAe,GAAG,QAAQ,CAAE,YAAY,CAAE,GAAG,IAAI,CAAC,EAAE,GAAK,CAAA,CAAC,GAAG,MAAM,CAAA,AAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAK,CAAA,CAAC,GAAG,WAAW,GAAG,CAAC,CAAA,AAAE,AAAC;QACpH,MAAM,WAAW,GAAG,YAAY,GAAG,eAAe,AAAC;QACnD,MAAM,OAAO,GAAG,QAAQ,CAAE,YAAY,CAAE,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAE,mBAAmB,GAAG,WAAW,CAAE,GAAG,WAAW,AAAC;QAE7G,IAAK,OAAO,GAAG,WAAW,EAEtB,OAAO,CAAC,IAAI,CAAE,CAAC,cAAc,EACzB,YAAY,CAAC,8CAA8C,EAC3D,OAAO,CAAC,oCAAoC,EAAE,WAAW,CAAC,CAAC,CAAE,CAAC;QAItE,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,IAAI,GAAG,GAAG,CAAC,AAAC;QAEZ,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,WAAW,EAAE,EAAG,GAAC,CAAG;YAErC,MAAM,CAAC,GAAG,GAAC,GAAG,WAAW,AAAC;YAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,AAAC;YACvC,OAAO,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;YAEvB,IAAK,GAAC,KAAK,CAAC,EAER,GAAG,IAAI,MAAM,CAAC;iBAEX,IAAK,GAAC,GAAG,OAAO,EAEnB,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC;SAIzB;QAED,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,OAAO,CAAC,MAAM,EAAE,GAAC,EAAG,CAErC,OAAO,CAAE,GAAC,CAAE,GAAG,OAAO,CAAE,GAAC,CAAE,GAAG,GAAG,CAAC;QAItC,YAAY,CAAE,QAAQ,CAAE,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;QAClD,YAAY,CAAE,SAAS,CAAE,CAAC,KAAK,GAAG,OAAO,CAAC;QAC1C,YAAY,CAAE,SAAS,CAAE,CAAC,KAAK,GAAG,OAAO,CAAC;QAC1C,YAAY,CAAE,aAAa,CAAE,CAAC,KAAK,GAAG,SAAS,KAAK,aAAa,CAAC;QAElE,IAAK,QAAQ,EAET,YAAY,CAAE,UAAU,CAAE,CAAC,KAAK,GAAG,QAAQ,CAAC;QAIhD,MAAM,EAAE,OAAO,CAAA,EAAE,GAAG,IAAI,AAAC;QACzB,YAAY,CAAE,QAAQ,CAAE,CAAC,KAAK,GAAG,eAAe,CAAC;QACjD,YAAY,CAAE,QAAQ,CAAE,CAAC,KAAK,GAAG,OAAO,GAAG,KAAK,CAAC;QAEjD,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAE,MAAM,CAAE,AAAC;QAC5C,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU,GAAK,CAAA,MAAM,GAAG,OAAO,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,GAAG,OAAO,GAAG,CAAC,CAAA,AAAE,AAAC;QAC3F,MAAM,CAAC,GAAG,CAAC,GAAK,CAAA,IAAI,CAAC,SAAS,GAAG,UAAU,CAAA,AAAE,AAAC;QAE9C,YAAY,CAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,UAAU,CAAE,CAAC;QAChE,QAAQ,CAAC,eAAe,CAAE,SAAS,CAAE,CAAC;QACtC,QAAQ,CAAC,MAAM,CAAE,QAAQ,EAAE,WAAW,CAAE,CAAC;KAE5C;CAEJ;AAID,SAAS,aAAa,CAAE,MAAM,EAAG;IAE7B,MAAM,SAAS,GAAG,EAAE,AAAC;IACrB,MAAM,QAAQ,GAAG,EAAE,AAAC;IACpB,MAAM,MAAM,GAAG,EAAE,AAAC;IAElB,IAAI,GAAG,GAAG,MAAM,AAAC;IAEjB,MAAM,SAAS,GAAG,MAAM,GAAG,OAAO,GAAG,CAAC,GAAG,eAAe,CAAC,MAAM,AAAC;IAEhE,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,SAAS,EAAE,GAAC,EAAG,CAAG;QAEnC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,GAAG,CAAE,AAAC;QACnC,QAAQ,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;QACzB,IAAI,KAAK,GAAG,CAAG,GAAG,OAAO,AAAC;QAE1B,IAAK,GAAC,GAAG,MAAM,GAAG,OAAO,EAErB,KAAK,GAAG,eAAe,CAAE,GAAC,GAAG,MAAM,GAAG,OAAO,GAAG,CAAC,CAAE,CAAC;aAEjD,IAAK,GAAC,KAAK,CAAC,EAEf,KAAK,GAAG,CAAC,CAAC;QAId,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QAErB,MAAM,SAAS,GAAG,CAAG,GAAK,CAAA,OAAO,GAAG,CAAC,CAAA,AAAE,AAAC;QACxC,MAAM,GAAG,GAAG,CAAE,SAAS,GAAG,CAAC,AAAC;QAC5B,MAAM,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,AAAC;QAC9B,MAAM,GAAG,GAAG;YAAE,GAAG;YAAE,GAAG;YAAE,GAAG;YAAE,GAAG;YAAE,GAAG;YAAE,GAAG;YAAE,GAAG;YAAE,GAAG;YAAE,GAAG;YAAE,GAAG;YAAE,GAAG;YAAE,GAAG;SAAE,AAAC;QAE3E,MAAM,SAAS,GAAG,CAAC,AAAC;QACpB,MAAM,QAAQ,GAAG,CAAC,AAAC;QACnB,MAAM,YAAY,GAAG,CAAC,AAAC;QACvB,MAAM,MAAM,GAAG,CAAC,AAAC;QACjB,MAAM,aAAa,GAAG,CAAC,AAAC;QAExB,MAAM,QAAQ,GAAG,IAAI,YAAY,CAAE,YAAY,GAAG,QAAQ,GAAG,SAAS,CAAE,AAAC;QACzE,MAAM,EAAE,GAAG,IAAI,YAAY,CAAE,MAAM,GAAG,QAAQ,GAAG,SAAS,CAAE,AAAC;QAC7D,MAAM,SAAS,GAAG,IAAI,YAAY,CAAE,aAAa,GAAG,QAAQ,GAAG,SAAS,CAAE,AAAC;QAE3E,IAAM,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,SAAS,EAAE,IAAI,EAAG,CAAG;YAE5C,MAAM,CAAC,GAAG,AAAE,IAAI,GAAG,CAAC,GAAK,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;YACnC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,EAAG,AAAC;YAC7B,MAAM,WAAW,GAAG;gBAChB,CAAC;gBAAE,CAAC;AAAE,iBAAC;gBACP,CAAC,GAAG,CAAC,GAAG,CAAC;gBAAE,CAAC;AAAE,iBAAC;gBACf,CAAC,GAAG,CAAC,GAAG,CAAC;gBAAE,CAAC,GAAG,CAAC;AAAE,iBAAC;gBACnB,CAAC;gBAAE,CAAC;AAAE,iBAAC;gBACP,CAAC,GAAG,CAAC,GAAG,CAAC;gBAAE,CAAC,GAAG,CAAC;AAAE,iBAAC;gBACnB,CAAC;gBAAE,CAAC,GAAG,CAAC;AAAE,iBAAC;aACd,AAAC;YACF,QAAQ,CAAC,GAAG,CAAE,WAAW,EAAE,YAAY,GAAG,QAAQ,GAAG,IAAI,CAAE,CAAC;YAC5D,EAAE,CAAC,GAAG,CAAE,GAAG,EAAE,MAAM,GAAG,QAAQ,GAAG,IAAI,CAAE,CAAC;YACxC,MAAM,IAAI,GAAG;gBAAE,IAAI;gBAAE,IAAI;gBAAE,IAAI;gBAAE,IAAI;gBAAE,IAAI;gBAAE,IAAI;aAAE,AAAC;YACpD,SAAS,CAAC,GAAG,CAAE,IAAI,EAAE,aAAa,GAAG,QAAQ,GAAG,IAAI,CAAE,CAAC;SAE1D;QAED,MAAM,MAAM,GAAG,IAAI,cAAc,EAAE,AAAC;QACpC,MAAM,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,eAAe,CAAE,QAAQ,EAAE,YAAY,CAAE,CAAE,CAAC;QACjF,MAAM,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,eAAe,CAAE,EAAE,EAAE,MAAM,CAAE,CAAE,CAAC;QAC/D,MAAM,CAAC,YAAY,CAAE,WAAW,EAAE,IAAI,eAAe,CAAE,SAAS,EAAE,aAAa,CAAE,CAAE,CAAC;QACpF,SAAS,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAEzB,IAAK,GAAG,GAAG,OAAO,EAEd,GAAG,EAAG,CAAC;KAId;IAED,OAAO;QAAE,SAAS;QAAE,QAAQ;QAAE,MAAM;KAAE,CAAC;CAE1C;AAED,SAAS,mBAAmB,CAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAG;IAElD,MAAM,kBAAkB,GAAG,IAAI,iBAAiB,CAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAE,AAAC;IAC1E,kBAAkB,CAAC,OAAO,CAAC,OAAO,GAAG,uBAAuB,CAAC;IAC7D,kBAAkB,CAAC,OAAO,CAAC,IAAI,GAAG,cAAc,CAAC;IACjD,kBAAkB,CAAC,WAAW,GAAG,IAAI,CAAC;IACtC,OAAO,kBAAkB,CAAC;CAE7B;AAED,SAAS,YAAY,CAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAG;IAEjD,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;IAC3C,MAAM,CAAC,OAAO,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;CAE7C;AAED,SAAS,cAAc,CAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAG;IAE7C,MAAM,OAAO,GAAG,IAAI,YAAY,CAAE,WAAW,CAAE,AAAC;IAChD,MAAM,QAAQ,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,AAAC;IACxC,MAAM,cAAc,GAAG,IAAI,cAAc,CAAE;QAEvC,IAAI,EAAE,uBAAuB;QAE7B,OAAO,EAAE;YACL,GAAG,EAAE,WAAW;YAChB,oBAAoB,EAAE,CAAG,GAAG,KAAK;YACjC,qBAAqB,EAAE,CAAG,GAAG,MAAM;YACnC,gBAAgB,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC;SAClC;QAED,QAAQ,EAAE;YACN,QAAQ,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;YACzB,SAAS,EAAE;gBAAE,KAAK,EAAE,CAAC;aAAE;YACvB,SAAS,EAAE;gBAAE,KAAK,EAAE,OAAO;aAAE;YAC7B,aAAa,EAAE;gBAAE,KAAK,EAAE,KAAK;aAAE;YAC/B,QAAQ,EAAE;gBAAE,KAAK,EAAE,CAAC;aAAE;YACtB,QAAQ,EAAE;gBAAE,KAAK,EAAE,CAAC;aAAE;YACtB,UAAU,EAAE;gBAAE,KAAK,EAAE,QAAQ;aAAE;SAClC;QAED,YAAY,EAAE,sBAAsB,EAAE;QAEtC,cAAc,EAAE,UAAU,CAAA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA4D3B,CAAC;QAED,QAAQ,EAAE,UAAU;QACpB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,KAAK;KAEpB,CAAE,AAAC;IAEJ,OAAO,cAAc,CAAC;CAEzB;AAED,SAAS,oBAAoB,GAAG;IAE5B,OAAO,IAAI,cAAc,CAAE;QAEvB,IAAI,EAAE,yBAAyB;QAE/B,QAAQ,EAAE;YACN,QAAQ,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;SAC5B;QAED,YAAY,EAAE,sBAAsB,EAAE;QAEtC,cAAc,EAAE,UAAU,CAAA,CAAC;;;;;;;;;;;;;;;;;;;SAmB3B,CAAC;QAED,QAAQ,EAAE,UAAU;QACpB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,KAAK;KAEpB,CAAE,CAAC;CAEP;AAED,SAAS,mBAAmB,GAAG;IAE3B,OAAO,IAAI,cAAc,CAAE;QAEvB,IAAI,EAAE,iBAAiB;QAEvB,QAAQ,EAAE;YACN,QAAQ,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;YACzB,YAAY,EAAE;gBAAE,KAAK,EAAE,EAAG;aAAE;SAC/B;QAED,YAAY,EAAE,sBAAsB,EAAE;QAEtC,cAAc,EAAE,UAAU,CAAA,CAAC;;;;;;;;;;;;;;;;SAgB3B,CAAC;QAED,QAAQ,EAAE,UAAU;QACpB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,KAAK;KAEpB,CAAE,CAAC;CAEP;AAED,SAAS,sBAAsB,GAAG;IAE9B,OAAO,UAAU,CAAA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAuDlB,CAAC,CAAC;CAEL;AAED,SAAS,eAAe,CAAE,QAAQ,EAAG;IAEjC,IAAI,UAAU,GAAG,IAAI,OAAO,EAAE,AAAC;IAE/B,IAAI,cAAc,GAAG,IAAI,AAAC;IAE1B,SAAS,GAAG,CAAE,OAAO,EAAG;QAEpB,IAAK,OAAO,IAAI,OAAO,CAAC,SAAS,EAAG;YAEhC,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,AAAC;YAEhC,MAAM,aAAa,GAAK,OAAO,KAAK,gCAAgC,IAAI,OAAO,KAAK,gCAAgC,AAAE,AAAC;YACvH,MAAM,SAAS,GAAK,OAAO,KAAK,qBAAqB,IAAI,OAAO,KAAK,qBAAqB,AAAE,AAAC;YAE7F,yCAAyC;YAEzC,IAAK,aAAa,IAAI,SAAS;gBAE3B,IAAK,OAAO,CAAC,qBAAqB,IAAI,OAAO,CAAC,gBAAgB,KAAK,IAAI,EAAG;oBAEtE,OAAO,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAEjC,IAAI,YAAY,GAAG,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;oBAE7C,IAAK,cAAc,KAAK,IAAI,EAAG,cAAc,GAAG,IAAI,cAAc,CAAE,QAAQ,CAAE,CAAC;oBAE/E,YAAY,GAAG,aAAa,GAAG,cAAc,CAAC,mBAAmB,CAAE,OAAO,EAAE,YAAY,CAAE,GAAG,cAAc,CAAC,WAAW,CAAE,OAAO,EAAE,YAAY,CAAE,CAAC;oBACjJ,UAAU,CAAC,GAAG,CAAE,OAAO,EAAE,YAAY,CAAE,CAAC;oBAExC,OAAO,YAAY,CAAC,OAAO,CAAC;iBAE/B,MAAM;oBAEH,IAAK,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,EAE1B,OAAO,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC,OAAO,CAAC;yBAEtC;wBAEH,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,AAAC;wBAE5B,IAAK,AAAE,aAAa,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAQ,SAAS,IAAI,KAAK,IAAI,qBAAqB,CAAE,KAAK,CAAE,AAAE,EAAG;4BAE9G,IAAK,cAAc,KAAK,IAAI,EAAG,cAAc,GAAG,IAAI,cAAc,CAAE,QAAQ,CAAE,CAAC;4BAE/E,MAAM,YAAY,GAAG,aAAa,GAAG,cAAc,CAAC,mBAAmB,CAAE,OAAO,CAAE,GAAG,cAAc,CAAC,WAAW,CAAE,OAAO,CAAE,AAAC;4BAC3H,UAAU,CAAC,GAAG,CAAE,OAAO,EAAE,YAAY,CAAE,CAAC;4BAExC,OAAO,CAAC,gBAAgB,CAAE,SAAS,EAAE,gBAAgB,CAAE,CAAC;4BAExD,OAAO,YAAY,CAAC,OAAO,CAAC;yBAE/B,MAEG,qDAAqD;wBAErD,OAAO,IAAI,CAAC;qBAInB;iBAEJ;aAEJ;SAEJ;QAED,OAAO,OAAO,CAAC;KAElB;IAED,SAAS,qBAAqB,CAAE,KAAK,EAAG;QAEpC,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,MAAM,MAAM,GAAG,CAAC,AAAC;QAEjB,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,MAAM,EAAE,GAAC,EAAG,CAE7B,IAAK,KAAK,CAAE,GAAC,CAAE,KAAK,SAAS,EAAG,KAAK,EAAG,CAAC;QAI7C,OAAO,KAAK,KAAK,MAAM,CAAC;KAG3B;IAED,SAAS,gBAAgB,CAAE,KAAK,EAAG;QAE/B,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,AAAC;QAE7B,OAAO,CAAC,mBAAmB,CAAE,SAAS,EAAE,gBAAgB,CAAE,CAAC;QAE3D,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;QAE5C,IAAK,SAAS,KAAK,SAAS,EAAG;YAE3B,UAAU,CAAC,MAAM,CAAE,OAAO,CAAE,CAAC;YAC7B,SAAS,CAAC,OAAO,EAAE,CAAC;SAEvB;KAEJ;IAED,SAAS,OAAO,GAAG;QAEf,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;QAE3B,IAAK,cAAc,KAAK,IAAI,EAAG;YAE3B,cAAc,CAAC,OAAO,EAAE,CAAC;YACzB,cAAc,GAAG,IAAI,CAAC;SAEzB;KAEJ;IAED,OAAO;QACH,GAAG,EAAE,GAAG;QACR,OAAO,EAAE,OAAO;KACnB,CAAC;CAEL;AAED,SAAS,eAAe,CAAE,EAAE,EAAG;IAE3B,MAAM,UAAU,GAAG,EAAE,AAAC;IAEtB,SAAS,YAAY,CAAE,IAAI,EAAG;QAE1B,IAAK,UAAU,CAAE,IAAI,CAAE,KAAK,SAAS,EAEjC,OAAO,UAAU,CAAE,IAAI,CAAE,CAAC;QAI9B,IAAI,SAAS,AAAC;QAEd,OAAS,IAAI;YAET,KAAK,qBAAqB;gBACtB,SAAS,GAAG,EAAE,CAAC,YAAY,CAAE,qBAAqB,CAAE,IAAI,EAAE,CAAC,YAAY,CAAE,yBAAyB,CAAE,IAAI,EAAE,CAAC,YAAY,CAAE,4BAA4B,CAAE,CAAC;gBACxJ,MAAM;YAEV,KAAK,gCAAgC;gBACjC,SAAS,GAAG,EAAE,CAAC,YAAY,CAAE,gCAAgC,CAAE,IAAI,EAAE,CAAC,YAAY,CAAE,oCAAoC,CAAE,IAAI,EAAE,CAAC,YAAY,CAAE,uCAAuC,CAAE,CAAC;gBACzL,MAAM;YAEV,KAAK,+BAA+B;gBAChC,SAAS,GAAG,EAAE,CAAC,YAAY,CAAE,+BAA+B,CAAE,IAAI,EAAE,CAAC,YAAY,CAAE,mCAAmC,CAAE,IAAI,EAAE,CAAC,YAAY,CAAE,sCAAsC,CAAE,CAAC;gBACtL,MAAM;YAEV,KAAK,gCAAgC;gBACjC,SAAS,GAAG,EAAE,CAAC,YAAY,CAAE,gCAAgC,CAAE,IAAI,EAAE,CAAC,YAAY,CAAE,uCAAuC,CAAE,CAAC;gBAC9H,MAAM;YAEV;gBACI,SAAS,GAAG,EAAE,CAAC,YAAY,CAAE,IAAI,CAAE,CAAC;SAE3C;QAED,UAAU,CAAE,IAAI,CAAE,GAAG,SAAS,CAAC;QAE/B,OAAO,SAAS,CAAC;KAEpB;IAED,OAAO;QAEH,GAAG,EAAE,SAAW,IAAI,EAAG;YAEnB,OAAO,YAAY,CAAE,IAAI,CAAE,KAAK,IAAI,CAAC;SAExC;QAED,IAAI,EAAE,SAAW,YAAY,EAAG;YAE5B,IAAK,YAAY,CAAC,QAAQ,EAEtB,YAAY,CAAE,wBAAwB,CAAE,CAAC;iBAEtC;gBAEH,YAAY,CAAE,qBAAqB,CAAE,CAAC;gBACtC,YAAY,CAAE,mBAAmB,CAAE,CAAC;gBACpC,YAAY,CAAE,wBAAwB,CAAE,CAAC;gBACzC,YAAY,CAAE,+BAA+B,CAAE,CAAC;gBAChD,YAAY,CAAE,0BAA0B,CAAE,CAAC;gBAC3C,YAAY,CAAE,wBAAwB,CAAE,CAAC;gBACzC,YAAY,CAAE,yBAAyB,CAAE,CAAC;gBAC1C,YAAY,CAAE,wBAAwB,CAAE,CAAC;aAE5C;YAED,YAAY,CAAE,0BAA0B,CAAE,CAAC;YAC3C,YAAY,CAAE,6BAA6B,CAAE,CAAC;YAC9C,YAAY,CAAE,sCAAsC,CAAE,CAAC;SAE1D;QAED,GAAG,EAAE,SAAW,IAAI,EAAG;YAEnB,MAAM,SAAS,GAAG,YAAY,CAAE,IAAI,CAAE,AAAC;YAEvC,IAAK,SAAS,KAAK,IAAI,EAEnB,OAAO,CAAC,IAAI,CAAE,uBAAuB,GAAG,IAAI,GAAG,2BAA2B,CAAE,CAAC;YAIjF,OAAO,SAAS,CAAC;SAEpB;KAEJ,CAAC;CAEL;AAED,SAAS,eAAe,CAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,aAAa,EAAG;IAE5D,MAAM,UAAU,GAAG,EAAE,AAAC;IACtB,MAAM,mBAAmB,GAAG,IAAI,OAAO,EAAE,AAAC;IAE1C,SAAS,iBAAiB,CAAE,KAAK,EAAG;QAEhC,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,AAAC;QAE9B,IAAK,QAAQ,CAAC,KAAK,KAAK,IAAI,EAExB,UAAU,CAAC,MAAM,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC;QAIxC,IAAM,MAAM,IAAI,IAAI,QAAQ,CAAC,UAAU,CAEnC,UAAU,CAAC,MAAM,CAAE,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAE,CAAE,CAAC;QAIrD,QAAQ,CAAC,mBAAmB,CAAE,SAAS,EAAE,iBAAiB,CAAE,CAAC;QAE7D,OAAO,UAAU,CAAE,QAAQ,CAAC,EAAE,CAAE,CAAC;QAEjC,MAAM,SAAS,GAAG,mBAAmB,CAAC,GAAG,CAAE,QAAQ,CAAE,AAAC;QAEtD,IAAK,SAAS,EAAG;YAEb,UAAU,CAAC,MAAM,CAAE,SAAS,CAAE,CAAC;YAC/B,mBAAmB,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC;SAE1C;QAED,aAAa,CAAC,uBAAuB,CAAE,QAAQ,CAAE,CAAC;QAElD,IAAK,QAAQ,CAAC,yBAAyB,KAAK,IAAI,EAE5C,OAAO,QAAQ,CAAC,iBAAiB,CAAC;QAItC,EAAE;QAEF,IAAI,CAAC,MAAM,CAAC,UAAU,EAAG,CAAC;KAE7B;IAED,SAAS,GAAG,CAAE,MAAM,EAAE,QAAQ,EAAG;QAE7B,IAAK,UAAU,CAAE,QAAQ,CAAC,EAAE,CAAE,KAAK,IAAI,EAAG,OAAO,QAAQ,CAAC;QAE1D,QAAQ,CAAC,gBAAgB,CAAE,SAAS,EAAE,iBAAiB,CAAE,CAAC;QAE1D,UAAU,CAAE,QAAQ,CAAC,EAAE,CAAE,GAAG,IAAI,CAAC;QAEjC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAG,CAAC;QAE1B,OAAO,QAAQ,CAAC;KAEnB;IAED,SAAS,MAAM,CAAE,QAAQ,EAAG;QAExB,MAAM,kBAAkB,GAAG,QAAQ,CAAC,UAAU,AAAC;QAE/C,4DAA4D;QAE5D,IAAM,MAAM,IAAI,IAAI,kBAAkB,CAElC,UAAU,CAAC,MAAM,CAAE,kBAAkB,CAAE,IAAI,CAAE,EAAE,KAAK,CAAE,CAAC;QAI3D,gBAAgB;QAEhB,MAAM,eAAe,GAAG,QAAQ,CAAC,eAAe,AAAC;QAEjD,IAAM,MAAM,KAAI,IAAI,eAAe,CAAG;YAElC,MAAM,KAAK,GAAG,eAAe,CAAE,KAAI,CAAE,AAAC;YAEtC,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,EAAG,CAE1C,UAAU,CAAC,MAAM,CAAE,KAAK,CAAE,GAAC,CAAE,EAAE,KAAK,CAAE,CAAC;SAI9C;KAEJ;IAED,SAAS,wBAAwB,CAAE,QAAQ,EAAG;QAE1C,MAAM,OAAO,GAAG,EAAE,AAAC;QAEnB,MAAM,aAAa,GAAG,QAAQ,CAAC,KAAK,AAAC;QACrC,MAAM,gBAAgB,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,AAAC;QACtD,IAAI,OAAO,GAAG,CAAC,AAAC;QAEhB,IAAK,aAAa,KAAK,IAAI,EAAG;YAE1B,MAAM,KAAK,GAAG,aAAa,CAAC,KAAK,AAAC;YAClC,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC;YAEhC,IAAM,IAAI,GAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,GAAC,GAAG,CAAC,EAAE,GAAC,IAAI,CAAC,CAAG;gBAE/C,MAAM,CAAC,GAAG,KAAK,CAAE,GAAC,GAAG,CAAC,CAAE,AAAC;gBACzB,MAAM,CAAC,GAAG,KAAK,CAAE,GAAC,GAAG,CAAC,CAAE,AAAC;gBACzB,MAAM,CAAC,GAAG,KAAK,CAAE,GAAC,GAAG,CAAC,CAAE,AAAC;gBAEzB,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;aAEpC;SAEJ,MAAM;YAEH,MAAM,KAAK,GAAG,gBAAgB,CAAC,KAAK,AAAC;YACrC,OAAO,GAAG,gBAAgB,CAAC,OAAO,CAAC;YAEnC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,AAAE,KAAK,CAAC,MAAM,GAAG,CAAC,GAAK,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,CAAC,CAAG;gBAE3D,MAAM,CAAC,GAAG,IAAC,GAAG,CAAC,AAAC;gBAChB,MAAM,CAAC,GAAG,IAAC,GAAG,CAAC,AAAC;gBAChB,MAAM,CAAC,GAAG,IAAC,GAAG,CAAC,AAAC;gBAEhB,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;aAEpC;SAEJ;QAED,MAAM,SAAS,GAAG,IAAM,CAAA,gBAAgB,CAAE,OAAO,CAAE,GAAG,qBAAqB,GAAG,qBAAqB,CAAA,CAAI,OAAO,EAAE,CAAC,CAAE,AAAC;QACpH,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC;QAE5B,2DAA2D;QAE3D,EAAE;QAEF,MAAM,iBAAiB,GAAG,mBAAmB,CAAC,GAAG,CAAE,QAAQ,CAAE,AAAC;QAE9D,IAAK,iBAAiB,EAAG,UAAU,CAAC,MAAM,CAAE,iBAAiB,CAAE,CAAC;QAEhE,EAAE;QAEF,mBAAmB,CAAC,GAAG,CAAE,QAAQ,EAAE,SAAS,CAAE,CAAC;KAElD;IAED,SAAS,qBAAqB,CAAE,QAAQ,EAAG;QAEvC,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,GAAG,CAAE,QAAQ,CAAE,AAAC;QAE7D,IAAK,gBAAgB,EAAG;YAEpB,MAAM,aAAa,GAAG,QAAQ,CAAC,KAAK,AAAC;YAErC,IAAK,aAAa,KAAK,IAAI,EAEvB,iDAAiD;YAEjD;gBAAA,IAAK,gBAAgB,CAAC,OAAO,GAAG,aAAa,CAAC,OAAO,EAEjD,wBAAwB,CAAE,QAAQ,CAAE,CAAC;aAExC,AAEJ;SAEJ,MAEG,wBAAwB,CAAE,QAAQ,CAAE,CAAC;QAIzC,OAAO,mBAAmB,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;KAE9C;IAED,OAAO;QAEH,GAAG,EAAE,GAAG;QACR,MAAM,EAAE,MAAM;QAEd,qBAAqB,EAAE,qBAAqB;KAE/C,CAAC;CAEL;AAED,SAAS,0BAA0B,CAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAG;IAEtE,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,AAAC;IAEvC,IAAI,IAAI,AAAC;IAET,SAAS,OAAO,CAAE,KAAK,EAAG;QAEtB,IAAI,GAAG,KAAK,CAAC;KAEhB;IAED,IAAI,IAAI,EAAE,eAAe,AAAC;IAE1B,SAAS,QAAQ,CAAE,KAAK,EAAG;QAEvB,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAClB,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;KAE3C;IAED,SAAS,MAAM,CAAE,KAAK,EAAE,KAAK,EAAG;QAE5B,EAAE,CAAC,YAAY,CAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,GAAG,eAAe,CAAE,CAAC;QAE9D,IAAI,CAAC,MAAM,CAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAE,CAAC;KAEjC;IAED,SAAS,eAAe,CAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAG;QAEhD,IAAK,SAAS,KAAK,CAAC,EAAG,OAAO;QAE9B,IAAI,SAAS,EAAE,UAAU,AAAC;QAE1B,IAAK,QAAQ,EAAG;YAEZ,SAAS,GAAG,EAAE,CAAC;YACf,UAAU,GAAG,uBAAuB,CAAC;SAExC,MAAM;YAEH,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,wBAAwB,CAAE,CAAC;YACvD,UAAU,GAAG,4BAA4B,CAAC;YAE1C,IAAK,SAAS,KAAK,IAAI,EAAG;gBAEtB,OAAO,CAAC,KAAK,CAAE,uIAAuI,CAAE,CAAC;gBACzJ,OAAO;aAEV;SAEJ;QAED,SAAS,CAAE,UAAU,CAAE,CAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,GAAG,eAAe,EAAE,SAAS,CAAE,CAAC;QAEjF,IAAI,CAAC,MAAM,CAAE,KAAK,EAAE,IAAI,EAAE,SAAS,CAAE,CAAC;KAEzC;IAED,EAAE;IAEF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACrB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;CAE1C;AAED,SAAS,SAAS,CAAE,EAAE,EAAG;IAErB,MAAM,MAAM,GAAG;QACX,UAAU,EAAE,CAAC;QACb,QAAQ,EAAE,CAAC;KACd,AAAC;IAEF,MAAM,MAAM,GAAG;QACX,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,CAAC;QACR,SAAS,EAAE,CAAC;QACZ,MAAM,EAAE,CAAC;QACT,KAAK,EAAE,CAAC;KACX,AAAC;IAEF,SAAS,MAAM,CAAE,KAAK,EAAE,IAAI,EAAE,aAAa,EAAG;QAE1C,MAAM,CAAC,KAAK,EAAG,CAAC;QAEhB,OAAS,IAAI;YAET,KAAK,CAAC;gBACF,MAAM,CAAC,SAAS,IAAI,aAAa,GAAK,CAAA,KAAK,GAAG,CAAC,CAAA,AAAE,CAAC;gBAClD,MAAM;YAEV,KAAK,CAAC;gBACF,MAAM,CAAC,KAAK,IAAI,aAAa,GAAK,CAAA,KAAK,GAAG,CAAC,CAAA,AAAE,CAAC;gBAC9C,MAAM;YAEV,KAAK,CAAC;gBACF,MAAM,CAAC,KAAK,IAAI,aAAa,GAAK,CAAA,KAAK,GAAG,CAAC,CAAA,AAAE,CAAC;gBAC9C,MAAM;YAEV,KAAK,CAAC;gBACF,MAAM,CAAC,KAAK,IAAI,aAAa,GAAG,KAAK,CAAC;gBACtC,MAAM;YAEV,KAAK,CAAC;gBACF,MAAM,CAAC,MAAM,IAAI,aAAa,GAAG,KAAK,CAAC;gBACvC,MAAM;YAEV;gBACI,OAAO,CAAC,KAAK,CAAE,qCAAqC,EAAE,IAAI,CAAE,CAAC;gBAC7D,MAAM;SAEb;KAEJ;IAED,SAAS,KAAK,GAAG;QAEb,MAAM,CAAC,KAAK,EAAG,CAAC;QAChB,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;QACrB,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAClB,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;KAEpB;IAED,OAAO;QACH,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,MAAM;QACd,QAAQ,EAAE,IAAI;QACd,SAAS,EAAE,IAAI;QACf,KAAK,EAAE,KAAK;QACZ,MAAM,EAAE,MAAM;KACjB,CAAC;CAEL;AAED,SAAS,aAAa,CAAE,CAAC,EAAE,CAAC,EAAG;IAE3B,OAAO,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAC;CAE1B;AAED,SAAS,gBAAgB,CAAE,CAAC,EAAE,CAAC,EAAG;IAE9B,OAAO,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC,CAAE,CAAE,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC,CAAE,CAAE,CAAC;CAElD;AAED,SAAS,WAAW,CAAE,KAAK,EAAE,SAAS,EAAG;IAErC,IAAI,WAAW,GAAG,CAAC,AAAC;IACpB,MAAM,KAAK,GAAG,SAAS,CAAC,4BAA4B,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,AAAC;IAE9F,IAAK,KAAK,YAAY,SAAS,EAAG,WAAW,GAAG,GAAG,CAAC;SAC/C,IAAK,KAAK,YAAY,UAAU,EAAG,WAAW,GAAG,KAAK,CAAC;SACvD,IAAK,KAAK,YAAY,UAAU,EAAG,WAAW,GAAG,UAAU,CAAC;SAC5D,OAAO,CAAC,KAAK,CAAE,kEAAkE,EAAE,KAAK,CAAE,CAAC;IAEhG,KAAK,CAAC,YAAY,CAAE,WAAW,CAAE,CAAC;CAErC;AAED,SAAS,iBAAiB,CAAE,EAAE,EAAE,YAAY,EAAE,QAAQ,EAAG;IAErD,MAAM,cAAc,GAAG,EAAE,AAAC;IAC1B,MAAM,eAAe,GAAG,IAAI,YAAY,CAAE,CAAC,CAAE,AAAC;IAC9C,MAAM,aAAa,GAAG,IAAI,OAAO,EAAE,AAAC;IACpC,MAAM,KAAK,GAAG,IAAI,OAAO,EAAE,AAAC;IAE5B,MAAM,cAAc,GAAG,EAAE,AAAC;IAE1B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,cAAc,CAAE,IAAC,CAAE,GAAG;QAAE,IAAC;AAAE,SAAC;KAAE,CAAC;IAInC,SAAS,MAAM,CAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAG;QAEnD,MAAM,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,AAAC;QAEtD,IAAK,YAAY,CAAC,QAAQ,KAAK,IAAI,EAAG;YAElC,2EAA2E;YAC3E,+EAA+E;YAE/E,MAAM,cAAc,GAAG,QAAQ,CAAC,eAAe,CAAC,QAAQ,IAAI,QAAQ,CAAC,eAAe,CAAC,MAAM,IAAI,QAAQ,CAAC,eAAe,CAAC,KAAK,AAAC;YAC9H,MAAM,iBAAiB,GAAG,AAAE,cAAc,KAAK,SAAS,GAAK,cAAc,CAAC,MAAM,GAAG,CAAC,AAAC;YAEvF,IAAI,KAAK,GAAG,aAAa,CAAC,GAAG,CAAE,QAAQ,CAAE,AAAC;YAE1C,IAAK,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,KAAK,KAAK,iBAAiB,EAAG;gBAE5D,IAAK,KAAK,KAAK,SAAS,EAAG,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBAEnD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,eAAe,CAAC,QAAQ,KAAK,SAAS,AAAC;gBACzE,MAAM,eAAe,GAAG,QAAQ,CAAC,eAAe,CAAC,MAAM,KAAK,SAAS,AAAC;gBACtE,MAAM,cAAc,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,KAAK,SAAS,AAAC;gBAEpE,MAAM,YAAY,GAAG,QAAQ,CAAC,eAAe,CAAC,QAAQ,IAAI,EAAE,AAAC;gBAC7D,MAAM,YAAY,GAAG,QAAQ,CAAC,eAAe,CAAC,MAAM,IAAI,EAAE,AAAC;gBAC3D,MAAM,WAAW,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,IAAI,EAAE,AAAC;gBAEzD,IAAI,eAAe,GAAG,CAAC,AAAC;gBAExB,IAAK,gBAAgB,KAAK,IAAI,EAAG,eAAe,GAAG,CAAC,CAAC;gBACrD,IAAK,eAAe,KAAK,IAAI,EAAG,eAAe,GAAG,CAAC,CAAC;gBACpD,IAAK,cAAc,KAAK,IAAI,EAAG,eAAe,GAAG,CAAC,CAAC;gBAEnD,IAAI,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,GAAG,eAAe,AAAC;gBACjE,IAAI,MAAM,GAAG,CAAC,AAAC;gBAEf,IAAK,KAAK,GAAG,YAAY,CAAC,cAAc,EAAG;oBAEvC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAE,KAAK,GAAG,YAAY,CAAC,cAAc,CAAE,CAAC;oBAC1D,KAAK,GAAG,YAAY,CAAC,cAAc,CAAC;iBAEvC;gBAED,MAAM,MAAM,GAAG,IAAI,YAAY,CAAE,KAAK,GAAG,MAAM,GAAG,CAAC,GAAG,iBAAiB,CAAE,AAAC;gBAE1E,MAAM,OAAO,GAAG,IAAI,gBAAgB,CAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,iBAAiB,CAAE,AAAC;gBACjF,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC;gBACzB,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;gBAE3B,cAAc;gBAEd,MAAM,gBAAgB,GAAG,eAAe,GAAG,CAAC,AAAC;gBAE7C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,iBAAiB,EAAE,IAAC,EAAG,CAAG;oBAE3C,MAAM,WAAW,GAAG,YAAY,CAAE,IAAC,CAAE,AAAC;oBACtC,MAAM,WAAW,GAAG,YAAY,CAAE,IAAC,CAAE,AAAC;oBACtC,MAAM,UAAU,GAAG,WAAW,CAAE,IAAC,CAAE,AAAC;oBAEpC,MAAM,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG,CAAC,GAAG,IAAC,AAAC;oBAEtC,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,EAAG,CAAG;wBAE3C,MAAM,MAAM,GAAG,CAAC,GAAG,gBAAgB,AAAC;wBAEpC,IAAK,gBAAgB,KAAK,IAAI,EAAG;4BAE7B,KAAK,CAAC,mBAAmB,CAAE,WAAW,EAAE,CAAC,CAAE,CAAC;4BAE5C,IAAK,WAAW,CAAC,UAAU,KAAK,IAAI,EAAG,WAAW,CAAE,KAAK,EAAE,WAAW,CAAE,CAAC;4BAEzE,MAAM,CAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC;4BACxC,MAAM,CAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC;4BACxC,MAAM,CAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC;4BACxC,MAAM,CAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;yBAErC;wBAED,IAAK,eAAe,KAAK,IAAI,EAAG;4BAE5B,KAAK,CAAC,mBAAmB,CAAE,WAAW,EAAE,CAAC,CAAE,CAAC;4BAE5C,IAAK,WAAW,CAAC,UAAU,KAAK,IAAI,EAAG,WAAW,CAAE,KAAK,EAAE,WAAW,CAAE,CAAC;4BAEzE,MAAM,CAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC;4BACxC,MAAM,CAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC;4BACxC,MAAM,CAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC;4BACxC,MAAM,CAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;yBAErC;wBAED,IAAK,cAAc,KAAK,IAAI,EAAG;4BAE3B,KAAK,CAAC,mBAAmB,CAAE,UAAU,EAAE,CAAC,CAAE,CAAC;4BAE3C,IAAK,UAAU,CAAC,UAAU,KAAK,IAAI,EAAG,WAAW,CAAE,KAAK,EAAE,UAAU,CAAE,CAAC;4BAEvE,MAAM,CAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC;4BACxC,MAAM,CAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC;4BACxC,MAAM,CAAE,MAAM,GAAG,MAAM,GAAG,EAAE,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC;4BACzC,MAAM,CAAE,MAAM,GAAG,MAAM,GAAG,EAAE,CAAE,GAAG,AAAE,UAAU,CAAC,QAAQ,KAAK,CAAC,GAAK,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;yBAEhF;qBAEJ;iBAEJ;gBAED,KAAK,GAAG;oBACJ,KAAK,EAAE,iBAAiB;oBACxB,OAAO,EAAE,OAAO;oBAChB,IAAI,EAAE,IAAI,OAAO,CAAE,KAAK,EAAE,MAAM,CAAE;iBACrC,CAAC;gBAEF,aAAa,CAAC,GAAG,CAAE,QAAQ,EAAE,KAAK,CAAE,CAAC;gBAErC,SAAS,cAAc,GAAG;oBAEtB,OAAO,CAAC,OAAO,EAAE,CAAC;oBAElB,aAAa,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC;oBAEjC,QAAQ,CAAC,mBAAmB,CAAE,SAAS,EAAE,cAAc,CAAE,CAAC;iBAE7D;gBAED,QAAQ,CAAC,gBAAgB,CAAE,SAAS,EAAE,cAAc,CAAE,CAAC;aAE1D;YAED,EAAE;YAEF,IAAI,kBAAkB,GAAG,CAAC,AAAC;YAE3B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,IAAC,EAAG,CAE9C,kBAAkB,IAAI,gBAAgB,CAAE,IAAC,CAAE,CAAC;YAIhD,MAAM,kBAAkB,GAAG,QAAQ,CAAC,oBAAoB,GAAG,CAAC,GAAG,CAAC,GAAG,kBAAkB,AAAC;YAEtF,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAE,EAAE,EAAE,0BAA0B,EAAE,kBAAkB,CAAE,CAAC;YACrF,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAE,EAAE,EAAE,uBAAuB,EAAE,gBAAgB,CAAE,CAAC;YAEhF,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAE,EAAE,EAAE,qBAAqB,EAAE,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAE,CAAC;YACrF,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAE,EAAE,EAAE,yBAAyB,EAAE,KAAK,CAAC,IAAI,CAAE,CAAC;SAG/E,MAAM;YAEH,4FAA4F;YAC5F,4FAA4F;YAE5F,MAAM,MAAM,GAAG,gBAAgB,KAAK,SAAS,GAAG,CAAC,GAAG,gBAAgB,CAAC,MAAM,AAAC;YAE5E,IAAI,UAAU,GAAG,cAAc,CAAE,QAAQ,CAAC,EAAE,CAAE,AAAC;YAE/C,IAAK,UAAU,KAAK,SAAS,IAAI,UAAU,CAAC,MAAM,KAAK,MAAM,EAAG;gBAE5D,kBAAkB;gBAElB,UAAU,GAAG,EAAE,CAAC;gBAEhB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,MAAM,EAAE,IAAC,EAAG,CAE7B,UAAU,CAAE,IAAC,CAAE,GAAG;oBAAE,IAAC;AAAE,qBAAC;iBAAE,CAAC;gBAI/B,cAAc,CAAE,QAAQ,CAAC,EAAE,CAAE,GAAG,UAAU,CAAC;aAE9C;YAED,qBAAqB;YAErB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,MAAM,EAAE,IAAC,EAAG,CAAG;gBAEhC,MAAM,SAAS,GAAG,UAAU,CAAE,IAAC,CAAE,AAAC;gBAElC,SAAS,CAAE,CAAC,CAAE,GAAG,IAAC,CAAC;gBACnB,SAAS,CAAE,CAAC,CAAE,GAAG,gBAAgB,CAAE,IAAC,CAAE,CAAC;aAE1C;YAED,UAAU,CAAC,IAAI,CAAE,gBAAgB,CAAE,CAAC;YAEpC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,IAAK,IAAC,GAAG,MAAM,IAAI,UAAU,CAAE,IAAC,CAAE,CAAE,CAAC,CAAE,EAAG;gBAEtC,cAAc,CAAE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAG,UAAU,CAAE,IAAC,CAAE,CAAE,CAAC,CAAE,CAAC;gBAChD,cAAc,CAAE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAG,UAAU,CAAE,IAAC,CAAE,CAAE,CAAC,CAAE,CAAC;aAEnD,MAAM;gBAEH,cAAc,CAAE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC,gBAAgB,CAAC;gBACnD,cAAc,CAAE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;aAEhC;YAIL,cAAc,CAAC,IAAI,CAAE,aAAa,CAAE,CAAC;YAErC,MAAM,YAAY,GAAG,QAAQ,CAAC,eAAe,CAAC,QAAQ,AAAC;YACvD,MAAM,YAAY,GAAG,QAAQ,CAAC,eAAe,CAAC,MAAM,AAAC;YAErD,IAAI,kBAAkB,GAAG,CAAC,AAAC;YAE3B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;gBAE3B,MAAM,SAAS,GAAG,cAAc,CAAE,IAAC,CAAE,AAAC;gBACtC,MAAM,KAAK,GAAG,SAAS,CAAE,CAAC,CAAE,AAAC;gBAC7B,MAAM,KAAK,GAAG,SAAS,CAAE,CAAC,CAAE,AAAC;gBAE7B,IAAK,KAAK,KAAK,MAAM,CAAC,gBAAgB,IAAI,KAAK,EAAG;oBAE9C,IAAK,YAAY,IAAI,QAAQ,CAAC,YAAY,CAAE,aAAa,GAAG,IAAC,CAAE,KAAK,YAAY,CAAE,KAAK,CAAE,EAErF,QAAQ,CAAC,YAAY,CAAE,aAAa,GAAG,IAAC,EAAE,YAAY,CAAE,KAAK,CAAE,CAAE,CAAC;oBAItE,IAAK,YAAY,IAAI,QAAQ,CAAC,YAAY,CAAE,aAAa,GAAG,IAAC,CAAE,KAAK,YAAY,CAAE,KAAK,CAAE,EAErF,QAAQ,CAAC,YAAY,CAAE,aAAa,GAAG,IAAC,EAAE,YAAY,CAAE,KAAK,CAAE,CAAE,CAAC;oBAItE,eAAe,CAAE,IAAC,CAAE,GAAG,KAAK,CAAC;oBAC7B,kBAAkB,IAAI,KAAK,CAAC;iBAE/B,MAAM;oBAEH,IAAK,YAAY,IAAI,QAAQ,CAAC,YAAY,CAAE,aAAa,GAAG,IAAC,CAAE,KAAK,IAAI,EAEpE,QAAQ,CAAC,eAAe,CAAE,aAAa,GAAG,IAAC,CAAE,CAAC;oBAIlD,IAAK,YAAY,IAAI,QAAQ,CAAC,YAAY,CAAE,aAAa,GAAG,IAAC,CAAE,KAAK,IAAI,EAEpE,QAAQ,CAAC,eAAe,CAAE,aAAa,GAAG,IAAC,CAAE,CAAC;oBAIlD,eAAe,CAAE,IAAC,CAAE,GAAG,CAAC,CAAC;iBAE5B;aAEJ;YAED,0EAA0E;YAC1E,oGAAoG;YACpG,uGAAuG;YACvG,MAAM,kBAAkB,GAAG,QAAQ,CAAC,oBAAoB,GAAG,CAAC,GAAG,CAAC,GAAG,kBAAkB,AAAC;YAEtF,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAE,EAAE,EAAE,0BAA0B,EAAE,kBAAkB,CAAE,CAAC;YACrF,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAE,EAAE,EAAE,uBAAuB,EAAE,eAAe,CAAE,CAAC;SAElF;KAEJ;IAED,OAAO;QAEH,MAAM,EAAE,MAAM;KAEjB,CAAC;CAEL;AAED,SAAS,YAAY,CAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAG;IAEtD,IAAI,SAAS,GAAG,IAAI,OAAO,EAAE,AAAC;IAE9B,SAAS,MAAM,CAAE,MAAM,EAAG;QAEtB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,AAAC;QAEhC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;QACjC,MAAM,cAAc,GAAG,UAAU,CAAC,GAAG,CAAE,MAAM,EAAE,QAAQ,CAAE,AAAC;QAE1D,wBAAwB;QAExB,IAAK,SAAS,CAAC,GAAG,CAAE,cAAc,CAAE,KAAK,KAAK,EAAG;YAE7C,UAAU,CAAC,MAAM,CAAE,cAAc,CAAE,CAAC;YAEpC,SAAS,CAAC,GAAG,CAAE,cAAc,EAAE,KAAK,CAAE,CAAC;SAE1C;QAED,IAAK,MAAM,CAAC,eAAe,EAAG;YAE1B,IAAK,MAAM,CAAC,gBAAgB,CAAE,SAAS,EAAE,sBAAsB,CAAE,KAAK,KAAK,EAEvE,MAAM,CAAC,gBAAgB,CAAE,SAAS,EAAE,sBAAsB,CAAE,CAAC;YAIjE,UAAU,CAAC,MAAM,CAAE,MAAM,CAAC,cAAc,EAAE,KAAK,CAAE,CAAC;YAElD,IAAK,MAAM,CAAC,aAAa,KAAK,IAAI,EAE9B,UAAU,CAAC,MAAM,CAAE,MAAM,CAAC,aAAa,EAAE,KAAK,CAAE,CAAC;SAIxD;QAED,OAAO,cAAc,CAAC;KAEzB;IAED,SAAS,OAAO,GAAG;QAEf,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;KAE7B;IAED,SAAS,sBAAsB,CAAE,KAAK,EAAG;QAErC,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,AAAC;QAEnC,aAAa,CAAC,mBAAmB,CAAE,SAAS,EAAE,sBAAsB,CAAE,CAAC;QAEvE,UAAU,CAAC,MAAM,CAAE,aAAa,CAAC,cAAc,CAAE,CAAC;QAElD,IAAK,aAAa,CAAC,aAAa,KAAK,IAAI,EAAG,UAAU,CAAC,MAAM,CAAE,aAAa,CAAC,aAAa,CAAE,CAAC;KAEhG;IAED,OAAO;QAEH,MAAM,EAAE,MAAM;QACd,OAAO,EAAE,OAAO;KAEnB,CAAC;CAEL;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAyCG,CAEH,MAAM,YAAY,GAAG,IAAI,OAAO,EAAE,AAAC;AACnC,MAAM,iBAAiB,GAAG,IAAI,gBAAgB,EAAE,AAAC;AACjD,MAAM,cAAc,GAAG,IAAI,aAAa,EAAE,AAAC;AAC3C,MAAM,gBAAgB,GAAG,IAAI,WAAW,EAAE,AAAC;AAE3C,oBAAoB;AAEpB,4DAA4D;AAE5D,MAAM,aAAa,GAAG,EAAE,AAAC;AACzB,MAAM,aAAa,GAAG,EAAE,AAAC;AAEzB,yDAAyD;AAEzD,MAAM,SAAS,GAAG,IAAI,YAAY,CAAE,EAAE,CAAE,AAAC;AACzC,MAAM,SAAS,GAAG,IAAI,YAAY,CAAE,CAAC,CAAE,AAAC;AACxC,MAAM,SAAS,GAAG,IAAI,YAAY,CAAE,CAAC,CAAE,AAAC;AAExC,gDAAgD;AAEhD,SAAS,OAAO,CAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAG;IAE1C,MAAM,SAAS,GAAG,KAAK,CAAE,CAAC,CAAE,AAAC;IAE7B,IAAK,SAAS,IAAI,CAAC,IAAI,SAAS,GAAG,CAAC,EAAG,OAAO,KAAK,CAAC;IACpD,oCAAoC;IACpC,6CAA6C;IAE7C,MAAM,CAAC,GAAG,OAAO,GAAG,SAAS,AAAC;IAC9B,IAAI,CAAC,GAAG,aAAa,CAAE,CAAC,CAAE,AAAC;IAE3B,IAAK,CAAC,KAAK,SAAS,EAAG;QAEnB,CAAC,GAAG,IAAI,YAAY,CAAE,CAAC,CAAE,CAAC;QAC1B,aAAa,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;KAE1B;IAED,IAAK,OAAO,KAAK,CAAC,EAAG;QAEjB,SAAS,CAAC,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAE1B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,IAAC,KAAK,OAAO,EAAE,EAAG,IAAC,CAAG;YAE/C,MAAM,IAAI,SAAS,CAAC;YACpB,KAAK,CAAE,IAAC,CAAE,CAAC,OAAO,CAAE,CAAC,EAAE,MAAM,CAAE,CAAC;SAEnC;KAEJ;IAED,OAAO,CAAC,CAAC;CAEZ;AAED,SAAS,WAAW,CAAE,CAAC,EAAE,CAAC,EAAG;IAEzB,IAAK,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAG,OAAO,KAAK,CAAC;IAE1C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;QAEzC,IAAK,CAAC,CAAE,IAAC,CAAE,KAAK,CAAC,CAAE,IAAC,CAAE,EAAG,OAAO,KAAK,CAAC;KAEzC;IAED,OAAO,IAAI,CAAC;CAEf;AAED,SAAS,SAAS,CAAE,CAAC,EAAE,CAAC,EAAG;IAEvB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAEtC,CAAC,CAAE,IAAC,CAAE,GAAG,CAAC,CAAE,IAAC,CAAE,CAAC;CAIvB;AAED,0BAA0B;AAE1B,SAAS,aAAa,CAAE,QAAQ,EAAE,CAAC,EAAG;IAElC,IAAI,CAAC,GAAG,aAAa,CAAE,CAAC,CAAE,AAAC;IAE3B,IAAK,CAAC,KAAK,SAAS,EAAG;QAEnB,CAAC,GAAG,IAAI,UAAU,CAAE,CAAC,CAAE,CAAC;QACxB,aAAa,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;KAE1B;IAED,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE1B,CAAC,CAAE,IAAC,CAAE,GAAG,QAAQ,CAAC,mBAAmB,EAAE,CAAC;IAI5C,OAAO,CAAC,CAAC;CAEZ;AAED,kBAAkB;AAElB,wEAAwE;AACxE,mCAAmC;AAEnC,gBAAgB;AAEhB,SAAS,WAAW,CAAE,EAAE,EAAE,CAAC,EAAG;IAE1B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IAEzB,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,EAAG,OAAO;IAE/B,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;IAE7B,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;CAElB;AAED,yDAAyD;AAEzD,SAAS,WAAW,CAAE,EAAE,EAAE,CAAC,EAAG;IAE1B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IAEzB,IAAK,CAAC,CAAC,CAAC,KAAK,SAAS,EAElB;QAAA,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,CAAC,CAAC,EAAG;YAE5C,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;YAEpC,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;SAEpB;KAAA,MAEE;QAEH,IAAK,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,EAAG,OAAO;QAEtC,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;QAE9B,SAAS,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;KAEzB;CAEJ;AAED,SAAS,WAAW,CAAE,EAAE,EAAE,CAAC,EAAG;IAE1B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IAEzB,IAAK,CAAC,CAAC,CAAC,KAAK,SAAS,EAElB;QAAA,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,CAAC,CAAC,EAAG;YAElE,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;YAEzC,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;SAEpB;KAAA,MAEE,IAAK,CAAC,CAAC,CAAC,KAAK,SAAS,EAEzB;QAAA,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,CAAC,CAAC,EAAG;YAElE,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;YAEzC,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;SAEpB;KAAA,MAEE;QAEH,IAAK,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,EAAG,OAAO;QAEtC,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;QAE9B,SAAS,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;KAEzB;CAEJ;AAED,SAAS,WAAW,CAAE,EAAE,EAAE,CAAC,EAAG;IAE1B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IAEzB,IAAK,CAAC,CAAC,CAAC,KAAK,SAAS,EAElB;QAAA,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,CAAC,CAAC,EAAG;YAExF,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;YAE9C,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC;SAEpB;KAAA,MAEE;QAEH,IAAK,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,EAAG,OAAO;QAEtC,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;QAE9B,SAAS,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;KAEzB;CAEJ;AAED,mDAAmD;AAEnD,SAAS,UAAU,CAAE,EAAE,EAAE,CAAC,EAAG;IAEzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IACzB,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,AAAC;IAE5B,IAAK,QAAQ,KAAK,SAAS,EAAG;QAE1B,IAAK,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,EAAG,OAAO;QAEtC,EAAE,CAAC,gBAAgB,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAE,CAAC;QAE3C,SAAS,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;KAEzB,MAAM;QAEH,IAAK,WAAW,CAAE,KAAK,EAAE,QAAQ,CAAE,EAAG,OAAO;QAE7C,SAAS,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QAE1B,EAAE,CAAC,gBAAgB,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,CAAE,CAAC;QAEnD,SAAS,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;KAEhC;CAEJ;AAED,SAAS,UAAU,CAAE,EAAE,EAAE,CAAC,EAAG;IAEzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IACzB,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,AAAC;IAE5B,IAAK,QAAQ,KAAK,SAAS,EAAG;QAE1B,IAAK,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,EAAG,OAAO;QAEtC,EAAE,CAAC,gBAAgB,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAE,CAAC;QAE3C,SAAS,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;KAEzB,MAAM;QAEH,IAAK,WAAW,CAAE,KAAK,EAAE,QAAQ,CAAE,EAAG,OAAO;QAE7C,SAAS,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QAE1B,EAAE,CAAC,gBAAgB,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,CAAE,CAAC;QAEnD,SAAS,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;KAEhC;CAEJ;AAED,SAAS,UAAU,CAAE,EAAE,EAAE,CAAC,EAAG;IAEzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IACzB,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,AAAC;IAE5B,IAAK,QAAQ,KAAK,SAAS,EAAG;QAE1B,IAAK,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,EAAG,OAAO;QAEtC,EAAE,CAAC,gBAAgB,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAE,CAAC;QAE3C,SAAS,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;KAEzB,MAAM;QAEH,IAAK,WAAW,CAAE,KAAK,EAAE,QAAQ,CAAE,EAAG,OAAO;QAE7C,SAAS,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QAE1B,EAAE,CAAC,gBAAgB,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,CAAE,CAAC;QAEnD,SAAS,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;KAEhC;CAEJ;AAED,2BAA2B;AAE3B,SAAS,WAAW,CAAE,EAAE,EAAE,CAAC,EAAG;IAE1B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IAEzB,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,EAAG,OAAO;IAE/B,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;IAE7B,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;CAElB;AAED,oDAAoD;AAEpD,SAAS,WAAW,CAAE,EAAE,EAAE,CAAC,EAAG;IAE1B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IAEzB,IAAK,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,EAAG,OAAO;IAEtC,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;IAE9B,SAAS,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;CAEzB;AAED,SAAS,WAAW,CAAE,EAAE,EAAE,CAAC,EAAG;IAE1B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IAEzB,IAAK,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,EAAG,OAAO;IAEtC,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;IAE9B,SAAS,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;CAEzB;AAED,SAAS,WAAW,CAAE,EAAE,EAAE,CAAC,EAAG;IAE1B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IAEzB,IAAK,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,EAAG,OAAO;IAEtC,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;IAE9B,SAAS,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;CAEzB;AAED,0BAA0B;AAE1B,SAAS,YAAY,CAAE,EAAE,EAAE,CAAC,EAAG;IAE3B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IAEzB,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,EAAG,OAAO;IAE/B,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;IAE9B,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;CAElB;AAED,mDAAmD;AAEnD,SAAS,YAAY,CAAE,EAAE,EAAE,CAAC,EAAG;IAE3B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IAEzB,IAAK,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,EAAG,OAAO;IAEtC,EAAE,CAAC,WAAW,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;IAE/B,SAAS,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;CAEzB;AAED,SAAS,YAAY,CAAE,EAAE,EAAE,CAAC,EAAG;IAE3B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IAEzB,IAAK,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,EAAG,OAAO;IAEtC,EAAE,CAAC,WAAW,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;IAE/B,SAAS,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;CAEzB;AAED,SAAS,YAAY,CAAE,EAAE,EAAE,CAAC,EAAG;IAE3B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IAEzB,IAAK,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,EAAG,OAAO;IAEtC,EAAE,CAAC,WAAW,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;IAE/B,SAAS,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;CAEzB;AAGD,6BAA6B;AAE7B,SAAS,UAAU,CAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAG;IAEnC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IACzB,MAAM,IAAI,GAAG,QAAQ,CAAC,mBAAmB,EAAE,AAAC;IAE5C,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,IAAI,EAAG;QAEvB,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAE,CAAC;QAChC,KAAK,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC;KAErB;IAED,QAAQ,CAAC,YAAY,CAAE,CAAC,IAAI,YAAY,EAAE,IAAI,CAAE,CAAC;CAEpD;AAED,SAAS,YAAY,CAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAG;IAErC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IACzB,MAAM,IAAI,GAAG,QAAQ,CAAC,mBAAmB,EAAE,AAAC;IAE5C,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,IAAI,EAAG;QAEvB,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAE,CAAC;QAChC,KAAK,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC;KAErB;IAED,QAAQ,CAAC,YAAY,CAAE,CAAC,IAAI,cAAc,EAAE,IAAI,CAAE,CAAC;CAEtD;AAED,SAAS,UAAU,CAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAG;IAEnC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IACzB,MAAM,IAAI,GAAG,QAAQ,CAAC,mBAAmB,EAAE,AAAC;IAE5C,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,IAAI,EAAG;QAEvB,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAE,CAAC;QAChC,KAAK,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC;KAErB;IAED,QAAQ,CAAC,cAAc,CAAE,CAAC,IAAI,gBAAgB,EAAE,IAAI,CAAE,CAAC;CAE1D;AAED,SAAS,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAG;IAE1C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IACzB,MAAM,IAAI,GAAG,QAAQ,CAAC,mBAAmB,EAAE,AAAC;IAE5C,IAAK,KAAK,CAAE,CAAC,CAAE,KAAK,IAAI,EAAG;QAEvB,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAE,CAAC;QAChC,KAAK,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC;KAErB;IAED,QAAQ,CAAC,iBAAiB,CAAE,CAAC,IAAI,iBAAiB,EAAE,IAAI,CAAE,CAAC;CAE9D;AAED,wDAAwD;AAExD,SAAS,iBAAiB,CAAE,IAAI,EAAG;IAE/B,OAAS,IAAI;QAET,KAAK,IAAM;YAAE,OAAO,WAAW,CAAC,CAAC,QAAQ;QACzC,KAAK,KAAM;YAAE,OAAO,WAAW,CAAC,CAAC,QAAQ;QACzC,KAAK,KAAM;YAAE,OAAO,WAAW,CAAC,CAAC,QAAQ;QACzC,KAAK,KAAM;YAAE,OAAO,WAAW,CAAC,CAAC,QAAQ;QAEzC,KAAK,KAAM;YAAE,OAAO,UAAU,CAAC,CAAC,QAAQ;QACxC,KAAK,KAAM;YAAE,OAAO,UAAU,CAAC,CAAC,QAAQ;QACxC,KAAK,KAAM;YAAE,OAAO,UAAU,CAAC,CAAC,QAAQ;QAExC,KAAK,IAAM,CAAC;QAAC,KAAK,KAAM;YAAE,OAAO,WAAW,CAAC,CAAC,YAAY;QAC1D,KAAK,KAAM,CAAC;QAAC,KAAK,KAAM;YAAE,OAAO,WAAW,CAAC,CAAC,QAAQ;QACtD,KAAK,KAAM,CAAC;QAAC,KAAK,KAAM;YAAE,OAAO,WAAW,CAAC,CAAC,QAAQ;QACtD,KAAK,KAAM,CAAC;QAAC,KAAK,KAAM;YAAE,OAAO,WAAW,CAAC,CAAC,QAAQ;QAEtD,KAAK,IAAM;YAAE,OAAO,YAAY,CAAC,CAAC,OAAO;QACzC,KAAK,KAAM;YAAE,OAAO,YAAY,CAAC,CAAC,QAAQ;QAC1C,KAAK,KAAM;YAAE,OAAO,YAAY,CAAC,CAAC,QAAQ;QAC1C,KAAK,KAAM;YAAE,OAAO,YAAY,CAAC,CAAC,QAAQ;QAE1C,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM;YACP,OAAO,UAAU,CAAC;QAEtB,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM;YACP,OAAO,YAAY,CAAC;QAExB,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM;YACP,OAAO,UAAU,CAAC;QAEtB,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM;YACP,OAAO,iBAAiB,CAAC;KAEhC;CAEJ;AAGD,mBAAmB;AAEnB,SAAS,gBAAgB,CAAE,EAAE,EAAE,CAAC,EAAG;IAE/B,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;CAEjC;AAED,+DAA+D;AAE/D,SAAS,gBAAgB,CAAE,EAAE,EAAE,CAAC,EAAG;IAE/B,MAAM,IAAI,GAAG,OAAO,CAAE,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,AAAC;IAExC,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAE,CAAC;CAEpC;AAED,SAAS,gBAAgB,CAAE,EAAE,EAAE,CAAC,EAAG;IAE/B,MAAM,IAAI,GAAG,OAAO,CAAE,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,AAAC;IAExC,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAE,CAAC;CAEpC;AAED,SAAS,gBAAgB,CAAE,EAAE,EAAE,CAAC,EAAG;IAE/B,MAAM,IAAI,GAAG,OAAO,CAAE,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,AAAC;IAExC,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAE,CAAC;CAEpC;AAED,gEAAgE;AAEhE,SAAS,eAAe,CAAE,EAAE,EAAE,CAAC,EAAG;IAE9B,MAAM,IAAI,GAAG,OAAO,CAAE,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,AAAC;IAExC,EAAE,CAAC,gBAAgB,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;CAEjD;AAED,SAAS,eAAe,CAAE,EAAE,EAAE,CAAC,EAAG;IAE9B,MAAM,IAAI,GAAG,OAAO,CAAE,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,AAAC;IAExC,EAAE,CAAC,gBAAgB,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;CAEjD;AAED,SAAS,eAAe,CAAE,EAAE,EAAE,CAAC,EAAG;IAE9B,MAAM,IAAI,GAAG,OAAO,CAAE,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,CAAE,AAAC;IAEzC,EAAE,CAAC,gBAAgB,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;CAEjD;AAED,6BAA6B;AAE7B,SAAS,gBAAgB,CAAE,EAAE,EAAE,CAAC,EAAG;IAE/B,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;CAEjC;AAED,uDAAuD;AAEvD,SAAS,gBAAgB,CAAE,EAAE,EAAE,CAAC,EAAG;IAE/B,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;CAEjC;AAED,SAAS,gBAAgB,CAAE,EAAE,EAAE,CAAC,EAAG;IAE/B,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;CAEjC;AAED,SAAS,gBAAgB,CAAE,EAAE,EAAE,CAAC,EAAG;IAE/B,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;CAEjC;AAED,4BAA4B;AAE5B,SAAS,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAG;IAEhC,EAAE,CAAC,WAAW,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;CAElC;AAED,sDAAsD;AAEtD,SAAS,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAG;IAEhC,EAAE,CAAC,WAAW,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;CAElC;AAED,SAAS,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAG;IAEhC,EAAE,CAAC,WAAW,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;CAElC;AAED,SAAS,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAG;IAEhC,EAAE,CAAC,WAAW,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAE,CAAC;CAElC;AAGD,+CAA+C;AAE/C,SAAS,eAAe,CAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAG;IAExC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,AAAC;IAEnB,MAAM,KAAK,GAAG,aAAa,CAAE,QAAQ,EAAE,CAAC,CAAE,AAAC;IAE3C,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAE,CAAC;IAElC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE1B,QAAQ,CAAC,YAAY,CAAE,CAAC,CAAE,IAAC,CAAE,IAAI,YAAY,EAAE,KAAK,CAAE,IAAC,CAAE,CAAE,CAAC;CAInE;AAED,SAAS,gBAAgB,CAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAG;IAEzC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,AAAC;IAEnB,MAAM,KAAK,GAAG,aAAa,CAAE,QAAQ,EAAE,CAAC,CAAE,AAAC;IAE3C,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAE,CAAC;IAElC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE1B,QAAQ,CAAC,YAAY,CAAE,CAAC,CAAE,IAAC,CAAE,IAAI,cAAc,EAAE,KAAK,CAAE,IAAC,CAAE,CAAE,CAAC;CAIrE;AAED,SAAS,eAAe,CAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAG;IAExC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,AAAC;IAEnB,MAAM,KAAK,GAAG,aAAa,CAAE,QAAQ,EAAE,CAAC,CAAE,AAAC;IAE3C,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAE,CAAC;IAElC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE1B,QAAQ,CAAC,cAAc,CAAE,CAAC,CAAE,IAAC,CAAE,IAAI,gBAAgB,EAAE,KAAK,CAAE,IAAC,CAAE,CAAE,CAAC;CAIzE;AAED,SAAS,qBAAqB,CAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAG;IAE9C,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,AAAC;IAEnB,MAAM,KAAK,GAAG,aAAa,CAAE,QAAQ,EAAE,CAAC,CAAE,AAAC;IAE3C,EAAE,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAE,CAAC;IAElC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE1B,QAAQ,CAAC,iBAAiB,CAAE,CAAC,CAAE,IAAC,CAAE,IAAI,iBAAiB,EAAE,KAAK,CAAE,IAAC,CAAE,CAAE,CAAC;CAI7E;AAGD,kEAAkE;AAElE,SAAS,kBAAkB,CAAE,IAAI,EAAG;IAEhC,OAAS,IAAI;QAET,KAAK,IAAM;YAAE,OAAO,gBAAgB,CAAC,CAAC,QAAQ;QAC9C,KAAK,KAAM;YAAE,OAAO,gBAAgB,CAAC,CAAC,QAAQ;QAC9C,KAAK,KAAM;YAAE,OAAO,gBAAgB,CAAC,CAAC,QAAQ;QAC9C,KAAK,KAAM;YAAE,OAAO,gBAAgB,CAAC,CAAC,QAAQ;QAE9C,KAAK,KAAM;YAAE,OAAO,eAAe,CAAC,CAAC,QAAQ;QAC7C,KAAK,KAAM;YAAE,OAAO,eAAe,CAAC,CAAC,QAAQ;QAC7C,KAAK,KAAM;YAAE,OAAO,eAAe,CAAC,CAAC,QAAQ;QAE7C,KAAK,IAAM,CAAC;QAAC,KAAK,KAAM;YAAE,OAAO,gBAAgB,CAAC,CAAC,YAAY;QAC/D,KAAK,KAAM,CAAC;QAAC,KAAK,KAAM;YAAE,OAAO,gBAAgB,CAAC,CAAC,QAAQ;QAC3D,KAAK,KAAM,CAAC;QAAC,KAAK,KAAM;YAAE,OAAO,gBAAgB,CAAC,CAAC,QAAQ;QAC3D,KAAK,KAAM,CAAC;QAAC,KAAK,KAAM;YAAE,OAAO,gBAAgB,CAAC,CAAC,QAAQ;QAE3D,KAAK,IAAM;YAAE,OAAO,iBAAiB,CAAC,CAAC,OAAO;QAC9C,KAAK,KAAM;YAAE,OAAO,iBAAiB,CAAC,CAAC,QAAQ;QAC/C,KAAK,KAAM;YAAE,OAAO,iBAAiB,CAAC,CAAC,QAAQ;QAC/C,KAAK,KAAM;YAAE,OAAO,iBAAiB,CAAC,CAAC,QAAQ;QAE/C,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM;YACP,OAAO,eAAe,CAAC;QAE3B,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM;YACP,OAAO,gBAAgB,CAAC;QAE5B,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM;YACP,OAAO,eAAe,CAAC;QAE3B,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM,CAAC;QACZ,KAAK,KAAM;YACP,OAAO,qBAAqB,CAAC;KAEpC;CAEJ;AAED,0BAA0B;AAE1B,SAAS,aAAa,CAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAG;IAE3C,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACjB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAChB,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAE,UAAU,CAAC,IAAI,CAAE,CAAC;AAErD,wCAAwC;CAE3C;AAED,SAAS,gBAAgB,CAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAG;IAE9C,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACjB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAChB,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;IAC5B,IAAI,CAAC,QAAQ,GAAG,kBAAkB,CAAE,UAAU,CAAC,IAAI,CAAE,CAAC;AAEtD,wCAAwC;CAE3C;AAED,gBAAgB,CAAC,SAAS,CAAC,WAAW,GAAG,SAAW,IAAI,EAAG;IAEvD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;IAEzB,IAAK,IAAI,YAAY,YAAY,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,EAE7D,IAAI,CAAC,KAAK,GAAG,IAAI,YAAY,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;IAIjD,SAAS,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;CAE5B,CAAC;AAEF,SAAS,iBAAiB,CAAE,EAAE,EAAG;IAE7B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IAEb,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IACd,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;CAEjB;AAED,iBAAiB,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAW,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAG;IAEpE,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,AAAC;IAErB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;QAE7C,MAAM,CAAC,GAAG,GAAG,CAAE,IAAC,CAAE,AAAC;QACnB,CAAC,CAAC,QAAQ,CAAE,EAAE,EAAE,KAAK,CAAE,CAAC,CAAC,EAAE,CAAE,EAAE,QAAQ,CAAE,CAAC;KAE7C;CAEJ,CAAC;AAEF,oBAAoB;AAEpB,6DAA6D;AAE7D,MAAM,UAAU,wBAAwB,AAAC;AAEzC,WAAW;AACX,iDAAiD;AACjD,oEAAoE;AACpE,qEAAqE;AACrE,EAAE;AACF,oEAAoE;AACpE,oEAAoE;AACpE,wBAAwB;AAExB,SAAS,UAAU,CAAE,SAAS,EAAE,aAAa,EAAG;IAE5C,SAAS,CAAC,GAAG,CAAC,IAAI,CAAE,aAAa,CAAE,CAAC;IACpC,SAAS,CAAC,GAAG,CAAE,aAAa,CAAC,EAAE,CAAE,GAAG,aAAa,CAAC;CAErD;AAED,SAAS,YAAY,CAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAG;IAEjD,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,EACxB,UAAU,GAAG,IAAI,CAAC,MAAM,AAAC;IAE7B,mEAAmE;IACnE,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC;IAEzB,MAAQ,IAAI,CAAG;QAEX,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAE,IAAI,CAAE,EACjC,QAAQ,GAAG,UAAU,CAAC,SAAS,AAAC;QAEpC,IAAI,EAAE,GAAG,KAAK,CAAE,CAAC,CAAE,AAAC;QACpB,MAAM,SAAS,GAAG,KAAK,CAAE,CAAC,CAAE,KAAK,GAAG,EAChC,SAAS,GAAG,KAAK,CAAE,CAAC,CAAE,AAAC;QAE3B,IAAK,SAAS,EAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,qBAAqB;QAEnD,IAAK,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,GAAG,IAAI,QAAQ,GAAG,CAAC,KAAK,UAAU,EAAG;YAE/E,sDAAsD;YAEtD,UAAU,CAAE,SAAS,EAAE,SAAS,KAAK,SAAS,GAC1C,IAAI,aAAa,CAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAE,GACzC,IAAI,gBAAgB,CAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAE,CAAE,CAAC;YAEnD,MAAM;SAET,MAAM;YAEH,4DAA4D;YAE5D,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG,AAAC;YAC1B,IAAI,IAAI,GAAG,GAAG,CAAE,EAAE,CAAE,AAAC;YAErB,IAAK,IAAI,KAAK,SAAS,EAAG;gBAEtB,IAAI,GAAG,IAAI,iBAAiB,CAAE,EAAE,CAAE,CAAC;gBACnC,UAAU,CAAE,SAAS,EAAE,IAAI,CAAE,CAAC;aAEjC;YAED,SAAS,GAAG,IAAI,CAAC;SAEpB;KAEJ;CAEJ;AAED,iBAAiB;AAEjB,SAAS,aAAa,CAAE,EAAE,EAAE,OAAO,EAAG;IAElC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IACd,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAEd,MAAM,CAAC,GAAG,EAAE,CAAC,mBAAmB,CAAE,OAAO,EAAE,KAAK,CAAE,AAAC;IAEnD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,EAAG,IAAC,CAAG;QAE3B,MAAM,IAAI,GAAG,EAAE,CAAC,gBAAgB,CAAE,OAAO,EAAE,IAAC,CAAE,EAC1C,IAAI,GAAG,EAAE,CAAC,kBAAkB,CAAE,OAAO,EAAE,IAAI,CAAC,IAAI,CAAE,AAAC;QAEvD,YAAY,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;KAEpC;CAEJ;AAED,aAAa,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAW,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAG;IAEtE,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAE,AAAC;IAE3B,IAAK,CAAC,KAAK,SAAS,EAAG,CAAC,CAAC,QAAQ,CAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;CAE5D,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,WAAW,GAAG,SAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAG;IAEhE,MAAM,CAAC,GAAG,MAAM,CAAE,IAAI,CAAE,AAAC;IAEzB,IAAK,CAAC,KAAK,SAAS,EAAG,IAAI,CAAC,QAAQ,CAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAE,CAAC;CAEvD,CAAC;AAGF,mBAAmB;AAEnB,aAAa,CAAC,MAAM,GAAG,SAAW,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAG;IAE1D,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;QAE7C,MAAM,CAAC,GAAG,GAAG,CAAE,IAAC,CAAE,EACd,CAAC,GAAG,MAAM,CAAE,CAAC,CAAC,EAAE,CAAE,AAAC;QAEvB,IAAK,CAAC,CAAC,WAAW,KAAK,KAAK,EAExB,uDAAuD;QACvD,CAAC,CAAC,QAAQ,CAAE,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAE,CAAC;KAI3C;CAEJ,CAAC;AAEF,aAAa,CAAC,YAAY,GAAG,SAAW,GAAG,EAAE,MAAM,EAAG;IAElD,MAAM,CAAC,GAAG,EAAE,AAAC;IAEb,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;QAE7C,MAAM,CAAC,GAAG,GAAG,CAAE,IAAC,CAAE,AAAC;QACnB,IAAK,CAAC,CAAC,EAAE,IAAI,MAAM,EAAG,CAAC,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;KAErC;IAED,OAAO,CAAC,CAAC;CAEZ,CAAC;AAEF,SAAS,WAAW,CAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAG;IAErC,MAAM,MAAM,GAAG,EAAE,CAAC,YAAY,CAAE,IAAI,CAAE,AAAC;IAEvC,EAAE,CAAC,YAAY,CAAE,MAAM,EAAE,MAAM,CAAE,CAAC;IAClC,EAAE,CAAC,aAAa,CAAE,MAAM,CAAE,CAAC;IAE3B,OAAO,MAAM,CAAC;CAEjB;AAED,IAAI,cAAc,GAAG,CAAC,AAAC;AAEvB,SAAS,YAAY,CAAE,MAAM,EAAE,SAAS,EAAG;IAEvC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,CAAE,AAAC;IACnC,MAAM,MAAM,GAAG,EAAE,AAAC;IAElB,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAE,SAAS,GAAG,CAAC,EAAE,CAAC,CAAE,AAAC;IAC1C,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,SAAS,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAE,AAAC;IAEnD,IAAM,IAAI,IAAC,GAAG,IAAI,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAE5B,MAAM,CAAC,IAAI,CAAE,AAAE,IAAC,GAAG,CAAC,GAAK,IAAI,GAAG,KAAK,CAAE,IAAC,CAAE,CAAE,CAAC;IAIjD,OAAO,MAAM,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;CAE9B;AAED,SAAS,qBAAqB,CAAE,QAAQ,EAAG;IAEvC,OAAS,QAAQ;QAEb,KAAK,cAAc;YACf,OAAO;gBAAE,QAAQ;gBAAE,WAAW;aAAE,CAAC;QACrC,KAAK,YAAY;YACb,OAAO;gBAAE,MAAM;gBAAE,WAAW;aAAE,CAAC;QACnC;YACI,OAAO,CAAC,IAAI,CAAE,2CAA2C,EAAE,QAAQ,CAAE,CAAC;YACtE,OAAO;gBAAE,QAAQ;gBAAE,WAAW;aAAE,CAAC;KAExC;CAEJ;AAED,SAAS,eAAe,CAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAG;IAEzC,MAAM,MAAM,GAAG,EAAE,CAAC,kBAAkB,CAAE,MAAM,EAAE,KAAK,CAAE,AAAC;IACtD,MAAM,MAAM,GAAG,EAAE,CAAC,gBAAgB,CAAE,MAAM,CAAE,CAAC,IAAI,EAAE,AAAC;IAEpD,IAAK,MAAM,IAAI,MAAM,KAAK,EAAE,EAAG,OAAO,EAAE,CAAC;IAEzC,MAAM,SAAS,GAAG,QAAQ,CAAE,iBAAiB,IAAI,CAAE,MAAM,CAAE,CAAE,CAAC,CAAE,CAAE,AAAC;IAEnE,sCAAsC;IACtC,mHAAmH;IAEnH,OAAO,IAAI,CAAC,WAAW,EAAE,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,YAAY,CAAE,EAAE,CAAC,eAAe,CAAE,MAAM,CAAE,EAAE,SAAS,CAAE,CAAC;CAElH;AAED,SAAS,wBAAwB,CAAE,YAAY,EAAE,QAAQ,EAAG;IAExD,MAAM,UAAU,GAAG,qBAAqB,CAAE,QAAQ,CAAE,AAAC;IACrD,OAAO,OAAO,GAAG,YAAY,GAAG,kCAAkC,GAAG,UAAU,CAAE,CAAC,CAAE,GAAG,UAAU,CAAE,CAAC,CAAE,GAAG,KAAK,CAAC;CAElH;AAED,SAAS,sBAAsB,CAAE,YAAY,EAAE,WAAW,EAAG;IAEzD,IAAI,eAAe,AAAC;IAEpB,OAAS,WAAW;QAEhB,KAAK,iBAAiB;YAClB,eAAe,GAAG,QAAQ,CAAC;YAC3B,MAAM;QAEV,KAAK,mBAAmB;YACpB,eAAe,GAAG,UAAU,CAAC;YAC7B,MAAM;QAEV,KAAK,iBAAiB;YAClB,eAAe,GAAG,iBAAiB,CAAC;YACpC,MAAM;QAEV,KAAK,qBAAqB;YACtB,eAAe,GAAG,YAAY,CAAC;YAC/B,MAAM;QAEV,KAAK,iBAAiB;YAClB,eAAe,GAAG,QAAQ,CAAC;YAC3B,MAAM;QAEV;YACI,OAAO,CAAC,IAAI,CAAE,8CAA8C,EAAE,WAAW,CAAE,CAAC;YAC5E,eAAe,GAAG,QAAQ,CAAC;KAElC;IAED,OAAO,OAAO,GAAG,YAAY,GAAG,0BAA0B,GAAG,eAAe,GAAG,yBAAyB,CAAC;CAE5G;AAED,SAAS,kBAAkB,CAAE,UAAU,EAAG;IAEtC,MAAM,MAAM,GAAG;QACT,UAAU,CAAC,oBAAoB,IAAI,CAAC,CAAE,UAAU,CAAC,kBAAkB,IAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,qBAAqB,IAAI,UAAU,CAAC,kBAAkB,IAAI,UAAU,CAAC,WAAW,IAAI,UAAU,CAAC,QAAQ,KAAK,UAAU,GAAK,iDAAiD,GAAG,EAAE;QACzR,CAAA,UAAU,CAAC,kBAAkB,IAAI,UAAU,CAAC,sBAAsB,CAAA,IAAM,UAAU,CAAC,0BAA0B,GAAG,uCAAuC,GAAG,EAAE;QAC5J,UAAU,CAAC,oBAAoB,IAAI,UAAU,CAAC,4BAA4B,GAAK,0CAA0C,GAAG,EAAE;QAC9H,CAAA,UAAU,CAAC,yBAAyB,IAAI,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,YAAY,CAAA,IAAM,UAAU,CAAC,iCAAiC,GAAG,+CAA+C,GAAG,EAAE;KAClM,AAAC;IAEF,OAAO,MAAM,CAAC,MAAM,CAAE,eAAe,CAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;CAExD;AAED,SAAS,eAAe,CAAE,OAAO,EAAG;IAEhC,MAAM,MAAM,GAAG,EAAE,AAAC;IAElB,IAAM,MAAM,IAAI,IAAI,OAAO,CAAG;QAE1B,MAAM,KAAK,GAAG,OAAO,CAAE,IAAI,CAAE,AAAC;QAE9B,IAAK,KAAK,KAAK,KAAK,EAAG,SAAS;QAEhC,MAAM,CAAC,IAAI,CAAE,UAAU,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,CAAE,CAAC;KAElD;IAED,OAAO,MAAM,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;CAE9B;AAED,SAAS,uBAAuB,CAAE,EAAE,EAAE,OAAO,EAAG;IAE5C,MAAM,UAAU,GAAG,EAAE,AAAC;IAEtB,MAAM,CAAC,GAAG,EAAE,CAAC,mBAAmB,CAAE,OAAO,EAAE,KAAK,CAAE,AAAC;IAEnD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;QAE3B,MAAM,IAAI,GAAG,EAAE,CAAC,eAAe,CAAE,OAAO,EAAE,IAAC,CAAE,AAAC;QAC9C,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,AAAC;QAEvB,IAAI,YAAY,GAAG,CAAC,AAAC;QACrB,IAAK,IAAI,CAAC,IAAI,KAAK,KAAK,EAAG,YAAY,GAAG,CAAC,CAAC;QAC5C,IAAK,IAAI,CAAC,IAAI,KAAK,KAAK,EAAG,YAAY,GAAG,CAAC,CAAC;QAC5C,IAAK,IAAI,CAAC,IAAI,KAAK,KAAK,EAAG,YAAY,GAAG,CAAC,CAAC;QAE5C,0EAA0E;QAE1E,UAAU,CAAE,IAAI,CAAE,GAAG;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,EAAE,CAAC,iBAAiB,CAAE,OAAO,EAAE,IAAI,CAAE;YAC/C,YAAY,EAAE,YAAY;SAC7B,CAAC;KAEL;IAED,OAAO,UAAU,CAAC;CAErB;AAED,SAAS,eAAe,CAAE,MAAM,EAAG;IAE/B,OAAO,MAAM,KAAK,EAAE,CAAC;CAExB;AAED,SAAS,gBAAgB,CAAE,MAAM,EAAE,UAAU,EAAG;IAE5C,OAAO,MAAM,CACR,OAAO,oBAAqB,UAAU,CAAC,YAAY,CAAE,CACrD,OAAO,qBAAsB,UAAU,CAAC,aAAa,CAAE,CACvD,OAAO,0BAA2B,UAAU,CAAC,iBAAiB,CAAE,CAChE,OAAO,sBAAuB,UAAU,CAAC,cAAc,CAAE,CACzD,OAAO,qBAAsB,UAAU,CAAC,aAAa,CAAE,CACvD,OAAO,2BAA4B,UAAU,CAAC,kBAAkB,CAAE,CAClE,OAAO,4BAA6B,UAAU,CAAC,mBAAmB,CAAE,CACpE,OAAO,6BAA8B,UAAU,CAAC,oBAAoB,CAAE,CAAC;CAE/E;AAED,SAAS,wBAAwB,CAAE,MAAM,EAAE,UAAU,EAAG;IAEpD,OAAO,MAAM,CACR,OAAO,yBAA0B,UAAU,CAAC,iBAAiB,CAAE,CAC/D,OAAO,2BAA8B,UAAU,CAAC,iBAAiB,GAAG,UAAU,CAAC,mBAAmB,CAAI,CAAC;CAE/G;AAED,mBAAmB;AAEnB,MAAM,cAAc,qCAAqC,AAAC;AAE1D,SAAS,eAAe,CAAE,MAAM,EAAG;IAE/B,OAAO,MAAM,CAAC,OAAO,CAAE,cAAc,EAAE,eAAe,CAAE,CAAC;CAE5D;AAED,SAAS,eAAe,CAAE,KAAK,EAAE,OAAO,EAAG;IAEvC,MAAM,MAAM,GAAG,WAAW,CAAE,OAAO,CAAE,AAAC;IAEtC,IAAK,MAAM,KAAK,SAAS,EAErB,MAAM,IAAI,KAAK,CAAE,4BAA4B,GAAG,OAAO,GAAG,GAAG,CAAE,CAAC;IAIpE,OAAO,eAAe,CAAE,MAAM,CAAE,CAAC;CAEpC;AAED,eAAe;AAEf,MAAM,2BAA2B,iGAAiG,AAAC;AACnI,MAAM,iBAAiB,iJAAiJ,AAAC;AAEzK,SAAS,WAAW,CAAE,MAAM,EAAG;IAE3B,OAAO,MAAM,CACR,OAAO,CAAE,iBAAiB,EAAE,YAAY,CAAE,CAC1C,OAAO,CAAE,2BAA2B,EAAE,sBAAsB,CAAE,CAAC;CAEvE;AAED,SAAS,sBAAsB,CAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAG;IAE1D,OAAO,CAAC,IAAI,CAAE,qHAAqH,CAAE,CAAC;IACtI,OAAO,YAAY,CAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,CAAE,CAAC;CAErD;AAED,SAAS,YAAY,CAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAG;IAEhD,IAAI,MAAM,GAAG,EAAE,AAAC;IAEhB,IAAM,IAAI,IAAC,GAAG,QAAQ,CAAE,KAAK,CAAE,EAAE,IAAC,GAAG,QAAQ,CAAE,GAAG,CAAE,EAAE,IAAC,EAAG,CAEtD,MAAM,IAAI,OAAO,CACZ,OAAO,iBAAkB,IAAI,GAAG,IAAC,GAAG,IAAI,CAAE,CAC1C,OAAO,yBAA0B,IAAC,CAAE,CAAC;IAI9C,OAAO,MAAM,CAAC;CAEjB;AAED,EAAE;AAEF,SAAS,iBAAiB,CAAE,UAAU,EAAG;IAErC,IAAI,eAAe,GAAG,YAAY,GAAG,UAAU,CAAC,SAAS,GAAG,qBAAqB,GAAG,UAAU,CAAC,SAAS,GAAG,OAAO,AAAC;IAEnH,IAAK,UAAU,CAAC,SAAS,KAAK,OAAO,EAEjC,eAAe,IAAI,0BAA0B,CAAC;SAE3C,IAAK,UAAU,CAAC,SAAS,KAAK,SAAS,EAE1C,eAAe,IAAI,4BAA4B,CAAC;SAE7C,IAAK,UAAU,CAAC,SAAS,KAAK,MAAM,EAEvC,eAAe,IAAI,yBAAyB,CAAC;IAIjD,OAAO,eAAe,CAAC;CAE1B;AAED,SAAS,2BAA2B,CAAE,UAAU,EAAG;IAE/C,IAAI,mBAAmB,GAAG,sBAAsB,AAAC;IAEjD,IAAK,UAAU,CAAC,aAAa,KAAK,YAAY,EAE1C,mBAAmB,GAAG,oBAAoB,CAAC;SAExC,IAAK,UAAU,CAAC,aAAa,KAAK,gBAAgB,EAErD,mBAAmB,GAAG,yBAAyB,CAAC;SAE7C,IAAK,UAAU,CAAC,aAAa,KAAK,YAAY,EAEjD,mBAAmB,GAAG,oBAAoB,CAAC;IAI/C,OAAO,mBAAmB,CAAC;CAE9B;AAED,SAAS,wBAAwB,CAAE,UAAU,EAAG;IAE5C,IAAI,gBAAgB,GAAG,kBAAkB,AAAC;IAE1C,IAAK,UAAU,CAAC,MAAM,EAElB,OAAS,UAAU,CAAC,UAAU;QAE1B,KAAK,qBAAqB,CAAC;QAC3B,KAAK,qBAAqB;YACtB,gBAAgB,GAAG,kBAAkB,CAAC;YACtC,MAAM;QAEV,KAAK,uBAAuB;YACxB,gBAAgB,GAAG,qBAAqB,CAAC;YACzC,MAAM;KAEb;IAIL,OAAO,gBAAgB,CAAC;CAE3B;AAED,SAAS,wBAAwB,CAAE,UAAU,EAAG;IAE5C,IAAI,gBAAgB,GAAG,wBAAwB,AAAC;IAEhD,IAAK,UAAU,CAAC,MAAM,EAElB,OAAS,UAAU,CAAC,UAAU;QAE1B,KAAK,qBAAqB;YAEtB,gBAAgB,GAAG,wBAAwB,CAAC;YAC5C,MAAM;KAEb;IAIL,OAAO,gBAAgB,CAAC;CAE3B;AAED,SAAS,4BAA4B,CAAE,UAAU,EAAG;IAEhD,IAAI,oBAAoB,GAAG,sBAAsB,AAAC;IAElD,IAAK,UAAU,CAAC,MAAM,EAElB,OAAS,UAAU,CAAC,OAAO;QAEvB,KAAK,iBAAiB;YAClB,oBAAoB,GAAG,0BAA0B,CAAC;YAClD,MAAM;QAEV,KAAK,YAAY;YACb,oBAAoB,GAAG,qBAAqB,CAAC;YAC7C,MAAM;QAEV,KAAK,YAAY;YACb,oBAAoB,GAAG,qBAAqB,CAAC;YAC7C,MAAM;KAEb;IAIL,OAAO,oBAAoB,CAAC;CAE/B;AAED,SAAS,kBAAkB,CAAE,UAAU,EAAG;IAEtC,MAAM,WAAW,GAAG,UAAU,CAAC,kBAAkB,AAAC;IAElD,IAAK,WAAW,KAAK,IAAI,EAAG,OAAO,IAAI,CAAC;IAExC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAE,WAAW,GAAG,EAAE,GAAG,CAAC,CAAE,GAAG,CAAC,AAAC;IAErD,MAAM,WAAW,GAAG,CAAG,GAAG,WAAW,AAAC;IAEtC,MAAM,UAAU,GAAG,CAAG,GAAK,CAAA,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,MAAM,CAAE,EAAE,GAAM,CAAE,CAAA,AAAE,AAAC;IAE3E,OAAO;QAAE,UAAU;QAAE,WAAW;QAAE,MAAM;KAAE,CAAC;CAE9C;AAED,SAAS,YAAY,CAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,aAAa,EAAG;IAEnE,4CAA4C;IAC5C,2CAA2C;IAE3C,MAAM,EAAE,GAAG,QAAQ,CAAC,UAAU,EAAE,AAAC;IAEjC,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,AAAC;IAEnC,IAAI,YAAY,GAAG,UAAU,CAAC,YAAY,AAAC;IAC3C,IAAI,cAAc,GAAG,UAAU,CAAC,cAAc,AAAC;IAE/C,MAAM,mBAAmB,GAAG,2BAA2B,CAAE,UAAU,CAAE,AAAC;IACtE,MAAM,gBAAgB,GAAG,wBAAwB,CAAE,UAAU,CAAE,AAAC;IAChE,MAAM,gBAAgB,GAAG,wBAAwB,CAAE,UAAU,CAAE,AAAC;IAChE,MAAM,oBAAoB,GAAG,4BAA4B,CAAE,UAAU,CAAE,AAAC;IACxE,MAAM,gBAAgB,GAAG,kBAAkB,CAAE,UAAU,CAAE,AAAC;IAE1D,MAAM,gBAAgB,GAAG,UAAU,CAAC,QAAQ,GAAG,EAAE,GAAG,kBAAkB,CAAE,UAAU,CAAE,AAAC;IAErF,MAAM,aAAa,GAAG,eAAe,CAAE,OAAO,CAAE,AAAC;IAEjD,MAAM,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,AAAC;IAEnC,IAAI,YAAY,EAAE,cAAc,AAAC;IACjC,IAAI,aAAa,GAAG,UAAU,CAAC,WAAW,GAAG,WAAW,GAAG,UAAU,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,AAAC;IAE9F,IAAK,UAAU,CAAC,mBAAmB,EAAG;QAElC,YAAY,GAAG;YAEX,aAAa;SAEhB,CAAC,MAAM,CAAE,eAAe,CAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;QAEzC,IAAK,YAAY,CAAC,MAAM,GAAG,CAAC,EAExB,YAAY,IAAI,IAAI,CAAC;QAIzB,cAAc,GAAG;YAEb,gBAAgB;YAChB,aAAa;SAEhB,CAAC,MAAM,CAAE,eAAe,CAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;QAEzC,IAAK,cAAc,CAAC,MAAM,GAAG,CAAC,EAE1B,cAAc,IAAI,IAAI,CAAC;KAI9B,MAAM;QAEH,YAAY,GAAG;YAEX,iBAAiB,CAAE,UAAU,CAAE;YAE/B,sBAAsB,GAAG,UAAU,CAAC,UAAU;YAE9C,aAAa;YAEb,UAAU,CAAC,UAAU,GAAG,wBAAwB,GAAG,EAAE;YACrD,UAAU,CAAC,eAAe,GAAG,8BAA8B,GAAG,EAAE;YAEhE,UAAU,CAAC,sBAAsB,GAAG,yBAAyB,GAAG,EAAE;YAElE,oBAAoB,GAAG,UAAU,CAAC,QAAQ;YACxC,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,GAAG,GAAK,iBAAiB,GAAG,EAAE;YAC9D,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,OAAO,GAAK,kBAAkB,GAAG,EAAE;YAErE,UAAU,CAAC,GAAG,GAAG,iBAAiB,GAAG,EAAE;YACvC,UAAU,CAAC,MAAM,GAAG,oBAAoB,GAAG,EAAE;YAC7C,UAAU,CAAC,MAAM,GAAG,UAAU,GAAG,gBAAgB,GAAG,EAAE;YACtD,UAAU,CAAC,QAAQ,GAAG,sBAAsB,GAAG,EAAE;YACjD,UAAU,CAAC,KAAK,GAAG,mBAAmB,GAAG,EAAE;YAC3C,UAAU,CAAC,WAAW,GAAG,yBAAyB,GAAG,EAAE;YACvD,UAAU,CAAC,OAAO,GAAG,qBAAqB,GAAG,EAAE;YAC/C,UAAU,CAAC,SAAS,GAAG,uBAAuB,GAAG,EAAE;YACjD,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,oBAAoB,GAAK,+BAA+B,GAAG,EAAE;YAChG,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,qBAAqB,GAAK,gCAAgC,GAAG,EAAE;YAEpG,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;YACzD,UAAU,CAAC,qBAAqB,GAAG,oCAAoC,GAAG,EAAE;YAC5E,UAAU,CAAC,kBAAkB,GAAG,iCAAiC,GAAG,EAAE;YAEtE,UAAU,CAAC,eAAe,IAAI,UAAU,CAAC,sBAAsB,GAAG,6BAA6B,GAAG,EAAE;YAEpG,UAAU,CAAC,WAAW,GAAG,yBAAyB,GAAG,EAAE;YACvD,UAAU,CAAC,oBAAoB,GAAG,kCAAkC,GAAG,EAAE;YACzE,UAAU,CAAC,gBAAgB,GAAG,8BAA8B,GAAG,EAAE;YAEjE,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;YACzD,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;YACzD,UAAU,CAAC,QAAQ,GAAG,sBAAsB,GAAG,EAAE;YAEjD,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;YACzD,UAAU,CAAC,eAAe,GAAG,6BAA6B,GAAG,EAAE;YAC/D,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;YAEzD,UAAU,CAAC,aAAa,GAAG,2BAA2B,GAAG,EAAE;YAC3D,UAAU,CAAC,iBAAiB,GAAG,+BAA+B,GAAG,EAAE;YAEnE,UAAU,CAAC,cAAc,GAAG,qBAAqB,GAAG,EAAE;YACtD,UAAU,CAAC,YAAY,GAAG,mBAAmB,GAAG,EAAE;YAClD,UAAU,CAAC,YAAY,GAAG,yBAAyB,GAAG,EAAE;YACxD,UAAU,CAAC,SAAS,GAAG,gBAAgB,GAAG,EAAE;YAC5C,UAAU,CAAC,aAAa,GAAG,yBAAyB,GAAG,EAAE;YAEzD,UAAU,CAAC,WAAW,GAAG,qBAAqB,GAAG,EAAE;YAEnD,UAAU,CAAC,QAAQ,GAAG,sBAAsB,GAAG,EAAE;YACjD,UAAU,CAAC,gBAAgB,GAAG,sBAAsB,GAAG,EAAE;YAEzD,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;YACzD,UAAU,CAAC,YAAY,IAAI,UAAU,CAAC,WAAW,KAAK,KAAK,GAAG,0BAA0B,GAAG,EAAE;YAC3F,UAAU,CAAC,WAAW,IAAI,UAAU,CAAC,QAAQ,GAAK,yBAAyB,GAAG,EAAE;YAChF,UAAU,CAAC,iBAAiB,GAAG,CAAC,IAAI,UAAU,CAAC,QAAQ,GAAK,8BAA8B,GAAG,EAAE;YAC/F,UAAU,CAAC,iBAAiB,GAAG,CAAC,IAAI,UAAU,CAAC,QAAQ,GAAK,sCAAsC,GAAG,UAAU,CAAC,kBAAkB,GAAG,EAAE;YACvI,UAAU,CAAC,iBAAiB,GAAG,CAAC,IAAI,UAAU,CAAC,QAAQ,GAAK,6BAA6B,GAAG,UAAU,CAAC,iBAAiB,GAAG,EAAE;YAC/H,UAAU,CAAC,WAAW,GAAG,sBAAsB,GAAG,EAAE;YACpD,UAAU,CAAC,SAAS,GAAG,oBAAoB,GAAG,EAAE;YAEhD,UAAU,CAAC,gBAAgB,GAAG,uBAAuB,GAAG,EAAE;YAC1D,UAAU,CAAC,gBAAgB,GAAG,UAAU,GAAG,mBAAmB,GAAG,EAAE;YAEnE,UAAU,CAAC,eAAe,GAAG,6BAA6B,GAAG,EAAE;YAE/D,UAAU,CAAC,sBAAsB,GAAG,yBAAyB,GAAG,EAAE;YAChE,UAAU,CAAC,sBAAsB,IAAI,UAAU,CAAC,0BAA0B,GAAK,6BAA6B,GAAG,EAAE;YAEnH,2BAA2B;YAC3B,+BAA+B;YAC/B,gCAAgC;YAChC,0BAA0B;YAC1B,4BAA4B;YAC5B,8BAA8B;YAC9B,8BAA8B;YAE9B,uBAAuB;YAEvB,iCAAiC;YAEjC,QAAQ;YAER,6BAA6B;YAE7B,gCAAgC;YAEhC,QAAQ;YAER,0BAA0B;YAC1B,wBAAwB;YACxB,oBAAoB;YAEpB,oBAAoB;YAEpB,0BAA0B;YAE1B,QAAQ;YAER,gCAAgC;YAEhC,wBAAwB;YAExB,4BAA4B;YAE5B,wBAAwB;YAExB,QAAQ;YAER,0EAA0E;YAE1E,+BAA+B;YAC/B,+BAA+B;YAC/B,+BAA+B;YAC/B,+BAA+B;YAE/B,0BAA0B;YAE1B,gCAAgC;YAChC,gCAAgC;YAChC,gCAAgC;YAChC,gCAAgC;YAEhC,QAAQ;YAER,gCAAgC;YAChC,gCAAgC;YAChC,gCAAgC;YAChC,gCAAgC;YAEhC,SAAS;YAET,QAAQ;YAER,qBAAqB;YAErB,4BAA4B;YAC5B,6BAA6B;YAE7B,QAAQ;YAER,IAAI;SAEP,CAAC,MAAM,CAAE,eAAe,CAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;QAEzC,cAAc,GAAG;YAEb,gBAAgB;YAEhB,iBAAiB,CAAE,UAAU,CAAE;YAE/B,sBAAsB,GAAG,UAAU,CAAC,UAAU;YAE9C,aAAa;YAEX,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,GAAG,GAAK,iBAAiB,GAAG,EAAE;YAC9D,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,OAAO,GAAK,kBAAkB,GAAG,EAAE;YAErE,UAAU,CAAC,GAAG,GAAG,iBAAiB,GAAG,EAAE;YACvC,UAAU,CAAC,MAAM,GAAG,oBAAoB,GAAG,EAAE;YAC7C,UAAU,CAAC,MAAM,GAAG,oBAAoB,GAAG,EAAE;YAC7C,UAAU,CAAC,MAAM,GAAG,UAAU,GAAG,gBAAgB,GAAG,EAAE;YACtD,UAAU,CAAC,MAAM,GAAG,UAAU,GAAG,gBAAgB,GAAG,EAAE;YACtD,UAAU,CAAC,MAAM,GAAG,UAAU,GAAG,oBAAoB,GAAG,EAAE;YAC1D,gBAAgB,GAAG,6BAA6B,GAAG,gBAAgB,CAAC,UAAU,GAAG,EAAE;YACnF,gBAAgB,GAAG,8BAA8B,GAAG,gBAAgB,CAAC,WAAW,GAAG,EAAE;YACrF,gBAAgB,GAAG,yBAAyB,GAAG,gBAAgB,CAAC,MAAM,GAAG,IAAI,GAAG,EAAE;YAClF,UAAU,CAAC,QAAQ,GAAG,sBAAsB,GAAG,EAAE;YACjD,UAAU,CAAC,KAAK,GAAG,mBAAmB,GAAG,EAAE;YAC3C,UAAU,CAAC,WAAW,GAAG,yBAAyB,GAAG,EAAE;YACvD,UAAU,CAAC,OAAO,GAAG,qBAAqB,GAAG,EAAE;YAC/C,UAAU,CAAC,SAAS,GAAG,uBAAuB,GAAG,EAAE;YACjD,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,oBAAoB,GAAK,+BAA+B,GAAG,EAAE;YAChG,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,qBAAqB,GAAK,gCAAgC,GAAG,EAAE;YAEpG,UAAU,CAAC,SAAS,GAAG,uBAAuB,GAAG,EAAE;YACnD,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;YACzD,UAAU,CAAC,qBAAqB,GAAG,oCAAoC,GAAG,EAAE;YAC5E,UAAU,CAAC,kBAAkB,GAAG,iCAAiC,GAAG,EAAE;YAEtE,UAAU,CAAC,WAAW,GAAG,yBAAyB,GAAG,EAAE;YACvD,UAAU,CAAC,oBAAoB,GAAG,kCAAkC,GAAG,EAAE;YACzE,UAAU,CAAC,gBAAgB,GAAG,8BAA8B,GAAG,EAAE;YACjE,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;YACzD,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;YAEzD,UAAU,CAAC,QAAQ,GAAG,sBAAsB,GAAG,EAAE;YACjD,UAAU,CAAC,SAAS,GAAG,uBAAuB,GAAG,EAAE;YAEnD,UAAU,CAAC,KAAK,GAAG,mBAAmB,GAAG,EAAE;YAC3C,UAAU,CAAC,aAAa,GAAG,2BAA2B,GAAG,EAAE;YAC3D,UAAU,CAAC,iBAAiB,GAAG,+BAA+B,GAAG,EAAE;YAEnE,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;YACzD,UAAU,CAAC,eAAe,GAAG,6BAA6B,GAAG,EAAE;YAC/D,UAAU,CAAC,YAAY,GAAG,0BAA0B,GAAG,EAAE;YAEzD,UAAU,CAAC,kBAAkB,GAAG,8BAA8B,GAAG,EAAE;YAEnE,UAAU,CAAC,cAAc,GAAG,qBAAqB,GAAG,EAAE;YACtD,UAAU,CAAC,YAAY,IAAI,UAAU,CAAC,eAAe,GAAG,mBAAmB,GAAG,EAAE;YAChF,UAAU,CAAC,YAAY,GAAG,yBAAyB,GAAG,EAAE;YACxD,UAAU,CAAC,SAAS,GAAG,gBAAgB,GAAG,EAAE;YAC5C,UAAU,CAAC,aAAa,GAAG,yBAAyB,GAAG,EAAE;YAEzD,UAAU,CAAC,WAAW,GAAG,yBAAyB,GAAG,EAAE;YAEvD,UAAU,CAAC,WAAW,GAAG,qBAAqB,GAAG,EAAE;YAEnD,UAAU,CAAC,WAAW,GAAG,sBAAsB,GAAG,EAAE;YACpD,UAAU,CAAC,SAAS,GAAG,oBAAoB,GAAG,EAAE;YAEhD,UAAU,CAAC,gBAAgB,GAAG,uBAAuB,GAAG,EAAE;YAC1D,UAAU,CAAC,gBAAgB,GAAG,UAAU,GAAG,mBAAmB,GAAG,EAAE;YAEnE,UAAU,CAAC,kBAAkB,GAAG,6BAA6B,GAAG,EAAE;YAElE,UAAU,CAAC,uBAAuB,GAAG,mCAAmC,GAAG,EAAE;YAE7E,UAAU,CAAC,sBAAsB,GAAG,yBAAyB,GAAG,EAAE;YAChE,UAAU,CAAC,sBAAsB,IAAI,UAAU,CAAC,0BAA0B,GAAK,6BAA6B,GAAG,EAAE;YAEnH,0BAA0B;YAC1B,8BAA8B;YAC9B,8BAA8B;YAE5B,UAAU,CAAC,WAAW,KAAK,aAAa,GAAK,sBAAsB,GAAG,EAAE;YACxE,UAAU,CAAC,WAAW,KAAK,aAAa,GAAK,WAAW,CAAE,2BAA2B,CAAE,GAAG,EAAE;YAC5F,UAAU,CAAC,WAAW,KAAK,aAAa,GAAK,sBAAsB,CAAE,aAAa,EAAE,UAAU,CAAC,WAAW,CAAE,GAAG,EAAE;YAEnH,UAAU,CAAC,SAAS,GAAG,mBAAmB,GAAG,EAAE;YAC/C,UAAU,CAAC,MAAM,GAAG,gBAAgB,GAAG,EAAE;YAEzC,WAAW,CAAE,yBAAyB,CAAE;YACxC,wBAAwB,CAAE,qBAAqB,EAAE,UAAU,CAAC,cAAc,CAAE;YAE5E,UAAU,CAAC,YAAY,GAAG,wBAAwB,GAAG,UAAU,CAAC,YAAY,GAAG,EAAE;YAEjF,IAAI;SAEP,CAAC,MAAM,CAAE,eAAe,CAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE5C;IAED,YAAY,GAAG,eAAe,CAAE,YAAY,CAAE,CAAC;IAC/C,YAAY,GAAG,gBAAgB,CAAE,YAAY,EAAE,UAAU,CAAE,CAAC;IAC5D,YAAY,GAAG,wBAAwB,CAAE,YAAY,EAAE,UAAU,CAAE,CAAC;IAEpE,cAAc,GAAG,eAAe,CAAE,cAAc,CAAE,CAAC;IACnD,cAAc,GAAG,gBAAgB,CAAE,cAAc,EAAE,UAAU,CAAE,CAAC;IAChE,cAAc,GAAG,wBAAwB,CAAE,cAAc,EAAE,UAAU,CAAE,CAAC;IAExE,YAAY,GAAG,WAAW,CAAE,YAAY,CAAE,CAAC;IAC3C,cAAc,GAAG,WAAW,CAAE,cAAc,CAAE,CAAC;IAE/C,IAAK,UAAU,CAAC,QAAQ,IAAI,UAAU,CAAC,mBAAmB,KAAK,IAAI,EAAG;QAElE,gEAAgE;QAEhE,aAAa,GAAG,mBAAmB,CAAC;QAEpC,YAAY,GAAG;YACX,mCAAmC;YACnC,sBAAsB;YACtB,qBAAqB;YACrB,2BAA2B;SAC9B,CAAC,IAAI,CAAE,IAAI,CAAE,GAAG,IAAI,GAAG,YAAY,CAAC;QAErC,cAAc,GAAG;YACb,oBAAoB;YAClB,UAAU,CAAC,WAAW,KAAK,KAAK,GAAK,EAAE,GAAG,mDAAmD;YAC7F,UAAU,CAAC,WAAW,KAAK,KAAK,GAAK,EAAE,GAAG,mCAAmC;YAC/E,sCAAsC;YACtC,2BAA2B;YAC3B,6BAA6B;YAC7B,mCAAmC;YACnC,oCAAoC;YACpC,4CAA4C;YAC5C,sCAAsC;YACtC,sCAAsC;YACtC,8CAA8C;YAC9C,wCAAwC;SAC3C,CAAC,IAAI,CAAE,IAAI,CAAE,GAAG,IAAI,GAAG,cAAc,CAAC;KAE1C;IAED,MAAM,UAAU,GAAG,aAAa,GAAG,YAAY,GAAG,YAAY,AAAC;IAC/D,MAAM,YAAY,GAAG,aAAa,GAAG,cAAc,GAAG,cAAc,AAAC;IAErE,yCAAyC;IACzC,6CAA6C;IAE7C,MAAM,cAAc,GAAG,WAAW,CAAE,EAAE,EAAE,KAAK,EAAE,UAAU,CAAE,AAAC;IAC5D,MAAM,gBAAgB,GAAG,WAAW,CAAE,EAAE,EAAE,KAAK,EAAE,YAAY,CAAE,AAAC;IAEhE,EAAE,CAAC,YAAY,CAAE,OAAO,EAAE,cAAc,CAAE,CAAC;IAC3C,EAAE,CAAC,YAAY,CAAE,OAAO,EAAE,gBAAgB,CAAE,CAAC;IAE7C,2CAA2C;IAE3C,IAAK,UAAU,CAAC,mBAAmB,KAAK,SAAS,EAE7C,EAAE,CAAC,kBAAkB,CAAE,OAAO,EAAE,CAAC,EAAE,UAAU,CAAC,mBAAmB,CAAE,CAAC;SAEjE,IAAK,UAAU,CAAC,YAAY,KAAK,IAAI,EAExC,kEAAkE;IAClE,EAAE,CAAC,kBAAkB,CAAE,OAAO,EAAE,CAAC,EAAE,UAAU,CAAE,CAAC;IAIpD,EAAE,CAAC,WAAW,CAAE,OAAO,CAAE,CAAC;IAE1B,wBAAwB;IACxB,IAAK,QAAQ,CAAC,KAAK,CAAC,iBAAiB,EAAG;QAEpC,MAAM,UAAU,GAAG,EAAE,CAAC,iBAAiB,CAAE,OAAO,CAAE,CAAC,IAAI,EAAE,AAAC;QAC1D,MAAM,SAAS,GAAG,EAAE,CAAC,gBAAgB,CAAE,cAAc,CAAE,CAAC,IAAI,EAAE,AAAC;QAC/D,MAAM,WAAW,GAAG,EAAE,CAAC,gBAAgB,CAAE,gBAAgB,CAAE,CAAC,IAAI,EAAE,AAAC;QAEnE,IAAI,QAAQ,GAAG,IAAI,AAAC;QACpB,IAAI,eAAe,GAAG,IAAI,AAAC;QAE3B,IAAK,EAAE,CAAC,mBAAmB,CAAE,OAAO,EAAE,KAAK,CAAE,KAAK,KAAK,EAAG;YAEtD,QAAQ,GAAG,KAAK,CAAC;YAEjB,MAAM,YAAY,GAAG,eAAe,CAAE,EAAE,EAAE,cAAc,EAAE,QAAQ,CAAE,AAAC;YACrE,MAAM,cAAc,GAAG,eAAe,CAAE,EAAE,EAAE,gBAAgB,EAAE,UAAU,CAAE,AAAC;YAE3E,OAAO,CAAC,KAAK,CACT,mCAAmC,GAAG,EAAE,CAAC,QAAQ,EAAE,GAAG,KAAK,GAC3D,kBAAkB,GAAG,EAAE,CAAC,mBAAmB,CAAE,OAAO,EAAE,KAAK,CAAE,GAAG,MAAM,GACtE,oBAAoB,GAAG,UAAU,GAAG,IAAI,GACxC,YAAY,GAAG,IAAI,GACnB,cAAc,CACjB,CAAC;SAEL,MAAM,IAAK,UAAU,KAAK,EAAE,EAEzB,OAAO,CAAC,IAAI,CAAE,uCAAuC,EAAE,UAAU,CAAE,CAAC;aAEjE,IAAK,SAAS,KAAK,EAAE,IAAI,WAAW,KAAK,EAAE,EAE9C,eAAe,GAAG,KAAK,CAAC;QAI5B,IAAK,eAAe,EAEhB,IAAI,CAAC,WAAW,GAAG;YAEf,QAAQ,EAAE,QAAQ;YAElB,UAAU,EAAE,UAAU;YAEtB,YAAY,EAAE;gBAEV,GAAG,EAAE,SAAS;gBACd,MAAM,EAAE,YAAY;aAEvB;YAED,cAAc,EAAE;gBAEZ,GAAG,EAAE,WAAW;gBAChB,MAAM,EAAE,cAAc;aAEzB;SAEJ,CAAC;KAIT;IAED,WAAW;IAEX,oCAAoC;IACpC,8CAA8C;IAC9C,gDAAgD;IAEhD,EAAE,CAAC,YAAY,CAAE,cAAc,CAAE,CAAC;IAClC,EAAE,CAAC,YAAY,CAAE,gBAAgB,CAAE,CAAC;IAEpC,uCAAuC;IAEvC,IAAI,cAAc,AAAC;IAEnB,IAAI,CAAC,WAAW,GAAG,WAAY;QAE3B,IAAK,cAAc,KAAK,SAAS,EAE7B,cAAc,GAAG,IAAI,aAAa,CAAE,EAAE,EAAE,OAAO,CAAE,CAAC;QAItD,OAAO,cAAc,CAAC;KAEzB,CAAC;IAEF,yCAAyC;IAEzC,IAAI,gBAAgB,AAAC;IAErB,IAAI,CAAC,aAAa,GAAG,WAAY;QAE7B,IAAK,gBAAgB,KAAK,SAAS,EAE/B,gBAAgB,GAAG,uBAAuB,CAAE,EAAE,EAAE,OAAO,CAAE,CAAC;QAI9D,OAAO,gBAAgB,CAAC;KAE3B,CAAC;IAEF,gBAAgB;IAEhB,IAAI,CAAC,OAAO,GAAG,WAAY;QAEvB,aAAa,CAAC,sBAAsB,CAAE,IAAI,CAAE,CAAC;QAE7C,EAAE,CAAC,aAAa,CAAE,OAAO,CAAE,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;KAE5B,CAAC;IAEF,EAAE;IAEF,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC;IAClC,IAAI,CAAC,EAAE,GAAG,cAAc,EAAG,CAAC;IAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACzB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACvB,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;IACnC,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;IAEvC,OAAO,IAAI,CAAC;CAEf;AAED,IAAI,GAAG,GAAG,CAAC,AAAC;AAEZ,MAAM,gBAAgB;IAElB,aAAc;QAEV,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;KAElC;IAED,MAAM,CAAE,QAAQ,EAAG;QAEf,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,AAAC;QAC3C,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,AAAC;QAE/C,MAAM,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAE,YAAY,CAAE,AAAC;QAC/D,MAAM,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAE,cAAc,CAAE,AAAC;QAEnE,MAAM,eAAe,GAAG,IAAI,CAAC,0BAA0B,CAAE,QAAQ,CAAE,AAAC;QAEpE,IAAK,eAAe,CAAC,GAAG,CAAE,iBAAiB,CAAE,KAAK,KAAK,EAAG;YAEtD,eAAe,CAAC,GAAG,CAAE,iBAAiB,CAAE,CAAC;YACzC,iBAAiB,CAAC,SAAS,EAAG,CAAC;SAElC;QAED,IAAK,eAAe,CAAC,GAAG,CAAE,mBAAmB,CAAE,KAAK,KAAK,EAAG;YAExD,eAAe,CAAC,GAAG,CAAE,mBAAmB,CAAE,CAAC;YAC3C,mBAAmB,CAAC,SAAS,EAAG,CAAC;SAEpC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,QAAQ,EAAG;QAEf,MAAM,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAE,QAAQ,CAAE,AAAC;QAE3D,KAAM,MAAM,WAAW,IAAI,eAAe,CAAG;YAEzC,WAAW,CAAC,SAAS,EAAG,CAAC;YAEzB,IAAK,WAAW,CAAC,SAAS,KAAK,CAAC,EAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAE,WAAW,CAAC,IAAI,CAAE,CAAC;SAElF;QAED,IAAI,CAAC,aAAa,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC;QAEtC,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,CAAE,QAAQ,EAAG;QAE1B,OAAO,IAAI,CAAC,eAAe,CAAE,QAAQ,CAAC,YAAY,CAAE,CAAC,EAAE,CAAC;KAE3D;IAED,mBAAmB,CAAE,QAAQ,EAAG;QAE5B,OAAO,IAAI,CAAC,eAAe,CAAE,QAAQ,CAAC,cAAc,CAAE,CAAC,EAAE,CAAC;KAE7D;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KAE9B;IAED,0BAA0B,CAAE,QAAQ,EAAG;QAEnC,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,AAAC;QAEjC,IAAK,KAAK,CAAC,GAAG,CAAE,QAAQ,CAAE,KAAK,KAAK,EAEhC,KAAK,CAAC,GAAG,CAAE,QAAQ,EAAE,IAAI,GAAG,EAAE,CAAE,CAAC;QAIrC,OAAO,KAAK,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;KAEhC;IAED,eAAe,CAAE,IAAI,EAAG;QAEpB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,AAAC;QAE/B,IAAK,KAAK,CAAC,GAAG,CAAE,IAAI,CAAE,KAAK,KAAK,EAAG;YAE/B,MAAM,KAAK,GAAG,IAAI,gBAAgB,CAAE,IAAI,CAAE,AAAC;YAC3C,KAAK,CAAC,GAAG,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;SAE5B;QAED,OAAO,KAAK,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;KAE5B;CAEJ;AAED,MAAM,gBAAgB;IAElB,YAAa,IAAI,CAAG;QAEhB,IAAI,CAAC,EAAE,GAAG,GAAG,EAAG,CAAC;QAEjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;KAEtB;CAEJ;AAED,SAAS,aAAa,CAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,EAAE,QAAQ,EAAG;IAExG,MAAM,cAAc,GAAG,IAAI,MAAM,EAAE,AAAC;IACpC,MAAM,cAAc,GAAG,IAAI,gBAAgB,EAAE,AAAC;IAC9C,MAAM,QAAQ,GAAG,EAAE,AAAC;IAEpB,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,AAAC;IACvC,MAAM,sBAAsB,GAAG,YAAY,CAAC,sBAAsB,AAAC;IACnE,MAAM,mBAAmB,GAAG,YAAY,CAAC,mBAAmB,AAAC;IAC7D,MAAM,iBAAiB,GAAG,YAAY,CAAC,iBAAiB,AAAC;IACzD,MAAM,cAAc,GAAG,YAAY,CAAC,cAAc,AAAC;IACnD,IAAI,SAAS,GAAG,YAAY,CAAC,SAAS,AAAC;IAEvC,MAAM,SAAS,GAAG;QACd,iBAAiB,EAAE,OAAO;QAC1B,oBAAoB,EAAE,cAAc;QACpC,kBAAkB,EAAE,QAAQ;QAC5B,iBAAiB,EAAE,OAAO;QAC1B,mBAAmB,EAAE,SAAS;QAC9B,iBAAiB,EAAE,OAAO;QAC1B,gBAAgB,EAAE,MAAM;QACxB,oBAAoB,EAAE,UAAU;QAChC,oBAAoB,EAAE,UAAU;QAChC,kBAAkB,EAAE,QAAQ;QAC5B,iBAAiB,EAAE,OAAO;QAC1B,kBAAkB,EAAE,QAAQ;QAC5B,cAAc,EAAE,QAAQ;QACxB,cAAc,EAAE,QAAQ;QACxB,cAAc,EAAE,QAAQ;KAC3B,AAAC;IAEF,SAAS,WAAW,CAAE,MAAM,EAAG;QAE3B,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;QACjC,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,AAAC;QAE7B,IAAK,mBAAmB,EAEpB,OAAO,IAAI,CAAC;aAET;YAEH,2CAA2C;YAC3C,2EAA2E;YAC3E,EAAE;YACF,+CAA+C;YAC/C,mDAAmD;YACnD,+BAA+B;YAE/B,MAAM,eAAe,GAAG,iBAAiB,AAAC;YAC1C,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAE,AAAE,CAAA,eAAe,GAAG,EAAE,CAAA,GAAK,CAAC,CAAE,AAAC;YAEnE,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,eAAe,EAAE,KAAK,CAAC,MAAM,CAAE,AAAC;YAE3D,IAAK,QAAQ,GAAG,KAAK,CAAC,MAAM,EAAG;gBAE3B,OAAO,CAAC,IAAI,CAAE,oCAAoC,GAAG,KAAK,CAAC,MAAM,GAAG,4BAA4B,GAAG,QAAQ,GAAG,GAAG,CAAE,CAAC;gBACpH,OAAO,CAAC,CAAC;aAEZ;YAED,OAAO,QAAQ,CAAC;SAEnB;KAEJ;IAED,SAAS,aAAa,CAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAG;QAE/D,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,AAAC;QACtB,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;QACjC,MAAM,WAAW,GAAG,QAAQ,CAAC,sBAAsB,GAAG,KAAK,CAAC,WAAW,GAAG,IAAI,AAAC;QAE/E,MAAM,MAAM,GAAG,AAAE,CAAA,QAAQ,CAAC,sBAAsB,GAAG,UAAU,GAAG,QAAQ,CAAA,CAAG,GAAG,CAAE,QAAQ,CAAC,MAAM,IAAI,WAAW,CAAE,AAAC;QACjH,MAAM,kBAAkB,GAAG,AAAE,CAAC,CAAE,MAAM,IAAQ,MAAM,CAAC,OAAO,KAAK,uBAAuB,AAAE,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,AAAC;QAExH,MAAM,QAAQ,GAAG,SAAS,CAAE,QAAQ,CAAC,IAAI,CAAE,AAAC;QAE5C,0EAA0E;QAC1E,sCAAsC;QAEtC,MAAM,QAAQ,GAAG,MAAM,CAAC,aAAa,GAAG,WAAW,CAAE,MAAM,CAAE,GAAG,CAAC,AAAC;QAElE,IAAK,QAAQ,CAAC,SAAS,KAAK,IAAI,EAAG;YAE/B,SAAS,GAAG,YAAY,CAAC,eAAe,CAAE,QAAQ,CAAC,SAAS,CAAE,CAAC;YAE/D,IAAK,SAAS,KAAK,QAAQ,CAAC,SAAS,EAEjC,OAAO,CAAC,IAAI,CAAE,mCAAmC,EAAE,QAAQ,CAAC,SAAS,EAAE,sBAAsB,EAAE,SAAS,EAAE,UAAU,CAAE,CAAC;SAI9H;QAED,EAAE;QAEF,MAAM,cAAc,GAAG,QAAQ,CAAC,eAAe,CAAC,QAAQ,IAAI,QAAQ,CAAC,eAAe,CAAC,MAAM,IAAI,QAAQ,CAAC,eAAe,CAAC,KAAK,AAAC;QAC9H,MAAM,iBAAiB,GAAG,AAAE,cAAc,KAAK,SAAS,GAAK,cAAc,CAAC,MAAM,GAAG,CAAC,AAAC;QAEvF,IAAI,kBAAkB,GAAG,CAAC,AAAC;QAE3B,IAAK,QAAQ,CAAC,eAAe,CAAC,QAAQ,KAAK,SAAS,EAAG,kBAAkB,GAAG,CAAC,CAAC;QAC9E,IAAK,QAAQ,CAAC,eAAe,CAAC,MAAM,KAAK,SAAS,EAAG,kBAAkB,GAAG,CAAC,CAAC;QAC5E,IAAK,QAAQ,CAAC,eAAe,CAAC,KAAK,KAAK,SAAS,EAAG,kBAAkB,GAAG,CAAC,CAAC;QAE3E,EAAE;QAEF,IAAI,YAAY,EAAE,cAAc,AAAC;QACjC,IAAI,oBAAoB,EAAE,sBAAsB,AAAC;QAEjD,IAAK,QAAQ,EAAG;YAEZ,MAAM,MAAM,GAAG,SAAS,CAAE,QAAQ,CAAE,AAAC;YAErC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;YACnC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;SAE1C,MAAM;YAEH,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;YACrC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;YAEzC,cAAc,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC;YAElC,oBAAoB,GAAG,cAAc,CAAC,iBAAiB,CAAE,QAAQ,CAAE,CAAC;YACpE,sBAAsB,GAAG,cAAc,CAAC,mBAAmB,CAAE,QAAQ,CAAE,CAAC;SAE3E;QAED,MAAM,mBAAmB,GAAG,QAAQ,CAAC,eAAe,EAAE,AAAC;QAEvD,MAAM,YAAY,GAAG,QAAQ,CAAC,SAAS,GAAG,CAAC,AAAC;QAC5C,MAAM,YAAY,GAAG,QAAQ,CAAC,SAAS,GAAG,CAAC,AAAC;QAE5C,MAAM,UAAU,GAAG;YAEf,QAAQ,EAAE,QAAQ;YAElB,QAAQ,EAAE,QAAQ;YAClB,UAAU,EAAE,QAAQ,CAAC,IAAI;YAEzB,YAAY,EAAE,YAAY;YAC1B,cAAc,EAAE,cAAc;YAC9B,OAAO,EAAE,QAAQ,CAAC,OAAO;YAEzB,oBAAoB,EAAE,oBAAoB;YAC1C,sBAAsB,EAAE,sBAAsB;YAE9C,mBAAmB,EAAE,QAAQ,CAAC,mBAAmB,KAAK,IAAI;YAC1D,WAAW,EAAE,QAAQ,CAAC,WAAW;YAEjC,SAAS,EAAE,SAAS;YAEpB,UAAU,EAAE,MAAM,CAAC,eAAe,KAAK,IAAI;YAC3C,eAAe,EAAE,MAAM,CAAC,eAAe,KAAK,IAAI,IAAI,MAAM,CAAC,aAAa,KAAK,IAAI;YAEjF,sBAAsB,EAAE,cAAc;YACtC,cAAc,EAAE,AAAE,mBAAmB,KAAK,IAAI,GAAK,QAAQ,CAAC,cAAc,GAAK,mBAAmB,CAAC,gBAAgB,KAAK,IAAI,GAAG,mBAAmB,CAAC,OAAO,CAAC,QAAQ,GAAG,cAAc,AAAE;YACtL,GAAG,EAAE,CAAC,CAAE,QAAQ,CAAC,GAAG;YACpB,MAAM,EAAE,CAAC,CAAE,QAAQ,CAAC,MAAM;YAC1B,MAAM,EAAE,CAAC,CAAE,MAAM;YACjB,UAAU,EAAE,MAAM,IAAI,MAAM,CAAC,OAAO;YACpC,kBAAkB,EAAE,kBAAkB;YACtC,QAAQ,EAAE,CAAC,CAAE,QAAQ,CAAC,QAAQ;YAC9B,KAAK,EAAE,CAAC,CAAE,QAAQ,CAAC,KAAK;YACxB,WAAW,EAAE,CAAC,CAAE,QAAQ,CAAC,WAAW;YACpC,OAAO,EAAE,CAAC,CAAE,QAAQ,CAAC,OAAO;YAC5B,SAAS,EAAE,CAAC,CAAE,QAAQ,CAAC,SAAS;YAChC,oBAAoB,EAAE,QAAQ,CAAC,aAAa,KAAK,oBAAoB;YACrE,qBAAqB,EAAE,QAAQ,CAAC,aAAa,KAAK,qBAAqB;YAEvE,kBAAkB,EAAE,CAAC,CAAE,QAAQ,CAAC,GAAG,IAAM,QAAQ,CAAC,GAAG,CAAC,cAAc,KAAK,IAAI,IAAQ,QAAQ,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,AAAE;YAE7H,SAAS,EAAE,YAAY;YACvB,YAAY,EAAE,YAAY,IAAI,CAAC,CAAE,QAAQ,CAAC,YAAY;YACtD,qBAAqB,EAAE,YAAY,IAAI,CAAC,CAAE,QAAQ,CAAC,qBAAqB;YACxE,kBAAkB,EAAE,YAAY,IAAI,CAAC,CAAE,QAAQ,CAAC,kBAAkB;YAElE,eAAe,EAAE,CAAC,CAAE,QAAQ,CAAC,eAAe;YAC5C,YAAY,EAAE,CAAC,CAAE,QAAQ,CAAC,YAAY;YACtC,YAAY,EAAE,CAAC,CAAE,QAAQ,CAAC,YAAY;YACtC,WAAW,EAAE,CAAC,CAAE,QAAQ,CAAC,WAAW;YACpC,oBAAoB,EAAE,CAAC,CAAE,QAAQ,CAAC,oBAAoB;YACtD,gBAAgB,EAAE,CAAC,CAAE,QAAQ,CAAC,gBAAgB;YAE9C,MAAM,EAAE,QAAQ,CAAC,WAAW,KAAK,KAAK,IAAI,QAAQ,CAAC,QAAQ,KAAK,cAAc;YAE9E,QAAQ,EAAE,CAAC,CAAE,QAAQ,CAAC,QAAQ;YAC9B,SAAS,EAAE,YAAY;YAEvB,WAAW,EAAE,CAAC,CAAE,QAAQ,CAAC,WAAW;YAEpC,KAAK,EAAE,QAAQ,CAAC,KAAK,GAAG,CAAC;YACzB,aAAa,EAAE,CAAC,CAAE,QAAQ,CAAC,aAAa;YACxC,iBAAiB,EAAE,CAAC,CAAE,QAAQ,CAAC,iBAAiB;YAEhD,YAAY,EAAE,QAAQ,CAAC,YAAY,GAAG,CAAC;YACvC,eAAe,EAAE,CAAC,CAAE,QAAQ,CAAC,eAAe;YAC5C,YAAY,EAAE,CAAC,CAAE,QAAQ,CAAC,YAAY;YAEtC,OAAO,EAAE,QAAQ,CAAC,OAAO;YAEzB,cAAc,EAAI,CAAC,CAAE,QAAQ,CAAC,SAAS,IAAI,CAAC,CAAE,QAAQ,CAAC,UAAU,CAAC,OAAO;YACzE,YAAY,EAAE,QAAQ,CAAC,YAAY;YACnC,YAAY,EAAE,QAAQ,CAAC,YAAY,KAAK,IAAI,IAAI,CAAC,CAAE,QAAQ,CAAC,UAAU,CAAC,KAAK,IAAI,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,KAAK,CAAC;YACxH,SAAS,EAAE,CAAC,CAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAE,QAAQ,CAAC,OAAO,IAAI,CAAC,CAAE,QAAQ,CAAC,SAAS,IAAI,CAAC,CAAE,QAAQ,CAAC,WAAW,IAAI,CAAC,CAAE,QAAQ,CAAC,QAAQ,IAAI,CAAC,CAAE,QAAQ,CAAC,WAAW,IAAI,CAAC,CAAE,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAE,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAE,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAE,QAAQ,CAAC,qBAAqB,IAAI,CAAC,CAAE,QAAQ,CAAC,kBAAkB,IAAI,CAAC,CAAE,QAAQ,CAAC,eAAe,IAAI,CAAC,CAAE,QAAQ,CAAC,eAAe,IAAI,CAAC,CAAE,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAE,QAAQ,CAAC,oBAAoB,IAAI,CAAC,CAAE,QAAQ,CAAC,gBAAgB,IAAI,CAAC,CAAE,QAAQ,CAAC,aAAa,IAAI,CAAC,CAAE,QAAQ,CAAC,iBAAiB;YAC/gB,aAAa,EAAE,CAAI,CAAA,CAAC,CAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAE,QAAQ,CAAC,OAAO,IAAI,CAAC,CAAE,QAAQ,CAAC,SAAS,IAAI,CAAC,CAAE,QAAQ,CAAC,WAAW,IAAI,CAAC,CAAE,QAAQ,CAAC,QAAQ,IAAI,CAAC,CAAE,QAAQ,CAAC,WAAW,IAAI,CAAC,CAAE,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAE,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAE,QAAQ,CAAC,kBAAkB,IAAI,QAAQ,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,CAAE,QAAQ,CAAC,eAAe,IAAI,CAAC,CAAE,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAE,QAAQ,CAAC,oBAAoB,IAAI,CAAC,CAAE,QAAQ,CAAC,gBAAgB,IAAI,QAAQ,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAE,QAAQ,CAAC,aAAa,IAAI,CAAC,CAAE,QAAQ,CAAC,iBAAiB,CAAA,AAAE,IAAI,CAAC,CAAE,QAAQ,CAAC,eAAe;YAE3gB,GAAG,EAAE,CAAC,CAAE,GAAG;YACX,MAAM,EAAE,QAAQ,CAAC,GAAG;YACpB,OAAO,EAAI,GAAG,IAAI,GAAG,CAAC,SAAS;YAE/B,WAAW,EAAE,CAAC,CAAE,QAAQ,CAAC,WAAW;YAEpC,eAAe,EAAE,QAAQ,CAAC,eAAe;YACzC,sBAAsB,EAAE,sBAAsB;YAE9C,QAAQ,EAAE,MAAM,CAAC,aAAa,KAAK,IAAI,IAAI,QAAQ,GAAG,CAAC;YACvD,QAAQ,EAAE,QAAQ;YAClB,gBAAgB,EAAE,mBAAmB;YAErC,YAAY,EAAE,QAAQ,CAAC,eAAe,CAAC,QAAQ,KAAK,SAAS;YAC7D,YAAY,EAAE,QAAQ,CAAC,eAAe,CAAC,MAAM,KAAK,SAAS;YAC3D,WAAW,EAAE,QAAQ,CAAC,eAAe,CAAC,KAAK,KAAK,SAAS;YACzD,iBAAiB,EAAE,iBAAiB;YACpC,kBAAkB,EAAE,kBAAkB;YAEtC,YAAY,EAAE,MAAM,CAAC,WAAW,CAAC,MAAM;YACvC,cAAc,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM;YACnC,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM;YACjC,iBAAiB,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM;YACzC,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM;YAEjC,kBAAkB,EAAE,MAAM,CAAC,oBAAoB,CAAC,MAAM;YACtD,oBAAoB,EAAE,MAAM,CAAC,cAAc,CAAC,MAAM;YAClD,mBAAmB,EAAE,MAAM,CAAC,aAAa,CAAC,MAAM;YAEhD,iBAAiB,EAAE,QAAQ,CAAC,SAAS;YACrC,mBAAmB,EAAE,QAAQ,CAAC,eAAe;YAE7C,SAAS,EAAE,QAAQ,CAAC,SAAS;YAE7B,gBAAgB,EAAE,QAAQ,CAAC,SAAS,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC;YAClE,aAAa,EAAE,QAAQ,CAAC,SAAS,CAAC,IAAI;YAEtC,WAAW,EAAE,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,WAAW,GAAG,aAAa;YACvE,uBAAuB,EAAE,QAAQ,CAAC,uBAAuB;YAEzD,kBAAkB,EAAE,QAAQ,CAAC,kBAAkB;YAE/C,WAAW,EAAE,QAAQ,CAAC,IAAI,KAAK,UAAU;YACzC,SAAS,EAAE,QAAQ,CAAC,IAAI,KAAK,QAAQ;YAErC,YAAY,EAAE,AAAE,QAAQ,CAAC,YAAY,KAAK,SAAS,GAAK,QAAQ,CAAC,YAAY,GAAG,KAAK;YAErF,mBAAmB,EAAE,QAAQ,CAAC,mBAAmB;YAEjD,oBAAoB,EAAE,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,WAAW;YAC5E,kBAAkB,EAAE,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,SAAS;YACxE,oBAAoB,EAAE,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,WAAW;YAC5E,yBAAyB,EAAE,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,gBAAgB;YAEtF,0BAA0B,EAAE,QAAQ,IAAI,UAAU,CAAC,GAAG,CAAE,gBAAgB,CAAE;YAC1E,4BAA4B,EAAE,QAAQ,IAAI,UAAU,CAAC,GAAG,CAAE,oBAAoB,CAAE;YAChF,iCAAiC,EAAE,QAAQ,IAAI,UAAU,CAAC,GAAG,CAAE,wBAAwB,CAAE;YAEzF,qBAAqB,EAAE,QAAQ,CAAC,qBAAqB,EAAE;SAE1D,AAAC;QAEF,OAAO,UAAU,CAAC;KAErB;IAED,SAAS,kBAAkB,CAAE,UAAU,EAAG;QAEtC,MAAM,KAAK,GAAG,EAAE,AAAC;QAEjB,IAAK,UAAU,CAAC,QAAQ,EAEpB,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,QAAQ,CAAE,CAAC;aAE/B;YAEH,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,oBAAoB,CAAE,CAAC;YAC9C,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,sBAAsB,CAAE,CAAC;SAEnD;QAED,IAAK,UAAU,CAAC,OAAO,KAAK,SAAS,EAEjC,IAAM,MAAM,IAAI,IAAI,UAAU,CAAC,OAAO,CAAG;YAErC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;YACnB,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,OAAO,CAAE,IAAI,CAAE,CAAE,CAAC;SAE5C;QAIL,IAAK,UAAU,CAAC,mBAAmB,KAAK,KAAK,EAAG;YAE5C,4BAA4B,CAAE,KAAK,EAAE,UAAU,CAAE,CAAC;YAClD,0BAA0B,CAAE,KAAK,EAAE,UAAU,CAAE,CAAC;YAChD,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,cAAc,CAAE,CAAC;SAEzC;QAED,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,qBAAqB,CAAE,CAAC;QAE/C,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC;KAEvB;IAED,SAAS,4BAA4B,CAAE,KAAK,EAAE,UAAU,EAAG;QAEvD,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,SAAS,CAAE,CAAC;QACnC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,cAAc,CAAE,CAAC;QACxC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,UAAU,CAAE,CAAC;QACpC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,kBAAkB,CAAE,CAAC;QAC5C,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,OAAO,CAAE,CAAC;QACjC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,SAAS,CAAE,CAAC;QACnC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,OAAO,CAAE,CAAC;QACjC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,eAAe,CAAE,CAAC;QACzC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,QAAQ,CAAE,CAAC;QAClC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,iBAAiB,CAAE,CAAC;QAC3C,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,mBAAmB,CAAE,CAAC;QAC7C,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,YAAY,CAAE,CAAC;QACtC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,cAAc,CAAE,CAAC;QACxC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,aAAa,CAAE,CAAC;QACvC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,aAAa,CAAE,CAAC;QACvC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,iBAAiB,CAAE,CAAC;QAC3C,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,kBAAkB,CAAE,CAAC;QAC5C,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,oBAAoB,CAAE,CAAC;QAC9C,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,mBAAmB,CAAE,CAAC;QAC7C,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,aAAa,CAAE,CAAC;QACvC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,WAAW,CAAE,CAAC;QACrC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,iBAAiB,CAAE,CAAC;QAC3C,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,mBAAmB,CAAE,CAAC;KAEhD;IAED,SAAS,0BAA0B,CAAE,KAAK,EAAE,UAAU,EAAG;QAErD,cAAc,CAAC,UAAU,EAAE,CAAC;QAE5B,IAAK,UAAU,CAAC,QAAQ,EACpB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,sBAAsB,EAClC,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,UAAU,EACtB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,eAAe,EAC3B,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,GAAG,EACf,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,MAAM,EAClB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,MAAM,EAClB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,QAAQ,EACpB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,KAAK,EACjB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,WAAW,EACvB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,OAAO,EACnB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,SAAS,EACrB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,oBAAoB,EAChC,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,qBAAqB,EACjC,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,SAAS,EACrB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,YAAY,EACxB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,qBAAqB,EACjC,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,kBAAkB,EAC9B,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,eAAe,EAC3B,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,WAAW,EACvB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,YAAY,EACxB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,YAAY,EACxB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,WAAW,EACvB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,QAAQ,EACpB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,SAAS,EACrB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,YAAY,EACxB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,YAAY,EACxB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,SAAS,EACrB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,cAAc,EAC1B,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,aAAa,EACzB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,GAAG,EACf,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAEhC,KAAK,CAAC,IAAI,CAAE,cAAc,CAAC,IAAI,CAAE,CAAC;QAClC,cAAc,CAAC,UAAU,EAAE,CAAC;QAE5B,IAAK,UAAU,CAAC,MAAM,EAClB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,WAAW,EACvB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,sBAAsB,EAClC,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,QAAQ,EACpB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,gBAAgB,EAC5B,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,YAAY,EACxB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,YAAY,EACxB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,WAAW,EACvB,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,kBAAkB,EAC9B,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,gBAAgB,EAC5B,cAAc,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC/B,IAAK,UAAU,CAAC,uBAAuB,EACnC,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,WAAW,EACvB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,SAAS,EACrB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,YAAY,EACxB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,SAAS,EACrB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,oBAAoB,EAChC,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,gBAAgB,EAC5B,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,YAAY,EACxB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,eAAe,EAC3B,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,YAAY,EACxB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,KAAK,EACjB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,aAAa,EACzB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,iBAAiB,EAC7B,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,kBAAkB,EAC9B,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAChC,IAAK,UAAU,CAAC,MAAM,EAClB,cAAc,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAEhC,KAAK,CAAC,IAAI,CAAE,cAAc,CAAC,IAAI,CAAE,CAAC;KAErC;IAED,SAAS,WAAW,CAAE,QAAQ,EAAG;QAE7B,MAAM,QAAQ,GAAG,SAAS,CAAE,QAAQ,CAAC,IAAI,CAAE,AAAC;QAC5C,IAAI,QAAQ,AAAC;QAEb,IAAK,QAAQ,EAAG;YAEZ,MAAM,MAAM,GAAG,SAAS,CAAE,QAAQ,CAAE,AAAC;YACrC,QAAQ,GAAG,aAAa,CAAC,KAAK,CAAE,MAAM,CAAC,QAAQ,CAAE,CAAC;SAErD,MAEG,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAIjC,OAAO,QAAQ,CAAC;KAEnB;IAED,SAAS,cAAc,CAAE,UAAU,EAAE,QAAQ,EAAG;QAE5C,IAAI,OAAO,AAAC;QAEZ,0CAA0C;QAC1C,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;YAElD,MAAM,kBAAkB,GAAG,QAAQ,CAAE,CAAC,CAAE,AAAC;YAEzC,IAAK,kBAAkB,CAAC,QAAQ,KAAK,QAAQ,EAAG;gBAE5C,OAAO,GAAG,kBAAkB,CAAC;gBAC7B,EAAG,OAAO,CAAC,SAAS,CAAC;gBAErB,MAAM;aAET;SAEJ;QAED,IAAK,OAAO,KAAK,SAAS,EAAG;YAEzB,OAAO,GAAG,IAAI,YAAY,CAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,aAAa,CAAE,CAAC;YAC5E,QAAQ,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;SAE5B;QAED,OAAO,OAAO,CAAC;KAElB;IAED,SAAS,cAAc,CAAE,OAAO,EAAG;QAE/B,IAAK,EAAG,OAAO,CAAC,SAAS,KAAK,CAAC,EAAG;YAE9B,4BAA4B;YAC5B,MAAM,IAAC,GAAG,QAAQ,CAAC,OAAO,CAAE,OAAO,CAAE,AAAC;YACtC,QAAQ,CAAE,IAAC,CAAE,GAAG,QAAQ,CAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;YAChD,QAAQ,CAAC,GAAG,EAAE,CAAC;YAEf,uBAAuB;YACvB,OAAO,CAAC,OAAO,EAAE,CAAC;SAErB;KAEJ;IAED,SAAS,kBAAkB,CAAE,QAAQ,EAAG;QAEpC,cAAc,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC;KAErC;IAED,SAAS,OAAO,GAAG;QAEf,cAAc,CAAC,OAAO,EAAE,CAAC;KAE5B;IAED,OAAO;QACH,aAAa,EAAE,aAAa;QAC5B,kBAAkB,EAAE,kBAAkB;QACtC,WAAW,EAAE,WAAW;QACxB,cAAc,EAAE,cAAc;QAC9B,cAAc,EAAE,cAAc;QAC9B,kBAAkB,EAAE,kBAAkB;QACtC,sEAAsE;QACtE,QAAQ,EAAE,QAAQ;QAClB,OAAO,EAAE,OAAO;KACnB,CAAC;CAEL;AAED,SAAS,eAAe,GAAG;IAEvB,IAAI,UAAU,GAAG,IAAI,OAAO,EAAE,AAAC;IAE/B,SAAS,GAAG,CAAE,MAAM,EAAG;QAEnB,IAAI,GAAG,GAAG,UAAU,CAAC,GAAG,CAAE,MAAM,CAAE,AAAC;QAEnC,IAAK,GAAG,KAAK,SAAS,EAAG;YAErB,GAAG,GAAG,EAAE,CAAC;YACT,UAAU,CAAC,GAAG,CAAE,MAAM,EAAE,GAAG,CAAE,CAAC;SAEjC;QAED,OAAO,GAAG,CAAC;KAEd;IAED,SAAS,MAAM,CAAE,MAAM,EAAG;QAEtB,UAAU,CAAC,MAAM,CAAE,MAAM,CAAE,CAAC;KAE/B;IAED,SAAS,MAAM,CAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAG;QAElC,UAAU,CAAC,GAAG,CAAE,MAAM,CAAE,CAAE,GAAG,CAAE,GAAG,KAAK,CAAC;KAE3C;IAED,SAAS,OAAO,GAAG;QAEf,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;KAE9B;IAED,OAAO;QACH,GAAG,EAAE,GAAG;QACR,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,MAAM;QACd,OAAO,EAAE,OAAO;KACnB,CAAC;CAEL;AAED,SAAS,iBAAiB,CAAE,CAAC,EAAE,CAAC,EAAG;IAE/B,IAAK,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,UAAU,EAE9B,OAAO,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;SAEhC,IAAK,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,EAEvC,OAAO,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;SAElC,IAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,EAEvC,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;SAElC,IAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAEnB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAIjB,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;CAI1B;AAED,SAAS,wBAAwB,CAAE,CAAC,EAAE,CAAC,EAAG;IAEtC,IAAK,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,UAAU,EAE9B,OAAO,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;SAEhC,IAAK,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,EAEvC,OAAO,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;SAElC,IAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAEnB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAIjB,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;CAI1B;AAGD,SAAS,eAAe,GAAG;IAEvB,MAAM,WAAW,GAAG,EAAE,AAAC;IACvB,IAAI,gBAAgB,GAAG,CAAC,AAAC;IAEzB,MAAM,MAAM,GAAG,EAAE,AAAC;IAClB,MAAM,YAAY,GAAG,EAAE,AAAC;IACxB,MAAM,WAAW,GAAG,EAAE,AAAC;IAEvB,SAAS,IAAI,GAAG;QAEZ,gBAAgB,GAAG,CAAC,CAAC;QAErB,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAClB,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;QACxB,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;KAE1B;IAED,SAAS,iBAAiB,CAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG;QAE3E,IAAI,UAAU,GAAG,WAAW,CAAE,gBAAgB,CAAE,AAAC;QAEjD,IAAK,UAAU,KAAK,SAAS,EAAG;YAE5B,UAAU,GAAG;gBACT,EAAE,EAAE,MAAM,CAAC,EAAE;gBACb,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,QAAQ;gBAClB,UAAU,EAAE,UAAU;gBACtB,WAAW,EAAE,MAAM,CAAC,WAAW;gBAC/B,CAAC,EAAE,CAAC;gBACJ,KAAK,EAAE,KAAK;aACf,CAAC;YAEF,WAAW,CAAE,gBAAgB,CAAE,GAAG,UAAU,CAAC;SAEhD,MAAM;YAEH,UAAU,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;YAC1B,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;YAC3B,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC/B,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC/B,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC;YACnC,UAAU,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;YAC5C,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;YACjB,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;SAE5B;QAED,gBAAgB,EAAG,CAAC;QAEpB,OAAO,UAAU,CAAC;KAErB;IAED,SAAS,IAAI,CAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG;QAE9D,MAAM,UAAU,GAAG,iBAAiB,CAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,CAAE,AAAC;QAEzF,IAAK,QAAQ,CAAC,YAAY,GAAG,CAAG,EAE5B,YAAY,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC;aAE7B,IAAK,QAAQ,CAAC,WAAW,KAAK,IAAI,EAErC,WAAW,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC;aAI/B,MAAM,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC;KAIjC;IAED,SAAS,OAAO,CAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAG;QAEjE,MAAM,UAAU,GAAG,iBAAiB,CAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,CAAE,AAAC;QAEzF,IAAK,QAAQ,CAAC,YAAY,GAAG,CAAG,EAE5B,YAAY,CAAC,OAAO,CAAE,UAAU,CAAE,CAAC;aAEhC,IAAK,QAAQ,CAAC,WAAW,KAAK,IAAI,EAErC,WAAW,CAAC,OAAO,CAAE,UAAU,CAAE,CAAC;aAIlC,MAAM,CAAC,OAAO,CAAE,UAAU,CAAE,CAAC;KAIpC;IAED,SAAS,IAAI,CAAE,gBAAgB,EAAE,qBAAqB,EAAG;QAErD,IAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EAAG,MAAM,CAAC,IAAI,CAAE,gBAAgB,IAAI,iBAAiB,CAAE,CAAC;QAC9E,IAAK,YAAY,CAAC,MAAM,GAAG,CAAC,EAAG,YAAY,CAAC,IAAI,CAAE,qBAAqB,IAAI,wBAAwB,CAAE,CAAC;QACtG,IAAK,WAAW,CAAC,MAAM,GAAG,CAAC,EAAG,WAAW,CAAC,IAAI,CAAE,qBAAqB,IAAI,wBAAwB,CAAE,CAAC;KAEvG;IAED,SAAS,MAAM,GAAG;QAEd,yDAAyD;QAEzD,IAAM,IAAI,IAAC,GAAG,gBAAgB,EAAE,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;YAEpE,MAAM,UAAU,GAAG,WAAW,CAAE,IAAC,CAAE,AAAC;YAEpC,IAAK,UAAU,CAAC,EAAE,KAAK,IAAI,EAAG,MAAM;YAEpC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC;YACrB,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;YACzB,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC3B,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC3B,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;SAE3B;KAEJ;IAED,OAAO;QAEH,MAAM,EAAE,MAAM;QACd,YAAY,EAAE,YAAY;QAC1B,WAAW,EAAE,WAAW;QAExB,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,OAAO;QAChB,MAAM,EAAE,MAAM;QAEd,IAAI,EAAE,IAAI;KACb,CAAC;CAEL;AAED,SAAS,gBAAgB,GAAG;IAExB,IAAI,KAAK,GAAG,IAAI,OAAO,EAAE,AAAC;IAE1B,SAAS,GAAG,CAAE,KAAK,EAAE,eAAe,EAAG;QAEnC,IAAI,IAAI,AAAC;QAET,IAAK,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,KAAK,KAAK,EAAG;YAEhC,IAAI,GAAG,IAAI,eAAe,EAAE,CAAC;YAC7B,KAAK,CAAC,GAAG,CAAE,KAAK,EAAE;gBAAE,IAAI;aAAE,CAAE,CAAC;SAEhC,MAEG,IAAK,eAAe,IAAI,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC,MAAM,EAAG;YAEhD,IAAI,GAAG,IAAI,eAAe,EAAE,CAAC;YAC7B,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;SAEnC,MAEG,IAAI,GAAG,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,CAAE,eAAe,CAAE,CAAC;QAMrD,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,OAAO,GAAG;QAEf,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC;KAEzB;IAED,OAAO;QACH,GAAG,EAAE,GAAG;QACR,OAAO,EAAE,OAAO;KACnB,CAAC;CAEL;AAED,SAAS,aAAa,GAAG;IAErB,MAAM,MAAM,GAAG,EAAE,AAAC;IAElB,OAAO;QAEH,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,IAAK,MAAM,CAAE,KAAK,CAAC,EAAE,CAAE,KAAK,SAAS,EAEjC,OAAO,MAAM,CAAE,KAAK,CAAC,EAAE,CAAE,CAAC;YAI9B,IAAI,QAAQ,AAAC;YAEb,OAAS,KAAK,CAAC,IAAI;gBAEf,KAAK,kBAAkB;oBACnB,QAAQ,GAAG;wBACP,SAAS,EAAE,IAAI,OAAO,EAAE;wBACxB,KAAK,EAAE,IAAI,KAAK,EAAE;qBACrB,CAAC;oBACF,MAAM;gBAEV,KAAK,WAAW;oBACZ,QAAQ,GAAG;wBACP,QAAQ,EAAE,IAAI,OAAO,EAAE;wBACvB,SAAS,EAAE,IAAI,OAAO,EAAE;wBACxB,KAAK,EAAE,IAAI,KAAK,EAAE;wBAClB,QAAQ,EAAE,CAAC;wBACX,OAAO,EAAE,CAAC;wBACV,WAAW,EAAE,CAAC;wBACd,KAAK,EAAE,CAAC;qBACX,CAAC;oBACF,MAAM;gBAEV,KAAK,YAAY;oBACb,QAAQ,GAAG;wBACP,QAAQ,EAAE,IAAI,OAAO,EAAE;wBACvB,KAAK,EAAE,IAAI,KAAK,EAAE;wBAClB,QAAQ,EAAE,CAAC;wBACX,KAAK,EAAE,CAAC;qBACX,CAAC;oBACF,MAAM;gBAEV,KAAK,iBAAiB;oBAClB,QAAQ,GAAG;wBACP,SAAS,EAAE,IAAI,OAAO,EAAE;wBACxB,QAAQ,EAAE,IAAI,KAAK,EAAE;wBACrB,WAAW,EAAE,IAAI,KAAK,EAAE;qBAC3B,CAAC;oBACF,MAAM;gBAEV,KAAK,eAAe;oBAChB,QAAQ,GAAG;wBACP,KAAK,EAAE,IAAI,KAAK,EAAE;wBAClB,QAAQ,EAAE,IAAI,OAAO,EAAE;wBACvB,SAAS,EAAE,IAAI,OAAO,EAAE;wBACxB,UAAU,EAAE,IAAI,OAAO,EAAE;qBAC5B,CAAC;oBACF,MAAM;aAEb;YAED,MAAM,CAAE,KAAK,CAAC,EAAE,CAAE,GAAG,QAAQ,CAAC;YAE9B,OAAO,QAAQ,CAAC;SAEnB;KAEJ,CAAC;CAEL;AAED,SAAS,mBAAmB,GAAG;IAE3B,MAAM,MAAM,GAAG,EAAE,AAAC;IAElB,OAAO;QAEH,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,IAAK,MAAM,CAAE,KAAK,CAAC,EAAE,CAAE,KAAK,SAAS,EAEjC,OAAO,MAAM,CAAE,KAAK,CAAC,EAAE,CAAE,CAAC;YAI9B,IAAI,QAAQ,AAAC;YAEb,OAAS,KAAK,CAAC,IAAI;gBAEf,KAAK,kBAAkB;oBACnB,QAAQ,GAAG;wBACP,UAAU,EAAE,CAAC;wBACb,gBAAgB,EAAE,CAAC;wBACnB,YAAY,EAAE,CAAC;wBACf,aAAa,EAAE,IAAI,OAAO,EAAE;qBAC/B,CAAC;oBACF,MAAM;gBAEV,KAAK,WAAW;oBACZ,QAAQ,GAAG;wBACP,UAAU,EAAE,CAAC;wBACb,gBAAgB,EAAE,CAAC;wBACnB,YAAY,EAAE,CAAC;wBACf,aAAa,EAAE,IAAI,OAAO,EAAE;qBAC/B,CAAC;oBACF,MAAM;gBAEV,KAAK,YAAY;oBACb,QAAQ,GAAG;wBACP,UAAU,EAAE,CAAC;wBACb,gBAAgB,EAAE,CAAC;wBACnB,YAAY,EAAE,CAAC;wBACf,aAAa,EAAE,IAAI,OAAO,EAAE;wBAC5B,gBAAgB,EAAE,CAAC;wBACnB,eAAe,EAAE,IAAI;qBACxB,CAAC;oBACF,MAAM;aAIb;YAED,MAAM,CAAE,KAAK,CAAC,EAAE,CAAE,GAAG,QAAQ,CAAC;YAE9B,OAAO,QAAQ,CAAC;SAEnB;KAEJ,CAAC;CAEL;AAID,IAAI,WAAW,GAAG,CAAC,AAAC;AAEpB,SAAS,wBAAwB,CAAE,MAAM,EAAE,MAAM,EAAG;IAEhD,OAAO,AAAE,CAAA,MAAM,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAA,GAAO,CAAA,MAAM,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAA,AAAE,CAAC;CAExE;AAED,SAAS,WAAW,CAAE,UAAU,EAAE,YAAY,EAAG;IAE7C,MAAM,KAAK,GAAG,IAAI,aAAa,EAAE,AAAC;IAElC,MAAM,WAAW,GAAG,mBAAmB,EAAE,AAAC;IAE1C,MAAM,KAAK,GAAG;QAEV,OAAO,EAAE,CAAC;QAEV,IAAI,EAAE;YACF,iBAAiB,EAAE,EAAG;YACtB,WAAW,EAAE,EAAG;YAChB,UAAU,EAAE,EAAG;YACf,cAAc,EAAE,EAAG;YACnB,UAAU,EAAE,EAAG;YAEf,qBAAqB,EAAE,EAAG;YAC1B,eAAe,EAAE,EAAG;YACpB,cAAc,EAAE,EAAG;SACtB;QAED,OAAO,EAAE;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;SAAE;QACpB,KAAK,EAAE,EAAE;QACT,WAAW,EAAE,EAAE;QACf,iBAAiB,EAAE,EAAE;QACrB,oBAAoB,EAAE,EAAE;QACxB,uBAAuB,EAAE,EAAE;QAC3B,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,EAAE;QACd,aAAa,EAAE,EAAE;QACjB,gBAAgB,EAAE,EAAE;QACpB,QAAQ,EAAE,EAAE;QACZ,YAAY,EAAE,IAAI;QAClB,YAAY,EAAE,IAAI;QAClB,KAAK,EAAE,EAAE;QACT,WAAW,EAAE,EAAE;QACf,cAAc,EAAE,EAAE;QAClB,iBAAiB,EAAE,EAAE;QACrB,IAAI,EAAE,EAAE;KAEX,AAAC;IAEF,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,OAAO,EAAE,CAAE,CAAC;IAEjE,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,AAAC;IAC9B,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,AAAC;IAC9B,MAAM,QAAQ,GAAG,IAAI,OAAO,EAAE,AAAC;IAE/B,SAAS,KAAK,CAAE,MAAM,EAAE,uBAAuB,EAAG;QAE9C,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,AAAC;QAExB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG,KAAK,CAAC,KAAK,CAAE,IAAC,CAAE,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAE/D,IAAI,iBAAiB,GAAG,CAAC,AAAC;QAC1B,IAAI,WAAW,GAAG,CAAC,AAAC;QACpB,IAAI,UAAU,GAAG,CAAC,AAAC;QACnB,IAAI,cAAc,GAAG,CAAC,AAAC;QACvB,IAAI,UAAU,GAAG,CAAC,AAAC;QAEnB,IAAI,qBAAqB,GAAG,CAAC,AAAC;QAC9B,IAAI,eAAe,GAAG,CAAC,AAAC;QACxB,IAAI,cAAc,GAAG,CAAC,AAAC;QAEvB,MAAM,CAAC,IAAI,CAAE,wBAAwB,CAAE,CAAC;QAExC,iDAAiD;QACjD,MAAM,WAAW,GAAG,AAAE,uBAAuB,KAAK,IAAI,GAAK,IAAI,CAAC,EAAE,GAAG,CAAC,AAAC;QAEvE,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE9C,MAAM,KAAK,GAAG,MAAM,CAAE,IAAC,CAAE,AAAC;YAE1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,AAAC;YAC1B,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,AAAC;YAClC,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,AAAC;YAEhC,MAAM,SAAS,GAAG,AAAE,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,GAAK,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,AAAC;YAEzF,IAAK,KAAK,CAAC,cAAc,EAAG;gBAExB,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG,WAAW,CAAC;gBACvC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG,WAAW,CAAC;gBACvC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG,WAAW,CAAC;aAE1C,MAAM,IAAK,KAAK,CAAC,YAAY,EAE1B,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,CAExB,KAAK,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,eAAe,CAAE,KAAK,CAAC,EAAE,CAAC,YAAY,CAAE,CAAC,CAAE,EAAE,SAAS,CAAE,CAAC;iBAI3E,IAAK,KAAK,CAAC,kBAAkB,EAAG;gBAEnC,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;gBAEpC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAE,KAAK,CAAC,KAAK,CAAE,CAAC,cAAc,CAAE,KAAK,CAAC,SAAS,GAAG,WAAW,CAAE,CAAC;gBAEnF,IAAK,KAAK,CAAC,UAAU,EAAG;oBAEpB,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,AAAC;oBAE5B,MAAM,cAAc,GAAG,WAAW,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;oBAEhD,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;oBACxC,cAAc,CAAC,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC;oBACpD,cAAc,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;oBAC5C,cAAc,CAAC,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC;oBAE9C,KAAK,CAAC,iBAAiB,CAAE,iBAAiB,CAAE,GAAG,cAAc,CAAC;oBAC9D,KAAK,CAAC,oBAAoB,CAAE,iBAAiB,CAAE,GAAG,SAAS,CAAC;oBAC5D,KAAK,CAAC,uBAAuB,CAAE,iBAAiB,CAAE,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;oBAEzE,qBAAqB,EAAG,CAAC;iBAE5B;gBAED,KAAK,CAAC,WAAW,CAAE,iBAAiB,CAAE,GAAG,QAAQ,CAAC;gBAElD,iBAAiB,EAAG,CAAC;aAExB,MAAM,IAAK,KAAK,CAAC,WAAW,EAAG;gBAE5B,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;gBAEpC,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAE,KAAK,CAAC,WAAW,CAAE,CAAC;gBAE7D,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,cAAc,CAAE,SAAS,GAAG,WAAW,CAAE,CAAC;gBACvE,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAE7B,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,KAAK,CAAE,CAAC;gBAC3C,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,KAAK,GAAK,CAAA,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAA,AAAE,CAAE,CAAC;gBACxE,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;gBAE7B,IAAK,KAAK,CAAC,UAAU,EAAG;oBAEpB,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,AAAC;oBAE5B,MAAM,cAAc,GAAG,WAAW,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;oBAEhD,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;oBACxC,cAAc,CAAC,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC;oBACpD,cAAc,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;oBAC5C,cAAc,CAAC,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC;oBAE9C,KAAK,CAAC,UAAU,CAAE,UAAU,CAAE,GAAG,cAAc,CAAC;oBAChD,KAAK,CAAC,aAAa,CAAE,UAAU,CAAE,GAAG,SAAS,CAAC;oBAC9C,KAAK,CAAC,gBAAgB,CAAE,UAAU,CAAE,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;oBAE3D,cAAc,EAAG,CAAC;iBAErB;gBAED,KAAK,CAAC,IAAI,CAAE,UAAU,CAAE,GAAG,QAAQ,CAAC;gBAEpC,UAAU,EAAG,CAAC;aAEjB,MAAM,IAAK,KAAK,CAAC,eAAe,EAAG;gBAEhC,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;gBAEpC,mDAAmD;gBACnD,sGAAsG;gBAEtG,+CAA+C;gBAC/C,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,cAAc,CAAE,SAAS,CAAE,CAAC;gBAEzD,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAE,KAAK,CAAC,KAAK,GAAG,GAAG,EAAE,CAAG,EAAE,CAAG,CAAE,CAAC;gBACtD,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAE,CAAG,EAAE,KAAK,CAAC,MAAM,GAAG,GAAG,EAAE,CAAG,CAAE,CAAC;gBAExD,KAAK,CAAC,QAAQ,CAAE,cAAc,CAAE,GAAG,QAAQ,CAAC;gBAE5C,cAAc,EAAG,CAAC;aAErB,MAAM,IAAK,KAAK,CAAC,YAAY,EAAG;gBAE7B,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;gBAEpC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAE,KAAK,CAAC,KAAK,CAAE,CAAC,cAAc,CAAE,KAAK,CAAC,SAAS,GAAG,WAAW,CAAE,CAAC;gBACnF,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;gBACnC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;gBAE7B,IAAK,KAAK,CAAC,UAAU,EAAG;oBAEpB,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,AAAC;oBAE5B,MAAM,cAAc,GAAG,WAAW,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;oBAEhD,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;oBACxC,cAAc,CAAC,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC;oBACpD,cAAc,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;oBAC5C,cAAc,CAAC,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC;oBAC9C,cAAc,CAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;oBACrD,cAAc,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;oBAEnD,KAAK,CAAC,WAAW,CAAE,WAAW,CAAE,GAAG,cAAc,CAAC;oBAClD,KAAK,CAAC,cAAc,CAAE,WAAW,CAAE,GAAG,SAAS,CAAC;oBAChD,KAAK,CAAC,iBAAiB,CAAE,WAAW,CAAE,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;oBAE7D,eAAe,EAAG,CAAC;iBAEtB;gBAED,KAAK,CAAC,KAAK,CAAE,WAAW,CAAE,GAAG,QAAQ,CAAC;gBAEtC,WAAW,EAAG,CAAC;aAElB,MAAM,IAAK,KAAK,CAAC,iBAAiB,EAAG;gBAElC,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;gBAEpC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAE,KAAK,CAAC,KAAK,CAAE,CAAC,cAAc,CAAE,SAAS,GAAG,WAAW,CAAE,CAAC;gBAChF,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAE,KAAK,CAAC,WAAW,CAAE,CAAC,cAAc,CAAE,SAAS,GAAG,WAAW,CAAE,CAAC;gBAEzF,KAAK,CAAC,IAAI,CAAE,UAAU,CAAE,GAAG,QAAQ,CAAC;gBAEpC,UAAU,EAAG,CAAC;aAEjB;SAEJ;QAED,IAAK,cAAc,GAAG,CAAC;YAEnB,IAAK,YAAY,CAAC,QAAQ,EAAG;gBAEzB,UAAU;gBAEV,KAAK,CAAC,YAAY,GAAG,WAAW,CAAC,WAAW,CAAC;gBAC7C,KAAK,CAAC,YAAY,GAAG,WAAW,CAAC,WAAW,CAAC;aAEhD,MAAM;gBAEH,UAAU;gBAEV,IAAK,UAAU,CAAC,GAAG,CAAE,0BAA0B,CAAE,KAAK,IAAI,EAAG;oBAEzD,KAAK,CAAC,YAAY,GAAG,WAAW,CAAC,WAAW,CAAC;oBAC7C,KAAK,CAAC,YAAY,GAAG,WAAW,CAAC,WAAW,CAAC;iBAEhD,MAAM,IAAK,UAAU,CAAC,GAAG,CAAE,+BAA+B,CAAE,KAAK,IAAI,EAAG;oBAErE,KAAK,CAAC,YAAY,GAAG,WAAW,CAAC,UAAU,CAAC;oBAC5C,KAAK,CAAC,YAAY,GAAG,WAAW,CAAC,UAAU,CAAC;iBAE/C,MAEG,OAAO,CAAC,KAAK,CAAE,6EAA6E,CAAE,CAAC;aAItG;SAEJ;QAED,KAAK,CAAC,OAAO,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QACvB,KAAK,CAAC,OAAO,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QACvB,KAAK,CAAC,OAAO,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAEvB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,AAAC;QAExB,IAAK,IAAI,CAAC,iBAAiB,KAAK,iBAAiB,IAC7C,IAAI,CAAC,WAAW,KAAK,WAAW,IAChC,IAAI,CAAC,UAAU,KAAK,UAAU,IAC9B,IAAI,CAAC,cAAc,KAAK,cAAc,IACtC,IAAI,CAAC,UAAU,KAAK,UAAU,IAC9B,IAAI,CAAC,qBAAqB,KAAK,qBAAqB,IACpD,IAAI,CAAC,eAAe,KAAK,eAAe,IACxC,IAAI,CAAC,cAAc,KAAK,cAAc,EAAG;YAEzC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,iBAAiB,CAAC;YAC7C,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YAC/B,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,cAAc,CAAC;YACvC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC;YACjC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YAE/B,KAAK,CAAC,iBAAiB,CAAC,MAAM,GAAG,qBAAqB,CAAC;YACvD,KAAK,CAAC,oBAAoB,CAAC,MAAM,GAAG,qBAAqB,CAAC;YAC1D,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,eAAe,CAAC;YAC3C,KAAK,CAAC,cAAc,CAAC,MAAM,GAAG,eAAe,CAAC;YAC9C,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,cAAc,CAAC;YACzC,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,cAAc,CAAC;YAC5C,KAAK,CAAC,uBAAuB,CAAC,MAAM,GAAG,qBAAqB,CAAC;YAC7D,KAAK,CAAC,iBAAiB,CAAC,MAAM,GAAG,eAAe,CAAC;YACjD,KAAK,CAAC,gBAAgB,CAAC,MAAM,GAAG,cAAc,CAAC;YAE/C,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;YAC3C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAE7B,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;YACnD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;YACvC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YAErC,KAAK,CAAC,OAAO,GAAG,WAAW,EAAG,CAAC;SAElC;KAEJ;IAED,SAAS,SAAS,CAAE,MAAM,EAAE,MAAM,EAAG;QAEjC,IAAI,iBAAiB,GAAG,CAAC,AAAC;QAC1B,IAAI,WAAW,GAAG,CAAC,AAAC;QACpB,IAAI,UAAU,GAAG,CAAC,AAAC;QACnB,IAAI,cAAc,GAAG,CAAC,AAAC;QACvB,IAAI,UAAU,GAAG,CAAC,AAAC;QAEnB,MAAM,UAAU,GAAG,MAAM,CAAC,kBAAkB,AAAC;QAE7C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE9C,MAAM,KAAK,GAAG,MAAM,CAAE,IAAC,CAAE,AAAC;YAE1B,IAAK,KAAK,CAAC,kBAAkB,EAAG;gBAE5B,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAE,iBAAiB,CAAE,AAAC;gBAExD,QAAQ,CAAC,SAAS,CAAC,qBAAqB,CAAE,KAAK,CAAC,WAAW,CAAE,CAAC;gBAC9D,OAAO,CAAC,qBAAqB,CAAE,KAAK,CAAC,MAAM,CAAC,WAAW,CAAE,CAAC;gBAC1D,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;gBAClC,QAAQ,CAAC,SAAS,CAAC,kBAAkB,CAAE,UAAU,CAAE,CAAC;gBAEpD,iBAAiB,EAAG,CAAC;aAExB,MAAM,IAAK,KAAK,CAAC,WAAW,EAAG;gBAE5B,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAE,UAAU,CAAE,AAAC;gBAE1C,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAE,KAAK,CAAC,WAAW,CAAE,CAAC;gBAC7D,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAE,UAAU,CAAE,CAAC;gBAE7C,QAAQ,CAAC,SAAS,CAAC,qBAAqB,CAAE,KAAK,CAAC,WAAW,CAAE,CAAC;gBAC9D,OAAO,CAAC,qBAAqB,CAAE,KAAK,CAAC,MAAM,CAAC,WAAW,CAAE,CAAC;gBAC1D,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;gBAClC,QAAQ,CAAC,SAAS,CAAC,kBAAkB,CAAE,UAAU,CAAE,CAAC;gBAEpD,UAAU,EAAG,CAAC;aAEjB,MAAM,IAAK,KAAK,CAAC,eAAe,EAAG;gBAEhC,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAE,cAAc,CAAE,AAAC;gBAElD,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAE,KAAK,CAAC,WAAW,CAAE,CAAC;gBAC7D,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAE,UAAU,CAAE,CAAC;gBAE7C,sEAAsE;gBACtE,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACpB,OAAO,CAAC,IAAI,CAAE,KAAK,CAAC,WAAW,CAAE,CAAC;gBAClC,OAAO,CAAC,WAAW,CAAE,UAAU,CAAE,CAAC;gBAClC,QAAQ,CAAC,eAAe,CAAE,OAAO,CAAE,CAAC;gBAEpC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAE,KAAK,CAAC,KAAK,GAAG,GAAG,EAAE,CAAG,EAAE,CAAG,CAAE,CAAC;gBACtD,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAE,CAAG,EAAE,KAAK,CAAC,MAAM,GAAG,GAAG,EAAE,CAAG,CAAE,CAAC;gBAExD,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAE,QAAQ,CAAE,CAAC;gBAC5C,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAE,QAAQ,CAAE,CAAC;gBAE7C,cAAc,EAAG,CAAC;aAErB,MAAM,IAAK,KAAK,CAAC,YAAY,EAAG;gBAE7B,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAE,WAAW,CAAE,AAAC;gBAE5C,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAE,KAAK,CAAC,WAAW,CAAE,CAAC;gBAC7D,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAE,UAAU,CAAE,CAAC;gBAE7C,WAAW,EAAG,CAAC;aAElB,MAAM,IAAK,KAAK,CAAC,iBAAiB,EAAG;gBAElC,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAE,UAAU,CAAE,AAAC;gBAE1C,QAAQ,CAAC,SAAS,CAAC,qBAAqB,CAAE,KAAK,CAAC,WAAW,CAAE,CAAC;gBAC9D,QAAQ,CAAC,SAAS,CAAC,kBAAkB,CAAE,UAAU,CAAE,CAAC;gBACpD,QAAQ,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;gBAE/B,UAAU,EAAG,CAAC;aAEjB;SAEJ;KAEJ;IAED,OAAO;QACH,KAAK,EAAE,KAAK;QACZ,SAAS,EAAE,SAAS;QACpB,KAAK,EAAE,KAAK;KACf,CAAC;CAEL;AAED,SAAS,gBAAgB,CAAE,UAAU,EAAE,YAAY,EAAG;IAElD,MAAM,MAAM,GAAG,IAAI,WAAW,CAAE,UAAU,EAAE,YAAY,CAAE,AAAC;IAE3D,MAAM,WAAW,GAAG,EAAE,AAAC;IACvB,MAAM,YAAY,GAAG,EAAE,AAAC;IAExB,SAAS,IAAI,GAAG;QAEZ,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;QACvB,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;KAE3B;IAED,SAAS,SAAS,CAAE,KAAK,EAAG;QAExB,WAAW,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;KAE7B;IAED,SAAS,UAAU,CAAE,WAAW,EAAG;QAE/B,YAAY,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;KAEpC;IAED,SAAS,WAAW,CAAE,uBAAuB,EAAG;QAE5C,MAAM,CAAC,KAAK,CAAE,WAAW,EAAE,uBAAuB,CAAE,CAAC;KAExD;IAED,SAAS,eAAe,CAAE,MAAM,EAAG;QAE/B,MAAM,CAAC,SAAS,CAAE,WAAW,EAAE,MAAM,CAAE,CAAC;KAE3C;IAED,MAAM,KAAK,GAAG;QACV,WAAW,EAAE,WAAW;QACxB,YAAY,EAAE,YAAY;QAE1B,MAAM,EAAE,MAAM;KACjB,AAAC;IAEF,OAAO;QACH,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,KAAK;QACZ,WAAW,EAAE,WAAW;QACxB,eAAe,EAAE,eAAe;QAEhC,SAAS,EAAE,SAAS;QACpB,UAAU,EAAE,UAAU;KACzB,CAAC;CAEL;AAED,SAAS,iBAAiB,CAAE,UAAU,EAAE,YAAY,EAAG;IAEnD,IAAI,YAAY,GAAG,IAAI,OAAO,EAAE,AAAC;IAEjC,SAAS,GAAG,CAAE,KAAK,EAAE,eAAe,GAAG,CAAC,EAAG;QAEvC,IAAI,WAAW,AAAC;QAEhB,IAAK,YAAY,CAAC,GAAG,CAAE,KAAK,CAAE,KAAK,KAAK,EAAG;YAEvC,WAAW,GAAG,IAAI,gBAAgB,CAAE,UAAU,EAAE,YAAY,CAAE,CAAC;YAC/D,YAAY,CAAC,GAAG,CAAE,KAAK,EAAE;gBAAE,WAAW;aAAE,CAAE,CAAC;SAE9C,MAEG,IAAK,eAAe,IAAI,YAAY,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC,MAAM,EAAG;YAEvD,WAAW,GAAG,IAAI,gBAAgB,CAAE,UAAU,EAAE,YAAY,CAAE,CAAC;YAC/D,YAAY,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;SAEjD,MAEG,WAAW,GAAG,YAAY,CAAC,GAAG,CAAE,KAAK,CAAE,CAAE,eAAe,CAAE,CAAC;QAMnE,OAAO,WAAW,CAAC;KAEtB;IAED,SAAS,OAAO,GAAG;QAEf,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;KAEhC;IAED,OAAO;QACH,GAAG,EAAE,GAAG;QACR,OAAO,EAAE,OAAO;KACnB,CAAC;CAEL;AAED,MAAM,iBAAiB,SAAS,QAAQ;IAEpC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;QAEhC,IAAI,CAAC,YAAY,GAAG,iBAAiB,CAAC;QAEtC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAE5B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QAEjB,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QAExC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QAEtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAEhD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QAEpD,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAEvD,MAAM,oBAAoB,SAAS,QAAQ;IAEvC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;QAEnC,IAAI,CAAC,iBAAiB,GAAG,IAAI,OAAO,EAAE,CAAC;QACvC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QAEjB,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAE,MAAM,CAAC,iBAAiB,CAAE,CAAC;QACxD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QAEtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAEhD,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,oBAAoB,CAAC,SAAS,CAAC,sBAAsB,GAAG,IAAI,CAAC;AAE7D,MAAM,MAAM,GAAG,0DAA0D,AAAC;AAE1E,MAAM,QAAQ,GAAG,imCAAimC,AAAC;AAEnnC,SAAS,cAAc,CAAE,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAG;IAE1D,IAAI,QAAQ,GAAG,IAAI,OAAO,EAAE,AAAC;IAE7B,MAAM,cAAc,GAAG,IAAI,OAAO,EAAE,EAChC,aAAa,GAAG,IAAI,OAAO,EAAE,EAE7B,SAAS,GAAG,IAAI,OAAO,EAAE,EAEzB,cAAc,GAAG,IAAI,iBAAiB,CAAE;QAAE,YAAY,EAAE,gBAAgB;KAAE,CAAE,EAC5E,iBAAiB,GAAG,IAAI,oBAAoB,EAAE,EAE9C,cAAc,GAAG,EAAE,EAEnB,eAAe,GAAG,aAAa,CAAC,cAAc,AAAC;IAEnD,MAAM,UAAU,GAAG;AAAE,QAAA,CAAC,EAAE,QAAQ;AAAE,QAAA,CAAC,EAAE,SAAS;AAAE,QAAA,CAAC,EAAE,UAAU;KAAE,AAAC;IAEhE,MAAM,sBAAsB,GAAG,IAAI,cAAc,CAAE;QAC/C,OAAO,EAAE;YACL,WAAW,EAAE,CAAC;SACjB;QACD,QAAQ,EAAE;YACN,WAAW,EAAE;gBAAE,KAAK,EAAE,IAAI;aAAE;YAC5B,UAAU,EAAE;gBAAE,KAAK,EAAE,IAAI,OAAO,EAAE;aAAE;YACpC,MAAM,EAAE;gBAAE,KAAK,EAAE,CAAG;aAAE;SACzB;QAED,YAAY,EAAE,MAAM;QACpB,cAAc,EAAE,QAAQ;KAE3B,CAAE,AAAC;IAEJ,MAAM,wBAAwB,GAAG,sBAAsB,CAAC,KAAK,EAAE,AAAC;IAChE,wBAAwB,CAAC,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC;IAErD,MAAM,aAAa,GAAG,IAAI,cAAc,EAAE,AAAC;IAC3C,aAAa,CAAC,YAAY,CACtB,UAAU,EACV,IAAI,eAAe,CACf,IAAI,YAAY,CAAE;AAAE,UAAG;AAAE,UAAG;AAAE,WAAG;AAAE,SAAC;AAAE,UAAG;AAAE,WAAG;AAAE,UAAG;AAAE,SAAC;AAAE,WAAG;KAAE,CAAE,EAC/D,CAAC,CACJ,CACJ,CAAC;IAEF,MAAM,cAAc,GAAG,IAAI,IAAI,CAAE,aAAa,EAAE,sBAAsB,CAAE,AAAC;IAEzE,MAAM,KAAK,GAAG,IAAI,AAAC;IAEnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IAErB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAEzB,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;IAEzB,IAAI,CAAC,MAAM,GAAG,SAAW,MAAM,EAAE,KAAK,EAAE,MAAM,EAAG;QAE7C,IAAK,KAAK,CAAC,OAAO,KAAK,KAAK,EAAG,OAAO;QACtC,IAAK,KAAK,CAAC,UAAU,KAAK,KAAK,IAAI,KAAK,CAAC,WAAW,KAAK,KAAK,EAAG,OAAO;QAExE,IAAK,MAAM,CAAC,MAAM,KAAK,CAAC,EAAG,OAAO;QAElC,MAAM,mBAAmB,GAAG,SAAS,CAAC,eAAe,EAAE,AAAC;QACxD,MAAM,cAAc,GAAG,SAAS,CAAC,iBAAiB,EAAE,AAAC;QACrD,MAAM,iBAAiB,GAAG,SAAS,CAAC,oBAAoB,EAAE,AAAC;QAE3D,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,AAAC;QAE/B,8BAA8B;QAC9B,MAAM,CAAC,WAAW,CAAE,UAAU,CAAE,CAAC;QACjC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC5C,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;QACrC,MAAM,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;QAE/B,mBAAmB;QAEnB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;YAEhD,MAAM,KAAK,GAAG,MAAM,CAAE,IAAC,CAAE,AAAC;YAC1B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,AAAC;YAE5B,IAAK,MAAM,KAAK,SAAS,EAAG;gBAExB,OAAO,CAAC,IAAI,CAAE,uBAAuB,EAAE,KAAK,EAAE,gBAAgB,CAAE,CAAC;gBACjE,SAAS;aAEZ;YAED,IAAK,MAAM,CAAC,UAAU,KAAK,KAAK,IAAI,MAAM,CAAC,WAAW,KAAK,KAAK,EAAG,SAAS;YAE5E,cAAc,CAAC,IAAI,CAAE,MAAM,CAAC,OAAO,CAAE,CAAC;YAEtC,MAAM,kBAAkB,GAAG,MAAM,CAAC,eAAe,EAAE,AAAC;YAEpD,cAAc,CAAC,QAAQ,CAAE,kBAAkB,CAAE,CAAC;YAE9C,aAAa,CAAC,IAAI,CAAE,MAAM,CAAC,OAAO,CAAE,CAAC;YAErC,IAAK,cAAc,CAAC,CAAC,GAAG,eAAe,IAAI,cAAc,CAAC,CAAC,GAAG,eAAe,EAAG;gBAE5E,IAAK,cAAc,CAAC,CAAC,GAAG,eAAe,EAAG;oBAEtC,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAE,eAAe,GAAG,kBAAkB,CAAC,CAAC,CAAE,CAAC;oBACvE,cAAc,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,GAAG,kBAAkB,CAAC,CAAC,CAAC;oBAC1D,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;iBAEtC;gBAED,IAAK,cAAc,CAAC,CAAC,GAAG,eAAe,EAAG;oBAEtC,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAE,eAAe,GAAG,kBAAkB,CAAC,CAAC,CAAE,CAAC;oBACvE,cAAc,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,GAAG,kBAAkB,CAAC,CAAC,CAAC;oBAC1D,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;iBAEtC;aAEJ;YAED,IAAK,MAAM,CAAC,GAAG,KAAK,IAAI,IAAI,CAAE,MAAM,CAAC,kBAAkB,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,EAAG;gBAEpF,MAAM,CAAC,GAAG,GAAG,IAAI,iBAAiB,CAAE,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAE,CAAC;gBACzE,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,YAAY,CAAC;gBAEpD,MAAM,CAAC,OAAO,GAAG,IAAI,iBAAiB,CAAE,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAE,CAAC;gBAE7E,MAAM,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;aAE1C;YAED,IAAK,MAAM,CAAC,GAAG,KAAK,IAAI,EAAG;gBAEvB,MAAM,IAAI,GAAG;oBAAE,SAAS,EAAE,aAAa;oBAAE,SAAS,EAAE,aAAa;oBAAE,MAAM,EAAE,UAAU;iBAAE,AAAC;gBAExF,MAAM,CAAC,GAAG,GAAG,IAAI,iBAAiB,CAAE,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,EAAE,IAAI,CAAE,CAAC;gBAC/E,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,YAAY,CAAC;gBAEpD,MAAM,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;aAE1C;YAED,SAAS,CAAC,eAAe,CAAE,MAAM,CAAC,GAAG,CAAE,CAAC;YACxC,SAAS,CAAC,KAAK,EAAE,CAAC;YAElB,MAAM,aAAa,GAAG,MAAM,CAAC,gBAAgB,EAAE,AAAC;YAEhD,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,aAAa,EAAE,EAAE,EAAG,CAAG;gBAE1C,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAE,EAAE,CAAE,AAAC;gBAE1C,SAAS,CAAC,GAAG,CACT,aAAa,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,EAC5B,aAAa,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,EAC5B,aAAa,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,EAC5B,aAAa,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAC/B,CAAC;gBAEF,MAAM,CAAC,QAAQ,CAAE,SAAS,CAAE,CAAC;gBAE7B,MAAM,CAAC,cAAc,CAAE,KAAK,EAAE,EAAE,CAAE,CAAC;gBAEnC,QAAQ,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;gBAE/B,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAE,CAAC;aAElE;YAED,uBAAuB;YAEvB,IAAK,CAAE,MAAM,CAAC,kBAAkB,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,EAE1D,OAAO,CAAE,MAAM,EAAE,MAAM,CAAE,CAAC;YAI9B,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;SAE9B;QAED,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC;QAE1B,SAAS,CAAC,eAAe,CAAE,mBAAmB,EAAE,cAAc,EAAE,iBAAiB,CAAE,CAAC;KAEvF,CAAC;IAEF,SAAS,OAAO,CAAE,MAAM,EAAE,MAAM,EAAG;QAE/B,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAE,cAAc,CAAE,AAAC;QAEnD,IAAK,sBAAsB,CAAC,OAAO,CAAC,WAAW,KAAK,MAAM,CAAC,WAAW,EAAG;YAErE,sBAAsB,CAAC,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;YAChE,wBAAwB,CAAC,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;YAElE,sBAAsB,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1C,wBAAwB,CAAC,WAAW,GAAG,IAAI,CAAC;SAE/C;QAED,gBAAgB;QAEhB,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC;QACvE,sBAAsB,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;QAClE,sBAAsB,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7D,SAAS,CAAC,eAAe,CAAE,MAAM,CAAC,OAAO,CAAE,CAAC;QAC5C,SAAS,CAAC,KAAK,EAAE,CAAC;QAClB,SAAS,CAAC,kBAAkB,CAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,sBAAsB,EAAE,cAAc,EAAE,IAAI,CAAE,CAAC;QAErG,kBAAkB;QAElB,wBAAwB,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;QAC7E,wBAAwB,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;QACpE,wBAAwB,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QAC/D,SAAS,CAAC,eAAe,CAAE,MAAM,CAAC,GAAG,CAAE,CAAC;QACxC,SAAS,CAAC,KAAK,EAAE,CAAC;QAClB,SAAS,CAAC,kBAAkB,CAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,wBAAwB,EAAE,cAAc,EAAE,IAAI,CAAE,CAAC;KAE1G;IAED,SAAS,gBAAgB,CAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,gBAAgB,EAAE,eAAe,EAAE,IAAI,EAAG;QAE1F,IAAI,MAAM,GAAG,IAAI,AAAC;QAElB,MAAM,cAAc,GAAG,AAAE,KAAK,CAAC,YAAY,KAAK,IAAI,GAAK,MAAM,CAAC,sBAAsB,GAAG,MAAM,CAAC,mBAAmB,AAAC;QAEpH,IAAK,cAAc,KAAK,SAAS,EAE7B,MAAM,GAAG,cAAc,CAAC;aAIxB,MAAM,GAAG,AAAE,KAAK,CAAC,YAAY,KAAK,IAAI,GAAK,iBAAiB,GAAG,cAAc,CAAC;QAIlF,IAAK,AAAE,SAAS,CAAC,oBAAoB,IAAI,QAAQ,CAAC,WAAW,KAAK,IAAI,IAAI,QAAQ,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,IACxG,QAAQ,CAAC,eAAe,IAAI,QAAQ,CAAC,iBAAiB,KAAK,CAAC,IAC5D,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,SAAS,GAAG,CAAC,AAAE,EAAG;YAElD,iEAAiE;YACjE,oBAAoB;YAEpB,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,IAAI,GAAG,QAAQ,CAAC,IAAI,AAAC;YAE/C,IAAI,mBAAmB,GAAG,cAAc,CAAE,IAAI,CAAE,AAAC;YAEjD,IAAK,mBAAmB,KAAK,SAAS,EAAG;gBAErC,mBAAmB,GAAG,EAAE,CAAC;gBACzB,cAAc,CAAE,IAAI,CAAE,GAAG,mBAAmB,CAAC;aAEhD;YAED,IAAI,cAAc,GAAG,mBAAmB,CAAE,IAAI,CAAE,AAAC;YAEjD,IAAK,cAAc,KAAK,SAAS,EAAG;gBAEhC,cAAc,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;gBAChC,mBAAmB,CAAE,IAAI,CAAE,GAAG,cAAc,CAAC;aAEhD;YAED,MAAM,GAAG,cAAc,CAAC;SAE3B;QAED,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;QAClC,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QAEtC,IAAK,IAAI,KAAK,YAAY,EAEtB,MAAM,CAAC,IAAI,GAAG,AAAE,QAAQ,CAAC,UAAU,KAAK,IAAI,GAAK,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC;aAIrF,MAAM,CAAC,IAAI,GAAG,AAAE,QAAQ,CAAC,UAAU,KAAK,IAAI,GAAK,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAE,QAAQ,CAAC,IAAI,CAAE,CAAC;QAIvG,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACpC,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QAEtC,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;QAC1C,MAAM,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;QAChD,MAAM,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;QAEpD,MAAM,CAAC,eAAe,GAAG,QAAQ,CAAC,eAAe,CAAC;QAClD,MAAM,CAAC,iBAAiB,GAAG,QAAQ,CAAC,iBAAiB,CAAC;QACtD,MAAM,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;QAEpD,MAAM,CAAC,kBAAkB,GAAG,QAAQ,CAAC,kBAAkB,CAAC;QACxD,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QAEtC,IAAK,KAAK,CAAC,YAAY,KAAK,IAAI,IAAI,MAAM,CAAC,sBAAsB,KAAK,IAAI,EAAG;YAEzE,MAAM,CAAC,iBAAiB,CAAC,qBAAqB,CAAE,KAAK,CAAC,WAAW,CAAE,CAAC;YACpE,MAAM,CAAC,YAAY,GAAG,gBAAgB,CAAC;YACvC,MAAM,CAAC,WAAW,GAAG,eAAe,CAAC;SAExC;QAED,OAAO,MAAM,CAAC;KAEjB;IAED,SAAS,YAAY,CAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,EAAG;QAE/D,IAAK,MAAM,CAAC,OAAO,KAAK,KAAK,EAAG,OAAO;QAEvC,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,CAAE,AAAC;QAEpD,IAAK,OAAO,IAAM,CAAA,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAA,AAAE,EAEjE;YAAA,IAAK,AAAE,CAAA,MAAM,CAAC,UAAU,IAAM,MAAM,CAAC,aAAa,IAAI,IAAI,KAAK,YAAY,AAAE,CAAA,IAAQ,CAAA,CAAE,MAAM,CAAC,aAAa,IAAI,QAAQ,CAAC,gBAAgB,CAAE,MAAM,CAAE,CAAA,AAAE,EAAG;gBAEnJ,MAAM,CAAC,eAAe,CAAC,gBAAgB,CAAE,YAAY,CAAC,kBAAkB,EAAE,MAAM,CAAC,WAAW,CAAE,CAAC;gBAE/F,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAE,MAAM,CAAE,AAAC;gBAC3C,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;gBAEjC,IAAK,KAAK,CAAC,OAAO,CAAE,QAAQ,CAAE,EAAG;oBAE7B,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,AAAC;oBAE/B,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;wBAEhD,MAAM,KAAK,GAAG,MAAM,CAAE,CAAC,CAAE,AAAC;wBAC1B,MAAM,aAAa,GAAG,QAAQ,CAAE,KAAK,CAAC,aAAa,CAAE,AAAC;wBAEtD,IAAK,aAAa,IAAI,aAAa,CAAC,OAAO,EAAG;4BAE1C,MAAM,aAAa,GAAG,gBAAgB,CAAE,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,GAAG,EAAE,IAAI,CAAE,AAAC;4BAElH,SAAS,CAAC,kBAAkB,CAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,KAAK,CAAE,CAAC;yBAE9F;qBAEJ;iBAEJ,MAAM,IAAK,QAAQ,CAAC,OAAO,EAAG;oBAE3B,MAAM,aAAa,GAAG,gBAAgB,CAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,GAAG,EAAE,IAAI,CAAE,AAAC;oBAE7G,SAAS,CAAC,kBAAkB,CAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,CAAE,CAAC;iBAE7F;aAEJ;SAAA,AAEJ;QAED,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;QAEjC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAE7C,YAAY,CAAE,QAAQ,CAAE,IAAC,CAAE,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;KAIxE;CAEJ;AAED,SAAS,UAAU,CAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAG;IAEhD,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,AAAC;IAEvC,SAAS,WAAW,GAAG;QAEnB,IAAI,MAAM,GAAG,KAAK,AAAC;QAEnB,MAAM,KAAK,GAAG,IAAI,OAAO,EAAE,AAAC;QAC5B,IAAI,gBAAgB,GAAG,IAAI,AAAC;QAC5B,MAAM,iBAAiB,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,AAAC;QAEpD,OAAO;YAEH,OAAO,EAAE,SAAW,SAAS,EAAG;gBAE5B,IAAK,gBAAgB,KAAK,SAAS,IAAI,CAAE,MAAM,EAAG;oBAE9C,EAAE,CAAC,SAAS,CAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAE,CAAC;oBAC3D,gBAAgB,GAAG,SAAS,CAAC;iBAEhC;aAEJ;YAED,SAAS,EAAE,SAAW,IAAI,EAAG;gBAEzB,MAAM,GAAG,IAAI,CAAC;aAEjB;YAED,QAAQ,EAAE,SAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,kBAAkB,EAAG;gBAElD,IAAK,kBAAkB,KAAK,IAAI,EAAG;oBAE/B,CAAC,IAAI,CAAC,CAAC;oBAAC,CAAC,IAAI,CAAC,CAAC;oBAAC,CAAC,IAAI,CAAC,CAAC;iBAE1B;gBAED,KAAK,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBAExB,IAAK,iBAAiB,CAAC,MAAM,CAAE,KAAK,CAAE,KAAK,KAAK,EAAG;oBAE/C,EAAE,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;oBAC5B,iBAAiB,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;iBAEnC;aAEJ;YAED,KAAK,EAAE,WAAY;gBAEf,MAAM,GAAG,KAAK,CAAC;gBAEf,gBAAgB,GAAG,IAAI,CAAC;gBACxB,iBAAiB,CAAC,GAAG,CAAE,EAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,CAAC,uBAAuB;aAEjE;SAEJ,CAAC;KAEL;IAED,SAAS,WAAW,GAAG;QAEnB,IAAI,MAAM,GAAG,KAAK,AAAC;QAEnB,IAAI,gBAAgB,GAAG,IAAI,AAAC;QAC5B,IAAI,gBAAgB,GAAG,IAAI,AAAC;QAC5B,IAAI,iBAAiB,GAAG,IAAI,AAAC;QAE7B,OAAO;YAEH,OAAO,EAAE,SAAW,SAAS,EAAG;gBAE5B,IAAK,SAAS,EAEV,MAAM,CAAE,IAAI,CAAE,CAAC;qBAIf,OAAO,CAAE,IAAI,CAAE,CAAC;aAIvB;YAED,OAAO,EAAE,SAAW,SAAS,EAAG;gBAE5B,IAAK,gBAAgB,KAAK,SAAS,IAAI,CAAE,MAAM,EAAG;oBAE9C,EAAE,CAAC,SAAS,CAAE,SAAS,CAAE,CAAC;oBAC1B,gBAAgB,GAAG,SAAS,CAAC;iBAEhC;aAEJ;YAED,OAAO,EAAE,SAAW,SAAS,EAAG;gBAE5B,IAAK,gBAAgB,KAAK,SAAS,EAAG;oBAElC,IAAK,SAAS,EAEV,OAAS,SAAS;wBAEd,KAAK,UAAU;4BAEX,EAAE,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;4BACpB,MAAM;wBAEV,KAAK,WAAW;4BAEZ,EAAE,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;4BACpB,MAAM;wBAEV,KAAK,SAAS;4BAEV,EAAE,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;4BACpB,MAAM;wBAEV,KAAK,cAAc;4BAEf,EAAE,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;4BACpB,MAAM;wBAEV,KAAK,UAAU;4BAEX,EAAE,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;4BACpB,MAAM;wBAEV,KAAK,iBAAiB;4BAElB,EAAE,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;4BACpB,MAAM;wBAEV,KAAK,YAAY;4BAEb,EAAE,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;4BACpB,MAAM;wBAEV,KAAK,aAAa;4BAEd,EAAE,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;4BACpB,MAAM;wBAEV;4BAEI,EAAE,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;qBAE3B;yBAID,EAAE,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;oBAIxB,gBAAgB,GAAG,SAAS,CAAC;iBAEhC;aAEJ;YAED,SAAS,EAAE,SAAW,IAAI,EAAG;gBAEzB,MAAM,GAAG,IAAI,CAAC;aAEjB;YAED,QAAQ,EAAE,SAAW,KAAK,EAAG;gBAEzB,IAAK,iBAAiB,KAAK,KAAK,EAAG;oBAE/B,EAAE,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC;oBACvB,iBAAiB,GAAG,KAAK,CAAC;iBAE7B;aAEJ;YAED,KAAK,EAAE,WAAY;gBAEf,MAAM,GAAG,KAAK,CAAC;gBAEf,gBAAgB,GAAG,IAAI,CAAC;gBACxB,gBAAgB,GAAG,IAAI,CAAC;gBACxB,iBAAiB,GAAG,IAAI,CAAC;aAE5B;SAEJ,CAAC;KAEL;IAED,SAAS,aAAa,GAAG;QAErB,IAAI,MAAM,GAAG,KAAK,AAAC;QAEnB,IAAI,kBAAkB,GAAG,IAAI,AAAC;QAC9B,IAAI,kBAAkB,GAAG,IAAI,AAAC;QAC9B,IAAI,iBAAiB,GAAG,IAAI,AAAC;QAC7B,IAAI,sBAAsB,GAAG,IAAI,AAAC;QAClC,IAAI,kBAAkB,GAAG,IAAI,AAAC;QAC9B,IAAI,mBAAmB,GAAG,IAAI,AAAC;QAC/B,IAAI,mBAAmB,GAAG,IAAI,AAAC;QAC/B,IAAI,mBAAmB,GAAG,IAAI,AAAC;QAE/B,OAAO;YAEH,OAAO,EAAE,SAAW,WAAW,EAAG;gBAE9B,IAAK,CAAE,MAAM;oBAET,IAAK,WAAW,EAEZ,MAAM,CAAE,IAAI,CAAE,CAAC;yBAIf,OAAO,CAAE,IAAI,CAAE,CAAC;iBAIvB;aAEJ;YAED,OAAO,EAAE,SAAW,WAAW,EAAG;gBAE9B,IAAK,kBAAkB,KAAK,WAAW,IAAI,CAAE,MAAM,EAAG;oBAElD,EAAE,CAAC,WAAW,CAAE,WAAW,CAAE,CAAC;oBAC9B,kBAAkB,GAAG,WAAW,CAAC;iBAEpC;aAEJ;YAED,OAAO,EAAE,SAAW,WAAW,EAAE,UAAU,EAAE,WAAW,EAAG;gBAEvD,IAAK,kBAAkB,KAAK,WAAW,IAClC,iBAAiB,KAAK,UAAU,IAChC,sBAAsB,KAAK,WAAW,EAAG;oBAE1C,EAAE,CAAC,WAAW,CAAE,WAAW,EAAE,UAAU,EAAE,WAAW,CAAE,CAAC;oBAEvD,kBAAkB,GAAG,WAAW,CAAC;oBACjC,iBAAiB,GAAG,UAAU,CAAC;oBAC/B,sBAAsB,GAAG,WAAW,CAAC;iBAExC;aAEJ;YAED,KAAK,EAAE,SAAW,WAAW,EAAE,YAAY,EAAE,YAAY,EAAG;gBAExD,IAAK,kBAAkB,KAAK,WAAW,IAClC,mBAAmB,KAAK,YAAY,IACpC,mBAAmB,KAAK,YAAY,EAAG;oBAExC,EAAE,CAAC,SAAS,CAAE,WAAW,EAAE,YAAY,EAAE,YAAY,CAAE,CAAC;oBAExD,kBAAkB,GAAG,WAAW,CAAC;oBACjC,mBAAmB,GAAG,YAAY,CAAC;oBACnC,mBAAmB,GAAG,YAAY,CAAC;iBAEtC;aAEJ;YAED,SAAS,EAAE,SAAW,IAAI,EAAG;gBAEzB,MAAM,GAAG,IAAI,CAAC;aAEjB;YAED,QAAQ,EAAE,SAAW,OAAO,EAAG;gBAE3B,IAAK,mBAAmB,KAAK,OAAO,EAAG;oBAEnC,EAAE,CAAC,YAAY,CAAE,OAAO,CAAE,CAAC;oBAC3B,mBAAmB,GAAG,OAAO,CAAC;iBAEjC;aAEJ;YAED,KAAK,EAAE,WAAY;gBAEf,MAAM,GAAG,KAAK,CAAC;gBAEf,kBAAkB,GAAG,IAAI,CAAC;gBAC1B,kBAAkB,GAAG,IAAI,CAAC;gBAC1B,iBAAiB,GAAG,IAAI,CAAC;gBACzB,sBAAsB,GAAG,IAAI,CAAC;gBAC9B,kBAAkB,GAAG,IAAI,CAAC;gBAC1B,mBAAmB,GAAG,IAAI,CAAC;gBAC3B,mBAAmB,GAAG,IAAI,CAAC;gBAC3B,mBAAmB,GAAG,IAAI,CAAC;aAE9B;SAEJ,CAAC;KAEL;IAED,EAAE;IAEF,MAAM,WAAW,GAAG,IAAI,WAAW,EAAE,AAAC;IACtC,MAAM,WAAW,GAAG,IAAI,WAAW,EAAE,AAAC;IACtC,MAAM,aAAa,GAAG,IAAI,aAAa,EAAE,AAAC;IAE1C,IAAI,mBAAmB,GAAG,EAAE,AAAC;IAE7B,IAAI,wBAAwB,GAAG,EAAE,AAAC;IAClC,IAAI,kBAAkB,GAAG,IAAI,OAAO,EAAE,AAAC;IACvC,IAAI,kBAAkB,GAAG,EAAE,AAAC;IAE5B,IAAI,cAAc,GAAG,IAAI,AAAC;IAE1B,IAAI,sBAAsB,GAAG,KAAK,AAAC;IACnC,IAAI,eAAe,GAAG,IAAI,AAAC;IAC3B,IAAI,oBAAoB,GAAG,IAAI,AAAC;IAChC,IAAI,eAAe,GAAG,IAAI,AAAC;IAC3B,IAAI,eAAe,GAAG,IAAI,AAAC;IAC3B,IAAI,yBAAyB,GAAG,IAAI,AAAC;IACrC,IAAI,oBAAoB,GAAG,IAAI,AAAC;IAChC,IAAI,oBAAoB,GAAG,IAAI,AAAC;IAChC,IAAI,wBAAwB,GAAG,KAAK,AAAC;IAErC,IAAI,gBAAgB,GAAG,IAAI,AAAC;IAC5B,IAAI,eAAe,GAAG,IAAI,AAAC;IAE3B,IAAI,gBAAgB,GAAG,IAAI,AAAC;IAE5B,IAAI,0BAA0B,GAAG,IAAI,AAAC;IACtC,IAAI,yBAAyB,GAAG,IAAI,AAAC;IAErC,MAAM,WAAW,GAAG,EAAE,CAAC,YAAY,CAAE,KAAK,CAAE,AAAC;IAE7C,IAAI,kBAAkB,GAAG,KAAK,AAAC;IAC/B,IAAI,OAAO,GAAG,CAAC,AAAC;IAChB,MAAM,SAAS,GAAG,EAAE,CAAC,YAAY,CAAE,IAAI,CAAE,AAAC;IAE1C,IAAK,SAAS,CAAC,OAAO,CAAE,OAAO,CAAE,KAAK,EAAG,EAAG;QAExC,OAAO,GAAG,UAAU,CAAE,cAAc,IAAI,CAAE,SAAS,CAAE,CAAE,CAAC,CAAE,CAAE,CAAC;QAC7D,kBAAkB,GAAK,OAAO,IAAI,CAAG,AAAE,CAAC;KAE3C,MAAM,IAAK,SAAS,CAAC,OAAO,CAAE,WAAW,CAAE,KAAK,EAAG,EAAG;QAEnD,OAAO,GAAG,UAAU,CAAE,kBAAkB,IAAI,CAAE,SAAS,CAAE,CAAE,CAAC,CAAE,CAAE,CAAC;QACjE,kBAAkB,GAAK,OAAO,IAAI,CAAG,AAAE,CAAC;KAE3C;IAED,IAAI,kBAAkB,GAAG,IAAI,AAAC;IAC9B,IAAI,oBAAoB,GAAG,EAAE,AAAC;IAE9B,MAAM,YAAY,GAAG,EAAE,CAAC,YAAY,CAAE,IAAI,CAAE,AAAC;IAC7C,MAAM,aAAa,GAAG,EAAE,CAAC,YAAY,CAAE,IAAI,CAAE,AAAC;IAE9C,MAAM,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC,SAAS,CAAE,YAAY,CAAE,AAAC;IAC/D,MAAM,eAAe,GAAG,IAAI,OAAO,EAAE,CAAC,SAAS,CAAE,aAAa,CAAE,AAAC;IAEjE,SAAS,aAAa,CAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAG;QAE1C,MAAM,IAAI,GAAG,IAAI,UAAU,CAAE,CAAC,CAAE,AAAC,EAAC,wDAAwD;QAC1F,MAAM,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,AAAC;QAEnC,EAAE,CAAC,WAAW,CAAE,IAAI,EAAE,OAAO,CAAE,CAAC;QAChC,EAAE,CAAC,aAAa,CAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;QACtC,EAAE,CAAC,aAAa,CAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;QAEtC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,KAAK,EAAE,IAAC,EAAG,CAE5B,EAAE,CAAC,UAAU,CAAE,MAAM,GAAG,IAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;QAIpE,OAAO,OAAO,CAAC;KAElB;IAED,MAAM,aAAa,GAAG,EAAE,AAAC;IACzB,aAAa,CAAE,IAAI,CAAE,GAAG,aAAa,CAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAE,CAAC;IACvD,aAAa,CAAE,KAAK,CAAE,GAAG,aAAa,CAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAE,CAAC;IAE1D,OAAO;IAEP,WAAW,CAAC,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;IACnC,WAAW,CAAC,QAAQ,CAAE,CAAC,CAAE,CAAC;IAC1B,aAAa,CAAC,QAAQ,CAAE,CAAC,CAAE,CAAC;IAE5B,MAAM,CAAE,IAAI,CAAE,CAAC;IACf,WAAW,CAAC,OAAO,CAAE,cAAc,CAAE,CAAC;IAEtC,YAAY,CAAE,KAAK,CAAE,CAAC;IACtB,WAAW,CAAE,YAAY,CAAE,CAAC;IAC5B,MAAM,CAAE,IAAI,CAAE,CAAC;IAEf,WAAW,CAAE,UAAU,CAAE,CAAC;IAE1B,EAAE;IAEF,SAAS,MAAM,CAAE,EAAE,EAAG;QAElB,IAAK,mBAAmB,CAAE,EAAE,CAAE,KAAK,IAAI,EAAG;YAEtC,EAAE,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;YAChB,mBAAmB,CAAE,EAAE,CAAE,GAAG,IAAI,CAAC;SAEpC;KAEJ;IAED,SAAS,OAAO,CAAE,EAAE,EAAG;QAEnB,IAAK,mBAAmB,CAAE,EAAE,CAAE,KAAK,KAAK,EAAG;YAEvC,EAAE,CAAC,OAAO,CAAE,EAAE,CAAE,CAAC;YACjB,mBAAmB,CAAE,EAAE,CAAE,GAAG,KAAK,CAAC;SAErC;KAEJ;IAED,SAAS,eAAe,CAAE,MAAM,EAAE,WAAW,EAAG;QAE5C,IAAK,wBAAwB,CAAE,MAAM,CAAE,KAAK,WAAW,EAAG;YAEtD,EAAE,CAAC,eAAe,CAAE,MAAM,EAAE,WAAW,CAAE,CAAC;YAE1C,wBAAwB,CAAE,MAAM,CAAE,GAAG,WAAW,CAAC;YAEjD,IAAK,QAAQ,EAAG;gBAEZ,+BAA+B;gBAE/B,IAAK,MAAM,KAAK,KAAK,EAEjB,wBAAwB,CAAE,KAAK,CAAE,GAAG,WAAW,CAAC;gBAIpD,IAAK,MAAM,KAAK,KAAK,EAEjB,wBAAwB,CAAE,KAAK,CAAE,GAAG,WAAW,CAAC;aAIvD;YAED,OAAO,IAAI,CAAC;SAEf;QAED,OAAO,KAAK,CAAC;KAEhB;IAED,SAAS,YAAW,CAAE,YAAY,EAAE,WAAW,EAAG;QAE9C,IAAI,WAAW,GAAG,kBAAkB,AAAC;QAErC,IAAI,WAAW,GAAG,KAAK,AAAC;QAExB,IAAK,YAAY,EAAG;YAEhB,WAAW,GAAG,kBAAkB,CAAC,GAAG,CAAE,WAAW,CAAE,CAAC;YAEpD,IAAK,WAAW,KAAK,SAAS,EAAG;gBAE7B,WAAW,GAAG,EAAE,CAAC;gBACjB,kBAAkB,CAAC,GAAG,CAAE,WAAW,EAAE,WAAW,CAAE,CAAC;aAEtD;YAED,IAAK,YAAY,CAAC,4BAA4B,EAAG;gBAE7C,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,AAAC;gBAEtC,IAAK,WAAW,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,IAAI,WAAW,CAAE,CAAC,CAAE,KAAK,KAAK,EAAG;oBAExE,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAE/C,WAAW,CAAE,IAAC,CAAE,GAAG,KAAK,GAAG,IAAC,CAAC;oBAIjC,WAAW,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;oBAErC,WAAW,GAAG,IAAI,CAAC;iBAEtB;aAEJ,MAEG,IAAK,WAAW,CAAE,CAAC,CAAE,KAAK,KAAK,EAAG;gBAE9B,WAAW,CAAE,CAAC,CAAE,GAAG,KAAK,CAAC;gBAEzB,WAAW,GAAG,IAAI,CAAC;aAEtB;SAIR,MAEG,IAAK,WAAW,CAAE,CAAC,CAAE,KAAK,IAAI,EAAG;YAE7B,WAAW,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC;YAExB,WAAW,GAAG,IAAI,CAAC;SAEtB;QAIL,IAAK,WAAW;YAEZ,IAAK,YAAY,CAAC,QAAQ,EAEtB,EAAE,CAAC,WAAW,CAAE,WAAW,CAAE,CAAC;iBAI9B,UAAU,CAAC,GAAG,CAAE,oBAAoB,CAAE,CAAC,gBAAgB,CAAE,WAAW,CAAE,CAAC;SAI9E;KAGJ;IAED,SAAS,UAAU,CAAE,OAAO,EAAG;QAE3B,IAAK,cAAc,KAAK,OAAO,EAAG;YAE9B,EAAE,CAAC,UAAU,CAAE,OAAO,CAAE,CAAC;YAEzB,cAAc,GAAG,OAAO,CAAC;YAEzB,OAAO,IAAI,CAAC;SAEf;QAED,OAAO,KAAK,CAAC;KAEhB;IAED,MAAM,YAAY,GAAG;QACjB,CAAE,WAAW,CAAE,EAAE,KAAK;QACtB,CAAE,gBAAgB,CAAE,EAAE,KAAK;QAC3B,CAAE,uBAAuB,CAAE,EAAE,KAAK;KACrC,AAAC;IAEF,IAAK,QAAQ,EAAG;QAEZ,YAAY,CAAE,WAAW,CAAE,GAAG,KAAK,CAAC;QACpC,YAAY,CAAE,WAAW,CAAE,GAAG,KAAK,CAAC;KAEvC,MAAM;QAEH,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,kBAAkB,CAAE,AAAC;QAEvD,IAAK,SAAS,KAAK,IAAI,EAAG;YAEtB,YAAY,CAAE,WAAW,CAAE,GAAG,SAAS,CAAC,OAAO,CAAC;YAChD,YAAY,CAAE,WAAW,CAAE,GAAG,SAAS,CAAC,OAAO,CAAC;SAEnD;KAEJ;IAED,MAAM,UAAU,GAAG;QACf,CAAE,UAAU,CAAE,EAAE,CAAC;QACjB,CAAE,SAAS,CAAE,EAAE,CAAC;QAChB,CAAE,cAAc,CAAE,EAAE,GAAG;QACvB,CAAE,cAAc,CAAE,EAAE,GAAG;QACvB,CAAE,sBAAsB,CAAE,EAAE,GAAG;QAC/B,CAAE,cAAc,CAAE,EAAE,GAAG;QACvB,CAAE,cAAc,CAAE,EAAE,GAAG;QACvB,CAAE,sBAAsB,CAAE,EAAE,GAAG;QAC/B,CAAE,sBAAsB,CAAE,EAAE,GAAG;QAC/B,CAAE,sBAAsB,CAAE,EAAE,GAAG;QAC/B,CAAE,sBAAsB,CAAE,EAAE,GAAG;KAClC,AAAC;IAEF,SAAS,WAAW,CAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAE,kBAAkB,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAG;QAEtI,IAAK,QAAQ,KAAK,UAAU,EAAG;YAE3B,IAAK,sBAAsB,KAAK,IAAI,EAAG;gBAEnC,OAAO,CAAE,IAAI,CAAE,CAAC;gBAChB,sBAAsB,GAAG,KAAK,CAAC;aAElC;YAED,OAAO;SAEV;QAED,IAAK,sBAAsB,KAAK,KAAK,EAAG;YAEpC,MAAM,CAAE,IAAI,CAAE,CAAC;YACf,sBAAsB,GAAG,IAAI,CAAC;SAEjC;QAED,IAAK,QAAQ,KAAK,cAAc,EAAG;YAE/B,IAAK,QAAQ,KAAK,eAAe,IAAI,kBAAkB,KAAK,wBAAwB,EAAG;gBAEnF,IAAK,oBAAoB,KAAK,WAAW,IAAI,yBAAyB,KAAK,WAAW,EAAG;oBAErF,EAAE,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;oBAE1B,oBAAoB,GAAG,WAAW,CAAC;oBACnC,yBAAyB,GAAG,WAAW,CAAC;iBAE3C;gBAED,IAAK,kBAAkB,EAEnB,OAAS,QAAQ;oBAEb,KAAK,cAAc;wBACf,EAAE,CAAC,iBAAiB,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC;wBACvC,MAAM;oBAEV,KAAK,gBAAgB;wBACjB,EAAE,CAAC,SAAS,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;wBACrB,MAAM;oBAEV,KAAK,mBAAmB;wBACpB,EAAE,CAAC,iBAAiB,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;wBACrC,MAAM;oBAEV,KAAK,gBAAgB;wBACjB,EAAE,CAAC,iBAAiB,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC;wBACvC,MAAM;oBAEV;wBACI,OAAO,CAAC,KAAK,CAAE,sCAAsC,EAAE,QAAQ,CAAE,CAAC;wBAClE,MAAM;iBAEb;qBAID,OAAS,QAAQ;oBAEb,KAAK,cAAc;wBACf,EAAE,CAAC,iBAAiB,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC;wBACzC,MAAM;oBAEV,KAAK,gBAAgB;wBACjB,EAAE,CAAC,SAAS,CAAE,GAAG,EAAE,CAAC,CAAE,CAAC;wBACvB,MAAM;oBAEV,KAAK,mBAAmB;wBACpB,EAAE,CAAC,iBAAiB,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;wBACrC,MAAM;oBAEV,KAAK,gBAAgB;wBACjB,EAAE,CAAC,SAAS,CAAE,CAAC,EAAE,GAAG,CAAE,CAAC;wBACvB,MAAM;oBAEV;wBACI,OAAO,CAAC,KAAK,CAAE,sCAAsC,EAAE,QAAQ,CAAE,CAAC;wBAClE,MAAM;iBAEb;gBAIL,eAAe,GAAG,IAAI,CAAC;gBACvB,eAAe,GAAG,IAAI,CAAC;gBACvB,oBAAoB,GAAG,IAAI,CAAC;gBAC5B,oBAAoB,GAAG,IAAI,CAAC;gBAE5B,eAAe,GAAG,QAAQ,CAAC;gBAC3B,wBAAwB,GAAG,kBAAkB,CAAC;aAEjD;YAED,OAAO;SAEV;QAED,kBAAkB;QAElB,kBAAkB,GAAG,kBAAkB,IAAI,aAAa,CAAC;QACzD,aAAa,GAAG,aAAa,IAAI,QAAQ,CAAC;QAC1C,aAAa,GAAG,aAAa,IAAI,QAAQ,CAAC;QAE1C,IAAK,aAAa,KAAK,oBAAoB,IAAI,kBAAkB,KAAK,yBAAyB,EAAG;YAE9F,EAAE,CAAC,qBAAqB,CAAE,YAAY,CAAE,aAAa,CAAE,EAAE,YAAY,CAAE,kBAAkB,CAAE,CAAE,CAAC;YAE9F,oBAAoB,GAAG,aAAa,CAAC;YACrC,yBAAyB,GAAG,kBAAkB,CAAC;SAElD;QAED,IAAK,QAAQ,KAAK,eAAe,IAAI,QAAQ,KAAK,eAAe,IAAI,aAAa,KAAK,oBAAoB,IAAI,aAAa,KAAK,oBAAoB,EAAG;YAEpJ,EAAE,CAAC,iBAAiB,CAAE,UAAU,CAAE,QAAQ,CAAE,EAAE,UAAU,CAAE,QAAQ,CAAE,EAAE,UAAU,CAAE,aAAa,CAAE,EAAE,UAAU,CAAE,aAAa,CAAE,CAAE,CAAC;YAEjI,eAAe,GAAG,QAAQ,CAAC;YAC3B,eAAe,GAAG,QAAQ,CAAC;YAC3B,oBAAoB,GAAG,aAAa,CAAC;YACrC,oBAAoB,GAAG,aAAa,CAAC;SAExC;QAED,eAAe,GAAG,QAAQ,CAAC;QAC3B,wBAAwB,GAAG,IAAI,CAAC;KAEnC;IAED,SAAS,WAAW,CAAE,QAAQ,EAAE,WAAW,EAAG;QAE1C,QAAQ,CAAC,IAAI,KAAK,UAAU,GACtB,OAAO,CAAE,IAAI,CAAE,GACf,MAAM,CAAE,IAAI,CAAE,CAAC;QAErB,IAAI,SAAS,GAAK,QAAQ,CAAC,IAAI,KAAK,QAAQ,AAAE,AAAC;QAC/C,IAAK,WAAW,EAAG,SAAS,GAAG,CAAE,SAAS,CAAC;QAE3C,YAAY,CAAE,SAAS,CAAE,CAAC;QAExB,QAAQ,CAAC,QAAQ,KAAK,cAAc,IAAI,QAAQ,CAAC,WAAW,KAAK,KAAK,GAClE,WAAW,CAAE,UAAU,CAAE,GACzB,WAAW,CAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,kBAAkB,EAAE,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,kBAAkB,CAAE,CAAC;QAE/M,WAAW,CAAC,OAAO,CAAE,QAAQ,CAAC,SAAS,CAAE,CAAC;QAC1C,WAAW,CAAC,OAAO,CAAE,QAAQ,CAAC,SAAS,CAAE,CAAC;QAC1C,WAAW,CAAC,OAAO,CAAE,QAAQ,CAAC,UAAU,CAAE,CAAC;QAC3C,WAAW,CAAC,OAAO,CAAE,QAAQ,CAAC,UAAU,CAAE,CAAC;QAE3C,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,AAAC;QAC3C,aAAa,CAAC,OAAO,CAAE,YAAY,CAAE,CAAC;QACtC,IAAK,YAAY,EAAG;YAEhB,aAAa,CAAC,OAAO,CAAE,QAAQ,CAAC,gBAAgB,CAAE,CAAC;YACnD,aAAa,CAAC,OAAO,CAAE,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,eAAe,CAAE,CAAC;YAC7F,aAAa,CAAC,KAAK,CAAE,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,YAAY,EAAE,QAAQ,CAAC,YAAY,CAAE,CAAC;SAE7F;QAED,gBAAgB,CAAE,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,mBAAmB,EAAE,QAAQ,CAAC,kBAAkB,CAAE,CAAC;QAEtG,QAAQ,CAAC,eAAe,KAAK,IAAI,GAC3B,MAAM,CAAE,KAAK,CAAE,GACf,OAAO,CAAE,KAAK,CAAE,CAAC;KAE1B;IAED,EAAE;IAEF,SAAS,YAAY,CAAE,SAAS,EAAG;QAE/B,IAAK,gBAAgB,KAAK,SAAS,EAAG;YAElC,IAAK,SAAS,EAEV,EAAE,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;iBAIrB,EAAE,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;YAIzB,gBAAgB,GAAG,SAAS,CAAC;SAEhC;KAEJ;IAED,SAAS,WAAW,CAAE,QAAQ,EAAG;QAE7B,IAAK,QAAQ,KAAK,YAAY,EAAG;YAE7B,MAAM,CAAE,IAAI,CAAE,CAAC;YAEf,IAAK,QAAQ,KAAK,eAAe,EAAG;gBAEhC,IAAK,QAAQ,KAAK,YAAY,EAE1B,EAAE,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;qBAEjB,IAAK,QAAQ,KAAK,aAAa,EAElC,EAAE,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;qBAIpB,EAAE,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;aAI3B;SAEJ,MAEG,OAAO,CAAE,IAAI,CAAE,CAAC;QAIpB,eAAe,GAAG,QAAQ,CAAC;KAE9B;IAED,SAAS,YAAY,CAAE,KAAK,EAAG;QAE3B,IAAK,KAAK,KAAK,gBAAgB,EAAG;YAE9B,IAAK,kBAAkB,EAAG,EAAE,CAAC,SAAS,CAAE,KAAK,CAAE,CAAC;YAEhD,gBAAgB,GAAG,KAAK,CAAC;SAE5B;KAEJ;IAED,SAAS,gBAAgB,CAAE,aAAa,EAAE,MAAM,EAAE,KAAK,EAAG;QAEtD,IAAK,aAAa,EAAG;YAEjB,MAAM,CAAE,KAAK,CAAE,CAAC;YAEhB,IAAK,0BAA0B,KAAK,MAAM,IAAI,yBAAyB,KAAK,KAAK,EAAG;gBAEhF,EAAE,CAAC,aAAa,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;gBAElC,0BAA0B,GAAG,MAAM,CAAC;gBACpC,yBAAyB,GAAG,KAAK,CAAC;aAErC;SAEJ,MAEG,OAAO,CAAE,KAAK,CAAE,CAAC;KAIxB;IAED,SAAS,cAAc,CAAE,WAAW,EAAG;QAEnC,IAAK,WAAW,EAEZ,MAAM,CAAE,IAAI,CAAE,CAAC;aAIf,OAAO,CAAE,IAAI,CAAE,CAAC;KAIvB;IAED,UAAU;IAEV,SAAS,aAAa,CAAE,SAAS,EAAG;QAEhC,IAAK,SAAS,KAAK,SAAS,EAAG,SAAS,GAAG,KAAK,GAAG,WAAW,GAAG,CAAC,CAAC;QAEnE,IAAK,kBAAkB,KAAK,SAAS,EAAG;YAEpC,EAAE,CAAC,aAAa,CAAE,SAAS,CAAE,CAAC;YAC9B,kBAAkB,GAAG,SAAS,CAAC;SAElC;KAEJ;IAED,SAAS,WAAW,CAAE,SAAS,EAAE,YAAY,EAAG;QAE5C,IAAK,kBAAkB,KAAK,IAAI,EAE5B,aAAa,EAAE,CAAC;QAIpB,IAAI,YAAY,GAAG,oBAAoB,CAAE,kBAAkB,CAAE,AAAC;QAE9D,IAAK,YAAY,KAAK,SAAS,EAAG;YAE9B,YAAY,GAAG;gBAAE,IAAI,EAAE,SAAS;gBAAE,OAAO,EAAE,SAAS;aAAE,CAAC;YACvD,oBAAoB,CAAE,kBAAkB,CAAE,GAAG,YAAY,CAAC;SAE7D;QAED,IAAK,YAAY,CAAC,IAAI,KAAK,SAAS,IAAI,YAAY,CAAC,OAAO,KAAK,YAAY,EAAG;YAE5E,EAAE,CAAC,WAAW,CAAE,SAAS,EAAE,YAAY,IAAI,aAAa,CAAE,SAAS,CAAE,CAAE,CAAC;YAExE,YAAY,CAAC,IAAI,GAAG,SAAS,CAAC;YAC9B,YAAY,CAAC,OAAO,GAAG,YAAY,CAAC;SAEvC;KAEJ;IAED,SAAS,aAAa,GAAG;QAErB,MAAM,YAAY,GAAG,oBAAoB,CAAE,kBAAkB,CAAE,AAAC;QAEhE,IAAK,YAAY,KAAK,SAAS,IAAI,YAAY,CAAC,IAAI,KAAK,SAAS,EAAG;YAEjE,EAAE,CAAC,WAAW,CAAE,YAAY,CAAC,IAAI,EAAE,IAAI,CAAE,CAAC;YAE1C,YAAY,CAAC,IAAI,GAAG,SAAS,CAAC;YAC9B,YAAY,CAAC,OAAO,GAAG,SAAS,CAAC;SAEpC;KAEJ;IAED,SAAS,oBAAoB,GAAG;QAE5B,IAAI;YAEA,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAE,EAAE,EAAE,SAAS,CAAE,CAAC;SAElD,CAAC,OAAQ,KAAK,EAAG;YAEd,OAAO,CAAC,KAAK,CAAE,mBAAmB,EAAE,KAAK,CAAE,CAAC;SAE/C;KAEJ;IAED,SAAS,aAAa,GAAG;QAErB,IAAI;YAEA,EAAE,CAAC,aAAa,CAAC,KAAK,CAAE,EAAE,EAAE,SAAS,CAAE,CAAC;SAE3C,CAAC,OAAQ,KAAK,EAAG;YAEd,OAAO,CAAC,KAAK,CAAE,mBAAmB,EAAE,KAAK,CAAE,CAAC;SAE/C;KAEJ;IAED,SAAS,aAAa,GAAG;QAErB,IAAI;YAEA,EAAE,CAAC,aAAa,CAAC,KAAK,CAAE,EAAE,EAAE,SAAS,CAAE,CAAC;SAE3C,CAAC,OAAQ,KAAK,EAAG;YAEd,OAAO,CAAC,KAAK,CAAE,mBAAmB,EAAE,KAAK,CAAE,CAAC;SAE/C;KAEJ;IAED,SAAS,uBAAuB,GAAG;QAE/B,IAAI;YAEA,EAAE,CAAC,uBAAuB,CAAC,KAAK,CAAE,EAAE,EAAE,SAAS,CAAE,CAAC;SAErD,CAAC,OAAQ,KAAK,EAAG;YAEd,OAAO,CAAC,KAAK,CAAE,mBAAmB,EAAE,KAAK,CAAE,CAAC;SAE/C;KAEJ;IAED,SAAS,YAAY,GAAG;QAEpB,IAAI;YAEA,EAAE,CAAC,YAAY,CAAC,KAAK,CAAE,EAAE,EAAE,SAAS,CAAE,CAAC;SAE1C,CAAC,OAAQ,KAAK,EAAG;YAEd,OAAO,CAAC,KAAK,CAAE,mBAAmB,EAAE,KAAK,CAAE,CAAC;SAE/C;KAEJ;IAED,SAAS,YAAY,GAAG;QAEpB,IAAI;YAEA,EAAE,CAAC,YAAY,CAAC,KAAK,CAAE,EAAE,EAAE,SAAS,CAAE,CAAC;SAE1C,CAAC,OAAQ,KAAK,EAAG;YAEd,OAAO,CAAC,KAAK,CAAE,mBAAmB,EAAE,KAAK,CAAE,CAAC;SAE/C;KAEJ;IAED,SAAS,UAAU,GAAG;QAElB,IAAI;YAEA,EAAE,CAAC,UAAU,CAAC,KAAK,CAAE,EAAE,EAAE,SAAS,CAAE,CAAC;SAExC,CAAC,OAAQ,KAAK,EAAG;YAEd,OAAO,CAAC,KAAK,CAAE,mBAAmB,EAAE,KAAK,CAAE,CAAC;SAE/C;KAEJ;IAED,SAAS,UAAU,GAAG;QAElB,IAAI;YAEA,EAAE,CAAC,UAAU,CAAC,KAAK,CAAE,EAAE,EAAE,SAAS,CAAE,CAAC;SAExC,CAAC,OAAQ,KAAK,EAAG;YAEd,OAAO,CAAC,KAAK,CAAE,mBAAmB,EAAE,KAAK,CAAE,CAAC;SAE/C;KAEJ;IAED,EAAE;IAEF,SAAS,QAAO,CAAE,OAAO,EAAG;QAExB,IAAK,cAAc,CAAC,MAAM,CAAE,OAAO,CAAE,KAAK,KAAK,EAAG;YAE9C,EAAE,CAAC,OAAO,CAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAE,CAAC;YACzD,cAAc,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;SAElC;KAEJ;IAED,SAAS,SAAQ,CAAE,QAAQ,EAAG;QAE1B,IAAK,eAAe,CAAC,MAAM,CAAE,QAAQ,CAAE,KAAK,KAAK,EAAG;YAEhD,EAAE,CAAC,QAAQ,CAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAE,CAAC;YAC9D,eAAe,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC;SAEpC;KAEJ;IAED,EAAE;IAEF,SAAS,KAAK,GAAG;QAEb,cAAc;QAEd,EAAE,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;QACnB,EAAE,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;QACnB,EAAE,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;QACnB,EAAE,CAAC,OAAO,CAAE,KAAK,CAAE,CAAC;QACpB,EAAE,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;QACnB,EAAE,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;QACnB,EAAE,CAAC,OAAO,CAAE,KAAK,CAAE,CAAC;QAEpB,EAAE,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;QAC1B,EAAE,CAAC,SAAS,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACrB,EAAE,CAAC,iBAAiB,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEnC,EAAE,CAAC,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;QACvC,EAAE,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAE5B,EAAE,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;QACrB,EAAE,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;QACpB,EAAE,CAAC,UAAU,CAAE,CAAC,CAAE,CAAC;QAEnB,EAAE,CAAC,WAAW,CAAE,UAAU,CAAE,CAAC;QAC7B,EAAE,CAAC,WAAW,CAAE,GAAG,EAAE,CAAC,EAAE,UAAU,CAAE,CAAC;QACrC,EAAE,CAAC,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;QACjC,EAAE,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC;QAErB,EAAE,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QACpB,EAAE,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;QAErB,EAAE,CAAC,aAAa,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEzB,EAAE,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;QAE1B,EAAE,CAAC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;QAElC,IAAK,QAAQ,KAAK,IAAI,EAAG;YAErB,EAAE,CAAC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;YAClC,EAAE,CAAC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;SAErC;QAED,EAAE,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;QAEtB,EAAE,CAAC,SAAS,CAAE,CAAC,CAAE,CAAC;QAElB,EAAE,CAAC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC;QACtD,EAAE,CAAC,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC;QAEvD,kBAAkB;QAElB,mBAAmB,GAAG,EAAE,CAAC;QAEzB,kBAAkB,GAAG,IAAI,CAAC;QAC1B,oBAAoB,GAAG,EAAE,CAAC;QAE1B,wBAAwB,GAAG,EAAE,CAAC;QAC9B,kBAAkB,GAAG,IAAI,OAAO,EAAE,CAAC;QACnC,kBAAkB,GAAG,EAAE,CAAC;QAExB,cAAc,GAAG,IAAI,CAAC;QAEtB,sBAAsB,GAAG,KAAK,CAAC;QAC/B,eAAe,GAAG,IAAI,CAAC;QACvB,oBAAoB,GAAG,IAAI,CAAC;QAC5B,eAAe,GAAG,IAAI,CAAC;QACvB,eAAe,GAAG,IAAI,CAAC;QACvB,yBAAyB,GAAG,IAAI,CAAC;QACjC,oBAAoB,GAAG,IAAI,CAAC;QAC5B,oBAAoB,GAAG,IAAI,CAAC;QAC5B,wBAAwB,GAAG,KAAK,CAAC;QAEjC,gBAAgB,GAAG,IAAI,CAAC;QACxB,eAAe,GAAG,IAAI,CAAC;QAEvB,gBAAgB,GAAG,IAAI,CAAC;QAExB,0BAA0B,GAAG,IAAI,CAAC;QAClC,yBAAyB,GAAG,IAAI,CAAC;QAEjC,cAAc,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC;QAC9D,eAAe,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC;QAE/D,WAAW,CAAC,KAAK,EAAE,CAAC;QACpB,WAAW,CAAC,KAAK,EAAE,CAAC;QACpB,aAAa,CAAC,KAAK,EAAE,CAAC;KAEzB;IAED,OAAO;QAEH,OAAO,EAAE;YACL,KAAK,EAAE,WAAW;YAClB,KAAK,EAAE,WAAW;YAClB,OAAO,EAAE,aAAa;SACzB;QAED,MAAM,EAAE,MAAM;QACd,OAAO,EAAE,OAAO;QAEhB,eAAe,EAAE,eAAe;QAChC,WAAW,EAAE,YAAW;QAExB,UAAU,EAAE,UAAU;QAEtB,WAAW,EAAE,WAAW;QACxB,WAAW,EAAE,WAAW;QAExB,YAAY,EAAE,YAAY;QAC1B,WAAW,EAAE,WAAW;QAExB,YAAY,EAAE,YAAY;QAC1B,gBAAgB,EAAE,gBAAgB;QAElC,cAAc,EAAE,cAAc;QAE9B,aAAa,EAAE,aAAa;QAC5B,WAAW,EAAE,WAAW;QACxB,aAAa,EAAE,aAAa;QAC5B,oBAAoB,EAAE,oBAAoB;QAC1C,UAAU,EAAE,UAAU;QACtB,UAAU,EAAE,UAAU;QAEtB,YAAY,EAAE,YAAY;QAC1B,YAAY,EAAE,YAAY;QAC1B,aAAa,EAAE,aAAa;QAC5B,aAAa,EAAE,aAAa;QAC5B,uBAAuB,EAAE,uBAAuB;QAEhD,OAAO,EAAE,QAAO;QAChB,QAAQ,EAAE,SAAQ;QAElB,KAAK,EAAE,KAAK;KAEf,CAAC;CAEL;AAED,SAAS,aAAa,CAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,EAAG;IAEpF,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,AAAC;IACvC,MAAM,WAAW,GAAG,YAAY,CAAC,WAAW,AAAC;IAC7C,MAAM,cAAc,GAAG,YAAY,CAAC,cAAc,AAAC;IACnD,MAAM,cAAc,GAAG,YAAY,CAAC,cAAc,AAAC;IACnD,MAAM,UAAU,GAAG,YAAY,CAAC,UAAU,AAAC;IAC3C,MAAM,kBAAkB,GAAG,UAAU,CAAC,GAAG,CAAE,sCAAsC,CAAE,GAAG,UAAU,CAAC,GAAG,CAAE,sCAAsC,CAAE,GAAG,IAAI,AAAC;IACtJ,MAAM,6BAA6B,GAAG,iBAAiB,IAAI,CAAE,SAAS,CAAC,SAAS,CAAE,AAAC;IAEnF,MAAM,cAAc,GAAG,IAAI,OAAO,EAAE,AAAC;IACrC,IAAI,QAAO,AAAC;IAEZ,MAAM,QAAQ,GAAG,IAAI,OAAO,EAAE,AAAC,EAAC,mDAAmD;IAEnF,gFAAgF;IAChF,sFAAsF;IACtF,uFAAuF;IAEvF,IAAI,kBAAkB,GAAG,KAAK,AAAC;IAE/B,IAAI;QAEA,kBAAkB,GAAG,OAAO,eAAe,KAAK,WAAW,IAEpD,AAAE,IAAI,eAAe,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC,UAAU,CAAE,IAAI,CAAE,KAAO,IAAI,CAAC;KAEtE,CAAC,OAAQ,GAAG,EAAG;IAEZ,oBAAoB;KAEvB;IAED,SAAS,YAAY,CAAE,KAAK,EAAE,MAAM,EAAG;QAEnC,sEAAsE;QAEtE,OAAO,kBAAkB,GACrB,yCAAyC;QACzC,IAAI,eAAe,CAAE,KAAK,EAAE,MAAM,CAAE,GAAG,eAAe,CAAE,QAAQ,CAAE,CAAC;KAE1E;IAED,SAAS,WAAW,CAAE,KAAK,EAAE,eAAe,EAAE,cAAc,EAAE,OAAO,EAAG;QAEpE,IAAI,KAAK,GAAG,CAAC,AAAC;QAEd,0CAA0C;QAE1C,IAAK,KAAK,CAAC,KAAK,GAAG,OAAO,IAAI,KAAK,CAAC,MAAM,GAAG,OAAO,EAEhD,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAE,CAAC;QAI5D,mCAAmC;QAEnC,IAAK,KAAK,GAAG,CAAC,IAAI,eAAe,KAAK,IAAI;YAEtC,8CAA8C;YAE9C,IAAK,AAAE,OAAO,gBAAgB,KAAK,WAAW,IAAI,KAAK,YAAY,gBAAgB,IAC7E,OAAO,iBAAiB,KAAK,WAAW,IAAI,KAAK,YAAY,iBAAiB,IAC9E,OAAO,WAAW,KAAK,WAAW,IAAI,KAAK,YAAY,WAAW,AAAE,EAAG;gBAEzE,MAAM,KAAK,GAAG,eAAe,GAAG,eAAe,GAAG,IAAI,CAAC,KAAK,AAAC;gBAE7D,MAAM,KAAK,GAAG,KAAK,CAAE,KAAK,GAAG,KAAK,CAAC,KAAK,CAAE,AAAC;gBAC3C,MAAM,MAAM,GAAG,KAAK,CAAE,KAAK,GAAG,KAAK,CAAC,MAAM,CAAE,AAAC;gBAE7C,IAAK,QAAO,KAAK,SAAS,EAAG,QAAO,GAAG,YAAY,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;gBAErE,4CAA4C;gBAE5C,MAAM,MAAM,GAAG,cAAc,GAAG,YAAY,CAAE,KAAK,EAAE,MAAM,CAAE,GAAG,QAAO,AAAC;gBAExE,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;gBACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;gBAEvB,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAE,IAAI,CAAE,AAAC;gBAC1C,OAAO,CAAC,SAAS,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;gBAEhD,OAAO,CAAC,IAAI,CAAE,sDAAsD,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,QAAQ,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,CAAE,CAAC;gBAEnJ,OAAO,MAAM,CAAC;aAEjB,MAAM;gBAEH,IAAK,MAAM,IAAI,KAAK,EAEhB,OAAO,CAAC,IAAI,CAAE,wDAAwD,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAE,CAAC;gBAIvH,OAAO,KAAK,CAAC;aAEhB;SAEJ;QAED,OAAO,KAAK,CAAC;KAEhB;IAED,SAAS,cAAc,CAAE,KAAK,EAAG;QAE7B,OAAO,YAAY,CAAE,KAAK,CAAC,KAAK,CAAE,IAAI,YAAY,CAAE,KAAK,CAAC,MAAM,CAAE,CAAC;KAEtE;IAED,SAAS,sBAAsB,CAAE,OAAO,EAAG;QAEvC,IAAK,QAAQ,EAAG,OAAO,KAAK,CAAC;QAE7B,OAAO,AAAE,OAAO,CAAC,KAAK,KAAK,mBAAmB,IAAI,OAAO,CAAC,KAAK,KAAK,mBAAmB,IACjF,OAAO,CAAC,SAAS,KAAK,aAAa,IAAI,OAAO,CAAC,SAAS,KAAK,YAAY,AAAE,CAAC;KAErF;IAED,SAAS,2BAA2B,CAAE,OAAO,EAAE,YAAY,EAAG;QAE1D,OAAO,OAAO,CAAC,eAAe,IAAI,YAAY,IAC1C,OAAO,CAAC,SAAS,KAAK,aAAa,IAAI,OAAO,CAAC,SAAS,KAAK,YAAY,CAAC;KAEjF;IAED,SAAS,cAAc,CAAE,MAAM,EAAG;QAE9B,GAAG,CAAC,cAAc,CAAE,MAAM,CAAE,CAAC;KAEhC;IAED,SAAS,iBAAiB,CAAE,kBAAkB,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,cAAc,GAAG,KAAK,EAAG;QAEjG,IAAK,QAAQ,KAAK,KAAK,EAAG,OAAO,QAAQ,CAAC;QAE1C,IAAK,kBAAkB,KAAK,IAAI,EAAG;YAE/B,IAAK,GAAG,CAAE,kBAAkB,CAAE,KAAK,SAAS,EAAG,OAAO,GAAG,CAAE,kBAAkB,CAAE,CAAC;YAEhF,OAAO,CAAC,IAAI,CAAE,2EAA2E,GAAG,kBAAkB,GAAG,IAAI,CAAE,CAAC;SAE3H;QAED,IAAI,cAAc,GAAG,QAAQ,AAAC;QAE9B,IAAK,QAAQ,KAAK,IAAI,EAAG;YAErB,IAAK,MAAM,KAAK,IAAI,EAAG,cAAc,GAAG,KAAK,CAAC;YAC9C,IAAK,MAAM,KAAK,IAAI,EAAG,cAAc,GAAG,KAAK,CAAC;YAC9C,IAAK,MAAM,KAAK,IAAI,EAAG,cAAc,GAAG,KAAK,CAAC;SAEjD;QAED,IAAK,QAAQ,KAAK,KAAK,EAAG;YAEtB,IAAK,MAAM,KAAK,IAAI,EAAG,cAAc,GAAG,KAAK,CAAC;YAC9C,IAAK,MAAM,KAAK,IAAI,EAAG,cAAc,GAAG,KAAK,CAAC;YAC9C,IAAK,MAAM,KAAK,IAAI,EAAG,cAAc,GAAG,KAAK,CAAC;SAEjD;QAED,IAAK,QAAQ,KAAK,IAAI,EAAG;YAErB,IAAK,MAAM,KAAK,IAAI,EAAG,cAAc,GAAG,KAAK,CAAC;YAC9C,IAAK,MAAM,KAAK,IAAI,EAAG,cAAc,GAAG,KAAK,CAAC;YAC9C,IAAK,MAAM,KAAK,IAAI,EAAG,cAAc,GAAG,AAAE,QAAQ,KAAK,YAAY,IAAI,cAAc,KAAK,KAAK,GAAK,KAAK,GAAG,KAAK,CAAC;YAClH,IAAK,MAAM,KAAK,KAAK,EAAG,cAAc,GAAG,KAAK,CAAC;YAC/C,IAAK,MAAM,KAAK,KAAK,EAAG,cAAc,GAAG,KAAK,CAAC;SAElD;QAED,IAAK,cAAc,KAAK,KAAK,IAAI,cAAc,KAAK,KAAK,IACrD,cAAc,KAAK,KAAK,IAAI,cAAc,KAAK,KAAK,IACpD,cAAc,KAAK,KAAK,IAAI,cAAc,KAAK,KAAK,EAEpD,UAAU,CAAC,GAAG,CAAE,wBAAwB,CAAE,CAAC;QAI/C,OAAO,cAAc,CAAC;KAEzB;IAED,SAAS,YAAY,CAAE,OAAO,EAAE,KAAK,EAAE,YAAY,EAAG;QAElD,IAAK,2BAA2B,CAAE,OAAO,EAAE,YAAY,CAAE,KAAK,IAAI,IAAM,OAAO,CAAC,oBAAoB,IAAI,OAAO,CAAC,SAAS,KAAK,aAAa,IAAI,OAAO,CAAC,SAAS,KAAK,YAAY,AAAE,EAE/K,OAAO,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAE,CAAE,GAAG,CAAC,CAAC;aAE3D,IAAK,OAAO,CAAC,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAEnE,uBAAuB;QAEvB,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;aAE3B,IAAK,OAAO,CAAC,mBAAmB,IAAI,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,KAAK,CAAE,EAErE,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;aAI5B,4CAA4C;QAE5C,OAAO,CAAC,CAAC;KAIhB;IAED,+CAA+C;IAE/C,SAAS,cAAc,CAAE,CAAC,EAAG;QAEzB,IAAK,CAAC,KAAK,aAAa,IAAI,CAAC,KAAK,0BAA0B,IAAI,CAAC,KAAK,yBAAyB,EAE3F,OAAO,IAAI,CAAC;QAIhB,OAAO,IAAI,CAAC;KAEf;IAED,EAAE;IAEF,SAAS,gBAAgB,CAAE,KAAK,EAAG;QAE/B,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,AAAC;QAE7B,OAAO,CAAC,mBAAmB,CAAE,SAAS,EAAE,gBAAgB,CAAE,CAAC;QAE3D,iBAAiB,CAAE,OAAO,CAAE,CAAC;QAE7B,IAAK,OAAO,CAAC,cAAc,EAEvB,cAAc,CAAC,MAAM,CAAE,OAAO,CAAE,CAAC;KAIxC;IAED,SAAS,qBAAqB,CAAE,KAAK,EAAG;QAEpC,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,AAAC;QAElC,YAAY,CAAC,mBAAmB,CAAE,SAAS,EAAE,qBAAqB,CAAE,CAAC;QAErE,sBAAsB,CAAE,YAAY,CAAE,CAAC;KAE1C;IAED,EAAE;IAEF,SAAS,iBAAiB,CAAE,OAAO,EAAG;QAElC,MAAM,iBAAiB,GAAG,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;QAEpD,IAAK,iBAAiB,CAAC,WAAW,KAAK,SAAS,EAAG,OAAO;QAE1D,4DAA4D;QAE5D,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,AAAC;QAC9B,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAE,MAAM,CAAE,AAAC;QAE7C,IAAK,aAAa,EAAG;YAEjB,MAAM,YAAY,GAAG,aAAa,CAAE,iBAAiB,CAAC,UAAU,CAAE,AAAC;YACnE,YAAY,CAAC,SAAS,EAAG,CAAC;YAE1B,yDAAyD;YAEzD,IAAK,YAAY,CAAC,SAAS,KAAK,CAAC,EAE7B,aAAa,CAAE,OAAO,CAAE,CAAC;YAI7B,uEAAuE;YAEvE,IAAK,MAAM,CAAC,IAAI,CAAE,aAAa,CAAE,CAAC,MAAM,KAAK,CAAC,EAE1C,QAAQ,CAAC,MAAM,CAAE,MAAM,CAAE,CAAC;SAIjC;QAED,UAAU,CAAC,MAAM,CAAE,OAAO,CAAE,CAAC;KAEhC;IAED,SAAS,aAAa,CAAE,OAAO,EAAG;QAE9B,MAAM,iBAAiB,GAAG,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;QACpD,GAAG,CAAC,aAAa,CAAE,iBAAiB,CAAC,cAAc,CAAE,CAAC;QAEtD,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,AAAC;QAC9B,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAE,MAAM,CAAE,AAAC;QAC7C,OAAO,aAAa,CAAE,iBAAiB,CAAC,UAAU,CAAE,CAAC;QAErD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAG,CAAC;KAE3B;IAED,SAAS,sBAAsB,CAAE,YAAY,EAAG;QAE5C,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,AAAC;QAErC,MAAM,sBAAsB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAE,AAAC;QAC9D,MAAM,iBAAiB,GAAG,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;QAEpD,IAAK,iBAAiB,CAAC,cAAc,KAAK,SAAS,EAAG;YAElD,GAAG,CAAC,aAAa,CAAE,iBAAiB,CAAC,cAAc,CAAE,CAAC;YAEtD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAG,CAAC;SAE3B;QAED,IAAK,YAAY,CAAC,YAAY,EAE1B,YAAY,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAIxC,IAAK,YAAY,CAAC,uBAAuB,EAErC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE3B,GAAG,CAAC,iBAAiB,CAAE,sBAAsB,CAAC,kBAAkB,CAAE,IAAC,CAAE,CAAE,CAAC;YACxE,IAAK,sBAAsB,CAAC,kBAAkB,EAAG,GAAG,CAAC,kBAAkB,CAAE,sBAAsB,CAAC,kBAAkB,CAAE,IAAC,CAAE,CAAE,CAAC;SAE7H;aAEE;YAEH,GAAG,CAAC,iBAAiB,CAAE,sBAAsB,CAAC,kBAAkB,CAAE,CAAC;YACnE,IAAK,sBAAsB,CAAC,kBAAkB,EAAG,GAAG,CAAC,kBAAkB,CAAE,sBAAsB,CAAC,kBAAkB,CAAE,CAAC;YACrH,IAAK,sBAAsB,CAAC,8BAA8B,EAAG,GAAG,CAAC,iBAAiB,CAAE,sBAAsB,CAAC,8BAA8B,CAAE,CAAC;YAC5I,IAAK,sBAAsB,CAAC,wBAAwB,EAAG,GAAG,CAAC,kBAAkB,CAAE,sBAAsB,CAAC,wBAAwB,CAAE,CAAC;YACjI,IAAK,sBAAsB,CAAC,wBAAwB,EAAG,GAAG,CAAC,kBAAkB,CAAE,sBAAsB,CAAC,wBAAwB,CAAE,CAAC;SAEpI;QAED,IAAK,YAAY,CAAC,4BAA4B,EAE1C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;YAEjD,MAAM,oBAAoB,GAAG,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,IAAC,CAAE,CAAE,AAAC;YAE5D,IAAK,oBAAoB,CAAC,cAAc,EAAG;gBAEvC,GAAG,CAAC,aAAa,CAAE,oBAAoB,CAAC,cAAc,CAAE,CAAC;gBAEzD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAG,CAAC;aAE3B;YAED,UAAU,CAAC,MAAM,CAAE,OAAO,CAAE,IAAC,CAAE,CAAE,CAAC;SAErC;QAIL,UAAU,CAAC,MAAM,CAAE,OAAO,CAAE,CAAC;QAC7B,UAAU,CAAC,MAAM,CAAE,YAAY,CAAE,CAAC;KAErC;IAED,EAAE;IAEF,IAAI,YAAY,GAAG,CAAC,AAAC;IAErB,SAAS,iBAAiB,GAAG;QAEzB,YAAY,GAAG,CAAC,CAAC;KAEpB;IAED,SAAS,mBAAmB,GAAG;QAE3B,MAAM,WAAW,GAAG,YAAY,AAAC;QAEjC,IAAK,WAAW,IAAI,WAAW,EAE3B,OAAO,CAAC,IAAI,CAAE,qCAAqC,GAAG,WAAW,GAAG,8CAA8C,GAAG,WAAW,CAAE,CAAC;QAIvI,YAAY,IAAI,CAAC,CAAC;QAElB,OAAO,WAAW,CAAC;KAEtB;IAED,SAAS,kBAAkB,CAAE,OAAO,EAAG;QAEnC,MAAM,KAAK,GAAG,EAAE,AAAC;QAEjB,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,KAAK,CAAE,CAAC;QAC5B,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,KAAK,CAAE,CAAC;QAC5B,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,SAAS,CAAE,CAAC;QAChC,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,SAAS,CAAE,CAAC;QAChC,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,UAAU,CAAE,CAAC;QACjC,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,cAAc,CAAE,CAAC;QACrC,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,MAAM,CAAE,CAAC;QAC7B,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,IAAI,CAAE,CAAC;QAC3B,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,eAAe,CAAE,CAAC;QACtC,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,gBAAgB,CAAE,CAAC;QACvC,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,KAAK,CAAE,CAAC;QAC5B,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,eAAe,CAAE,CAAC;QACtC,KAAK,CAAC,IAAI,CAAE,OAAO,CAAC,QAAQ,CAAE,CAAC;QAE/B,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC;KAEvB;IAED,EAAE;IAEF,SAAS,YAAY,CAAE,OAAO,EAAE,IAAI,EAAG;QAEnC,MAAM,iBAAiB,GAAG,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;QAEpD,IAAK,OAAO,CAAC,cAAc,EAAG,kBAAkB,CAAE,OAAO,CAAE,CAAC;QAE5D,IAAK,OAAO,CAAC,qBAAqB,KAAK,KAAK,IAAI,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,iBAAiB,CAAC,SAAS,KAAK,OAAO,CAAC,OAAO,EAAG;YAErH,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,AAAC;YAE5B,IAAK,KAAK,KAAK,IAAI,EAEf,OAAO,CAAC,IAAI,CAAE,yEAAyE,CAAE,CAAC;iBAEvF,IAAK,KAAK,CAAC,QAAQ,KAAK,KAAK,EAEhC,OAAO,CAAC,IAAI,CAAE,wEAAwE,CAAE,CAAC;iBAEtF;gBAEH,aAAa,CAAE,iBAAiB,EAAE,OAAO,EAAE,IAAI,CAAE,CAAC;gBAClD,OAAO;aAEV;SAEJ;QAED,KAAK,CAAC,aAAa,CAAE,KAAK,GAAG,IAAI,CAAE,CAAC;QACpC,KAAK,CAAC,WAAW,CAAE,IAAI,EAAE,iBAAiB,CAAC,cAAc,CAAE,CAAC;KAE/D;IAED,SAAS,iBAAiB,CAAE,OAAO,EAAE,IAAI,EAAG;QAExC,MAAM,iBAAiB,GAAG,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;QAEpD,IAAK,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,iBAAiB,CAAC,SAAS,KAAK,OAAO,CAAC,OAAO,EAAG;YAE1E,aAAa,CAAE,iBAAiB,EAAE,OAAO,EAAE,IAAI,CAAE,CAAC;YAClD,OAAO;SAEV;QAED,KAAK,CAAC,aAAa,CAAE,KAAK,GAAG,IAAI,CAAE,CAAC;QACpC,KAAK,CAAC,WAAW,CAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAE,CAAC;KAEhE;IAED,SAAS,YAAY,CAAE,OAAO,EAAE,IAAI,EAAG;QAEnC,MAAM,iBAAiB,GAAG,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;QAEpD,IAAK,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,iBAAiB,CAAC,SAAS,KAAK,OAAO,CAAC,OAAO,EAAG;YAE1E,aAAa,CAAE,iBAAiB,EAAE,OAAO,EAAE,IAAI,CAAE,CAAC;YAClD,OAAO;SAEV;QAED,KAAK,CAAC,aAAa,CAAE,KAAK,GAAG,IAAI,CAAE,CAAC;QACpC,KAAK,CAAC,WAAW,CAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAE,CAAC;KAEhE;IAED,SAAS,cAAc,CAAE,OAAO,EAAE,IAAI,EAAG;QAErC,MAAM,iBAAiB,GAAG,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;QAEpD,IAAK,OAAO,CAAC,OAAO,GAAG,CAAC,IAAI,iBAAiB,CAAC,SAAS,KAAK,OAAO,CAAC,OAAO,EAAG;YAE1E,iBAAiB,CAAE,iBAAiB,EAAE,OAAO,EAAE,IAAI,CAAE,CAAC;YACtD,OAAO;SAEV;QAED,KAAK,CAAC,aAAa,CAAE,KAAK,GAAG,IAAI,CAAE,CAAC;QACpC,KAAK,CAAC,WAAW,CAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAE,CAAC;KAEhE;IAED,MAAM,YAAY,GAAG;QACjB,CAAE,cAAc,CAAE,EAAE,KAAK;QACzB,CAAE,mBAAmB,CAAE,EAAE,KAAK;QAC9B,CAAE,sBAAsB,CAAE,EAAE,KAAK;KACpC,AAAC;IAEF,MAAM,UAAU,GAAG;QACf,CAAE,aAAa,CAAE,EAAE,IAAI;QACvB,CAAE,0BAA0B,CAAE,EAAE,IAAI;QACpC,CAAE,yBAAyB,CAAE,EAAE,IAAI;QAEnC,CAAE,YAAY,CAAE,EAAE,IAAI;QACtB,CAAE,yBAAyB,CAAE,EAAE,IAAI;QACnC,CAAE,wBAAwB,CAAE,EAAE,IAAI;KACrC,AAAC;IAEF,SAAS,oBAAoB,CAAE,WAAW,EAAE,OAAO,EAAE,YAAY,EAAG;QAEhE,IAAK,YAAY,EAAG;YAEhB,GAAG,CAAC,aAAa,CAAE,WAAW,EAAE,KAAK,EAAE,YAAY,CAAE,OAAO,CAAC,KAAK,CAAE,CAAE,CAAC;YACvE,GAAG,CAAC,aAAa,CAAE,WAAW,EAAE,KAAK,EAAE,YAAY,CAAE,OAAO,CAAC,KAAK,CAAE,CAAE,CAAC;YAEvE,IAAK,WAAW,KAAK,KAAK,IAAI,WAAW,KAAK,KAAK,EAE/C,GAAG,CAAC,aAAa,CAAE,WAAW,EAAE,KAAK,EAAE,YAAY,CAAE,OAAO,CAAC,KAAK,CAAE,CAAE,CAAC;YAI3E,GAAG,CAAC,aAAa,CAAE,WAAW,EAAE,KAAK,EAAE,UAAU,CAAE,OAAO,CAAC,SAAS,CAAE,CAAE,CAAC;YACzE,GAAG,CAAC,aAAa,CAAE,WAAW,EAAE,KAAK,EAAE,UAAU,CAAE,OAAO,CAAC,SAAS,CAAE,CAAE,CAAC;SAE5E,MAAM;YAEH,GAAG,CAAC,aAAa,CAAE,WAAW,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC;YAC/C,GAAG,CAAC,aAAa,CAAE,WAAW,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC;YAE/C,IAAK,WAAW,KAAK,KAAK,IAAI,WAAW,KAAK,KAAK,EAE/C,GAAG,CAAC,aAAa,CAAE,WAAW,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC;YAInD,IAAK,OAAO,CAAC,KAAK,KAAK,mBAAmB,IAAI,OAAO,CAAC,KAAK,KAAK,mBAAmB,EAE/E,OAAO,CAAC,IAAI,CAAE,+HAA+H,CAAE,CAAC;YAIpJ,GAAG,CAAC,aAAa,CAAE,WAAW,EAAE,KAAK,EAAE,cAAc,CAAE,OAAO,CAAC,SAAS,CAAE,CAAE,CAAC;YAC7E,GAAG,CAAC,aAAa,CAAE,WAAW,EAAE,KAAK,EAAE,cAAc,CAAE,OAAO,CAAC,SAAS,CAAE,CAAE,CAAC;YAE7E,IAAK,OAAO,CAAC,SAAS,KAAK,aAAa,IAAI,OAAO,CAAC,SAAS,KAAK,YAAY,EAE1E,OAAO,CAAC,IAAI,CAAE,iIAAiI,CAAE,CAAC;SAIzJ;QAED,IAAK,UAAU,CAAC,GAAG,CAAE,gCAAgC,CAAE,KAAK,IAAI,EAAG;YAE/D,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,gCAAgC,CAAE,AAAC;YAErE,IAAK,OAAO,CAAC,IAAI,KAAK,SAAS,IAAI,UAAU,CAAC,GAAG,CAAE,0BAA0B,CAAE,KAAK,KAAK,EAAG,OAAO,CAAC,2CAA2C;YAC/I,IAAK,QAAQ,KAAK,KAAK,IAAM,OAAO,CAAC,IAAI,KAAK,aAAa,IAAI,UAAU,CAAC,GAAG,CAAE,+BAA+B,CAAE,KAAK,KAAK,AAAE,EAAG,OAAO,CAAC,oCAAoC;YAE3K,IAAK,OAAO,CAAC,UAAU,GAAG,CAAC,IAAI,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC,mBAAmB,EAAG;gBAE3E,GAAG,CAAC,aAAa,CAAE,WAAW,EAAE,SAAS,CAAC,0BAA0B,EAAE,IAAI,CAAC,GAAG,CAAE,OAAO,CAAC,UAAU,EAAE,YAAY,CAAC,gBAAgB,EAAE,CAAE,CAAE,CAAC;gBACxI,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC,mBAAmB,GAAG,OAAO,CAAC,UAAU,CAAC;aAEtE;SAEJ;KAEJ;IAED,SAAS,WAAW,CAAE,iBAAiB,EAAE,OAAO,EAAG;QAE/C,IAAI,WAAW,GAAG,KAAK,AAAC;QAExB,IAAK,iBAAiB,CAAC,WAAW,KAAK,SAAS,EAAG;YAE/C,iBAAiB,CAAC,WAAW,GAAG,IAAI,CAAC;YAErC,OAAO,CAAC,gBAAgB,CAAE,SAAS,EAAE,gBAAgB,CAAE,CAAC;SAE3D;QAED,uDAAuD;QAEvD,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,AAAC;QAC9B,IAAI,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAE,MAAM,CAAE,AAAC;QAE3C,IAAK,aAAa,KAAK,SAAS,EAAG;YAE/B,aAAa,GAAG,EAAE,CAAC;YACnB,QAAQ,CAAC,GAAG,CAAE,MAAM,EAAE,aAAa,CAAE,CAAC;SAEzC;QAED,mFAAmF;QAEnF,MAAM,eAAe,GAAG,kBAAkB,CAAE,OAAO,CAAE,AAAC;QAEtD,IAAK,eAAe,KAAK,iBAAiB,CAAC,UAAU,EAAG;YAEpD,gDAAgD;YAEhD,IAAK,aAAa,CAAE,eAAe,CAAE,KAAK,SAAS,EAAG;gBAElD,mBAAmB;gBAEnB,aAAa,CAAE,eAAe,CAAE,GAAG;oBAC/B,OAAO,EAAE,GAAG,CAAC,aAAa,EAAE;oBAC5B,SAAS,EAAE,CAAC;iBACf,CAAC;gBAEF,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAG,CAAC;gBAExB,gFAAgF;gBAChF,2CAA2C;gBAE3C,WAAW,GAAG,IAAI,CAAC;aAEtB;YAED,aAAa,CAAE,eAAe,CAAE,CAAC,SAAS,EAAG,CAAC;YAE9C,sFAAsF;YACtF,+DAA+D;YAE/D,MAAM,YAAY,GAAG,aAAa,CAAE,iBAAiB,CAAC,UAAU,CAAE,AAAC;YAEnE,IAAK,YAAY,KAAK,SAAS,EAAG;gBAE9B,aAAa,CAAE,iBAAiB,CAAC,UAAU,CAAE,CAAC,SAAS,EAAG,CAAC;gBAE3D,IAAK,YAAY,CAAC,SAAS,KAAK,CAAC,EAE7B,aAAa,CAAE,OAAO,CAAE,CAAC;aAIhC;YAED,wDAAwD;YAExD,iBAAiB,CAAC,UAAU,GAAG,eAAe,CAAC;YAC/C,iBAAiB,CAAC,cAAc,GAAG,aAAa,CAAE,eAAe,CAAE,CAAC,OAAO,CAAC;SAE/E;QAED,OAAO,WAAW,CAAC;KAEtB;IAED,SAAS,aAAa,CAAE,iBAAiB,EAAE,OAAO,EAAE,IAAI,EAAG;QAEvD,IAAI,WAAW,GAAG,IAAI,AAAC;QAEvB,IAAK,OAAO,CAAC,kBAAkB,EAAG,WAAW,GAAG,KAAK,CAAC;QACtD,IAAK,OAAO,CAAC,eAAe,EAAG,WAAW,GAAG,KAAK,CAAC;QAEnD,MAAM,WAAW,GAAG,WAAW,CAAE,iBAAiB,EAAE,OAAO,CAAE,AAAC;QAC9D,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,AAAC;QAE9B,KAAK,CAAC,aAAa,CAAE,KAAK,GAAG,IAAI,CAAE,CAAC;QACpC,KAAK,CAAC,WAAW,CAAE,WAAW,EAAE,iBAAiB,CAAC,cAAc,CAAE,CAAC;QAEnE,IAAK,MAAM,CAAC,OAAO,KAAK,MAAM,CAAC,gBAAgB,IAAI,WAAW,KAAK,IAAI,EAAG;YAEtE,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,OAAO,CAAC,KAAK,CAAE,CAAC;YACxC,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,OAAO,CAAC,gBAAgB,CAAE,CAAC;YACnD,GAAG,CAAC,WAAW,CAAE,IAAI,EAAE,OAAO,CAAC,eAAe,CAAE,CAAC;YACjD,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;YAE5B,MAAM,eAAe,GAAG,sBAAsB,CAAE,OAAO,CAAE,IAAI,cAAc,CAAE,OAAO,CAAC,KAAK,CAAE,KAAK,KAAK,AAAC;YACvG,IAAI,KAAK,GAAG,WAAW,CAAE,OAAO,CAAC,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,cAAc,CAAE,AAAC;YACjF,KAAK,GAAG,gBAAgB,CAAE,OAAO,EAAE,KAAK,CAAE,CAAC;YAE3C,MAAM,YAAY,GAAG,cAAc,CAAE,KAAK,CAAE,IAAI,QAAQ,EACpD,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAE,AAAC;YAEjE,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,IAAI,CAAE,EACtC,gBAAgB,GAAG,iBAAiB,CAAE,OAAO,CAAC,cAAc,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,cAAc,CAAE,AAAC;YAE/H,oBAAoB,CAAE,WAAW,EAAE,OAAO,EAAE,YAAY,CAAE,CAAC;YAE3D,IAAI,MAAM,AAAC;YACX,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,AAAC;YAEhC,MAAM,aAAa,GAAK,QAAQ,IAAI,OAAO,CAAC,cAAc,KAAK,IAAI,AAAE,AAAC;YACtE,MAAM,cAAc,GAAK,iBAAiB,CAAC,SAAS,KAAK,SAAS,AAAE,AAAC;YACrE,MAAM,MAAM,GAAG,YAAY,CAAE,OAAO,EAAE,KAAK,EAAE,YAAY,CAAE,AAAC;YAE5D,IAAK,OAAO,CAAC,cAAc,EAAG;gBAE1B,yCAAyC;gBAEzC,gBAAgB,GAAG,IAAI,CAAC;gBAExB,IAAK,QAAQ,EAAG;oBAEZ,IAAK,OAAO,CAAC,IAAI,KAAK,SAAS,EAE3B,gBAAgB,GAAG,KAAK,CAAC;yBAEtB,IAAK,OAAO,CAAC,IAAI,KAAK,eAAe,EAExC,gBAAgB,GAAG,KAAK,CAAC;yBAEtB,IAAK,OAAO,CAAC,IAAI,KAAK,kBAAkB,EAE3C,gBAAgB,GAAG,KAAK,CAAC;yBAIzB,gBAAgB,GAAG,KAAK,CAAC,CAAC,wDAAwD;iBAIzF,MAEG,IAAK,OAAO,CAAC,IAAI,KAAK,SAAS,EAE3B,OAAO,CAAC,KAAK,CAAE,8DAA8D,CAAE,CAAC;gBAMxF,gCAAgC;gBAEhC,IAAK,OAAO,CAAC,MAAM,KAAK,WAAW,IAAI,gBAAgB,KAAK,IAAI,EAE5D,0FAA0F;gBAC1F,iEAAiE;gBACjE,2EAA2E;gBAC3E;oBAAA,IAAK,OAAO,CAAC,IAAI,KAAK,iBAAiB,IAAI,OAAO,CAAC,IAAI,KAAK,eAAe,EAAG;wBAE1E,OAAO,CAAC,IAAI,CAAE,6FAA6F,CAAE,CAAC;wBAE9G,OAAO,CAAC,IAAI,GAAG,iBAAiB,CAAC;wBACjC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,IAAI,CAAE,CAAC;qBAE1C;iBAAA,AAEJ;gBAED,IAAK,OAAO,CAAC,MAAM,KAAK,kBAAkB,IAAI,gBAAgB,KAAK,IAAI,EAAG;oBAEtE,gEAAgE;oBAChE,2EAA2E;oBAC3E,gBAAgB,GAAG,KAAK,CAAC;oBAEzB,0FAA0F;oBAC1F,yDAAyD;oBACzD,2EAA2E;oBAC3E,IAAK,OAAO,CAAC,IAAI,KAAK,kBAAkB,EAAG;wBAEvC,OAAO,CAAC,IAAI,CAAE,kFAAkF,CAAE,CAAC;wBAEnG,OAAO,CAAC,IAAI,GAAG,kBAAkB,CAAC;wBAClC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,IAAI,CAAE,CAAC;qBAE1C;iBAEJ;gBAED,EAAE;gBAEF,IAAK,aAAa,IAAI,cAAc,EAEhC,KAAK,CAAC,YAAY,CAAE,IAAI,EAAE,CAAC,EAAE,gBAAgB,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAE,CAAC;qBAI3E,KAAK,CAAC,UAAU,CAAE,IAAI,EAAE,CAAC,EAAE,gBAAgB,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAE,CAAC;aAI3G,MAAM,IAAK,OAAO,CAAC,aAAa,EAAG;gBAEhC,4CAA4C;gBAC5C,iCAAiC;gBACjC,qEAAqE;gBAErE,IAAK,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,YAAY,EAAG;oBAEtC,IAAK,aAAa,IAAI,cAAc,EAEhC,KAAK,CAAC,YAAY,CAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,EAAE,OAAO,CAAE,CAAC,CAAE,CAAC,KAAK,EAAE,OAAO,CAAE,CAAC,CAAE,CAAC,MAAM,CAAE,CAAC;oBAIlG,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;wBAEjD,MAAM,GAAG,OAAO,CAAE,IAAC,CAAE,CAAC;wBAEtB,IAAK,aAAa,EAEd,KAAK,CAAC,aAAa,CAAE,IAAI,EAAE,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAE,CAAC;6BAIjG,KAAK,CAAC,UAAU,CAAE,IAAI,EAAE,IAAC,EAAE,gBAAgB,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAE,CAAC;qBAIpH;oBAED,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;iBAEnC,MAEG,IAAK,aAAa,EAAG;oBAEjB,IAAK,cAAc,EAEf,KAAK,CAAC,YAAY,CAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAE,CAAC;oBAIpF,KAAK,CAAC,aAAa,CAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAE,CAAC;iBAEjG,MAEG,KAAK,CAAC,UAAU,CAAE,IAAI,EAAE,CAAC,EAAE,gBAAgB,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAE,CAAC;aAMrH,MAAM,IAAK,OAAO,CAAC,mBAAmB,EAAG;gBAEtC,IAAK,aAAa,IAAI,cAAc,EAEhC,KAAK,CAAC,YAAY,CAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,EAAE,OAAO,CAAE,CAAC,CAAE,CAAC,KAAK,EAAE,OAAO,CAAE,CAAC,CAAE,CAAC,MAAM,CAAE,CAAC;gBAIlG,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;oBAEjD,MAAM,GAAG,OAAO,CAAE,IAAC,CAAE,CAAC;oBAEtB,IAAK,OAAO,CAAC,MAAM,KAAK,UAAU;wBAE9B,IAAK,QAAQ,KAAK,IAAI;4BAElB,IAAK,aAAa,EAEd,KAAK,CAAC,uBAAuB,CAAE,IAAI,EAAE,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAE,CAAC;iCAInG,KAAK,CAAC,oBAAoB,CAAE,IAAI,EAAE,IAAC,EAAE,gBAAgB,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAE,CAAC;+BAMzG,OAAO,CAAC,IAAI,CAAE,gGAAgG,CAAE,CAAC;2BAMrH,IAAK,aAAa,EAEd,KAAK,CAAC,aAAa,CAAE,IAAI,EAAE,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAE,CAAC;yBAIjG,KAAK,CAAC,UAAU,CAAE,IAAI,EAAE,IAAC,EAAE,gBAAgB,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAE,CAAC;iBAMxH;aAEJ,MAAM,IAAK,OAAO,CAAC,kBAAkB;gBAElC,IAAK,aAAa,EAAG;oBAEjB,IAAK,cAAc,EAEf,KAAK,CAAC,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,gBAAgB,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAE,CAAC;oBAIlG,KAAK,CAAC,aAAa,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAE,CAAC;iBAElH,MAEG,KAAK,CAAC,UAAU,CAAE,KAAK,EAAE,CAAC,EAAE,gBAAgB,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAE,CAAC;mBAIzH,IAAK,OAAO,CAAC,eAAe;gBAE/B,IAAK,aAAa,EAAG;oBAEjB,IAAK,cAAc,EAEf,KAAK,CAAC,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,gBAAgB,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAE,CAAC;oBAIlG,KAAK,CAAC,aAAa,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAE,CAAC;iBAElH,MAEG,KAAK,CAAC,UAAU,CAAE,KAAK,EAAE,CAAC,EAAE,gBAAgB,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAE,CAAC;mBAIzH,IAAK,OAAO,CAAC,oBAAoB;gBAEpC,IAAK,aAAa,IAAI,cAAc,EAEhC,KAAK,CAAC,YAAY,CAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAE,CAAC;qBAIhF,KAAK,CAAC,UAAU,CAAE,IAAI,EAAE,CAAC,EAAE,gBAAgB,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAE,CAAC;mBAIrG;gBAEH,yCAAyC;gBAEzC,4CAA4C;gBAC5C,iCAAiC;gBACjC,qEAAqE;gBAErE,IAAK,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,YAAY,EAAG;oBAEtC,IAAK,aAAa,IAAI,cAAc,EAEhC,KAAK,CAAC,YAAY,CAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,EAAE,OAAO,CAAE,CAAC,CAAE,CAAC,KAAK,EAAE,OAAO,CAAE,CAAC,CAAE,CAAC,MAAM,CAAE,CAAC;oBAIlG,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;wBAEjD,MAAM,GAAG,OAAO,CAAE,IAAC,CAAE,CAAC;wBAEtB,IAAK,aAAa,EAEd,KAAK,CAAC,aAAa,CAAE,IAAI,EAAE,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAE,CAAC;6BAI/D,KAAK,CAAC,UAAU,CAAE,IAAI,EAAE,IAAC,EAAE,gBAAgB,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAE,CAAC;qBAI/E;oBAED,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;iBAEnC,MAEG,IAAK,aAAa,EAAG;oBAEjB,IAAK,cAAc,EAEf,KAAK,CAAC,YAAY,CAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAE,CAAC;oBAIpF,KAAK,CAAC,aAAa,CAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAE,CAAC;iBAEjE,MAEG,KAAK,CAAC,UAAU,CAAE,IAAI,EAAE,CAAC,EAAE,gBAAgB,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAE,CAAC;aAMlF;YAED,IAAK,2BAA2B,CAAE,OAAO,EAAE,YAAY,CAAE,EAErD,cAAc,CAAE,WAAW,CAAE,CAAC;YAIlC,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC;YAEzC,IAAK,OAAO,CAAC,QAAQ,EAAG,OAAO,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;SAEvD;QAED,iBAAiB,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC;KAEjD;IAED,SAAS,iBAAiB,CAAE,iBAAiB,EAAE,OAAO,EAAE,IAAI,EAAG;QAE3D,IAAK,OAAO,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAG,OAAO;QAEzC,MAAM,WAAW,GAAG,WAAW,CAAE,iBAAiB,EAAE,OAAO,CAAE,AAAC;QAC9D,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,AAAC;QAE9B,KAAK,CAAC,aAAa,CAAE,KAAK,GAAG,IAAI,CAAE,CAAC;QACpC,KAAK,CAAC,WAAW,CAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAE,CAAC;QAE7D,IAAK,MAAM,CAAC,OAAO,KAAK,MAAM,CAAC,gBAAgB,IAAI,WAAW,KAAK,IAAI,EAAG;YAEtE,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,OAAO,CAAC,KAAK,CAAE,CAAC;YACxC,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,OAAO,CAAC,gBAAgB,CAAE,CAAC;YACnD,GAAG,CAAC,WAAW,CAAE,IAAI,EAAE,OAAO,CAAC,eAAe,CAAE,CAAC;YACjD,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;YAE5B,MAAM,YAAY,GAAK,OAAO,CAAC,mBAAmB,IAAI,OAAO,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,mBAAmB,AAAE,AAAC;YAC/F,MAAM,aAAa,GAAK,OAAO,CAAC,KAAK,CAAE,CAAC,CAAE,IAAI,OAAO,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,aAAa,AAAE,AAAC;YAEjF,MAAM,SAAS,GAAG,EAAE,AAAC;YAErB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;gBAE3B,IAAK,CAAE,YAAY,IAAI,CAAE,aAAa,EAElC,SAAS,CAAE,IAAC,CAAE,GAAG,WAAW,CAAE,OAAO,CAAC,KAAK,CAAE,IAAC,CAAE,EAAE,KAAK,EAAE,IAAI,EAAE,cAAc,CAAE,CAAC;qBAIhF,SAAS,CAAE,IAAC,CAAE,GAAG,aAAa,GAAG,OAAO,CAAC,KAAK,CAAE,IAAC,CAAE,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAE,IAAC,CAAE,CAAC;gBAInF,SAAS,CAAE,IAAC,CAAE,GAAG,gBAAgB,CAAE,OAAO,EAAE,SAAS,CAAE,IAAC,CAAE,CAAE,CAAC;aAEhE;YAED,MAAM,KAAK,GAAG,SAAS,CAAE,CAAC,CAAE,EACxB,YAAY,GAAG,cAAc,CAAE,KAAK,CAAE,IAAI,QAAQ,EAClD,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAE,EAC5D,MAAM,GAAG,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,IAAI,CAAE,EACtC,gBAAgB,GAAG,iBAAiB,CAAE,OAAO,CAAC,cAAc,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAE,AAAC;YAEvG,MAAM,aAAa,GAAK,QAAQ,IAAI,OAAO,CAAC,cAAc,KAAK,IAAI,AAAE,AAAC;YACtE,MAAM,cAAc,GAAK,iBAAiB,CAAC,SAAS,KAAK,SAAS,AAAE,AAAC;YACrE,IAAI,MAAM,GAAG,YAAY,CAAE,OAAO,EAAE,KAAK,EAAE,YAAY,CAAE,AAAC;YAE1D,oBAAoB,CAAE,KAAK,EAAE,OAAO,EAAE,YAAY,CAAE,CAAC;YAErD,IAAI,OAAO,AAAC;YAEZ,IAAK,YAAY,EAAG;gBAEhB,IAAK,aAAa,IAAI,cAAc,EAEhC,KAAK,CAAC,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,gBAAgB,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAE,CAAC;gBAIrF,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;oBAE3B,OAAO,GAAG,SAAS,CAAE,IAAC,CAAE,CAAC,OAAO,CAAC;oBAEjC,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAG,CAAG;wBAExC,MAAM,MAAM,GAAG,OAAO,CAAE,CAAC,CAAE,AAAC;wBAE5B,IAAK,OAAO,CAAC,MAAM,KAAK,UAAU;4BAE9B,IAAK,QAAQ,KAAK,IAAI;gCAElB,IAAK,aAAa,EAEd,KAAK,CAAC,uBAAuB,CAAE,KAAK,GAAG,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAE,CAAC;qCAIxG,KAAK,CAAC,oBAAoB,CAAE,KAAK,GAAG,IAAC,EAAE,CAAC,EAAE,gBAAgB,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAE,CAAC;mCAM9G,OAAO,CAAC,IAAI,CAAE,iGAAiG,CAAE,CAAC;+BAMtH,IAAK,aAAa,EAEd,KAAK,CAAC,aAAa,CAAE,KAAK,GAAG,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAE,CAAC;6BAItG,KAAK,CAAC,UAAU,CAAE,KAAK,GAAG,IAAC,EAAE,CAAC,EAAE,gBAAgB,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAE,CAAC;qBAM7H;iBAEJ;aAEJ,MAAM;gBAEH,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;gBAE1B,IAAK,aAAa,IAAI,cAAc,EAAG;oBAEnC,4CAA4C;oBAC5C,gGAAgG;oBAChG,kFAAkF;oBAElF,IAAK,OAAO,CAAC,MAAM,GAAG,CAAC,EAAG,MAAM,EAAG,CAAC;oBAEpC,KAAK,CAAC,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,gBAAgB,EAAE,SAAS,CAAE,CAAC,CAAE,CAAC,KAAK,EAAE,SAAS,CAAE,CAAC,CAAE,CAAC,MAAM,CAAE,CAAC;iBAEtG;gBAED,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,IAAK,aAAa,EAAG;oBAEjB,IAAK,aAAa,EAEd,KAAK,CAAC,aAAa,CAAE,KAAK,GAAG,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,CAAE,IAAC,CAAE,CAAC,KAAK,EAAE,SAAS,CAAE,IAAC,CAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAE,IAAC,CAAE,CAAC,IAAI,CAAE,CAAC;yBAI9H,KAAK,CAAC,UAAU,CAAE,KAAK,GAAG,IAAC,EAAE,CAAC,EAAE,gBAAgB,EAAE,SAAS,CAAE,IAAC,CAAE,CAAC,KAAK,EAAE,SAAS,CAAE,IAAC,CAAE,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAE,IAAC,CAAE,CAAC,IAAI,CAAE,CAAC;oBAI9I,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAG,CAAG;wBAExC,MAAM,MAAM,GAAG,OAAO,CAAE,CAAC,CAAE,AAAC;wBAC5B,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAE,IAAC,CAAE,CAAC,KAAK,AAAC;wBAE5C,IAAK,aAAa,EAEd,KAAK,CAAC,aAAa,CAAE,KAAK,GAAG,IAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC,IAAI,CAAE,CAAC;6BAIzH,KAAK,CAAC,UAAU,CAAE,KAAK,GAAG,IAAC,EAAE,CAAC,GAAG,CAAC,EAAE,gBAAgB,EAAE,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC,IAAI,CAAE,CAAC;qBAI5I;iBAEJ,MAAM;oBAEH,IAAK,aAAa,EAEd,KAAK,CAAC,aAAa,CAAE,KAAK,GAAG,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAE,IAAC,CAAE,CAAE,CAAC;yBAI5E,KAAK,CAAC,UAAU,CAAE,KAAK,GAAG,IAAC,EAAE,CAAC,EAAE,gBAAgB,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAE,IAAC,CAAE,CAAE,CAAC;oBAIzF,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAG,CAAG;wBAExC,MAAM,MAAM,GAAG,OAAO,CAAE,CAAC,CAAE,AAAC;wBAE5B,IAAK,aAAa,EAEd,KAAK,CAAC,aAAa,CAAE,KAAK,GAAG,IAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,CAAE,IAAC,CAAE,CAAE,CAAC;6BAInF,KAAK,CAAC,UAAU,CAAE,KAAK,GAAG,IAAC,EAAE,CAAC,GAAG,CAAC,EAAE,gBAAgB,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,CAAE,IAAC,CAAE,CAAE,CAAC;qBAInG;iBAEJ;aAIR;YAED,IAAK,2BAA2B,CAAE,OAAO,EAAE,YAAY,CAAE,EAErD,oDAAoD;YACpD,cAAc,CAAE,KAAK,CAAE,CAAC;YAI5B,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC;YAEzC,IAAK,OAAO,CAAC,QAAQ,EAAG,OAAO,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;SAEvD;QAED,iBAAiB,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC;KAEjD;IAED,iBAAiB;IAEjB,sEAAsE;IACtE,SAAS,uBAAuB,CAAE,WAAW,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,aAAa,EAAG;QAE9F,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAE,AAAC;QACnE,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,IAAI,CAAE,AAAC;QAC7C,MAAM,gBAAgB,GAAG,iBAAiB,CAAE,OAAO,CAAC,cAAc,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAE,AAAC;QACzG,MAAM,sBAAsB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAE,AAAC;QAE9D,IAAK,CAAE,sBAAsB,CAAC,qBAAqB;YAE/C,IAAK,aAAa,KAAK,KAAK,IAAI,aAAa,KAAK,KAAK,EAEnD,KAAK,CAAC,UAAU,CAAE,aAAa,EAAE,CAAC,EAAE,gBAAgB,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAE,CAAC;iBAI/I,KAAK,CAAC,UAAU,CAAE,aAAa,EAAE,CAAC,EAAE,gBAAgB,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAE,CAAC;SAIlI;QAED,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,WAAW,CAAE,CAAC;QAE5C,IAAK,kBAAkB,CAAE,YAAY,CAAE,EAEnC,kBAAkB,CAAC,kCAAkC,CAAE,KAAK,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC,cAAc,EAAE,CAAC,EAAE,sBAAsB,CAAE,YAAY,CAAE,CAAE,CAAC;aAI/K,GAAG,CAAC,oBAAoB,CAAE,KAAK,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC,cAAc,EAAE,CAAC,CAAE,CAAC;QAI9G,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;KAExC;IAGD,mFAAmF;IACnF,SAAS,wBAAwB,CAAE,YAAY,EAAE,YAAY,EAAE,aAAa,EAAG;QAE3E,GAAG,CAAC,gBAAgB,CAAE,KAAK,EAAE,YAAY,CAAE,CAAC;QAE5C,IAAK,YAAY,CAAC,WAAW,IAAI,CAAE,YAAY,CAAC,aAAa,EAAG;YAE5D,IAAI,gBAAgB,GAAG,KAAK,AAAC;YAE7B,IAAK,aAAa,IAAI,kBAAkB,CAAE,YAAY,CAAE,EAAG;gBAEvD,MAAM,YAAY,GAAG,YAAY,CAAC,YAAY,AAAC;gBAE/C,IAAK,YAAY,IAAI,YAAY,CAAC,cAAc,EAAG;oBAE/C,IAAK,YAAY,CAAC,IAAI,KAAK,SAAS,EAEhC,gBAAgB,GAAG,KAAK,CAAC;yBAEtB,IAAK,YAAY,CAAC,IAAI,KAAK,eAAe,EAE7C,gBAAgB,GAAG,KAAK,CAAC;iBAIhC;gBAED,MAAM,OAAO,GAAG,sBAAsB,CAAE,YAAY,CAAE,AAAC;gBAEvD,IAAK,kBAAkB,CAAE,YAAY,CAAE,EAEnC,kBAAkB,CAAC,iCAAiC,CAAE,KAAK,EAAE,OAAO,EAAE,gBAAgB,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAE,CAAC;qBAIlI,GAAG,CAAC,8BAA8B,CAAE,KAAK,EAAE,OAAO,EAAE,gBAAgB,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAE,CAAC;aAIvH,MAEG,GAAG,CAAC,mBAAmB,CAAE,KAAK,EAAE,gBAAgB,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAE,CAAC;YAIhG,GAAG,CAAC,uBAAuB,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,CAAE,CAAC;SAEpE,MAAM,IAAK,YAAY,CAAC,WAAW,IAAI,YAAY,CAAC,aAAa,EAAG;YAEjE,MAAM,OAAO,GAAG,sBAAsB,CAAE,YAAY,CAAE,AAAC;YAEvD,IAAK,aAAa,IAAI,kBAAkB,CAAE,YAAY,CAAE,KAAK,KAAK,EAE9D,GAAG,CAAC,8BAA8B,CAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAE,CAAC;iBAElG,IAAK,kBAAkB,CAAE,YAAY,CAAE,EAE1C,kBAAkB,CAAC,iCAAiC,CAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAE,CAAC;iBAIvH,GAAG,CAAC,mBAAmB,CAAE,KAAK,EAAE,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAE,CAAC;YAKrF,GAAG,CAAC,uBAAuB,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,CAAE,CAAC;SAEpE,MAAM;YAEH,uCAAuC;YACvC,MAAM,OAAO,GAAG,YAAY,CAAC,4BAA4B,KAAK,IAAI,GAAG,YAAY,CAAC,OAAO,CAAE,CAAC,CAAE,GAAG,YAAY,CAAC,OAAO,AAAC;YAEtH,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAE,AAAC;YACnE,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,IAAI,CAAE,AAAC;YAC7C,MAAM,gBAAgB,GAAG,iBAAiB,CAAE,OAAO,CAAC,cAAc,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAE,AAAC;YACzG,MAAM,OAAO,GAAG,sBAAsB,CAAE,YAAY,CAAE,AAAC;YAEvD,IAAK,aAAa,IAAI,kBAAkB,CAAE,YAAY,CAAE,KAAK,KAAK,EAE9D,GAAG,CAAC,8BAA8B,CAAE,KAAK,EAAE,OAAO,EAAE,gBAAgB,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAE,CAAC;iBAE7G,IAAK,kBAAkB,CAAE,YAAY,CAAE,EAE1C,kBAAkB,CAAC,iCAAiC,CAAE,KAAK,EAAE,OAAO,EAAE,gBAAgB,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAE,CAAC;iBAIlI,GAAG,CAAC,mBAAmB,CAAE,KAAK,EAAE,gBAAgB,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAE,CAAC;SAInG;QAED,GAAG,CAAC,gBAAgB,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;KAEvC;IAED,qEAAqE;IACrE,SAAS,iBAAiB,CAAE,WAAW,EAAE,YAAY,EAAG;QAEpD,MAAM,MAAM,GAAK,YAAY,IAAI,YAAY,CAAC,uBAAuB,AAAE,AAAC;QACxE,IAAK,MAAM,EAAG,MAAM,IAAI,KAAK,CAAE,yDAAyD,CAAE,CAAC;QAE3F,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,WAAW,CAAE,CAAC;QAE5C,IAAK,CAAI,CAAA,YAAY,CAAC,YAAY,IAAI,YAAY,CAAC,YAAY,CAAC,cAAc,CAAA,AAAE,EAE5E,MAAM,IAAI,KAAK,CAAE,qEAAqE,CAAE,CAAC;QAI7F,sDAAsD;QACtD,IAAK,CAAE,UAAU,CAAC,GAAG,CAAE,YAAY,CAAC,YAAY,CAAE,CAAC,cAAc,IACzD,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,KAAK,YAAY,CAAC,KAAK,IAC5D,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,EAAG;YAErE,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;YAC3D,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;YAC7D,YAAY,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;SAEhD;QAED,YAAY,CAAE,YAAY,CAAC,YAAY,EAAE,CAAC,CAAE,CAAC;QAE7C,MAAM,iBAAiB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAC,YAAY,CAAE,CAAC,cAAc,AAAC;QACrF,MAAM,OAAO,GAAG,sBAAsB,CAAE,YAAY,CAAE,AAAC;QAEvD,IAAK,YAAY,CAAC,YAAY,CAAC,MAAM,KAAK,WAAW;YAEjD,IAAK,kBAAkB,CAAE,YAAY,CAAE,EAEnC,kBAAkB,CAAC,kCAAkC,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,EAAE,OAAO,CAAE,CAAC;iBAI3G,GAAG,CAAC,oBAAoB,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAE,CAAC;eAItE,IAAK,YAAY,CAAC,YAAY,CAAC,MAAM,KAAK,kBAAkB;YAE/D,IAAK,kBAAkB,CAAE,YAAY,CAAE,EAEnC,kBAAkB,CAAC,kCAAkC,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,EAAE,OAAO,CAAE,CAAC;iBAI3G,GAAG,CAAC,oBAAoB,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAE,CAAC;eAMzE,MAAM,IAAI,KAAK,CAAE,6BAA6B,CAAE,CAAC;KAIxD;IAED,oDAAoD;IACpD,SAAS,sBAAsB,CAAE,YAAY,EAAG;QAE5C,MAAM,sBAAsB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAE,AAAC;QAC9D,MAAM,MAAM,GAAK,YAAY,CAAC,uBAAuB,KAAK,IAAI,AAAE,AAAC;QAEjE,IAAK,YAAY,CAAC,YAAY,IAAI,CAAE,sBAAsB,CAAC,yBAAyB,EAAG;YAEnF,IAAK,MAAM,EAAG,MAAM,IAAI,KAAK,CAAE,0DAA0D,CAAE,CAAC;YAE5F,iBAAiB,CAAE,sBAAsB,CAAC,kBAAkB,EAAE,YAAY,CAAE,CAAC;SAEhF,MAEG,IAAK,MAAM,EAAG;YAEV,sBAAsB,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAE/C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;gBAE3B,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,sBAAsB,CAAC,kBAAkB,CAAE,IAAC,CAAE,CAAE,CAAC;gBAC/E,sBAAsB,CAAC,kBAAkB,CAAE,IAAC,CAAE,GAAG,GAAG,CAAC,kBAAkB,EAAE,CAAC;gBAC1E,wBAAwB,CAAE,sBAAsB,CAAC,kBAAkB,CAAE,IAAC,CAAE,EAAE,YAAY,EAAE,KAAK,CAAE,CAAC;aAEnG;SAEJ,MAAM;YAEH,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,sBAAsB,CAAC,kBAAkB,CAAE,CAAC;YAC1E,sBAAsB,CAAC,kBAAkB,GAAG,GAAG,CAAC,kBAAkB,EAAE,CAAC;YACrE,wBAAwB,CAAE,sBAAsB,CAAC,kBAAkB,EAAE,YAAY,EAAE,KAAK,CAAE,CAAC;SAE9F;QAIL,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;KAExC;IAED,4CAA4C;IAC5C,SAAS,cAAc,CAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAG;QAEhE,MAAM,sBAAsB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAE,AAAC;QAE9D,IAAK,YAAY,KAAK,SAAS,EAE3B,uBAAuB,CAAE,sBAAsB,CAAC,kBAAkB,EAAE,YAAY,EAAE,YAAY,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;QAI1H,IAAK,YAAY,KAAK,SAAS,EAE3B,sBAAsB,CAAE,YAAY,CAAE,CAAC;KAI9C;IAED,4CAA4C;IAC5C,SAAS,iBAAiB,CAAE,YAAY,EAAG;QAEvC,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,AAAC;QAErC,MAAM,sBAAsB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAE,AAAC;QAC9D,MAAM,iBAAiB,GAAG,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;QAEpD,YAAY,CAAC,gBAAgB,CAAE,SAAS,EAAE,qBAAqB,CAAE,CAAC;QAElE,IAAK,YAAY,CAAC,4BAA4B,KAAK,IAAI,EAAG;YAEtD,IAAK,iBAAiB,CAAC,cAAc,KAAK,SAAS,EAE/C,iBAAiB,CAAC,cAAc,GAAG,GAAG,CAAC,aAAa,EAAE,CAAC;YAI3D,iBAAiB,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAG,CAAC;SAE3B;QAED,MAAM,MAAM,GAAK,YAAY,CAAC,uBAAuB,KAAK,IAAI,AAAE,AAAC;QACjE,MAAM,uBAAuB,GAAK,YAAY,CAAC,4BAA4B,KAAK,IAAI,AAAE,AAAC;QACvF,MAAM,YAAY,GAAG,cAAc,CAAE,YAAY,CAAE,IAAI,QAAQ,AAAC;QAEhE,oBAAoB;QAEpB,IAAK,MAAM,EAAG;YAEV,sBAAsB,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAE/C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,sBAAsB,CAAC,kBAAkB,CAAE,IAAC,CAAE,GAAG,GAAG,CAAC,iBAAiB,EAAE,CAAC;SAIhF,MAAM;YAEH,sBAAsB,CAAC,kBAAkB,GAAG,GAAG,CAAC,iBAAiB,EAAE,CAAC;YAEpE,IAAK,uBAAuB;gBAExB,IAAK,YAAY,CAAC,WAAW,EAAG;oBAE5B,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,AAAC;oBAEtC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;wBAElD,MAAM,oBAAoB,GAAG,UAAU,CAAC,GAAG,CAAE,QAAQ,CAAE,IAAC,CAAE,CAAE,AAAC;wBAE7D,IAAK,oBAAoB,CAAC,cAAc,KAAK,SAAS,EAAG;4BAErD,oBAAoB,CAAC,cAAc,GAAG,GAAG,CAAC,aAAa,EAAE,CAAC;4BAE1D,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAG,CAAC;yBAE3B;qBAEJ;iBAEJ,MAEG,OAAO,CAAC,IAAI,CAAE,+GAA+G,CAAE,CAAC;mBAIjI,IAAK,AAAE,QAAQ,IAAI,YAAY,CAAC,OAAO,GAAG,CAAC,IAAM,kBAAkB,CAAE,YAAY,CAAE,KAAK,KAAK,EAAG;gBAEnG,sBAAsB,CAAC,8BAA8B,GAAG,GAAG,CAAC,iBAAiB,EAAE,CAAC;gBAChF,sBAAsB,CAAC,wBAAwB,GAAG,GAAG,CAAC,kBAAkB,EAAE,CAAC;gBAE3E,GAAG,CAAC,gBAAgB,CAAE,KAAK,EAAE,sBAAsB,CAAC,wBAAwB,CAAE,CAAC;gBAE/E,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAE,AAAC;gBACnE,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAE,OAAO,CAAC,IAAI,CAAE,AAAC;gBAC7C,MAAM,gBAAgB,GAAG,iBAAiB,CAAE,OAAO,CAAC,cAAc,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAE,AAAC;gBACzG,MAAM,OAAO,GAAG,sBAAsB,CAAE,YAAY,CAAE,AAAC;gBACvD,GAAG,CAAC,8BAA8B,CAAE,KAAK,EAAE,OAAO,EAAE,gBAAgB,EAAE,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAE,CAAC;gBAEhH,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,sBAAsB,CAAC,8BAA8B,CAAE,CAAC;gBACtF,GAAG,CAAC,uBAAuB,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,sBAAsB,CAAC,wBAAwB,CAAE,CAAC;gBACpG,GAAG,CAAC,gBAAgB,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;gBAEpC,IAAK,YAAY,CAAC,WAAW,EAAG;oBAE5B,sBAAsB,CAAC,wBAAwB,GAAG,GAAG,CAAC,kBAAkB,EAAE,CAAC;oBAC3E,wBAAwB,CAAE,sBAAsB,CAAC,wBAAwB,EAAE,YAAY,EAAE,IAAI,CAAE,CAAC;iBAEnG;gBAED,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;aAExC;SAEJ;QAED,qBAAqB;QAErB,IAAK,MAAM,EAAG;YAEV,KAAK,CAAC,WAAW,CAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAE,CAAC;YAC7D,oBAAoB,CAAE,KAAK,EAAE,OAAO,EAAE,YAAY,CAAE,CAAC;YAErD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,uBAAuB,CAAE,sBAAsB,CAAC,kBAAkB,CAAE,IAAC,CAAE,EAAE,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,GAAG,IAAC,CAAE,CAAC;YAIvH,IAAK,2BAA2B,CAAE,OAAO,EAAE,YAAY,CAAE,EAErD,cAAc,CAAE,KAAK,CAAE,CAAC;YAI5B,KAAK,CAAC,aAAa,EAAE,CAAC;SAEzB,MAAM,IAAK,uBAAuB,EAAG;YAElC,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,AAAC;YAEtC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;gBAElD,MAAM,UAAU,GAAG,QAAQ,CAAE,IAAC,CAAE,AAAC;gBACjC,MAAM,oBAAoB,GAAG,UAAU,CAAC,GAAG,CAAE,UAAU,CAAE,AAAC;gBAE1D,KAAK,CAAC,WAAW,CAAE,IAAI,EAAE,oBAAoB,CAAC,cAAc,CAAE,CAAC;gBAC/D,oBAAoB,CAAE,IAAI,EAAE,UAAU,EAAE,YAAY,CAAE,CAAC;gBACvD,uBAAuB,CAAE,sBAAsB,CAAC,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,KAAK,GAAG,IAAC,EAAE,IAAI,CAAE,CAAC;gBAEhH,IAAK,2BAA2B,CAAE,UAAU,EAAE,YAAY,CAAE,EAExD,cAAc,CAAE,IAAI,CAAE,CAAC;aAI9B;YAED,KAAK,CAAC,aAAa,EAAE,CAAC;SAEzB,MAAM;YAEH,IAAI,aAAa,GAAG,IAAI,AAAC;YAEzB,IAAK,YAAY,CAAC,qBAAqB,IAAI,YAAY,CAAC,wBAAwB;gBAE5E,IAAK,QAAQ,EAET,aAAa,GAAG,YAAY,CAAC,qBAAqB,GAAG,KAAK,GAAG,KAAK,CAAC;qBAInE,OAAO,CAAC,KAAK,CAAE,iGAAiG,CAAE,CAAC;aAI1H;YAED,KAAK,CAAC,WAAW,CAAE,aAAa,EAAE,iBAAiB,CAAC,cAAc,CAAE,CAAC;YACrE,oBAAoB,CAAE,aAAa,EAAE,OAAO,EAAE,YAAY,CAAE,CAAC;YAC7D,uBAAuB,CAAE,sBAAsB,CAAC,kBAAkB,EAAE,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE,aAAa,CAAE,CAAC;YAElH,IAAK,2BAA2B,CAAE,OAAO,EAAE,YAAY,CAAE,EAErD,cAAc,CAAE,aAAa,CAAE,CAAC;YAIpC,KAAK,CAAC,aAAa,EAAE,CAAC;SAEzB;QAED,kCAAkC;QAElC,IAAK,YAAY,CAAC,WAAW,EAEzB,sBAAsB,CAAE,YAAY,CAAE,CAAC;KAI9C;IAED,SAAS,wBAAwB,CAAE,YAAY,EAAG;QAE9C,MAAM,YAAY,GAAG,cAAc,CAAE,YAAY,CAAE,IAAI,QAAQ,AAAC;QAEhE,MAAM,QAAQ,GAAG,YAAY,CAAC,4BAA4B,KAAK,IAAI,GAAG,YAAY,CAAC,OAAO,GAAG;YAAE,YAAY,CAAC,OAAO;SAAE,AAAC;QAEtH,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;YAElD,MAAM,OAAO,GAAG,QAAQ,CAAE,IAAC,CAAE,AAAC;YAE9B,IAAK,2BAA2B,CAAE,OAAO,EAAE,YAAY,CAAE,EAAG;gBAExD,MAAM,MAAM,GAAG,YAAY,CAAC,uBAAuB,GAAG,KAAK,GAAG,IAAI,AAAC;gBACnE,MAAM,YAAY,GAAG,UAAU,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC,cAAc,AAAC;gBAE9D,KAAK,CAAC,WAAW,CAAE,MAAM,EAAE,YAAY,CAAE,CAAC;gBAC1C,cAAc,CAAE,MAAM,CAAE,CAAC;gBACzB,KAAK,CAAC,aAAa,EAAE,CAAC;aAEzB;SAEJ;KAEJ;IAED,SAAS,6BAA6B,CAAE,YAAY,EAAG;QAEnD,IAAK,AAAE,QAAQ,IAAI,YAAY,CAAC,OAAO,GAAG,CAAC,IAAM,kBAAkB,CAAE,YAAY,CAAE,KAAK,KAAK,EAAG;YAE5F,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,AAAC;YACjC,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,AAAC;YACnC,IAAI,IAAI,GAAG,KAAK,AAAC;YACjB,MAAM,iBAAiB,GAAG;AAAE,qBAAK;aAAE,AAAC;YACpC,MAAM,UAAU,GAAG,YAAY,CAAC,aAAa,GAAG,KAAK,GAAG,KAAK,AAAC;YAE9D,IAAK,YAAY,CAAC,WAAW,EAEzB,iBAAiB,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC;YAIzC,MAAM,sBAAsB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAE,AAAC;YAC9D,MAAM,iBAAiB,GAAG,AAAE,sBAAsB,CAAC,mBAAmB,KAAK,SAAS,GAAK,sBAAsB,CAAC,mBAAmB,GAAG,KAAK,AAAC;YAE5I,IAAK,iBAAiB,KAAK,KAAK,EAAG;gBAE/B,IAAK,YAAY,CAAC,WAAW,EAAG,IAAI,IAAI,GAAG,CAAC;gBAC5C,IAAK,YAAY,CAAC,aAAa,EAAG,IAAI,IAAI,IAAI,CAAC;aAElD;YAED,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,sBAAsB,CAAC,8BAA8B,CAAE,CAAC;YACtF,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,sBAAsB,CAAC,kBAAkB,CAAE,CAAC;YAE1E,IAAK,iBAAiB,KAAK,IAAI,EAAG;gBAE9B,GAAG,CAAC,qBAAqB,CAAE,KAAK,EAAE;oBAAE,UAAU;iBAAE,CAAE,CAAC;gBACnD,GAAG,CAAC,qBAAqB,CAAE,KAAK,EAAE;oBAAE,UAAU;iBAAE,CAAE,CAAC;aAEtD;YAED,GAAG,CAAC,eAAe,CAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;YAE5E,IAAK,6BAA6B,EAE9B,GAAG,CAAC,qBAAqB,CAAE,KAAK,EAAE,iBAAiB,CAAE,CAAC;YAI1D,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;YACrC,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,sBAAsB,CAAC,8BAA8B,CAAE,CAAC;SAEzF;KAEJ;IAED,SAAS,sBAAsB,CAAE,YAAY,EAAG;QAE5C,OAAO,IAAI,CAAC,GAAG,CAAE,UAAU,EAAE,YAAY,CAAC,OAAO,CAAE,CAAC;KAEvD;IAED,SAAS,kBAAkB,CAAE,YAAY,EAAG;QAExC,MAAM,sBAAsB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAE,AAAC;QAE9D,OAAO,QAAQ,IAAI,YAAY,CAAC,OAAO,GAAG,CAAC,IAAI,UAAU,CAAC,GAAG,CAAE,sCAAsC,CAAE,KAAK,IAAI,IAAI,sBAAsB,CAAC,oBAAoB,KAAK,KAAK,CAAC;KAE7K;IAED,SAAS,kBAAkB,CAAE,OAAO,EAAG;QAEnC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,AAAC;QAEhC,mDAAmD;QAEnD,IAAK,cAAc,CAAC,GAAG,CAAE,OAAO,CAAE,KAAK,KAAK,EAAG;YAE3C,cAAc,CAAC,GAAG,CAAE,OAAO,EAAE,KAAK,CAAE,CAAC;YACrC,OAAO,CAAC,MAAM,EAAE,CAAC;SAEpB;KAEJ;IAED,SAAS,gBAAgB,CAAE,OAAO,EAAE,KAAK,EAAG;QAExC,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,AAAC;QAClC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,AAAC;QAC9B,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,AAAC;QAE1B,IAAK,OAAO,CAAC,mBAAmB,KAAK,IAAI,IAAI,OAAO,CAAC,cAAc,KAAK,IAAI,IAAI,OAAO,CAAC,MAAM,KAAK,YAAY,EAAG,OAAO,KAAK,CAAC;QAE/H,IAAK,QAAQ,KAAK,cAAc;YAE5B,OAAO;YAEP,IAAK,QAAQ,KAAK,YAAY,EAAG;gBAE7B,IAAK,QAAQ,KAAK,KAAK;oBAEnB,gEAAgE;oBAEhE,IAAK,UAAU,CAAC,GAAG,CAAE,UAAU,CAAE,KAAK,IAAI,IAAI,MAAM,KAAK,UAAU,EAAG;wBAElE,OAAO,CAAC,MAAM,GAAG,YAAY,CAAC;wBAE9B,oEAAoE;wBAEpE,OAAO,CAAC,SAAS,GAAG,YAAY,CAAC;wBACjC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;qBAEnC,MAEG,6BAA6B;oBAE7B,KAAK,GAAG,UAAU,CAAC,YAAY,CAAE,KAAK,CAAE,CAAC;uBAM7C,0FAA0F;gBAE1F,IAAK,MAAM,KAAK,UAAU,IAAI,IAAI,KAAK,gBAAgB,EAEnD,OAAO,CAAC,IAAI,CAAE,yFAAyF,CAAE,CAAC;aAMrH,MAEG,OAAO,CAAC,KAAK,CAAE,oDAAoD,EAAE,QAAQ,CAAE,CAAC;SAIvF;QAED,OAAO,KAAK,CAAC;KAEhB;IAED,EAAE;IAEF,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;IAC/C,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IAE3C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACjC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IAC3C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACjC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACrC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACrC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IAC3C,IAAI,CAAC,wBAAwB,GAAG,wBAAwB,CAAC;IACzD,IAAI,CAAC,6BAA6B,GAAG,6BAA6B,CAAC;IACnE,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;IACrD,IAAI,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;IACvD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;CAEhD;AAED,SAAS,UAAU,CAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAG;IAEhD,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,AAAC;IAEvC,SAAS,OAAO,CAAE,CAAC,EAAE,QAAQ,GAAG,IAAI,EAAG;QAEnC,IAAI,SAAS,AAAC;QAEd,IAAK,CAAC,KAAK,gBAAgB,EAAG,OAAO,IAAI,CAAC;QAC1C,IAAK,CAAC,KAAK,qBAAqB,EAAG,OAAO,KAAK,CAAC;QAChD,IAAK,CAAC,KAAK,qBAAqB,EAAG,OAAO,KAAK,CAAC;QAEhD,IAAK,CAAC,KAAK,QAAQ,EAAG,OAAO,IAAI,CAAC;QAClC,IAAK,CAAC,KAAK,SAAS,EAAG,OAAO,IAAI,CAAC;QACnC,IAAK,CAAC,KAAK,iBAAiB,EAAG,OAAO,IAAI,CAAC;QAC3C,IAAK,CAAC,KAAK,OAAO,EAAG,OAAO,IAAI,CAAC;QACjC,IAAK,CAAC,KAAK,eAAe,EAAG,OAAO,IAAI,CAAC;QACzC,IAAK,CAAC,KAAK,SAAS,EAAG,OAAO,IAAI,CAAC;QAEnC,IAAK,CAAC,KAAK,aAAa,EAAG;YAEvB,IAAK,QAAQ,EAAG,OAAO,IAAI,CAAC;YAE5B,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,wBAAwB,CAAE,CAAC;YAEvD,IAAK,SAAS,KAAK,IAAI,EAEnB,OAAO,SAAS,CAAC,cAAc,CAAC;iBAIhC,OAAO,IAAI,CAAC;SAInB;QAED,IAAK,CAAC,KAAK,WAAW,EAAG,OAAO,IAAI,CAAC;QACrC,IAAK,CAAC,KAAK,UAAU,EAAG,OAAO,IAAI,CAAC;QACpC,IAAK,CAAC,KAAK,eAAe,EAAG,OAAO,IAAI,CAAC;QACzC,IAAK,CAAC,KAAK,oBAAoB,EAAG,OAAO,IAAI,CAAC;QAC9C,IAAK,CAAC,KAAK,WAAW,EAAG,OAAO,IAAI,CAAC;QACrC,IAAK,CAAC,KAAK,kBAAkB,EAAG,OAAO,KAAK,CAAC;QAC7C,IAAK,CAAC,KAAK,SAAS,EAAG,OAAO,IAAI,CAAC;QAEnC,IAAK,CAAC,KAAK,SAAS,EAAG;YAEnB,OAAO,CAAC,IAAI,CAAE,oIAAoI,CAAE,CAAC;YACrJ,OAAO,IAAI,CAAC;SAEf;QAED,wBAAwB;QAExB,IAAK,CAAC,KAAK,YAAY,EAAG;YAEtB,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;YAEzC,IAAK,SAAS,KAAK,IAAI,EAEnB,OAAO,SAAS,CAAC,cAAc,CAAC;iBAIhC,OAAO,IAAI,CAAC;SAInB;QAED,kBAAkB;QAElB,IAAK,CAAC,KAAK,gBAAgB,EAAG,OAAO,KAAK,CAAC;QAC3C,IAAK,CAAC,KAAK,QAAQ,EAAG,OAAO,KAAK,CAAC;QACnC,IAAK,CAAC,KAAK,eAAe,EAAG,OAAO,KAAK,CAAC;QAC1C,IAAK,CAAC,KAAK,iBAAiB,EAAG,OAAO,KAAK,CAAC;QAE5C,OAAO;QAEP,IAAK,CAAC,KAAK,oBAAoB,IAAI,CAAC,KAAK,qBAAqB,IAAI,CAAC,KAAK,qBAAqB,IAAI,CAAC,KAAK,qBAAqB;YAExH,IAAK,QAAQ,KAAK,YAAY,EAAG;gBAE7B,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,oCAAoC,CAAE,CAAC;gBAEnE,IAAK,SAAS,KAAK,IAAI,EAAG;oBAEtB,IAAK,CAAC,KAAK,oBAAoB,EAAG,OAAO,SAAS,CAAC,6BAA6B,CAAC;oBACjF,IAAK,CAAC,KAAK,qBAAqB,EAAG,OAAO,SAAS,CAAC,mCAAmC,CAAC;oBACxF,IAAK,CAAC,KAAK,qBAAqB,EAAG,OAAO,SAAS,CAAC,mCAAmC,CAAC;oBACxF,IAAK,CAAC,KAAK,qBAAqB,EAAG,OAAO,SAAS,CAAC,mCAAmC,CAAC;iBAE3F,MAEG,OAAO,IAAI,CAAC;aAInB,MAAM;gBAEH,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,+BAA+B,CAAE,CAAC;gBAE9D,IAAK,SAAS,KAAK,IAAI,EAAG;oBAEtB,IAAK,CAAC,KAAK,oBAAoB,EAAG,OAAO,SAAS,CAAC,4BAA4B,CAAC;oBAChF,IAAK,CAAC,KAAK,qBAAqB,EAAG,OAAO,SAAS,CAAC,6BAA6B,CAAC;oBAClF,IAAK,CAAC,KAAK,qBAAqB,EAAG,OAAO,SAAS,CAAC,6BAA6B,CAAC;oBAClF,IAAK,CAAC,KAAK,qBAAqB,EAAG,OAAO,SAAS,CAAC,6BAA6B,CAAC;iBAErF,MAEG,OAAO,IAAI,CAAC;aAInB;SAEJ;QAED,QAAQ;QAER,IAAK,CAAC,KAAK,uBAAuB,IAAI,CAAC,KAAK,uBAAuB,IAAI,CAAC,KAAK,wBAAwB,IAAI,CAAC,KAAK,wBAAwB,EAAG;YAEtI,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,gCAAgC,CAAE,CAAC;YAE/D,IAAK,SAAS,KAAK,IAAI,EAAG;gBAEtB,IAAK,CAAC,KAAK,uBAAuB,EAAG,OAAO,SAAS,CAAC,+BAA+B,CAAC;gBACtF,IAAK,CAAC,KAAK,uBAAuB,EAAG,OAAO,SAAS,CAAC,+BAA+B,CAAC;gBACtF,IAAK,CAAC,KAAK,wBAAwB,EAAG,OAAO,SAAS,CAAC,gCAAgC,CAAC;gBACxF,IAAK,CAAC,KAAK,wBAAwB,EAAG,OAAO,SAAS,CAAC,gCAAgC,CAAC;aAE3F,MAEG,OAAO,IAAI,CAAC;SAInB;QAED,OAAO;QAEP,IAAK,CAAC,KAAK,eAAe,EAAG;YAEzB,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,+BAA+B,CAAE,CAAC;YAE9D,IAAK,SAAS,KAAK,IAAI,EAEnB,OAAO,SAAS,CAAC,yBAAyB,CAAC;iBAI3C,OAAO,IAAI,CAAC;SAInB;QAED,OAAO;QAEP,IAAK,CAAC,KAAK,eAAe,IAAI,CAAC,KAAK,oBAAoB,EAAG;YAEvD,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,8BAA8B,CAAE,CAAC;YAE7D,IAAK,SAAS,KAAK,IAAI,EAAG;gBAEtB,IAAK,CAAC,KAAK,eAAe,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,qBAAqB,GAAG,SAAS,CAAC,oBAAoB,CAAC;gBACrI,IAAK,CAAC,KAAK,oBAAoB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,gCAAgC,GAAG,SAAS,CAAC,yBAAyB,CAAC;aAE7J,MAEG,OAAO,IAAI,CAAC;SAInB;QAED,OAAO;QAEP,IAAK,CAAC,KAAK,oBAAoB,IAAI,CAAC,KAAK,oBAAoB,IAAI,CAAC,KAAK,oBAAoB,IACvF,CAAC,KAAK,oBAAoB,IAAI,CAAC,KAAK,oBAAoB,IAAI,CAAC,KAAK,oBAAoB,IACtF,CAAC,KAAK,oBAAoB,IAAI,CAAC,KAAK,oBAAoB,IAAI,CAAC,KAAK,qBAAqB,IACvF,CAAC,KAAK,qBAAqB,IAAI,CAAC,KAAK,qBAAqB,IAAI,CAAC,KAAK,sBAAsB,IAC1F,CAAC,KAAK,sBAAsB,IAAI,CAAC,KAAK,sBAAsB,EAAG;YAE/D,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,+BAA+B,CAAE,CAAC;YAE9D,IAAK,SAAS,KAAK,IAAI,EAAG;gBAEtB,IAAK,CAAC,KAAK,oBAAoB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,oCAAoC,GAAG,SAAS,CAAC,4BAA4B,CAAC;gBACjK,IAAK,CAAC,KAAK,oBAAoB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,oCAAoC,GAAG,SAAS,CAAC,4BAA4B,CAAC;gBACjK,IAAK,CAAC,KAAK,oBAAoB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,oCAAoC,GAAG,SAAS,CAAC,4BAA4B,CAAC;gBACjK,IAAK,CAAC,KAAK,oBAAoB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,oCAAoC,GAAG,SAAS,CAAC,4BAA4B,CAAC;gBACjK,IAAK,CAAC,KAAK,oBAAoB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,oCAAoC,GAAG,SAAS,CAAC,4BAA4B,CAAC;gBACjK,IAAK,CAAC,KAAK,oBAAoB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,oCAAoC,GAAG,SAAS,CAAC,4BAA4B,CAAC;gBACjK,IAAK,CAAC,KAAK,oBAAoB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,oCAAoC,GAAG,SAAS,CAAC,4BAA4B,CAAC;gBACjK,IAAK,CAAC,KAAK,oBAAoB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,oCAAoC,GAAG,SAAS,CAAC,4BAA4B,CAAC;gBACjK,IAAK,CAAC,KAAK,qBAAqB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,qCAAqC,GAAG,SAAS,CAAC,6BAA6B,CAAC;gBACpK,IAAK,CAAC,KAAK,qBAAqB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,qCAAqC,GAAG,SAAS,CAAC,6BAA6B,CAAC;gBACpK,IAAK,CAAC,KAAK,qBAAqB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,qCAAqC,GAAG,SAAS,CAAC,6BAA6B,CAAC;gBACpK,IAAK,CAAC,KAAK,sBAAsB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,sCAAsC,GAAG,SAAS,CAAC,8BAA8B,CAAC;gBACvK,IAAK,CAAC,KAAK,sBAAsB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,sCAAsC,GAAG,SAAS,CAAC,8BAA8B,CAAC;gBACvK,IAAK,CAAC,KAAK,sBAAsB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,sCAAsC,GAAG,SAAS,CAAC,8BAA8B,CAAC;aAE1K,MAEG,OAAO,IAAI,CAAC;SAInB;QAED,OAAO;QAEP,IAAK,CAAC,KAAK,gBAAgB,EAAG;YAE1B,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,8BAA8B,CAAE,CAAC;YAE7D,IAAK,SAAS,KAAK,IAAI,EAAG;gBAEtB,IAAK,CAAC,KAAK,gBAAgB,EAAG,OAAO,AAAE,QAAQ,KAAK,YAAY,GAAK,SAAS,CAAC,oCAAoC,GAAG,SAAS,CAAC,8BAA8B,CAAC;aAElK,MAEG,OAAO,IAAI,CAAC;SAInB;QAED,EAAE;QAEF,IAAK,CAAC,KAAK,kBAAkB,EAAG;YAE5B,IAAK,QAAQ,EAAG,OAAO,KAAK,CAAC;YAE7B,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,qBAAqB,CAAE,CAAC;YAEpD,IAAK,SAAS,KAAK,IAAI,EAEnB,OAAO,SAAS,CAAC,uBAAuB,CAAC;iBAIzC,OAAO,IAAI,CAAC;SAInB;KAEJ;IAED,OAAO;QAAE,OAAO,EAAE,OAAO;KAAE,CAAC;CAE/B;AAED,MAAM,WAAW,SAAS,iBAAiB;IAEvC,YAAa,KAAK,GAAG,EAAE,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KAExB;CAEJ;AAED,WAAW,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;AAE3C,MAAM,KAAK,SAAS,QAAQ;IAExB,aAAc;QAEV,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;KAEvB;CAEJ;AAED,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;AAE/B,MAAM,UAAU,GAAG;IAAE,IAAI,EAAE,MAAM;CAAE,AAAC;AAEpC,MAAM,eAAe;IAEjB,aAAc;QAEV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;KAErB;IAED,YAAY,GAAG;QAEX,IAAK,IAAI,CAAC,KAAK,KAAK,IAAI,EAAG;YAEvB,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC;YACpC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;YAE3B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG;gBAAE,QAAQ,EAAE,KAAK;aAAE,CAAC;SAE/C;QAED,OAAO,IAAI,CAAC,KAAK,CAAC;KAErB;IAED,iBAAiB,GAAG;QAEhB,IAAK,IAAI,CAAC,UAAU,KAAK,IAAI,EAAG;YAE5B,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,EAAE,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,gBAAgB,GAAG,KAAK,CAAC;YACzC,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC1C,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC;YAC/C,IAAI,CAAC,UAAU,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,eAAe,GAAG,IAAI,OAAO,EAAE,CAAC;SAEnD;QAED,OAAO,IAAI,CAAC,UAAU,CAAC;KAE1B;IAED,YAAY,GAAG;QAEX,IAAK,IAAI,CAAC,KAAK,KAAK,IAAI,EAAG;YAEvB,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC;YACpC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,KAAK,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC;YAC1C,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,KAAK,CAAC;YACtC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,OAAO,EAAE,CAAC;SAE9C;QAED,OAAO,IAAI,CAAC,KAAK,CAAC;KAErB;IAED,aAAa,CAAE,KAAK,EAAG;QAEnB,IAAK,IAAI,CAAC,UAAU,KAAK,IAAI,EAEzB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;QAI3C,IAAK,IAAI,CAAC,KAAK,KAAK,IAAI,EAEpB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;QAItC,IAAK,IAAI,CAAC,KAAK,KAAK,IAAI,EAEpB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;QAItC,OAAO,IAAI,CAAC;KAEf;IAED,UAAU,CAAE,WAAW,EAAG;QAEtB,IAAI,CAAC,aAAa,CAAE;YAAE,IAAI,EAAE,cAAc;YAAE,IAAI,EAAE,WAAW;SAAE,CAAE,CAAC;QAElE,IAAK,IAAI,CAAC,UAAU,KAAK,IAAI,EAEzB,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC;QAIpC,IAAK,IAAI,CAAC,KAAK,KAAK,IAAI,EAEpB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;QAI/B,IAAK,IAAI,CAAC,KAAK,KAAK,IAAI,EAEpB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;QAI/B,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,WAAW,EAAE,KAAK,EAAE,cAAc,EAAG;QAEzC,IAAI,SAAS,GAAG,IAAI,AAAC;QACrB,IAAI,QAAQ,GAAG,IAAI,AAAC;QACpB,IAAI,QAAQ,GAAG,IAAI,AAAC;QAEpB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,AAAC;QAClC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,AAAC;QACxB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,AAAC;QAExB,IAAK,WAAW,IAAI,KAAK,CAAC,OAAO,CAAC,eAAe,KAAK,iBAAiB,EAAG;YAEtE,IAAK,SAAS,KAAK,IAAI,EAAG;gBAEtB,SAAS,GAAG,KAAK,CAAC,OAAO,CAAE,WAAW,CAAC,cAAc,EAAE,cAAc,CAAE,CAAC;gBAExE,IAAK,SAAS,KAAK,IAAI,EAAG;oBAEtB,SAAS,CAAC,MAAM,CAAC,SAAS,CAAE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAE,CAAC;oBACzD,SAAS,CAAC,MAAM,CAAC,SAAS,CAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,KAAK,CAAE,CAAC;oBAEtF,IAAK,SAAS,CAAC,cAAc,EAAG;wBAE5B,SAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBACnC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAE,SAAS,CAAC,cAAc,CAAE,CAAC;qBAE7D,MAEG,SAAS,CAAC,iBAAiB,GAAG,KAAK,CAAC;oBAIxC,IAAK,SAAS,CAAC,eAAe,EAAG;wBAE7B,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC;wBACpC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAE,SAAS,CAAC,eAAe,CAAE,CAAC;qBAE/D,MAEG,SAAS,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBAIzC,IAAI,CAAC,aAAa,CAAE,UAAU,CAAE,CAAC;iBAEpC;aAEJ;YAED,IAAK,IAAI,IAAI,WAAW,CAAC,IAAI,EAAG;gBAE5B,QAAQ,GAAG,IAAI,CAAC;gBAEhB,KAAM,MAAM,UAAU,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,CAAG;oBAElD,kDAAkD;oBAClD,MAAM,SAAS,GAAG,KAAK,CAAC,YAAY,CAAE,UAAU,EAAE,cAAc,CAAE,AAAC;oBAEnE,IAAK,IAAI,CAAC,MAAM,CAAE,UAAU,CAAC,SAAS,CAAE,KAAK,SAAS,EAAG;wBAErD,gFAAgF;wBAChF,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,AAAC;wBAC1B,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC;wBAC/B,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;wBACtB,IAAI,CAAC,MAAM,CAAE,UAAU,CAAC,SAAS,CAAE,GAAG,KAAK,CAAC;wBAC5C,KAAK;wBACL,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;qBAErB;oBAED,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAE,UAAU,CAAC,SAAS,CAAE,AAAC;oBAElD,IAAK,SAAS,KAAK,IAAI,EAAG;wBAEtB,KAAK,CAAC,MAAM,CAAC,SAAS,CAAE,SAAS,CAAC,SAAS,CAAC,MAAM,CAAE,CAAC;wBACrD,KAAK,CAAC,MAAM,CAAC,SAAS,CAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAE,CAAC;wBACtE,KAAK,CAAC,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC;qBAExC;oBAED,KAAK,CAAC,OAAO,GAAG,SAAS,KAAK,IAAI,CAAC;iBAEtC;gBAED,gBAAgB;gBAEhB,eAAe;gBACf,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAE,kBAAkB,CAAE,AAAC;gBACnD,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAE,WAAW,CAAE,AAAC;gBAC5C,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAE,QAAQ,CAAC,QAAQ,CAAE,AAAC;gBAEnE,MAAM,eAAe,GAAG,IAAI,AAAC;gBAC7B,MAAM,SAAS,GAAG,KAAK,AAAC;gBAExB,IAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,QAAQ,GAAG,eAAe,GAAG,SAAS,EAAG;oBAEtE,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACjC,IAAI,CAAC,aAAa,CAAE;wBAChB,IAAI,EAAE,UAAU;wBAChB,UAAU,EAAE,WAAW,CAAC,UAAU;wBAClC,MAAM,EAAE,IAAI;qBACf,CAAE,CAAC;iBAEP,MAAM,IAAK,CAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,QAAQ,IAAI,eAAe,GAAG,SAAS,EAAG;oBAEhF,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAChC,IAAI,CAAC,aAAa,CAAE;wBAChB,IAAI,EAAE,YAAY;wBAClB,UAAU,EAAE,WAAW,CAAC,UAAU;wBAClC,MAAM,EAAE,IAAI;qBACf,CAAE,CAAC;iBAEP;aAEJ,MAEG,IAAK,IAAI,KAAK,IAAI,IAAI,WAAW,CAAC,SAAS,EAAG;gBAE1C,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAE,WAAW,CAAC,SAAS,EAAE,cAAc,CAAE,CAAC;gBAElE,IAAK,QAAQ,KAAK,IAAI,EAAG;oBAErB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAE,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAE,CAAC;oBACnD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAE,CAAC;oBAElE,IAAK,QAAQ,CAAC,cAAc,EAAG;wBAE3B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAE,QAAQ,CAAC,cAAc,CAAE,CAAC;qBAEvD,MAEG,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;oBAInC,IAAK,QAAQ,CAAC,eAAe,EAAG;wBAE5B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;wBAC/B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,QAAQ,CAAC,eAAe,CAAE,CAAC;qBAEzD,MAEG,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;iBAIvC;aAEJ;SAIR;QAED,IAAK,SAAS,KAAK,IAAI,EAEnB,SAAS,CAAC,OAAO,GAAK,SAAS,KAAK,IAAI,AAAE,CAAC;QAI/C,IAAK,IAAI,KAAK,IAAI,EAEd,IAAI,CAAC,OAAO,GAAK,QAAQ,KAAK,IAAI,AAAE,CAAC;QAIzC,IAAK,IAAI,KAAK,IAAI,EAEd,IAAI,CAAC,OAAO,GAAK,QAAQ,KAAK,IAAI,AAAE,CAAC;QAIzC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,YAAY,SAAS,OAAO;IAE9B,YAAa,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,CAAG;QAEhG,MAAM,GAAG,MAAM,KAAK,SAAS,GAAG,MAAM,GAAG,WAAW,CAAC;QAErD,IAAK,MAAM,KAAK,WAAW,IAAI,MAAM,KAAK,kBAAkB,EAExD,MAAM,IAAI,KAAK,CAAE,kFAAkF,CAAE,CAAC;QAI1G,IAAK,IAAI,KAAK,SAAS,IAAI,MAAM,KAAK,WAAW,EAAG,IAAI,GAAG,iBAAiB,CAAC;QAC7E,IAAK,IAAI,KAAK,SAAS,IAAI,MAAM,KAAK,kBAAkB,EAAG,IAAI,GAAG,kBAAkB,CAAC;QAErF,KAAK,CAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAE,CAAC;QAErF,IAAI,CAAC,KAAK,GAAG;YAAE,KAAK,EAAE,KAAK;YAAE,MAAM,EAAE,MAAM;SAAE,CAAC;QAE9C,IAAI,CAAC,SAAS,GAAG,SAAS,KAAK,SAAS,GAAG,SAAS,GAAG,aAAa,CAAC;QACrE,IAAI,CAAC,SAAS,GAAG,SAAS,KAAK,SAAS,GAAG,SAAS,GAAG,aAAa,CAAC;QAErE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;KAEhC;CAGJ;AAED,YAAY,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC;AAE7C,MAAM,YAAY,SAAS,eAAe;IAEtC,YAAa,QAAQ,EAAE,EAAE,CAAG;QAExB,KAAK,EAAE,CAAC;QAER,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,IAAI,OAAO,GAAG,IAAI,AAAC;QACnB,IAAI,sBAAsB,GAAG,CAAG,AAAC;QAEjC,IAAI,cAAc,GAAG,IAAI,AAAC;QAC1B,IAAI,kBAAkB,GAAG,aAAa,AAAC;QAEvC,IAAI,IAAI,GAAG,IAAI,AAAC;QAChB,IAAI,SAAS,GAAG,IAAI,AAAC;QACrB,IAAI,WAAW,GAAG,IAAI,AAAC;QACvB,IAAI,WAAW,GAAG,IAAI,AAAC;QACvB,IAAI,OAAO,GAAG,IAAI,AAAC;QACnB,MAAM,UAAU,GAAG,EAAE,CAAC,oBAAoB,EAAE,AAAC;QAC7C,IAAI,mBAAmB,GAAG,IAAI,AAAC;QAC/B,IAAI,eAAe,GAAG,IAAI,AAAC;QAE3B,MAAM,WAAW,GAAG,EAAE,AAAC;QACvB,MAAM,eAAe,GAAG,IAAI,GAAG,EAAE,AAAC;QAElC,EAAE;QAEF,MAAM,QAAO,GAAG,IAAI,iBAAiB,EAAE,AAAC;QACxC,QAAO,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC3B,QAAO,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;QAEjC,MAAM,QAAO,GAAG,IAAI,iBAAiB,EAAE,AAAC;QACxC,QAAO,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC3B,QAAO,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;QAEjC,MAAM,QAAO,GAAG;YAAE,QAAO;YAAE,QAAO;SAAE,AAAC;QAErC,MAAM,QAAQ,GAAG,IAAI,WAAW,EAAE,AAAC;QACnC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAC5B,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAE5B,IAAI,iBAAiB,GAAG,IAAI,AAAC;QAC7B,IAAI,gBAAgB,GAAG,IAAI,AAAC;QAE5B,EAAE;QAEF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,aAAa,GAAG,SAAW,KAAK,EAAG;YAEpC,IAAI,UAAU,GAAG,WAAW,CAAE,KAAK,CAAE,AAAC;YAEtC,IAAK,UAAU,KAAK,SAAS,EAAG;gBAE5B,UAAU,GAAG,IAAI,eAAe,EAAE,CAAC;gBACnC,WAAW,CAAE,KAAK,CAAE,GAAG,UAAU,CAAC;aAErC;YAED,OAAO,UAAU,CAAC,iBAAiB,EAAE,CAAC;SAEzC,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG,SAAW,KAAK,EAAG;YAExC,IAAI,UAAU,GAAG,WAAW,CAAE,KAAK,CAAE,AAAC;YAEtC,IAAK,UAAU,KAAK,SAAS,EAAG;gBAE5B,UAAU,GAAG,IAAI,eAAe,EAAE,CAAC;gBACnC,WAAW,CAAE,KAAK,CAAE,GAAG,UAAU,CAAC;aAErC;YAED,OAAO,UAAU,CAAC,YAAY,EAAE,CAAC;SAEpC,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,SAAW,KAAK,EAAG;YAE9B,IAAI,UAAU,GAAG,WAAW,CAAE,KAAK,CAAE,AAAC;YAEtC,IAAK,UAAU,KAAK,SAAS,EAAG;gBAE5B,UAAU,GAAG,IAAI,eAAe,EAAE,CAAC;gBACnC,WAAW,CAAE,KAAK,CAAE,GAAG,UAAU,CAAC;aAErC;YAED,OAAO,UAAU,CAAC,YAAY,EAAE,CAAC;SAEpC,CAAC;QAEF,EAAE;QAEF,SAAS,cAAc,CAAE,KAAK,EAAG;YAE7B,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAE,KAAK,CAAC,WAAW,CAAE,AAAC;YAE5D,IAAK,UAAU,EAEX,UAAU,CAAC,aAAa,CAAE;gBAAE,IAAI,EAAE,KAAK,CAAC,IAAI;gBAAE,IAAI,EAAE,KAAK,CAAC,WAAW;aAAE,CAAE,CAAC;SAIjF;QAED,SAAS,YAAY,GAAG;YAEpB,eAAe,CAAC,OAAO,CAAE,SAAW,UAAU,EAAE,WAAW,EAAG;gBAE1D,UAAU,CAAC,UAAU,CAAE,WAAW,CAAE,CAAC;aAExC,CAAE,CAAC;YAEJ,eAAe,CAAC,KAAK,EAAE,CAAC;YAExB,iBAAiB,GAAG,IAAI,CAAC;YACzB,gBAAgB,GAAG,IAAI,CAAC;YAExB,sCAAsC;YAEtC,QAAQ,CAAC,eAAe,CAAE,mBAAmB,CAAE,CAAC;YAEhD,WAAW,GAAG,IAAI,CAAC;YACnB,WAAW,GAAG,IAAI,CAAC;YACnB,SAAS,GAAG,IAAI,CAAC;YACjB,OAAO,GAAG,IAAI,CAAC;YACf,eAAe,GAAG,IAAI,CAAC;YAEvB,EAAE;YAEF,SAAS,CAAC,IAAI,EAAE,CAAC;YAEjB,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC;YAE3B,KAAK,CAAC,aAAa,CAAE;gBAAE,IAAI,EAAE,YAAY;aAAE,CAAE,CAAC;SAEjD;QAED,IAAI,CAAC,yBAAyB,GAAG,SAAW,KAAK,EAAG;YAEhD,sBAAsB,GAAG,KAAK,CAAC;YAE/B,IAAK,KAAK,CAAC,YAAY,KAAK,IAAI,EAE5B,OAAO,CAAC,IAAI,CAAE,uEAAuE,CAAE,CAAC;SAI/F,CAAC;QAEF,IAAI,CAAC,qBAAqB,GAAG,SAAW,KAAK,EAAG;YAE5C,kBAAkB,GAAG,KAAK,CAAC;YAE3B,IAAK,KAAK,CAAC,YAAY,KAAK,IAAI,EAE5B,OAAO,CAAC,IAAI,CAAE,0EAA0E,CAAE,CAAC;SAIlG,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG,WAAY;YAEjC,OAAO,cAAc,CAAC;SAEzB,CAAC;QAEF,IAAI,CAAC,YAAY,GAAG,WAAY;YAE5B,OAAO,WAAW,KAAK,IAAI,GAAG,WAAW,GAAG,WAAW,CAAC;SAE3D,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,WAAY;YAE1B,OAAO,SAAS,CAAC;SAEpB,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,WAAY;YAExB,OAAO,OAAO,CAAC;SAElB,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,WAAY;YAE1B,OAAO,OAAO,CAAC;SAElB,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,eAAiB,KAAK,EAAG;YAEvC,OAAO,GAAG,KAAK,CAAC;YAEhB,IAAK,OAAO,KAAK,IAAI,EAAG;gBAEpB,mBAAmB,GAAG,QAAQ,CAAC,eAAe,EAAE,CAAC;gBAEjD,OAAO,CAAC,gBAAgB,CAAE,QAAQ,EAAE,cAAc,CAAE,CAAC;gBACrD,OAAO,CAAC,gBAAgB,CAAE,aAAa,EAAE,cAAc,CAAE,CAAC;gBAC1D,OAAO,CAAC,gBAAgB,CAAE,WAAW,EAAE,cAAc,CAAE,CAAC;gBACxD,OAAO,CAAC,gBAAgB,CAAE,SAAS,EAAE,cAAc,CAAE,CAAC;gBACtD,OAAO,CAAC,gBAAgB,CAAE,cAAc,EAAE,cAAc,CAAE,CAAC;gBAC3D,OAAO,CAAC,gBAAgB,CAAE,YAAY,EAAE,cAAc,CAAE,CAAC;gBACzD,OAAO,CAAC,gBAAgB,CAAE,KAAK,EAAE,YAAY,CAAE,CAAC;gBAChD,OAAO,CAAC,gBAAgB,CAAE,oBAAoB,EAAE,oBAAoB,CAAE,CAAC;gBAEvE,IAAK,UAAU,CAAC,YAAY,KAAK,IAAI,EAEjC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;gBAIhC,IAAK,AAAE,OAAO,CAAC,WAAW,CAAC,MAAM,KAAK,SAAS,IAAQ,QAAQ,CAAC,YAAY,CAAC,QAAQ,KAAK,KAAK,AAAE,EAAG;oBAEhG,MAAM,SAAS,GAAG;wBACd,SAAS,EAAE,AAAE,OAAO,CAAC,WAAW,CAAC,MAAM,KAAK,SAAS,GAAK,UAAU,CAAC,SAAS,GAAG,IAAI;wBACrF,KAAK,EAAE,UAAU,CAAC,KAAK;wBACvB,KAAK,EAAE,UAAU,CAAC,KAAK;wBACvB,OAAO,EAAE,UAAU,CAAC,OAAO;wBAC3B,sBAAsB,EAAE,sBAAsB;qBACjD,AAAC;oBAEF,WAAW,GAAG,IAAI,YAAY,CAAE,OAAO,EAAE,EAAE,EAAE,SAAS,CAAE,CAAC;oBAEzD,OAAO,CAAC,iBAAiB,CAAE;wBAAE,SAAS,EAAE,WAAW;qBAAE,CAAE,CAAC;oBAExD,eAAe,GAAG,IAAI,iBAAiB,CACnC,WAAW,CAAC,gBAAgB,EAC5B,WAAW,CAAC,iBAAiB,EAC7B;wBACI,MAAM,EAAE,UAAU;wBAClB,IAAI,EAAE,gBAAgB;wBACtB,QAAQ,EAAE,QAAQ,CAAC,cAAc;qBACpC,CACJ,CAAC;iBAEL,MAAM;oBAEH,IAAI,WAAW,GAAG,IAAI,AAAC;oBACvB,IAAI,SAAS,GAAG,IAAI,AAAC;oBACrB,IAAI,aAAa,GAAG,IAAI,AAAC;oBAEzB,IAAK,UAAU,CAAC,KAAK,EAAG;wBAEpB,aAAa,GAAG,UAAU,CAAC,OAAO,GAAG,KAAK,GAAG,KAAK,CAAC;wBACnD,WAAW,GAAG,UAAU,CAAC,OAAO,GAAG,kBAAkB,GAAG,WAAW,CAAC;wBACpE,SAAS,GAAG,UAAU,CAAC,OAAO,GAAG,kBAAkB,GAAG,iBAAiB,CAAC;qBAE3E;oBAED,MAAM,mBAAmB,GAAG;wBACxB,WAAW,EAAE,AAAE,QAAQ,CAAC,cAAc,KAAK,YAAY,GAAK,KAAK,GAAG,KAAK;wBACzE,WAAW,EAAE,aAAa;wBAC1B,WAAW,EAAE,sBAAsB;qBACtC,AAAC;oBAEF,SAAS,GAAG,IAAI,cAAc,CAAE,OAAO,EAAE,EAAE,CAAE,CAAC;oBAE9C,WAAW,GAAG,SAAS,CAAC,qBAAqB,CAAE,mBAAmB,CAAE,CAAC;oBAErE,OAAO,CAAC,iBAAiB,CAAE;wBAAE,MAAM,EAAE;4BAAE,WAAW;yBAAE;qBAAE,CAAE,CAAC;oBAEzD,eAAe,GAAG,IAAI,iBAAiB,CACnC,WAAW,CAAC,YAAY,EACxB,WAAW,CAAC,aAAa,EACzB;wBACI,MAAM,EAAE,UAAU;wBAClB,IAAI,EAAE,gBAAgB;wBACtB,YAAY,EAAE,IAAI,YAAY,CAAE,WAAW,CAAC,YAAY,EAAE,WAAW,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,CAAE;wBAC/K,aAAa,EAAE,UAAU,CAAC,OAAO;wBACjC,QAAQ,EAAE,QAAQ,CAAC,cAAc;wBACjC,OAAO,EAAE,UAAU,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC;qBACxC,CAAE,CAAC;oBAER,MAAM,sBAAsB,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAE,eAAe,CAAE,AAAC;oBAC1E,sBAAsB,CAAC,mBAAmB,GAAG,WAAW,CAAC,iBAAiB,CAAC;iBAE9E;gBAED,eAAe,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC,6CAA6C;gBAEtF,4BAA4B;gBAC5B,IAAI,CAAC,YAAY,CAAE,CAAG,CAAE,CAAC;gBAEzB,cAAc,GAAG,MAAM,OAAO,CAAC,qBAAqB,CAAE,kBAAkB,CAAE,CAAC;gBAE3E,SAAS,CAAC,UAAU,CAAE,OAAO,CAAE,CAAC;gBAChC,SAAS,CAAC,KAAK,EAAE,CAAC;gBAElB,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;gBAE1B,KAAK,CAAC,aAAa,CAAE;oBAAE,IAAI,EAAE,cAAc;iBAAE,CAAE,CAAC;aAEnD;SAEJ,CAAC;QAEF,SAAS,oBAAoB,CAAE,KAAK,EAAG;YAEnC,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,AAAC;YAE1C,+CAA+C;YAE/C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,WAAW,CAAC,MAAM,EAAE,IAAC,EAAG,CAEzC,eAAe,CAAC,GAAG,CAAE,YAAY,CAAE,IAAC,CAAE,EAAE,WAAW,CAAE,IAAC,CAAE,CAAE,CAAC;YAI/D,sBAAsB;YAEtB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;gBAE9C,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAE,IAAC,CAAE,AAAC;gBACvC,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAE,WAAW,CAAE,AAAC;gBAEtD,IAAK,UAAU,EAAG;oBAEd,UAAU,CAAC,aAAa,CAAE;wBAAE,IAAI,EAAE,cAAc;wBAAE,IAAI,EAAE,WAAW;qBAAE,CAAE,CAAC;oBACxE,eAAe,CAAC,MAAM,CAAE,WAAW,CAAE,CAAC;iBAEzC;aAEJ;YAED,mBAAmB;YAEnB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;gBAE5C,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAE,IAAC,CAAE,AAAC;gBACrC,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAE,WAAW,CAAE,AAAC;gBAEtD,IAAK,UAAU,EAEX,UAAU,CAAC,aAAa,CAAE;oBAAE,IAAI,EAAE,WAAW;oBAAE,IAAI,EAAE,WAAW;iBAAE,CAAE,CAAC;aAI5E;SAEJ;QAED,EAAE;QAEF,MAAM,UAAU,GAAG,IAAI,OAAO,EAAE,AAAC;QACjC,MAAM,UAAU,GAAG,IAAI,OAAO,EAAE,AAAC;QAEjC;;;;;YAKG,CACH,SAAS,sBAAsB,CAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAG;YAExD,UAAU,CAAC,qBAAqB,CAAE,OAAO,CAAC,WAAW,CAAE,CAAC;YACxD,UAAU,CAAC,qBAAqB,CAAE,OAAO,CAAC,WAAW,CAAE,CAAC;YAExD,MAAM,GAAG,GAAG,UAAU,CAAC,UAAU,CAAE,UAAU,CAAE,AAAC;YAEhD,MAAM,KAAK,GAAG,OAAO,CAAC,gBAAgB,CAAC,QAAQ,AAAC;YAChD,MAAM,KAAK,GAAG,OAAO,CAAC,gBAAgB,CAAC,QAAQ,AAAC;YAEhD,0DAA0D;YAC1D,wDAAwD;YACxD,wCAAwC;YACxC,MAAM,IAAI,GAAG,KAAK,CAAE,EAAE,CAAE,GAAK,CAAA,KAAK,CAAE,EAAE,CAAE,GAAG,CAAC,CAAA,AAAE,AAAC;YAC/C,MAAM,GAAG,GAAG,KAAK,CAAE,EAAE,CAAE,GAAK,CAAA,KAAK,CAAE,EAAE,CAAE,GAAG,CAAC,CAAA,AAAE,AAAC;YAC9C,MAAM,MAAM,GAAG,AAAE,CAAA,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA,GAAK,KAAK,CAAE,CAAC,CAAE,AAAC;YAC/C,MAAM,SAAS,GAAG,AAAE,CAAA,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA,GAAK,KAAK,CAAE,CAAC,CAAE,AAAC;YAElD,MAAM,OAAO,GAAG,AAAE,CAAA,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA,GAAK,KAAK,CAAE,CAAC,CAAE,AAAC;YAChD,MAAM,QAAQ,GAAG,AAAE,CAAA,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA,GAAK,KAAK,CAAE,CAAC,CAAE,AAAC;YACjD,MAAM,IAAI,GAAG,IAAI,GAAG,OAAO,AAAC;YAC5B,MAAM,KAAK,GAAG,IAAI,GAAG,QAAQ,AAAC;YAE9B,sDAAsD;YACtD,qDAAqD;YACrD,MAAM,OAAO,GAAG,GAAG,GAAK,CAAA,CAAE,OAAO,GAAG,QAAQ,CAAA,AAAE,AAAC;YAC/C,MAAM,OAAO,GAAG,OAAO,GAAG,CAAE,OAAO,AAAC;YAEpC,yCAAyC;YACzC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,KAAK,CAAE,CAAC;YAClF,MAAM,CAAC,UAAU,CAAE,OAAO,CAAE,CAAC;YAC7B,MAAM,CAAC,UAAU,CAAE,OAAO,CAAE,CAAC;YAC7B,MAAM,CAAC,WAAW,CAAC,OAAO,CAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,KAAK,CAAE,CAAC;YAC/E,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC,MAAM,EAAE,CAAC;YAE9D,gEAAgE;YAChE,+EAA+E;YAC/E,yDAAyD;YACzD,MAAM,KAAK,GAAG,IAAI,GAAG,OAAO,AAAC;YAC7B,MAAM,IAAI,GAAG,GAAG,GAAG,OAAO,AAAC;YAC3B,MAAM,KAAK,GAAG,IAAI,GAAG,OAAO,AAAC;YAC7B,MAAM,MAAM,GAAG,KAAK,GAAK,CAAA,GAAG,GAAG,OAAO,CAAA,AAAE,AAAC;YACzC,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,AAAC;YACzC,MAAM,OAAO,GAAG,SAAS,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,AAAC;YAE/C,MAAM,CAAC,gBAAgB,CAAC,eAAe,CAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;SAExF;QAED,SAAS,YAAY,CAAE,MAAM,EAAE,MAAM,EAAG;YAEpC,IAAK,MAAM,KAAK,IAAI,EAEhB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,CAAE,CAAC;iBAIzC,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,MAAM,CAAE,CAAC;YAI7E,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC,MAAM,EAAE,CAAC;SAEjE;QAED,IAAI,CAAC,YAAY,GAAG,SAAW,MAAM,EAAG;YAEpC,IAAK,OAAO,KAAK,IAAI,EAAG,OAAO;YAE/B,QAAQ,CAAC,IAAI,GAAG,QAAO,CAAC,IAAI,GAAG,QAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YAC1D,QAAQ,CAAC,GAAG,GAAG,QAAO,CAAC,GAAG,GAAG,QAAO,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;YAEtD,IAAK,iBAAiB,KAAK,QAAQ,CAAC,IAAI,IAAI,gBAAgB,KAAK,QAAQ,CAAC,GAAG,EAAG;gBAE5E,6EAA6E;gBAE7E,OAAO,CAAC,iBAAiB,CAAE;oBACvB,SAAS,EAAE,QAAQ,CAAC,IAAI;oBACxB,QAAQ,EAAE,QAAQ,CAAC,GAAG;iBACzB,CAAE,CAAC;gBAEJ,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAClC,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC;aAEnC;YAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,AAAC;YAC7B,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,AAAC;YAEjC,YAAY,CAAE,QAAQ,EAAE,MAAM,CAAE,CAAC;YAEjC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,OAAO,CAAC,MAAM,EAAE,IAAC,EAAG,CAErC,YAAY,CAAE,OAAO,CAAE,IAAC,CAAE,EAAE,MAAM,CAAE,CAAC;YAIzC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAE,CAAC;YAEzF,sCAAsC;YAEtC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAE,QAAQ,CAAC,QAAQ,CAAE,CAAC;YAC1C,MAAM,CAAC,UAAU,CAAC,IAAI,CAAE,QAAQ,CAAC,UAAU,CAAE,CAAC;YAC9C,MAAM,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC;YACpC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAE,QAAQ,CAAC,MAAM,CAAE,CAAC;YACtC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAE,QAAQ,CAAC,WAAW,CAAE,CAAC;YAEhD,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;YAEjC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAE7C,QAAQ,CAAE,IAAC,CAAE,CAAC,iBAAiB,CAAE,IAAI,CAAE,CAAC;YAI5C,2DAA2D;YAE3D,IAAK,OAAO,CAAC,MAAM,KAAK,CAAC,EAErB,sBAAsB,CAAE,QAAQ,EAAE,QAAO,EAAE,QAAO,CAAE,CAAC;iBAIrD,kCAAkC;YAElC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAE,QAAO,CAAC,gBAAgB,CAAE,CAAC;SAIlE,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,WAAY;YAEzB,OAAO,QAAQ,CAAC;SAEnB,CAAC;QAEF,IAAI,CAAC,YAAY,GAAG,WAAY;YAE5B,IAAK,WAAW,KAAK,IAAI,EAErB,OAAO,WAAW,CAAC,cAAc,CAAC;YAItC,IAAK,WAAW,KAAK,IAAI,EAErB,OAAO,WAAW,CAAC,cAAc,CAAC;YAItC,OAAO,SAAS,CAAC;SAEpB,CAAC;QAEF,IAAI,CAAC,YAAY,GAAG,SAAW,SAAS,EAAG;YAEvC,qCAAqC;YACrC,+DAA+D;YAE/D,IAAK,WAAW,KAAK,IAAI,EAErB,WAAW,CAAC,cAAc,GAAG,SAAS,CAAC;YAI3C,IAAK,WAAW,KAAK,IAAI,IAAI,WAAW,CAAC,cAAc,KAAK,SAAS,EAEjE,WAAW,CAAC,cAAc,GAAG,SAAS,CAAC;SAI9C,CAAC;QAEF,iBAAiB;QAEjB,IAAI,wBAAwB,GAAG,IAAI,AAAC;QAEpC,SAAS,gBAAgB,CAAE,IAAI,EAAE,KAAK,EAAG;YAErC,IAAI,GAAG,KAAK,CAAC,aAAa,CAAE,cAAc,CAAE,CAAC;YAC7C,OAAO,GAAG,KAAK,CAAC;YAEhB,IAAK,IAAI,KAAK,IAAI,EAAG;gBAEjB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;gBAEzB,IAAK,WAAW,KAAK,IAAI,EAAG;oBAExB,QAAQ,CAAC,0BAA0B,CAAE,eAAe,EAAE,WAAW,CAAC,WAAW,CAAE,CAAC;oBAChF,QAAQ,CAAC,eAAe,CAAE,eAAe,CAAE,CAAC;iBAE/C;gBAED,IAAI,mBAAmB,GAAG,KAAK,AAAC;gBAEhC,4DAA4D;gBAE5D,IAAK,KAAK,CAAC,MAAM,KAAK,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAG;oBAE5C,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;oBAC5B,mBAAmB,GAAG,IAAI,CAAC;iBAE9B;gBAED,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,KAAK,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;oBAEtC,MAAM,IAAI,GAAG,KAAK,CAAE,IAAC,CAAE,AAAC;oBAExB,IAAI,QAAQ,GAAG,IAAI,AAAC;oBAEpB,IAAK,WAAW,KAAK,IAAI,EAErB,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAE,IAAI,CAAE,CAAC;yBAExC;wBAEH,MAAM,UAAU,GAAG,SAAS,CAAC,eAAe,CAAE,WAAW,EAAE,IAAI,CAAE,AAAC;wBAClE,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;wBAE/B,+EAA+E;wBAC/E,IAAK,IAAC,KAAK,CAAC,EAAG;4BAEX,QAAQ,CAAC,uBAAuB,CAC5B,eAAe,EACf,UAAU,CAAC,YAAY,EACvB,WAAW,CAAC,iBAAiB,GAAG,SAAS,GAAG,UAAU,CAAC,mBAAmB,CAAE,CAAC;4BAEjF,QAAQ,CAAC,eAAe,CAAE,eAAe,CAAE,CAAC;yBAE/C;qBAEJ;oBAED,MAAM,MAAM,GAAG,QAAO,CAAE,IAAC,CAAE,AAAC;oBAE5B,MAAM,CAAC,MAAM,CAAC,SAAS,CAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAE,CAAC;oBACjD,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC;oBAC3D,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAE,CAAC;oBAE/E,IAAK,IAAC,KAAK,CAAC,EAER,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,CAAE,CAAC;oBAI1C,IAAK,mBAAmB,KAAK,IAAI,EAE7B,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;iBAIvC;aAEJ;YAED,EAAE;YAEF,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,AAAC;YAE1C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,WAAW,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;gBAE5C,MAAM,UAAU,GAAG,WAAW,CAAE,IAAC,CAAE,AAAC;gBACpC,MAAM,WAAW,GAAG,YAAY,CAAE,IAAC,CAAE,AAAC;gBAEtC,UAAU,CAAC,MAAM,CAAE,WAAW,EAAE,KAAK,EAAE,cAAc,CAAE,CAAC;aAE3D;YAED,IAAK,wBAAwB,EAAG,wBAAwB,CAAE,IAAI,EAAE,KAAK,CAAE,CAAC;YAExE,OAAO,GAAG,IAAI,CAAC;SAElB;QAED,MAAM,SAAS,GAAG,IAAI,cAAc,EAAE,AAAC;QAEvC,SAAS,CAAC,gBAAgB,CAAE,gBAAgB,CAAE,CAAC;QAE/C,IAAI,CAAC,gBAAgB,GAAG,SAAW,QAAQ,EAAG;YAE1C,wBAAwB,GAAG,QAAQ,CAAC;SAEvC,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,WAAY,EAAE,CAAC;KAEjC;CAEJ;AAED,SAAS,cAAc,CAAE,QAAQ,EAAE,UAAU,EAAG;IAE5C,SAAS,kBAAkB,CAAE,QAAQ,EAAE,GAAG,EAAG;QAEzC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAE,GAAG,CAAC,KAAK,CAAE,CAAC;QAE1C,IAAK,GAAG,CAAC,KAAK,EAAG;YAEb,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC;YAClC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC;SAEnC,MAAM,IAAK,GAAG,CAAC,SAAS,EAErB,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;KAI/C;IAED,SAAS,uBAAuB,CAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,wBAAwB,EAAG;QAEjG,IAAK,QAAQ,CAAC,mBAAmB,EAE7B,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;aAEzC,IAAK,QAAQ,CAAC,qBAAqB,EAEtC,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;aAEzC,IAAK,QAAQ,CAAC,kBAAkB,EAAG;YAEtC,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;YAC5C,mBAAmB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;SAE7C,MAAM,IAAK,QAAQ,CAAC,mBAAmB,EAAG;YAEvC,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;YAC5C,oBAAoB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;SAE9C,MAAM,IAAK,QAAQ,CAAC,sBAAsB,EAAG;YAE1C,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;YAC5C,uBAAuB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;YAE9C,IAAK,QAAQ,CAAC,sBAAsB,EAEhC,uBAAuB,CAAE,QAAQ,EAAE,QAAQ,EAAE,wBAAwB,CAAE,CAAC;SAI/E,MAAM,IAAK,QAAQ,CAAC,oBAAoB,EAAG;YAExC,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;YAC5C,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;SAE/C,MAAM,IAAK,QAAQ,CAAC,mBAAmB,EAEpC,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;aAEzC,IAAK,QAAQ,CAAC,sBAAsB,EAAG;YAE1C,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;YAC5C,uBAAuB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;SAEjD,MAAM,IAAK,QAAQ,CAAC,oBAAoB,EAErC,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;aAEzC,IAAK,QAAQ,CAAC,mBAAmB,EAAG;YAEvC,mBAAmB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;YAE1C,IAAK,QAAQ,CAAC,oBAAoB,EAE9B,mBAAmB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;SAIjD,MAAM,IAAK,QAAQ,CAAC,gBAAgB,EAEjC,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAE,CAAC;aAE7D,IAAK,QAAQ,CAAC,gBAAgB,EAEjC,sBAAsB,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;aAE1C,IAAK,QAAQ,CAAC,gBAAgB,EAAG;YAEpC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC;YAC5C,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;SAE7C,MAAM,IAAK,QAAQ,CAAC,gBAAgB,EAEjC,QAAQ,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAC,SAAS;KAIrD;IAED,SAAS,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,EAAG;QAEjD,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;QAE1C,IAAK,QAAQ,CAAC,KAAK,EAEf,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC;QAIlD,IAAK,QAAQ,CAAC,QAAQ,EAElB,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,QAAQ,CAAE,CAAC,cAAc,CAAE,QAAQ,CAAC,iBAAiB,CAAE,CAAC;QAInG,IAAK,QAAQ,CAAC,GAAG,EAEb,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC;QAItC,IAAK,QAAQ,CAAC,QAAQ,EAElB,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAIhD,IAAK,QAAQ,CAAC,OAAO,EAAG;YAEpB,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;YAC1C,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;YAC9C,IAAK,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAG,QAAQ,CAAC,SAAS,CAAC,KAAK,IAAI,EAAG,CAAC;SAErE;QAED,IAAK,QAAQ,CAAC,eAAe,EAAG;YAE5B,QAAQ,CAAC,eAAe,CAAC,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC;YAC1D,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC;YAC9D,QAAQ,CAAC,gBAAgB,CAAC,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC;SAE/D;QAED,IAAK,QAAQ,CAAC,WAAW,EAErB,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC;QAItD,IAAK,QAAQ,CAAC,SAAS,EAAG;YAEtB,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;YAC9C,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,WAAW,CAAE,CAAC;YACxD,IAAK,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAG,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;SAEzE;QAED,IAAK,QAAQ,CAAC,WAAW,EAErB,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC;QAItD,IAAK,QAAQ,CAAC,SAAS,GAAG,CAAC,EAEvB,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;QAIlD,MAAM,MAAM,GAAG,UAAU,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC,MAAM,AAAC;QAEjD,IAAK,MAAM,EAAG;YAEV,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC;YAE/B,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,AAAE,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,qBAAqB,KAAK,KAAK,GAAK,EAAG,GAAG,CAAC,CAAC;YAEzG,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC;YACpD,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC;YAClC,QAAQ,CAAC,eAAe,CAAC,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC;SAE7D;QAED,IAAK,QAAQ,CAAC,QAAQ,EAAG;YAErB,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAE5C,iDAAiD;YACjD,MAAM,WAAW,GAAG,AAAE,QAAQ,CAAC,uBAAuB,KAAK,IAAI,GAAK,IAAI,CAAC,EAAE,GAAG,CAAC,AAAC;YAEhF,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,QAAQ,CAAC,iBAAiB,GAAG,WAAW,CAAC;SAE/E;QAED,IAAK,QAAQ,CAAC,KAAK,EAAG;YAElB,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;YACtC,QAAQ,CAAC,cAAc,CAAC,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC;SAE3D;QAED,0CAA0C;QAC1C,eAAe;QACf,kBAAkB;QAClB,yBAAyB;QACzB,gBAAgB;QAChB,cAAc;QACd,sBAAsB;QACtB,sBAAsB;QACtB,kBAAkB;QAClB,qBAAqB;QACrB,oBAAoB;QACpB,2BAA2B;QAC3B,iCAAiC;QACjC,6BAA6B;QAC7B,wBAAwB;QACxB,uBAAuB;QACvB,oBAAoB;QAEpB,IAAI,UAAU,AAAC;QAEf,IAAK,QAAQ,CAAC,GAAG,EAEb,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC;aAEvB,IAAK,QAAQ,CAAC,WAAW,EAE5B,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC;aAE/B,IAAK,QAAQ,CAAC,eAAe,EAEhC,UAAU,GAAG,QAAQ,CAAC,eAAe,CAAC;aAEnC,IAAK,QAAQ,CAAC,SAAS,EAE1B,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC;aAE7B,IAAK,QAAQ,CAAC,OAAO,EAExB,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC;aAE3B,IAAK,QAAQ,CAAC,YAAY,EAE7B,UAAU,GAAG,QAAQ,CAAC,YAAY,CAAC;aAEhC,IAAK,QAAQ,CAAC,YAAY,EAE7B,UAAU,GAAG,QAAQ,CAAC,YAAY,CAAC;aAEhC,IAAK,QAAQ,CAAC,QAAQ,EAEzB,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC;aAE5B,IAAK,QAAQ,CAAC,WAAW,EAE5B,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC;aAE/B,IAAK,QAAQ,CAAC,YAAY,EAE7B,UAAU,GAAG,QAAQ,CAAC,YAAY,CAAC;aAEhC,IAAK,QAAQ,CAAC,kBAAkB,EAEnC,UAAU,GAAG,QAAQ,CAAC,kBAAkB,CAAC;aAEtC,IAAK,QAAQ,CAAC,qBAAqB,EAEtC,UAAU,GAAG,QAAQ,CAAC,qBAAqB,CAAC;aAEzC,IAAK,QAAQ,CAAC,oBAAoB,EAErC,UAAU,GAAG,QAAQ,CAAC,oBAAoB,CAAC;aAExC,IAAK,QAAQ,CAAC,gBAAgB,EAEjC,UAAU,GAAG,QAAQ,CAAC,gBAAgB,CAAC;aAEpC,IAAK,QAAQ,CAAC,eAAe,EAEhC,UAAU,GAAG,QAAQ,CAAC,eAAe,CAAC;aAEnC,IAAK,QAAQ,CAAC,YAAY,EAE7B,UAAU,GAAG,QAAQ,CAAC,YAAY,CAAC;aAEhC,IAAK,QAAQ,CAAC,aAAa,EAE9B,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC;aAEjC,IAAK,QAAQ,CAAC,iBAAiB,EAElC,UAAU,GAAG,QAAQ,CAAC,iBAAiB,CAAC;QAI5C,IAAK,UAAU,KAAK,SAAS,EAAG;YAE5B,0BAA0B;YAC1B,IAAK,UAAU,CAAC,mBAAmB,EAE/B,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC;YAIpC,IAAK,UAAU,CAAC,gBAAgB,KAAK,IAAI,EAErC,UAAU,CAAC,YAAY,EAAE,CAAC;YAI9B,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,MAAM,CAAE,CAAC;SAExD;QAED,kDAAkD;QAClD,YAAY;QACZ,eAAe;QAEf,IAAI,WAAW,AAAC;QAEhB,IAAK,QAAQ,CAAC,KAAK,EAEf,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC;aAE1B,IAAK,QAAQ,CAAC,QAAQ,EAEzB,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAIpC,IAAK,WAAW,KAAK,SAAS,EAAG;YAE7B,0BAA0B;YAC1B,IAAK,WAAW,CAAC,mBAAmB,EAEhC,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC;YAItC,IAAK,WAAW,CAAC,gBAAgB,KAAK,IAAI,EAEtC,WAAW,CAAC,YAAY,EAAE,CAAC;YAI/B,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAE,WAAW,CAAC,MAAM,CAAE,CAAC;SAE1D;KAEJ;IAED,SAAS,mBAAmB,CAAE,QAAQ,EAAE,QAAQ,EAAG;QAE/C,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC;QAC9C,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;KAE7C;IAED,SAAS,mBAAmB,CAAE,QAAQ,EAAE,QAAQ,EAAG;QAE/C,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC5C,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC;QAChE,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;KAEzC;IAED,SAAS,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAG;QAErE,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC;QAC9C,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;QAC1C,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC;QACjD,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,GAAG,GAAG,CAAC;QAEpC,IAAK,QAAQ,CAAC,GAAG,EAEb,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC;QAItC,IAAK,QAAQ,CAAC,QAAQ,EAElB,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAIhD,IAAK,QAAQ,CAAC,SAAS,GAAG,CAAC,EAEvB,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;QAIlD,0CAA0C;QAC1C,eAAe;QACf,eAAe;QAEf,IAAI,UAAU,AAAC;QAEf,IAAK,QAAQ,CAAC,GAAG,EAEb,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC;aAEvB,IAAK,QAAQ,CAAC,QAAQ,EAEzB,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAInC,IAAK,UAAU,KAAK,SAAS,EAAG;YAE5B,IAAK,UAAU,CAAC,gBAAgB,KAAK,IAAI,EAErC,UAAU,CAAC,YAAY,EAAE,CAAC;YAI9B,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,MAAM,CAAE,CAAC;SAExD;KAEJ;IAED,SAAS,sBAAsB,CAAE,QAAQ,EAAE,QAAQ,EAAG;QAElD,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC;QAC9C,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;QAC1C,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAE5C,IAAK,QAAQ,CAAC,GAAG,EAEb,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC;QAItC,IAAK,QAAQ,CAAC,QAAQ,EAElB,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAIhD,IAAK,QAAQ,CAAC,SAAS,GAAG,CAAC,EAEvB,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;QAIlD,0CAA0C;QAC1C,eAAe;QACf,eAAe;QAEf,IAAI,UAAU,AAAC;QAEf,IAAK,QAAQ,CAAC,GAAG,EAEb,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC;aAEvB,IAAK,QAAQ,CAAC,QAAQ,EAEzB,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAInC,IAAK,UAAU,KAAK,SAAS,EAAG;YAE5B,IAAK,UAAU,CAAC,gBAAgB,KAAK,IAAI,EAErC,UAAU,CAAC,YAAY,EAAE,CAAC;YAI9B,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAE,UAAU,CAAC,MAAM,CAAE,CAAC;SAExD;KAEJ;IAED,SAAS,oBAAoB,CAAE,QAAQ,EAAE,QAAQ,EAAG;QAEhD,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,QAAQ,CAAE,CAAC;QAClD,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAC,SAAS,EAAE,MAAI,CAAE,CAAC,CAAC,6BAA6B;KAEjG;IAED,SAAS,mBAAmB,CAAE,QAAQ,EAAE,QAAQ,EAAG;QAE/C,IAAK,QAAQ,CAAC,WAAW,EAErB,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC;KAIzD;IAED,SAAS,uBAAuB,CAAE,QAAQ,EAAE,QAAQ,EAAG;QAEnD,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;QAC9C,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;QAE9C,IAAK,QAAQ,CAAC,YAAY,EAEtB,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC;QAIxD,IAAK,QAAQ,CAAC,YAAY,EAEtB,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC;QAIxD,MAAM,MAAM,GAAG,UAAU,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC,MAAM,AAAC;QAEjD,IAAK,MAAM,EAEP,qEAAqE;QACrE,QAAQ,CAAC,eAAe,CAAC,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC;KAIjE;IAED,SAAS,uBAAuB,CAAE,QAAQ,EAAE,QAAQ,EAAE,wBAAwB,EAAG;QAE7E,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,+BAA+B;QAElE,IAAK,QAAQ,CAAC,KAAK,GAAG,CAAC,EAAG;YAEtB,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,UAAU,CAAE,CAAC,cAAc,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC;YAEvF,QAAQ,CAAC,cAAc,CAAC,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC;YAExD,IAAK,QAAQ,CAAC,aAAa,EAEvB,QAAQ,CAAC,aAAa,CAAC,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC;YAI1D,IAAK,QAAQ,CAAC,iBAAiB,EAE3B,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC;SAIrE;QAED,IAAK,QAAQ,CAAC,SAAS,GAAG,CAAC,EAAG;YAE1B,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;YAC9C,QAAQ,CAAC,kBAAkB,CAAC,KAAK,GAAG,QAAQ,CAAC,kBAAkB,CAAC;YAEhE,IAAK,QAAQ,CAAC,YAAY,EAEtB,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC;YAIxD,IAAK,QAAQ,CAAC,qBAAqB,EAE/B,QAAQ,CAAC,qBAAqB,CAAC,KAAK,GAAG,QAAQ,CAAC,qBAAqB,CAAC;YAI1E,IAAK,QAAQ,CAAC,kBAAkB,EAAG;gBAE/B,QAAQ,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,oBAAoB,CAAE,CAAC;gBAC1E,QAAQ,CAAC,kBAAkB,CAAC,KAAK,GAAG,QAAQ,CAAC,kBAAkB,CAAC;gBAEhE,IAAK,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAE3B,QAAQ,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;aAIpD;SAEJ;QAED,IAAK,QAAQ,CAAC,YAAY,GAAG,CAAC,EAAG;YAE7B,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC;YACpD,QAAQ,CAAC,sBAAsB,CAAC,KAAK,GAAG,wBAAwB,CAAC,OAAO,CAAC;YACzE,QAAQ,CAAC,uBAAuB,CAAC,KAAK,CAAC,GAAG,CAAE,wBAAwB,CAAC,KAAK,EAAE,wBAAwB,CAAC,MAAM,CAAE,CAAC;YAE9G,IAAK,QAAQ,CAAC,eAAe,EAEzB,QAAQ,CAAC,eAAe,CAAC,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC;YAI9D,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC;YAE9C,IAAK,QAAQ,CAAC,YAAY,EAEtB,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC;YAIxD,QAAQ,CAAC,mBAAmB,CAAC,KAAK,GAAG,QAAQ,CAAC,mBAAmB,CAAC;YAClE,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,gBAAgB,CAAE,CAAC;SAErE;QAED,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,QAAQ,CAAC,iBAAiB,CAAC;QAC9D,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,aAAa,CAAE,CAAC;QAE5D,IAAK,QAAQ,CAAC,oBAAoB,EAE9B,QAAQ,CAAC,oBAAoB,CAAC,KAAK,GAAG,QAAQ,CAAC,oBAAoB,CAAC;QAIxE,IAAK,QAAQ,CAAC,gBAAgB,EAE1B,QAAQ,CAAC,gBAAgB,CAAC,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC;KAInE;IAED,SAAS,qBAAqB,CAAE,QAAQ,EAAE,QAAQ,EAAG;QAEjD,IAAK,QAAQ,CAAC,MAAM,EAEhB,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;KAI/C;IAED,SAAS,uBAAuB,CAAE,QAAQ,EAAE,QAAQ,EAAG;QAEnD,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAC,iBAAiB,CAAE,CAAC;QACpE,QAAQ,CAAC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC;QACpD,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC;KAErD;IAED,OAAO;QACH,kBAAkB,EAAE,kBAAkB;QACtC,uBAAuB,EAAE,uBAAuB;KACnD,CAAC;CAEL;AAED,SAAS,mBAAmB,GAAG;IAE3B,MAAM,MAAM,GAAG,eAAe,CAAE,QAAQ,CAAE,AAAC;IAC3C,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,OAAO,MAAM,CAAC;CAEjB;AAED,SAAS,aAAa,CAAE,WAAU,GAAG,EAAE,EAAG;IAEtC,MAAM,QAAO,GAAG,WAAU,CAAC,MAAM,KAAK,SAAS,GAAG,WAAU,CAAC,MAAM,GAAG,mBAAmB,EAAE,EACvF,SAAQ,GAAG,WAAU,CAAC,OAAO,KAAK,SAAS,GAAG,WAAU,CAAC,OAAO,GAAG,IAAI,EAEvE,MAAM,GAAG,WAAU,CAAC,KAAK,KAAK,SAAS,GAAG,WAAU,CAAC,KAAK,GAAG,IAAI,EACjE,QAAQ,GAAG,WAAU,CAAC,OAAO,KAAK,SAAS,GAAG,WAAU,CAAC,OAAO,GAAG,IAAI,EACvE,UAAU,GAAG,WAAU,CAAC,SAAS,KAAK,SAAS,GAAG,WAAU,CAAC,SAAS,GAAG,KAAK,EAC9E,mBAAmB,GAAG,WAAU,CAAC,kBAAkB,KAAK,SAAS,GAAG,WAAU,CAAC,kBAAkB,GAAG,IAAI,EACxG,sBAAsB,GAAG,WAAU,CAAC,qBAAqB,KAAK,SAAS,GAAG,WAAU,CAAC,qBAAqB,GAAG,KAAK,EAClH,gBAAgB,GAAG,WAAU,CAAC,eAAe,KAAK,SAAS,GAAG,WAAU,CAAC,eAAe,GAAG,SAAS,EACpG,6BAA6B,GAAG,WAAU,CAAC,4BAA4B,KAAK,SAAS,GAAG,WAAU,CAAC,4BAA4B,GAAG,KAAK,AAAC;IAE5I,IAAI,MAAM,AAAC;IAEX,IAAK,WAAU,CAAC,OAAO,KAAK,SAAS,EAEjC,MAAM,GAAG,SAAQ,CAAC,oBAAoB,EAAE,CAAC,KAAK,CAAC;SAI/C,MAAM,GAAG,WAAU,CAAC,KAAK,KAAK,SAAS,GAAG,WAAU,CAAC,KAAK,GAAG,KAAK,CAAC;IAIvE,IAAI,kBAAiB,GAAG,IAAI,AAAC;IAC7B,IAAI,kBAAkB,GAAG,IAAI,AAAC;IAE9B,6EAA6E;IAC7E,6GAA6G;IAE7G,MAAM,eAAe,GAAG,EAAE,AAAC;IAC3B,MAAM,gBAAgB,GAAG,EAAE,AAAC;IAE5B,oBAAoB;IAEpB,IAAI,CAAC,UAAU,GAAG,QAAO,CAAC;IAE1B,gCAAgC;IAChC,IAAI,CAAC,KAAK,GAAG;QAET;;;YAGG,CACH,iBAAiB,EAAE,IAAI;KAC1B,CAAC;IAEF,WAAW;IAEX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAE7B,cAAc;IAEd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAExB,wBAAwB;IAExB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IACzB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;IAElC,2BAA2B;IAE3B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IAErC,kBAAkB;IAElB,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;IAErC,eAAe;IAEf,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;IACjC,IAAI,CAAC,mBAAmB,GAAG,CAAG,CAAC;IAE/B,sBAAsB;IAEtB,MAAM,KAAK,GAAG,IAAI,AAAC;IAEnB,IAAI,cAAc,GAAG,KAAK,AAAC;IAE3B,uBAAuB;IAEvB,IAAI,sBAAsB,GAAG,CAAC,AAAC;IAC/B,IAAI,yBAAyB,GAAG,CAAC,AAAC;IAClC,IAAI,oBAAoB,GAAG,IAAI,AAAC;IAChC,IAAI,kBAAkB,GAAG,EAAG,AAAC;IAE7B,IAAI,cAAc,GAAG,IAAI,AAAC;IAE1B,MAAM,gBAAgB,GAAG,IAAI,OAAO,EAAE,AAAC;IACvC,MAAM,eAAe,GAAG,IAAI,OAAO,EAAE,AAAC;IACtC,IAAI,mBAAmB,GAAG,IAAI,AAAC;IAE/B,EAAE;IAEF,IAAI,MAAM,GAAG,QAAO,CAAC,KAAK,AAAC;IAC3B,IAAI,OAAO,GAAG,QAAO,CAAC,MAAM,AAAC;IAE7B,IAAI,WAAW,GAAG,CAAC,AAAC;IACpB,IAAI,WAAW,GAAG,IAAI,AAAC;IACvB,IAAI,gBAAgB,GAAG,IAAI,AAAC;IAE5B,MAAM,SAAS,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAE,AAAC;IACvD,MAAM,QAAQ,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAE,AAAC;IACtD,IAAI,YAAY,GAAG,KAAK,AAAC;IAEzB,UAAU;IAEV,MAAM,QAAQ,GAAG,IAAI,OAAO,EAAE,AAAC;IAE/B,WAAW;IAEX,IAAI,gBAAgB,GAAG,KAAK,AAAC;IAC7B,IAAI,qBAAqB,GAAG,KAAK,AAAC;IAElC,eAAe;IAEf,IAAI,yBAAyB,GAAG,IAAI,AAAC;IAErC,wBAAwB;IAExB,MAAM,kBAAiB,GAAG,IAAI,OAAO,EAAE,AAAC;IAExC,MAAM,SAAQ,GAAG,IAAI,OAAO,EAAE,AAAC;IAC/B,MAAM,QAAQ,GAAG,IAAI,OAAO,EAAE,AAAC;IAE/B,MAAM,WAAW,GAAG;QAAE,UAAU,EAAE,IAAI;QAAE,GAAG,EAAE,IAAI;QAAE,WAAW,EAAE,IAAI;QAAE,gBAAgB,EAAE,IAAI;QAAE,OAAO,EAAE,IAAI;KAAE,AAAC;IAE9G,SAAS,mBAAmB,GAAG;QAE3B,OAAO,oBAAoB,KAAK,IAAI,GAAG,WAAW,GAAG,CAAC,CAAC;KAE1D;IAED,aAAa;IAEb,IAAI,GAAG,GAAG,SAAQ,AAAC;IAEnB,SAAS,UAAU,CAAE,YAAY,EAAE,iBAAiB,EAAG;QAEnD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,YAAY,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;YAE7C,MAAM,WAAW,GAAG,YAAY,CAAE,IAAC,CAAE,AAAC;YACtC,MAAM,OAAO,GAAG,QAAO,CAAC,UAAU,CAAE,WAAW,EAAE,iBAAiB,CAAE,AAAC;YACrE,IAAK,OAAO,KAAK,IAAI,EAAG,OAAO,OAAO,CAAC;SAE1C;QAED,OAAO,IAAI,CAAC;KAEf;IAED,IAAI;QAEA,MAAM,iBAAiB,GAAG;YACtB,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,QAAQ;YACjB,SAAS,EAAE,UAAU;YACrB,kBAAkB,EAAE,mBAAmB;YACvC,qBAAqB,EAAE,sBAAsB;YAC7C,eAAe,EAAE,gBAAgB;YACjC,4BAA4B,EAAE,6BAA6B;SAC9D,AAAC;QAEF,yDAAyD;QACzD,IAAK,cAAc,IAAI,QAAO,EAAG,QAAO,CAAC,YAAY,CAAE,aAAa,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAE,CAAC;QAEhG,iFAAiF;QACjF,QAAO,CAAC,gBAAgB,CAAE,kBAAkB,EAAE,aAAa,EAAE,KAAK,CAAE,CAAC;QACrE,QAAO,CAAC,gBAAgB,CAAE,sBAAsB,EAAE,gBAAgB,EAAE,KAAK,CAAE,CAAC;QAE5E,IAAK,GAAG,KAAK,IAAI,EAAG;YAEhB,MAAM,YAAY,GAAG;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,oBAAoB;aAAE,AAAC;YAEjE,IAAK,KAAK,CAAC,gBAAgB,KAAK,IAAI,EAEhC,YAAY,CAAC,KAAK,EAAE,CAAC;YAIzB,GAAG,GAAG,UAAU,CAAE,YAAY,EAAE,iBAAiB,CAAE,CAAC;YAEpD,IAAK,GAAG,KAAK,IAAI,EAAG;gBAEhB,IAAK,UAAU,CAAE,YAAY,CAAE,EAE3B,MAAM,IAAI,KAAK,CAAE,6DAA6D,CAAE,CAAC;qBAIjF,MAAM,IAAI,KAAK,CAAE,+BAA+B,CAAE,CAAC;aAI1D;SAEJ;QAED,+EAA+E;QAE/E,IAAK,GAAG,CAAC,wBAAwB,KAAK,SAAS,EAE3C,GAAG,CAAC,wBAAwB,GAAG,WAAY;YAEvC,OAAO;gBAAE,UAAU,EAAE,CAAC;gBAAE,UAAU,EAAE,CAAC;gBAAE,WAAW,EAAE,CAAC;aAAE,CAAC;SAE3D,CAAC;KAIT,CAAC,OAAQ,KAAK,EAAG;QAEd,OAAO,CAAC,KAAK,CAAE,uBAAuB,GAAG,KAAK,CAAC,OAAO,CAAE,CAAC;QACzD,MAAM,KAAK,CAAC;KAEf;IAED,IAAI,UAAU,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,AAAC;IAC1C,IAAI,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,AAAC;IAChF,IAAI,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,QAAQ,EAAE,SAAS,AAAC;IAE5E,IAAI,UAAU,EAAE,YAAY,EAAE,cAAc,EAAE,qBAAqB,AAAC;IAEpE,IAAI,KAAK,EAAE,aAAa,AAAC;IAEzB,SAAS,aAAa,GAAG;QAErB,UAAU,GAAG,IAAI,eAAe,CAAE,GAAG,CAAE,CAAC;QAExC,YAAY,GAAG,IAAI,iBAAiB,CAAE,GAAG,EAAE,UAAU,EAAE,WAAU,CAAE,CAAC;QAEpE,UAAU,CAAC,IAAI,CAAE,YAAY,CAAE,CAAC;QAEhC,KAAK,GAAG,IAAI,UAAU,CAAE,GAAG,EAAE,UAAU,EAAE,YAAY,CAAE,CAAC;QAExD,KAAK,GAAG,IAAI,UAAU,CAAE,GAAG,EAAE,UAAU,EAAE,YAAY,CAAE,CAAC;QAExD,IAAI,GAAG,IAAI,SAAS,CAAE,GAAG,CAAE,CAAC;QAC5B,UAAU,GAAG,IAAI,eAAe,EAAE,CAAC;QACnC,QAAQ,GAAG,IAAI,aAAa,CAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;QAC9F,QAAQ,GAAG,IAAI,aAAa,CAAE,KAAK,CAAE,CAAC;QACtC,UAAU,GAAG,IAAI,eAAe,CAAE,KAAK,CAAE,CAAC;QAC1C,UAAU,GAAG,IAAI,eAAe,CAAE,GAAG,EAAE,YAAY,CAAE,CAAC;QACtD,aAAa,GAAG,IAAI,kBAAkB,CAAE,GAAG,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,CAAE,CAAC;QACpF,UAAU,GAAG,IAAI,eAAe,CAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,aAAa,CAAE,CAAC;QACzE,OAAO,GAAG,IAAI,YAAY,CAAE,GAAG,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,CAAE,CAAC;QAChE,YAAY,GAAG,IAAI,iBAAiB,CAAE,GAAG,EAAE,YAAY,EAAE,QAAQ,CAAE,CAAC;QACpE,QAAQ,GAAG,IAAI,aAAa,CAAE,UAAU,CAAE,CAAC;QAC3C,YAAY,GAAG,IAAI,aAAa,CAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,EAAE,QAAQ,CAAE,CAAC;QACnH,SAAS,GAAG,IAAI,cAAc,CAAE,KAAK,EAAE,UAAU,CAAE,CAAC;QACpD,WAAW,GAAG,IAAI,gBAAgB,EAAE,CAAC;QACrC,YAAY,GAAG,IAAI,iBAAiB,CAAE,UAAU,EAAE,YAAY,CAAE,CAAC;QACjE,UAAU,GAAG,IAAI,eAAe,CAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,mBAAmB,CAAE,CAAC;QACjG,SAAS,GAAG,IAAI,cAAc,CAAE,KAAK,EAAE,OAAO,EAAE,YAAY,CAAE,CAAC;QAE/D,cAAc,GAAG,IAAI,mBAAmB,CAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QAChF,qBAAqB,GAAG,IAAI,0BAA0B,CAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QAE9F,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;QAEtC,KAAK,CAAC,YAAY,GAAG,YAAY,CAAC;QAClC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;QAC9B,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;QAC9B,KAAK,CAAC,WAAW,GAAG,WAAW,CAAC;QAChC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;QAC5B,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;KAErB;IAED,aAAa,EAAE,CAAC;IAEhB,KAAK;IAEL,MAAM,EAAE,GAAG,IAAI,YAAY,CAAE,KAAK,EAAE,GAAG,CAAE,AAAC;IAE1C,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IAEb,MAAM;IAEN,IAAI,CAAC,UAAU,GAAG,WAAY;QAE1B,OAAO,GAAG,CAAC;KAEd,CAAC;IAEF,IAAI,CAAC,oBAAoB,GAAG,WAAY;QAEpC,OAAO,GAAG,CAAC,oBAAoB,EAAE,CAAC;KAErC,CAAC;IAEF,IAAI,CAAC,gBAAgB,GAAG,WAAY;QAEhC,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,oBAAoB,CAAE,AAAC;QACzD,IAAK,SAAS,EAAG,SAAS,CAAC,WAAW,EAAE,CAAC;KAE5C,CAAC;IAEF,IAAI,CAAC,mBAAmB,GAAG,WAAY;QAEnC,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,oBAAoB,CAAE,AAAC;QACzD,IAAK,SAAS,EAAG,SAAS,CAAC,cAAc,EAAE,CAAC;KAE/C,CAAC;IAEF,IAAI,CAAC,aAAa,GAAG,WAAY;QAE7B,OAAO,WAAW,CAAC;KAEtB,CAAC;IAEF,IAAI,CAAC,aAAa,GAAG,SAAW,KAAK,EAAG;QAEpC,IAAK,KAAK,KAAK,SAAS,EAAG,OAAO;QAElC,WAAW,GAAG,KAAK,CAAC;QAEpB,IAAI,CAAC,OAAO,CAAE,MAAM,EAAE,OAAO,EAAE,KAAK,CAAE,CAAC;KAE1C,CAAC;IAEF,IAAI,CAAC,OAAO,GAAG,SAAW,MAAM,EAAG;QAE/B,OAAO,MAAM,CAAC,GAAG,CAAE,MAAM,EAAE,OAAO,CAAE,CAAC;KAExC,CAAC;IAEF,IAAI,CAAC,OAAO,GAAG,SAAW,KAAK,EAAE,MAAM,EAAE,WAAW,EAAG;QAEnD,IAAK,EAAE,CAAC,YAAY,EAAG;YAEnB,OAAO,CAAC,IAAI,CAAE,wEAAwE,CAAE,CAAC;YACzF,OAAO;SAEV;QAED,MAAM,GAAG,KAAK,CAAC;QACf,OAAO,GAAG,MAAM,CAAC;QAEjB,QAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,WAAW,CAAE,CAAC;QAClD,QAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAE,MAAM,GAAG,WAAW,CAAE,CAAC;QAEpD,IAAK,WAAW,KAAK,KAAK,EAAG;YAEzB,QAAO,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;YACnC,QAAO,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;SAExC;QAED,IAAI,CAAC,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;KAE3C,CAAC;IAEF,IAAI,CAAC,oBAAoB,GAAG,SAAW,MAAM,EAAG;QAE5C,OAAO,MAAM,CAAC,GAAG,CAAE,MAAM,GAAG,WAAW,EAAE,OAAO,GAAG,WAAW,CAAE,CAAC,KAAK,EAAE,CAAC;KAE5E,CAAC;IAEF,IAAI,CAAC,oBAAoB,GAAG,SAAW,KAAK,EAAE,MAAM,EAAE,UAAU,EAAG;QAE/D,MAAM,GAAG,KAAK,CAAC;QACf,OAAO,GAAG,MAAM,CAAC;QAEjB,WAAW,GAAG,UAAU,CAAC;QAEzB,QAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,UAAU,CAAE,CAAC;QACjD,QAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAE,MAAM,GAAG,UAAU,CAAE,CAAC;QAEnD,IAAI,CAAC,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;KAE3C,CAAC;IAEF,IAAI,CAAC,kBAAkB,GAAG,SAAW,MAAM,EAAG;QAE1C,OAAO,MAAM,CAAC,IAAI,CAAE,gBAAgB,CAAE,CAAC;KAE1C,CAAC;IAEF,IAAI,CAAC,WAAW,GAAG,SAAW,MAAM,EAAG;QAEnC,OAAO,MAAM,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC;KAEnC,CAAC;IAEF,IAAI,CAAC,WAAW,GAAG,SAAW,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAG;QAEhD,IAAK,CAAC,CAAC,SAAS,EAEZ,SAAS,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;aAIpC,SAAS,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAIzC,KAAK,CAAC,QAAQ,CAAE,gBAAgB,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC,cAAc,CAAE,WAAW,CAAE,CAAC,KAAK,EAAE,CAAE,CAAC;KAE9F,CAAC;IAEF,IAAI,CAAC,UAAU,GAAG,SAAW,MAAM,EAAG;QAElC,OAAO,MAAM,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC;KAElC,CAAC;IAEF,IAAI,CAAC,UAAU,GAAG,SAAW,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAG;QAE/C,IAAK,CAAC,CAAC,SAAS,EAEZ,QAAQ,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;aAInC,QAAQ,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAIxC,KAAK,CAAC,OAAO,CAAE,eAAe,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC,cAAc,CAAE,WAAW,CAAE,CAAC,KAAK,EAAE,CAAE,CAAC;KAE3F,CAAC;IAEF,IAAI,CAAC,cAAc,GAAG,WAAY;QAE9B,OAAO,YAAY,CAAC;KAEvB,CAAC;IAEF,IAAI,CAAC,cAAc,GAAG,SAAW,OAAO,EAAG;QAEvC,KAAK,CAAC,cAAc,CAAE,YAAY,GAAG,OAAO,CAAE,CAAC;KAElD,CAAC;IAEF,IAAI,CAAC,aAAa,GAAG,SAAW,MAAM,EAAG;QAErC,WAAW,GAAG,MAAM,CAAC;KAExB,CAAC;IAEF,IAAI,CAAC,kBAAkB,GAAG,SAAW,MAAM,EAAG;QAE1C,gBAAgB,GAAG,MAAM,CAAC;KAE7B,CAAC;IAEF,WAAW;IAEX,IAAI,CAAC,aAAa,GAAG,SAAW,MAAM,EAAG;QAErC,OAAO,MAAM,CAAC,IAAI,CAAE,UAAU,CAAC,aAAa,EAAE,CAAE,CAAC;KAEpD,CAAC;IAEF,IAAI,CAAC,aAAa,GAAG,WAAY;QAE7B,UAAU,CAAC,aAAa,CAAC,KAAK,CAAE,UAAU,EAAE,SAAS,CAAE,CAAC;KAE3D,CAAC;IAEF,IAAI,CAAC,aAAa,GAAG,WAAY;QAE7B,OAAO,UAAU,CAAC,aAAa,EAAE,CAAC;KAErC,CAAC;IAEF,IAAI,CAAC,aAAa,GAAG,WAAY;QAE7B,UAAU,CAAC,aAAa,CAAC,KAAK,CAAE,UAAU,EAAE,SAAS,CAAE,CAAC;KAE3D,CAAC;IAEF,IAAI,CAAC,KAAK,GAAG,SAAW,KAAK,GAAG,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE,OAAO,GAAG,IAAI,EAAG;QAEjE,IAAI,IAAI,GAAG,CAAC,AAAC;QAEb,IAAK,KAAK,EAAG,IAAI,IAAI,KAAK,CAAC;QAC3B,IAAK,KAAK,EAAG,IAAI,IAAI,GAAG,CAAC;QACzB,IAAK,OAAO,EAAG,IAAI,IAAI,IAAI,CAAC;QAE5B,GAAG,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;KAErB,CAAC;IAEF,IAAI,CAAC,UAAU,GAAG,WAAY;QAE1B,IAAI,CAAC,KAAK,CAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC;KAEpC,CAAC;IAEF,IAAI,CAAC,UAAU,GAAG,WAAY;QAE1B,IAAI,CAAC,KAAK,CAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAE,CAAC;KAEpC,CAAC;IAEF,IAAI,CAAC,YAAY,GAAG,WAAY;QAE5B,IAAI,CAAC,KAAK,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAE,CAAC;KAEpC,CAAC;IAEF,EAAE;IAEF,IAAI,CAAC,OAAO,GAAG,WAAY;QAEvB,QAAO,CAAC,mBAAmB,CAAE,kBAAkB,EAAE,aAAa,EAAE,KAAK,CAAE,CAAC;QACxE,QAAO,CAAC,mBAAmB,CAAE,sBAAsB,EAAE,gBAAgB,EAAE,KAAK,CAAE,CAAC;QAE/E,WAAW,CAAC,OAAO,EAAE,CAAC;QACtB,YAAY,CAAC,OAAO,EAAE,CAAC;QACvB,UAAU,CAAC,OAAO,EAAE,CAAC;QACrB,QAAQ,CAAC,OAAO,EAAE,CAAC;QACnB,UAAU,CAAC,OAAO,EAAE,CAAC;QACrB,OAAO,CAAC,OAAO,EAAE,CAAC;QAClB,aAAa,CAAC,OAAO,EAAE,CAAC;QACxB,YAAY,CAAC,OAAO,EAAE,CAAC;QAEvB,EAAE,CAAC,OAAO,EAAE,CAAC;QAEb,EAAE,CAAC,mBAAmB,CAAE,cAAc,EAAE,gBAAgB,CAAE,CAAC;QAC3D,EAAE,CAAC,mBAAmB,CAAE,YAAY,EAAE,cAAc,CAAE,CAAC;QAEvD,IAAK,yBAAyB,EAAG;YAE7B,yBAAyB,CAAC,OAAO,EAAE,CAAC;YACpC,yBAAyB,GAAG,IAAI,CAAC;SAEpC;QAED,SAAS,CAAC,IAAI,EAAE,CAAC;KAEpB,CAAC;IAEF,SAAS;IAET,SAAS,aAAa,CAAE,KAAK,EAAG;QAE5B,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,OAAO,CAAC,GAAG,CAAE,oCAAoC,CAAE,CAAC;QAEpD,cAAc,GAAG,IAAI,CAAC;KAEzB;IAED,SAAS,gBAAgB,GAAgB;QAErC,OAAO,CAAC,GAAG,CAAE,wCAAwC,CAAE,CAAC;QAExD,cAAc,GAAG,KAAK,CAAC;QAEvB,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,AAAC;QACrC,MAAM,gBAAgB,GAAG,SAAS,CAAC,OAAO,AAAC;QAC3C,MAAM,mBAAmB,GAAG,SAAS,CAAC,UAAU,AAAC;QACjD,MAAM,oBAAoB,GAAG,SAAS,CAAC,WAAW,AAAC;QACnD,MAAM,aAAa,GAAG,SAAS,CAAC,IAAI,AAAC;QAErC,aAAa,EAAE,CAAC;QAEhB,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;QAC/B,SAAS,CAAC,OAAO,GAAG,gBAAgB,CAAC;QACrC,SAAS,CAAC,UAAU,GAAG,mBAAmB,CAAC;QAC3C,SAAS,CAAC,WAAW,GAAG,oBAAoB,CAAC;QAC7C,SAAS,CAAC,IAAI,GAAG,aAAa,CAAC;KAElC;IAED,SAAS,iBAAiB,CAAE,KAAK,EAAG;QAEhC,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,AAAC;QAE9B,QAAQ,CAAC,mBAAmB,CAAE,SAAS,EAAE,iBAAiB,CAAE,CAAC;QAE7D,kBAAkB,CAAE,QAAQ,CAAE,CAAC;KAElC;IAED,sBAAsB;IAEtB,SAAS,kBAAkB,CAAE,QAAQ,EAAG;QAEpC,gCAAgC,CAAE,QAAQ,CAAE,CAAC;QAE7C,UAAU,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC;KAEjC;IAGD,SAAS,gCAAgC,CAAE,QAAQ,EAAG;QAElD,MAAM,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC,QAAQ,AAAC;QAErD,IAAK,QAAQ,KAAK,SAAS,EAAG;YAE1B,QAAQ,CAAC,OAAO,CAAE,SAAW,OAAO,EAAG;gBAEnC,YAAY,CAAC,cAAc,CAAE,OAAO,CAAE,CAAC;aAE1C,CAAE,CAAC;YAEJ,IAAK,QAAQ,CAAC,gBAAgB,EAE1B,YAAY,CAAC,kBAAkB,CAAE,QAAQ,CAAE,CAAC;SAInD;KAEJ;IAED,mBAAmB;IAEnB,IAAI,CAAC,kBAAkB,GAAG,SAAW,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAG;QAEpF,IAAK,KAAK,KAAK,IAAI,EAAG,KAAK,GAAG,WAAW,CAAC,CAAC,qEAAqE;QAEhH,MAAM,WAAW,GAAK,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,GAAG,CAAC,AAAE,AAAC;QAE9E,MAAM,OAAO,GAAG,UAAU,CAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAE,AAAC;QAExE,KAAK,CAAC,WAAW,CAAE,QAAQ,EAAE,WAAW,CAAE,CAAC;QAE3C,EAAE;QAEF,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,AAAC;QAC3B,MAAM,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,AAAC;QAE9C,EAAE;QAEF,IAAK,KAAK,KAAK,IAAI,EAAG;YAElB,IAAK,QAAQ,KAAK,SAAS,IAAI,QAAQ,CAAC,KAAK,KAAK,CAAC,EAAG,OAAO;SAEhE,MAAM,IAAK,KAAK,CAAC,KAAK,KAAK,CAAC,EAEzB,OAAO;QAIX,EAAE;QAEF,IAAI,WAAW,GAAG,CAAC,AAAC;QAEpB,IAAK,QAAQ,CAAC,SAAS,KAAK,IAAI,EAAG;YAE/B,KAAK,GAAG,UAAU,CAAC,qBAAqB,CAAE,QAAQ,CAAE,CAAC;YACrD,WAAW,GAAG,CAAC,CAAC;SAEnB;QAED,aAAa,CAAC,KAAK,CAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAE,CAAC;QAElE,IAAI,SAAS,AAAC;QACd,IAAI,QAAQ,GAAG,cAAc,AAAC;QAE9B,IAAK,KAAK,KAAK,IAAI,EAAG;YAElB,SAAS,GAAG,UAAU,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;YAEpC,QAAQ,GAAG,qBAAqB,CAAC;YACjC,QAAQ,CAAC,QAAQ,CAAE,SAAS,CAAE,CAAC;SAElC;QAED,EAAE;QAEF,MAAM,SAAS,GAAG,AAAE,KAAK,KAAK,IAAI,GAAK,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,AAAC;QAEpE,MAAM,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,WAAW,AAAC;QAC1D,MAAM,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,WAAW,AAAC;QAE1D,MAAM,UAAU,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,WAAW,GAAG,CAAC,AAAC;QAClE,MAAM,UAAU,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,WAAW,GAAG,QAAQ,AAAC;QAEzE,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAE,UAAU,EAAE,UAAU,CAAE,AAAC;QACrD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAE,SAAS,EAAE,UAAU,GAAG,UAAU,EAAE,UAAU,GAAG,UAAU,CAAE,GAAG,CAAC,AAAC;QAE5F,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,OAAO,GAAG,SAAS,GAAG,CAAC,CAAE,AAAC;QAEzD,IAAK,SAAS,KAAK,CAAC,EAAG,OAAO;QAE9B,EAAE;QAEF,IAAK,MAAM,CAAC,MAAM;YAEd,IAAK,QAAQ,CAAC,SAAS,KAAK,IAAI,EAAG;gBAE/B,KAAK,CAAC,YAAY,CAAE,QAAQ,CAAC,kBAAkB,GAAG,mBAAmB,EAAE,CAAE,CAAC;gBAC1E,QAAQ,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;aAEzB,MAEG,QAAQ,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;eAIvB,IAAK,MAAM,CAAC,MAAM,EAAG;YAExB,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,AAAC;YAEnC,IAAK,SAAS,KAAK,SAAS,EAAG,SAAS,GAAG,CAAC,CAAC,CAAC,0BAA0B;YAExE,KAAK,CAAC,YAAY,CAAE,SAAS,GAAG,mBAAmB,EAAE,CAAE,CAAC;YAExD,IAAK,MAAM,CAAC,cAAc,EAEtB,QAAQ,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;iBAEnB,IAAK,MAAM,CAAC,UAAU,EAEzB,QAAQ,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;iBAItB,QAAQ,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;SAI7B,MAAM,IAAK,MAAM,CAAC,QAAQ,EAEvB,QAAQ,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;aAEnB,IAAK,MAAM,CAAC,QAAQ,EAEvB,QAAQ,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;QAI1B,IAAK,MAAM,CAAC,eAAe,EAEvB,QAAQ,CAAC,eAAe,CAAE,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,KAAK,CAAE,CAAC;aAE5D,IAAK,QAAQ,CAAC,yBAAyB,EAAG;YAE7C,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,iBAAiB,CAAE,AAAC;YAErF,QAAQ,CAAC,eAAe,CAAE,SAAS,EAAE,SAAS,EAAE,aAAa,CAAE,CAAC;SAEnE,MAEG,QAAQ,CAAC,MAAM,CAAE,SAAS,EAAE,SAAS,CAAE,CAAC;KAI/C,CAAC;IAEF,UAAU;IAEV,IAAI,CAAC,OAAO,GAAG,SAAW,KAAK,EAAE,MAAM,EAAG;QAEtC,kBAAkB,GAAG,YAAY,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QAC/C,kBAAkB,CAAC,IAAI,EAAE,CAAC;QAE1B,gBAAgB,CAAC,IAAI,CAAE,kBAAkB,CAAE,CAAC;QAE5C,KAAK,CAAC,eAAe,CAAE,SAAW,MAAM,EAAG;YAEvC,IAAK,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,CAAE,EAAG;gBAEzD,kBAAkB,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC;gBAEvC,IAAK,MAAM,CAAC,UAAU,EAElB,kBAAkB,CAAC,UAAU,CAAE,MAAM,CAAE,CAAC;aAI/C;SAEJ,CAAE,CAAC;QAEJ,kBAAkB,CAAC,WAAW,CAAE,KAAK,CAAC,uBAAuB,CAAE,CAAC;QAEhE,KAAK,CAAC,QAAQ,CAAE,SAAW,MAAM,EAAG;YAEhC,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;YAEjC,IAAK,QAAQ,EAAG;gBAEZ,IAAK,KAAK,CAAC,OAAO,CAAE,QAAQ,CAAE,EAE1B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;oBAEzC,MAAM,SAAS,GAAG,QAAQ,CAAE,IAAC,CAAE,AAAC;oBAEhC,UAAU,CAAE,SAAS,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;iBAE1C;qBAID,UAAU,CAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;aAI7C;SAEJ,CAAE,CAAC;QAEJ,gBAAgB,CAAC,GAAG,EAAE,CAAC;QACvB,kBAAkB,GAAG,IAAI,CAAC;KAE7B,CAAC;IAEF,iBAAiB;IAEjB,IAAI,wBAAwB,GAAG,IAAI,AAAC;IAEpC,SAAS,gBAAgB,CAAE,IAAI,EAAG;QAE9B,IAAK,wBAAwB,EAAG,wBAAwB,CAAE,IAAI,CAAE,CAAC;KAEpE;IAED,SAAS,gBAAgB,GAAG;QAExB,SAAS,CAAC,IAAI,EAAE,CAAC;KAEpB;IAED,SAAS,cAAc,GAAG;QAEtB,SAAS,CAAC,KAAK,EAAE,CAAC;KAErB;IAED,MAAM,SAAS,GAAG,IAAI,cAAc,EAAE,AAAC;IACvC,SAAS,CAAC,gBAAgB,CAAE,gBAAgB,CAAE,CAAC;IAE/C,IAAK,OAAO,IAAI,KAAK,WAAW,EAAG,SAAS,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;IAEhE,IAAI,CAAC,gBAAgB,GAAG,SAAW,QAAQ,EAAG;QAE1C,wBAAwB,GAAG,QAAQ,CAAC;QACpC,EAAE,CAAC,gBAAgB,CAAE,QAAQ,CAAE,CAAC;QAE9B,QAAQ,KAAK,IAAI,GAAK,SAAS,CAAC,IAAI,EAAE,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;KAEhE,CAAC;IAEF,EAAE,CAAC,gBAAgB,CAAE,cAAc,EAAE,gBAAgB,CAAE,CAAC;IACxD,EAAE,CAAC,gBAAgB,CAAE,YAAY,EAAE,cAAc,CAAE,CAAC;IAEpD,YAAY;IAEZ,IAAI,CAAC,MAAM,GAAG,SAAW,KAAK,EAAE,MAAM,EAAG;QAErC,IAAK,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,EAAG;YAEpD,OAAO,CAAC,KAAK,CAAE,wEAAwE,CAAE,CAAC;YAC1F,OAAO;SAEV;QAED,IAAK,cAAc,KAAK,IAAI,EAAG,OAAO;QAEtC,qBAAqB;QAErB,IAAK,KAAK,CAAC,UAAU,KAAK,IAAI,EAAG,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE3D,qCAAqC;QAErC,IAAK,MAAM,CAAC,MAAM,KAAK,IAAI,EAAG,MAAM,CAAC,iBAAiB,EAAE,CAAC;QAEzD,IAAK,EAAE,CAAC,OAAO,KAAK,IAAI,IAAI,EAAE,CAAC,YAAY,KAAK,IAAI,EAAG;YAEnD,IAAK,EAAE,CAAC,gBAAgB,KAAK,IAAI,EAAG,EAAE,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC;YAE9D,MAAM,GAAG,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,8BAA8B;SAE1D;QAED,EAAE;QACF,IAAK,KAAK,CAAC,OAAO,KAAK,IAAI,EAAG,KAAK,CAAC,cAAc,CAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,oBAAoB,CAAE,CAAC;QAEjG,kBAAkB,GAAG,YAAY,CAAC,GAAG,CAAE,KAAK,EAAE,gBAAgB,CAAC,MAAM,CAAE,CAAC;QACxE,kBAAkB,CAAC,IAAI,EAAE,CAAC;QAE1B,gBAAgB,CAAC,IAAI,CAAE,kBAAkB,CAAE,CAAC;QAE5C,kBAAiB,CAAC,gBAAgB,CAAE,MAAM,CAAC,gBAAgB,EAAE,MAAM,CAAC,kBAAkB,CAAE,CAAC;QACzF,QAAQ,CAAC,uBAAuB,CAAE,kBAAiB,CAAE,CAAC;QAEtD,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAClD,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAE,IAAI,CAAC,cAAc,EAAE,qBAAqB,EAAE,MAAM,CAAE,CAAC;QAEvF,kBAAiB,GAAG,WAAW,CAAC,GAAG,CAAE,KAAK,EAAE,eAAe,CAAC,MAAM,CAAE,CAAC;QACrE,kBAAiB,CAAC,IAAI,EAAE,CAAC;QAEzB,eAAe,CAAC,IAAI,CAAE,kBAAiB,CAAE,CAAC;QAE1C,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,WAAW,CAAE,CAAC;QAErD,kBAAiB,CAAC,MAAM,EAAE,CAAC;QAE3B,IAAK,KAAK,CAAC,WAAW,KAAK,IAAI,EAE3B,kBAAiB,CAAC,IAAI,CAAE,WAAW,EAAE,gBAAgB,CAAE,CAAC;QAI5D,EAAE;QAEF,IAAK,gBAAgB,KAAK,IAAI,EAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QAEzD,MAAM,YAAY,GAAG,kBAAkB,CAAC,KAAK,CAAC,YAAY,AAAC;QAE3D,SAAS,CAAC,MAAM,CAAE,YAAY,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAEhD,IAAK,gBAAgB,KAAK,IAAI,EAAG,QAAQ,CAAC,UAAU,EAAE,CAAC;QAEvD,EAAE;QAEF,IAAK,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAEtD,EAAE;QAEF,UAAU,CAAC,MAAM,CAAE,kBAAiB,EAAE,KAAK,CAAE,CAAC;QAE9C,eAAe;QAEf,kBAAkB,CAAC,WAAW,CAAE,KAAK,CAAC,uBAAuB,CAAE,CAAC;QAEhE,IAAK,MAAM,CAAC,aAAa,EAAG;YAExB,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,AAAC;YAE/B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;gBAE/C,MAAM,OAAO,GAAG,OAAO,CAAE,IAAC,CAAE,AAAC;gBAE7B,WAAW,CAAE,kBAAiB,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAE,CAAC;aAEtE;SAEJ,MAEG,WAAW,CAAE,kBAAiB,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAIpD,EAAE;QAEF,IAAK,oBAAoB,KAAK,IAAI,EAAG;YAEjC,4EAA4E;YAE5E,QAAQ,CAAC,6BAA6B,CAAE,oBAAoB,CAAE,CAAC;YAE/D,8DAA8D;YAE9D,QAAQ,CAAC,wBAAwB,CAAE,oBAAoB,CAAE,CAAC;SAE7D;QAED,EAAE;QAEF,IAAK,KAAK,CAAC,OAAO,KAAK,IAAI,EAAG,KAAK,CAAC,aAAa,CAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAE1E,gBAAgB;QAEhB,aAAa,CAAC,iBAAiB,EAAE,CAAC;QAClC,kBAAkB,GAAG,EAAG,CAAC;QACzB,cAAc,GAAG,IAAI,CAAC;QAEtB,gBAAgB,CAAC,GAAG,EAAE,CAAC;QAEvB,IAAK,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAE5B,kBAAkB,GAAG,gBAAgB,CAAE,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;aAIrE,kBAAkB,GAAG,IAAI,CAAC;QAI9B,eAAe,CAAC,GAAG,EAAE,CAAC;QAEtB,IAAK,eAAe,CAAC,MAAM,GAAG,CAAC,EAE3B,kBAAiB,GAAG,eAAe,CAAE,eAAe,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;aAIlE,kBAAiB,GAAG,IAAI,CAAC;KAIhC,CAAC;IAEF,SAAS,aAAa,CAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,WAAW,EAAG;QAE9D,IAAK,MAAM,CAAC,OAAO,KAAK,KAAK,EAAG,OAAO;QAEvC,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,CAAE,AAAC;QAEpD,IAAK,OAAO,EAAG;YAEX,IAAK,MAAM,CAAC,OAAO,EAEf,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC;iBAE7B,IAAK,MAAM,CAAC,KAAK,EAEpB;gBAAA,IAAK,MAAM,CAAC,UAAU,KAAK,IAAI,EAAG,MAAM,CAAC,MAAM,CAAE,MAAM,CAAE,CAAC;aAAA,MAEvD,IAAK,MAAM,CAAC,OAAO,EAAG;gBAEzB,kBAAkB,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC;gBAEvC,IAAK,MAAM,CAAC,UAAU,EAElB,kBAAkB,CAAC,UAAU,CAAE,MAAM,CAAE,CAAC;aAI/C,MAAM,IAAK,MAAM,CAAC,QAAQ,EAEvB;gBAAA,IAAK,CAAE,MAAM,CAAC,aAAa,IAAI,QAAQ,CAAC,gBAAgB,CAAE,MAAM,CAAE,EAAG;oBAEjE,IAAK,WAAW,EAEZ,QAAQ,CAAC,qBAAqB,CAAE,MAAM,CAAC,WAAW,CAAE,CAC/C,YAAY,CAAE,kBAAiB,CAAE,CAAC;oBAI3C,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAE,MAAM,CAAE,AAAC;oBAC1C,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;oBAEjC,IAAK,QAAQ,CAAC,OAAO,EAEjB,kBAAiB,CAAC,IAAI,CAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAE,CAAC;iBAI1F;aAAA,MAEE,IAAK,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAG;gBAE5D,IAAK,MAAM,CAAC,aAAa,EAErB,uCAAuC;gBAEvC;oBAAA,IAAK,MAAM,CAAC,QAAQ,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,EAAG;wBAE/C,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;wBACzB,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;qBAE7C;iBAAA,AAEJ;gBAED,IAAK,CAAE,MAAM,CAAC,aAAa,IAAI,QAAQ,CAAC,gBAAgB,CAAE,MAAM,CAAE,EAAG;oBAEjE,IAAK,WAAW,EAEZ,QAAQ,CAAC,qBAAqB,CAAE,MAAM,CAAC,WAAW,CAAE,CAC/C,YAAY,CAAE,kBAAiB,CAAE,CAAC;oBAI3C,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAE,MAAM,CAAE,AAAC;oBAC1C,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;oBAEjC,IAAK,KAAK,CAAC,OAAO,CAAE,QAAQ,CAAE,EAAG;wBAE7B,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,AAAC;wBAE/B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;4BAE9C,MAAM,KAAK,GAAG,MAAM,CAAE,IAAC,CAAE,AAAC;4BAC1B,MAAM,aAAa,GAAG,QAAQ,CAAE,KAAK,CAAC,aAAa,CAAE,AAAC;4BAEtD,IAAK,aAAa,IAAI,aAAa,CAAC,OAAO,EAEvC,kBAAiB,CAAC,IAAI,CAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAE,CAAC;yBAIhG;qBAEJ,MAAM,IAAK,QAAQ,CAAC,OAAO,EAExB,kBAAiB,CAAC,IAAI,CAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAE,CAAC;iBAI1F;aAEJ;SAEJ;QAED,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;QAEjC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAE7C,aAAa,CAAE,QAAQ,CAAE,IAAC,CAAE,EAAE,MAAM,EAAE,UAAU,EAAE,WAAW,CAAE,CAAC;KAIvE;IAED,SAAS,WAAW,CAAE,iBAAiB,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAG;QAE/D,MAAM,aAAa,GAAG,iBAAiB,CAAC,MAAM,AAAC;QAC/C,MAAM,mBAAmB,GAAG,iBAAiB,CAAC,YAAY,AAAC;QAC3D,MAAM,kBAAkB,GAAG,iBAAiB,CAAC,WAAW,AAAC;QAEzD,kBAAkB,CAAC,eAAe,CAAE,MAAM,CAAE,CAAC;QAE7C,IAAK,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAG,sBAAsB,CAAE,aAAa,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAE7F,IAAK,QAAQ,EAAG,KAAK,CAAC,QAAQ,CAAE,gBAAgB,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAE,CAAC;QAEpE,IAAK,aAAa,CAAC,MAAM,GAAG,CAAC,EAAG,aAAa,CAAE,aAAa,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAC9E,IAAK,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAG,aAAa,CAAE,mBAAmB,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAC1F,IAAK,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAG,aAAa,CAAE,kBAAkB,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAExF,6EAA6E;QAE7E,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;QACpC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;QACpC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;QAEpC,KAAK,CAAC,gBAAgB,CAAE,KAAK,CAAE,CAAC;KAEnC;IAED,SAAS,sBAAsB,CAAE,aAAa,EAAE,KAAK,EAAE,MAAM,EAAG;QAE5D,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,AAAC;QAEvC,IAAK,yBAAyB,KAAK,IAAI,EAEnC,yBAAyB,GAAG,IAAI,iBAAiB,CAAE,CAAC,EAAE,CAAC,EAAE;YACrD,eAAe,EAAE,IAAI;YACrB,IAAI,EAAE,KAAK,CAAC,OAAO,CAAE,aAAa,CAAE,KAAK,IAAI,GAAG,aAAa,GAAG,gBAAgB;YAChF,SAAS,EAAE,wBAAwB;YACnC,OAAO,EAAE,AAAE,QAAQ,IAAI,UAAU,KAAK,IAAI,GAAK,CAAC,GAAG,CAAC;SACvD,CAAE,CAAC;QAIR,KAAK,CAAC,oBAAoB,CAAE,SAAQ,CAAE,CAAC;QAEvC,IAAK,QAAQ,EAET,yBAAyB,CAAC,OAAO,CAAE,SAAQ,CAAC,CAAC,EAAE,SAAQ,CAAC,CAAC,CAAE,CAAC;aAI5D,yBAAyB,CAAC,OAAO,CAAE,eAAe,CAAE,SAAQ,CAAC,CAAC,CAAE,EAAE,eAAe,CAAE,SAAQ,CAAC,CAAC,CAAE,CAAE,CAAC;QAItG,EAAE;QAEF,MAAM,mBAAmB,GAAG,KAAK,CAAC,eAAe,EAAE,AAAC;QACpD,KAAK,CAAC,eAAe,CAAE,yBAAyB,CAAE,CAAC;QACnD,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,iFAAiF;QACjF,yFAAyF;QACzF,MAAM,kBAAkB,GAAG,KAAK,CAAC,WAAW,AAAC;QAC7C,KAAK,CAAC,WAAW,GAAG,aAAa,CAAC;QAElC,aAAa,CAAE,aAAa,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAE9C,KAAK,CAAC,WAAW,GAAG,kBAAkB,CAAC;QAEvC,QAAQ,CAAC,6BAA6B,CAAE,yBAAyB,CAAE,CAAC;QACpE,QAAQ,CAAC,wBAAwB,CAAE,yBAAyB,CAAE,CAAC;QAE/D,KAAK,CAAC,eAAe,CAAE,mBAAmB,CAAE,CAAC;KAEhD;IAED,SAAS,aAAa,CAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAG;QAEhD,MAAM,gBAAgB,GAAG,KAAK,CAAC,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,gBAAgB,GAAG,IAAI,AAAC;QAEhF,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAElD,MAAM,UAAU,GAAG,UAAU,CAAE,IAAC,CAAE,AAAC;YAEnC,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,AAAC;YACjC,MAAM,QAAQ,GAAG,UAAU,CAAC,QAAQ,AAAC;YACrC,MAAM,QAAQ,GAAG,gBAAgB,KAAK,IAAI,GAAG,UAAU,CAAC,QAAQ,GAAG,gBAAgB,AAAC;YACpF,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,AAAC;YAE/B,IAAK,MAAM,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,CAAE,EAEpC,YAAY,CAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAE,CAAC;SAIxE;KAEJ;IAED,SAAS,YAAY,CAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAG;QAEtE,MAAM,CAAC,cAAc,CAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAE,CAAC;QAEzE,MAAM,CAAC,eAAe,CAAC,gBAAgB,CAAE,MAAM,CAAC,kBAAkB,EAAE,MAAM,CAAC,WAAW,CAAE,CAAC;QACzF,MAAM,CAAC,YAAY,CAAC,eAAe,CAAE,MAAM,CAAC,eAAe,CAAE,CAAC;QAE9D,QAAQ,CAAC,cAAc,CAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAE,CAAC;QAEzE,IAAK,QAAQ,CAAC,WAAW,KAAK,IAAI,IAAI,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAG;YAEjE,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC;YACzB,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;YAC5B,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAE,CAAC;YAE7E,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC;YAC1B,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;YAC5B,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAE,CAAC;YAE7E,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC;SAE9B,MAEG,KAAK,CAAC,kBAAkB,CAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAE,CAAC;QAIjF,MAAM,CAAC,aAAa,CAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAE,CAAC;KAE3E;IAED,SAAS,UAAU,CAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAG;QAE3C,IAAK,KAAK,CAAC,OAAO,KAAK,IAAI,EAAG,KAAK,GAAG,WAAW,CAAC,CAAC,2CAA2C;QAE9F,MAAM,kBAAkB,GAAG,UAAU,CAAC,GAAG,CAAE,QAAQ,CAAE,AAAC;QAEtD,MAAM,MAAM,GAAG,kBAAkB,CAAC,KAAK,CAAC,MAAM,AAAC;QAC/C,MAAM,YAAY,GAAG,kBAAkB,CAAC,KAAK,CAAC,YAAY,AAAC;QAE3D,MAAM,kBAAkB,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,AAAC;QAEhD,MAAM,UAAU,GAAG,YAAY,CAAC,aAAa,CAAE,QAAQ,EAAE,MAAM,CAAC,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,CAAE,AAAC;QACrG,MAAM,eAAe,GAAG,YAAY,CAAC,kBAAkB,CAAE,UAAU,CAAE,AAAC;QAEtE,IAAI,QAAQ,GAAG,kBAAkB,CAAC,QAAQ,AAAC;QAE3C,mIAAmI;QAEnI,kBAAkB,CAAC,WAAW,GAAG,QAAQ,CAAC,sBAAsB,GAAG,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5F,kBAAkB,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACnC,kBAAkB,CAAC,MAAM,GAAG,AAAE,CAAA,QAAQ,CAAC,sBAAsB,GAAG,UAAU,GAAG,QAAQ,CAAA,CAAG,GAAG,CAAE,QAAQ,CAAC,MAAM,IAAI,kBAAkB,CAAC,WAAW,CAAE,CAAC;QAEjJ,IAAK,QAAQ,KAAK,SAAS,EAAG;YAE1B,eAAe;YAEf,QAAQ,CAAC,gBAAgB,CAAE,SAAS,EAAE,iBAAiB,CAAE,CAAC;YAE1D,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;YACrB,kBAAkB,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAE1C;QAED,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAE,eAAe,CAAE,AAAC;QAE9C,IAAK,OAAO,KAAK,SAAS,EAEtB,oDAAoD;QAEpD;YAAA,IAAK,kBAAkB,CAAC,cAAc,KAAK,OAAO,IAAI,kBAAkB,CAAC,kBAAkB,KAAK,kBAAkB,EAAG;gBAEjH,8BAA8B,CAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;gBAEvD,OAAO,OAAO,CAAC;aAElB;SAAA,MAEE;YAEH,UAAU,CAAC,QAAQ,GAAG,YAAY,CAAC,WAAW,CAAE,QAAQ,CAAE,CAAC;YAE3D,QAAQ,CAAC,OAAO,CAAE,MAAM,EAAE,UAAU,EAAE,KAAK,CAAE,CAAC;YAE9C,QAAQ,CAAC,eAAe,CAAE,UAAU,EAAE,KAAK,CAAE,CAAC;YAE9C,OAAO,GAAG,YAAY,CAAC,cAAc,CAAE,UAAU,EAAE,eAAe,CAAE,CAAC;YACrE,QAAQ,CAAC,GAAG,CAAE,eAAe,EAAE,OAAO,CAAE,CAAC;YAEzC,kBAAkB,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;SAErD;QAED,MAAM,QAAQ,GAAG,kBAAkB,CAAC,QAAQ,AAAC;QAE7C,IAAK,AAAE,CAAE,QAAQ,CAAC,gBAAgB,IAAI,CAAE,QAAQ,CAAC,mBAAmB,IAAM,QAAQ,CAAC,QAAQ,KAAK,IAAI,EAEhG,QAAQ,CAAC,cAAc,GAAG,QAAQ,CAAC,OAAO,CAAC;QAI/C,8BAA8B,CAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;QAEvD,2CAA2C;QAE3C,kBAAkB,CAAC,WAAW,GAAG,mBAAmB,CAAE,QAAQ,CAAE,CAAC;QACjE,kBAAkB,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAE3D,IAAK,kBAAkB,CAAC,WAAW,EAAG;YAElC,yDAAyD;YAEzD,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;YACxD,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;YAC/C,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC;YAC5D,QAAQ,CAAC,uBAAuB,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC;YACxE,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;YAC9C,QAAQ,CAAC,gBAAgB,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;YAC1D,QAAQ,CAAC,cAAc,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;YACtD,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC;YACjD,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC;YACjD,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;YAChD,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC;YAC5D,QAAQ,CAAC,gBAAgB,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;YAEpD,QAAQ,CAAC,oBAAoB,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC;YACxE,QAAQ,CAAC,uBAAuB,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC;YAC9E,QAAQ,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC;YAC1D,QAAQ,CAAC,gBAAgB,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC;YAChE,QAAQ,CAAC,cAAc,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC;YAC5D,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC;QAClE,6DAA6D;SAEhE;QAED,MAAM,YAAY,GAAG,OAAO,CAAC,WAAW,EAAE,AAAC;QAC3C,MAAM,YAAY,GAAG,aAAa,CAAC,YAAY,CAAE,YAAY,CAAC,GAAG,EAAE,QAAQ,CAAE,AAAC;QAE9E,kBAAkB,CAAC,cAAc,GAAG,OAAO,CAAC;QAC5C,kBAAkB,CAAC,YAAY,GAAG,YAAY,CAAC;QAE/C,OAAO,OAAO,CAAC;KAElB;IAED,SAAS,8BAA8B,CAAE,QAAQ,EAAE,UAAU,EAAG;QAE5D,MAAM,kBAAkB,GAAG,UAAU,CAAC,GAAG,CAAE,QAAQ,CAAE,AAAC;QAEtD,kBAAkB,CAAC,cAAc,GAAG,UAAU,CAAC,cAAc,CAAC;QAC9D,kBAAkB,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;QACtD,kBAAkB,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;QAClD,kBAAkB,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;QAC1D,kBAAkB,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;QAC1D,kBAAkB,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;QACxD,kBAAkB,CAAC,iBAAiB,GAAG,UAAU,CAAC,iBAAiB,CAAC;QACpE,kBAAkB,CAAC,iBAAiB,GAAG,UAAU,CAAC,iBAAiB,CAAC;QACpE,kBAAkB,CAAC,eAAe,GAAG,UAAU,CAAC,mBAAmB,CAAC;QACpE,kBAAkB,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;QAC1D,kBAAkB,CAAC,cAAc,GAAG,UAAU,CAAC,cAAc,CAAC;QAC9D,kBAAkB,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;KAE3D;IAED,SAAS,UAAU,CAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAG;QAE7D,IAAK,KAAK,CAAC,OAAO,KAAK,IAAI,EAAG,KAAK,GAAG,WAAW,CAAC,CAAC,2CAA2C;QAE9F,QAAQ,CAAC,iBAAiB,EAAE,CAAC;QAE7B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,AAAC;QACtB,MAAM,WAAW,GAAG,QAAQ,CAAC,sBAAsB,GAAG,KAAK,CAAC,WAAW,GAAG,IAAI,AAAC;QAC/E,MAAM,QAAQ,GAAG,AAAE,oBAAoB,KAAK,IAAI,GAAK,KAAK,CAAC,cAAc,GAAK,oBAAoB,CAAC,gBAAgB,KAAK,IAAI,GAAG,oBAAoB,CAAC,OAAO,CAAC,QAAQ,GAAG,cAAc,AAAE,AAAC;QACxL,MAAM,MAAM,GAAG,AAAE,CAAA,QAAQ,CAAC,sBAAsB,GAAG,UAAU,GAAG,QAAQ,CAAA,CAAG,GAAG,CAAE,QAAQ,CAAC,MAAM,IAAI,WAAW,CAAE,AAAC;QACjH,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,KAAK,IAAI,IAAI,CAAC,CAAE,QAAQ,CAAC,UAAU,CAAC,KAAK,IAAI,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,KAAK,CAAC,AAAC;QAChI,MAAM,cAAc,GAAG,CAAC,CAAE,QAAQ,CAAC,SAAS,IAAI,CAAC,CAAE,QAAQ,CAAC,UAAU,CAAC,OAAO,AAAC;QAC/E,MAAM,YAAY,GAAG,CAAC,CAAE,QAAQ,CAAC,eAAe,CAAC,QAAQ,AAAC;QAC1D,MAAM,YAAY,GAAG,CAAC,CAAE,QAAQ,CAAC,eAAe,CAAC,MAAM,AAAC;QACxD,MAAM,WAAW,GAAG,CAAC,CAAE,QAAQ,CAAC,eAAe,CAAC,KAAK,AAAC;QACtD,MAAM,WAAW,GAAG,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,WAAW,GAAG,aAAa,AAAC;QAE5E,MAAM,cAAc,GAAG,QAAQ,CAAC,eAAe,CAAC,QAAQ,IAAI,QAAQ,CAAC,eAAe,CAAC,MAAM,IAAI,QAAQ,CAAC,eAAe,CAAC,KAAK,AAAC;QAC9H,MAAM,iBAAiB,GAAG,AAAE,cAAc,KAAK,SAAS,GAAK,cAAc,CAAC,MAAM,GAAG,CAAC,AAAC;QAEvF,MAAM,kBAAkB,GAAG,UAAU,CAAC,GAAG,CAAE,QAAQ,CAAE,AAAC;QACtD,MAAM,MAAM,GAAG,kBAAkB,CAAC,KAAK,CAAC,MAAM,AAAC;QAE/C,IAAK,gBAAgB,KAAK,IAAI,EAE1B;YAAA,IAAK,qBAAqB,KAAK,IAAI,IAAI,MAAM,KAAK,cAAc,EAAG;gBAE/D,MAAM,QAAQ,GACV,MAAM,KAAK,cAAc,IACzB,QAAQ,CAAC,EAAE,KAAK,kBAAkB,AAAC;gBAEvC,8DAA8D;gBAC9D,2DAA2D;gBAC3D,iBAAiB;gBACjB,QAAQ,CAAC,QAAQ,CAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAE,CAAC;aAEnD;SAAA,AAEJ;QAED,EAAE;QAEF,IAAI,kBAAkB,GAAG,KAAK,AAAC;QAE/B,IAAK,QAAQ,CAAC,OAAO,KAAK,kBAAkB,CAAC,SAAS,EAAG;YAErD,IAAK,kBAAkB,CAAC,WAAW,IAAM,kBAAkB,CAAC,kBAAkB,KAAK,MAAM,CAAC,KAAK,CAAC,OAAO,AAAE,EAErG,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,kBAAkB,CAAC,cAAc,KAAK,QAAQ,EAEtD,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,MAAM,CAAC,eAAe,IAAI,kBAAkB,CAAC,UAAU,KAAK,KAAK,EAEzE,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,CAAE,MAAM,CAAC,eAAe,IAAI,kBAAkB,CAAC,UAAU,KAAK,IAAI,EAE1E,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,MAAM,CAAC,aAAa,IAAI,kBAAkB,CAAC,QAAQ,KAAK,KAAK,EAErE,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,CAAE,MAAM,CAAC,aAAa,IAAI,kBAAkB,CAAC,QAAQ,KAAK,IAAI,EAEtE,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,kBAAkB,CAAC,MAAM,KAAK,MAAM,EAE5C,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,QAAQ,CAAC,GAAG,IAAI,kBAAkB,CAAC,GAAG,KAAK,GAAG,EAEtD,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,kBAAkB,CAAC,iBAAiB,KAAK,SAAS,IACxD,CAAA,kBAAkB,CAAC,iBAAiB,KAAK,QAAQ,CAAC,SAAS,IAC7D,kBAAkB,CAAC,eAAe,KAAK,QAAQ,CAAC,eAAe,CAAA,AAAE,EAEjE,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,kBAAkB,CAAC,YAAY,KAAK,YAAY,EAExD,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,kBAAkB,CAAC,cAAc,KAAK,cAAc,EAE5D,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,kBAAkB,CAAC,YAAY,KAAK,YAAY,EAExD,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,kBAAkB,CAAC,YAAY,KAAK,YAAY,EAExD,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,kBAAkB,CAAC,WAAW,KAAK,WAAW,EAEtD,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,kBAAkB,CAAC,WAAW,KAAK,WAAW,EAEtD,kBAAkB,GAAG,IAAI,CAAC;iBAEvB,IAAK,YAAY,CAAC,QAAQ,KAAK,IAAI,IAAI,kBAAkB,CAAC,iBAAiB,KAAK,iBAAiB,EAEpG,kBAAkB,GAAG,IAAI,CAAC;SAIjC,MAAM;YAEH,kBAAkB,GAAG,IAAI,CAAC;YAC1B,kBAAkB,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC;SAEnD;QAED,EAAE;QAEF,IAAI,OAAO,GAAG,kBAAkB,CAAC,cAAc,AAAC;QAEhD,IAAK,kBAAkB,KAAK,IAAI,EAE5B,OAAO,GAAG,UAAU,CAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAIpD,IAAI,cAAc,GAAG,KAAK,AAAC;QAC3B,IAAI,eAAe,GAAG,KAAK,AAAC;QAC5B,IAAI,aAAa,GAAG,KAAK,AAAC;QAE1B,MAAM,UAAU,GAAG,OAAO,CAAC,WAAW,EAAE,EACpC,UAAU,GAAG,kBAAkB,CAAC,QAAQ,AAAC;QAE7C,IAAK,KAAK,CAAC,UAAU,CAAE,OAAO,CAAC,OAAO,CAAE,EAAG;YAEvC,cAAc,GAAG,IAAI,CAAC;YACtB,eAAe,GAAG,IAAI,CAAC;YACvB,aAAa,GAAG,IAAI,CAAC;SAExB;QAED,IAAK,QAAQ,CAAC,EAAE,KAAK,kBAAkB,EAAG;YAEtC,kBAAkB,GAAG,QAAQ,CAAC,EAAE,CAAC;YAEjC,eAAe,GAAG,IAAI,CAAC;SAE1B;QAED,IAAK,cAAc,IAAI,cAAc,KAAK,MAAM,EAAG;YAE/C,UAAU,CAAC,QAAQ,CAAE,GAAG,EAAE,kBAAkB,EAAE,MAAM,CAAC,gBAAgB,CAAE,CAAC;YAExE,IAAK,YAAY,CAAC,sBAAsB,EAEpC,UAAU,CAAC,QAAQ,CAAE,GAAG,EAAE,eAAe,EACrC,CAAG,GAAK,CAAA,IAAI,CAAC,GAAG,CAAE,MAAM,CAAC,GAAG,GAAG,CAAG,CAAE,GAAG,IAAI,CAAC,GAAG,CAAA,AAAE,CAAE,CAAC;YAI5D,IAAK,cAAc,KAAK,MAAM,EAAG;gBAE7B,cAAc,GAAG,MAAM,CAAC;gBAExB,8DAA8D;gBAC9D,8DAA8D;gBAC9D,8CAA8C;gBAE9C,eAAe,GAAG,IAAI,CAAC,CAAE,iCAAiC;gBAC1D,aAAa,GAAG,IAAI,CAAC,CAAE,gCAAgC;aAE1D;YAED,kCAAkC;YAClC,8DAA8D;YAE9D,IAAK,QAAQ,CAAC,gBAAgB,IAC1B,QAAQ,CAAC,mBAAmB,IAC5B,QAAQ,CAAC,kBAAkB,IAC3B,QAAQ,CAAC,sBAAsB,IAC/B,QAAQ,CAAC,MAAM,EAAG;gBAElB,MAAM,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,cAAc,AAAC;gBAE9C,IAAK,OAAO,KAAK,SAAS,EAEtB,OAAO,CAAC,QAAQ,CAAE,GAAG,EACjB,QAAQ,CAAC,qBAAqB,CAAE,MAAM,CAAC,WAAW,CAAE,CAAE,CAAC;aAIlE;YAED,IAAK,QAAQ,CAAC,mBAAmB,IAC7B,QAAQ,CAAC,kBAAkB,IAC3B,QAAQ,CAAC,qBAAqB,IAC9B,QAAQ,CAAC,mBAAmB,IAC5B,QAAQ,CAAC,sBAAsB,IAC/B,QAAQ,CAAC,gBAAgB,EAEzB,UAAU,CAAC,QAAQ,CAAE,GAAG,EAAE,gBAAgB,EAAE,MAAM,CAAC,oBAAoB,KAAK,IAAI,CAAE,CAAC;YAIvF,IAAK,QAAQ,CAAC,mBAAmB,IAC7B,QAAQ,CAAC,kBAAkB,IAC3B,QAAQ,CAAC,qBAAqB,IAC9B,QAAQ,CAAC,mBAAmB,IAC5B,QAAQ,CAAC,sBAAsB,IAC/B,QAAQ,CAAC,gBAAgB,IACzB,QAAQ,CAAC,gBAAgB,IACzB,MAAM,CAAC,aAAa,EAEpB,UAAU,CAAC,QAAQ,CAAE,GAAG,EAAE,YAAY,EAAE,MAAM,CAAC,kBAAkB,CAAE,CAAC;SAI3E;QAED,gFAAgF;QAChF,wFAAwF;QACxF,qHAAqH;QAErH,IAAK,MAAM,CAAC,aAAa,EAAG;YAExB,UAAU,CAAC,WAAW,CAAE,GAAG,EAAE,MAAM,EAAE,YAAY,CAAE,CAAC;YACpD,UAAU,CAAC,WAAW,CAAE,GAAG,EAAE,MAAM,EAAE,mBAAmB,CAAE,CAAC;YAE3D,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;YAEjC,IAAK,QAAQ;gBAET,IAAK,YAAY,CAAC,mBAAmB,EAAG;oBAEpC,IAAK,QAAQ,CAAC,WAAW,KAAK,IAAI,EAAG,QAAQ,CAAC,kBAAkB,EAAE,CAAC;oBAEnE,UAAU,CAAC,QAAQ,CAAE,GAAG,EAAE,aAAa,EAAE,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAE,CAAC;oBAC1E,UAAU,CAAC,QAAQ,CAAE,GAAG,EAAE,iBAAiB,EAAE,QAAQ,CAAC,eAAe,CAAE,CAAC;iBAE3E,MAEG,UAAU,CAAC,WAAW,CAAE,GAAG,EAAE,QAAQ,EAAE,cAAc,CAAE,CAAC;aAI/D;SAEJ;QAED,MAAM,eAAe,GAAG,QAAQ,CAAC,eAAe,AAAC;QAEjD,IAAK,eAAe,CAAC,QAAQ,KAAK,SAAS,IAAI,eAAe,CAAC,MAAM,KAAK,SAAS,IAAM,eAAe,CAAC,KAAK,KAAK,SAAS,IAAI,YAAY,CAAC,QAAQ,KAAK,IAAI,AAAE,EAE5J,YAAY,CAAC,MAAM,CAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAE,CAAC;QAK/D,IAAK,eAAe,IAAI,kBAAkB,CAAC,aAAa,KAAK,MAAM,CAAC,aAAa,EAAG;YAEhF,kBAAkB,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;YACxD,UAAU,CAAC,QAAQ,CAAE,GAAG,EAAE,eAAe,EAAE,MAAM,CAAC,aAAa,CAAE,CAAC;SAErE;QAED,IAAK,eAAe,EAAG;YAEnB,UAAU,CAAC,QAAQ,CAAE,GAAG,EAAE,qBAAqB,EAAE,KAAK,CAAC,mBAAmB,CAAE,CAAC;YAE7E,IAAK,kBAAkB,CAAC,WAAW,EAE/B,8CAA8C;YAE9C,uDAAuD;YACvD,uDAAuD;YACvD,SAAS;YACT,EAAE;YACF,uDAAuD;YACvD,6BAA6B;YAE7B,6BAA6B,CAAE,UAAU,EAAE,aAAa,CAAE,CAAC;YAI/D,+CAA+C;YAE/C,IAAK,GAAG,IAAI,QAAQ,CAAC,GAAG,EAEpB,SAAS,CAAC,kBAAkB,CAAE,UAAU,EAAE,GAAG,CAAE,CAAC;YAIpD,SAAS,CAAC,uBAAuB,CAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,yBAAyB,CAAE,CAAC;YAE3G,aAAa,CAAC,MAAM,CAAE,GAAG,EAAE,kBAAkB,CAAC,YAAY,EAAE,UAAU,EAAE,QAAQ,CAAE,CAAC;SAEtF;QAED,IAAK,QAAQ,CAAC,gBAAgB,IAAI,QAAQ,CAAC,kBAAkB,KAAK,IAAI,EAAG;YAErE,aAAa,CAAC,MAAM,CAAE,GAAG,EAAE,kBAAkB,CAAC,YAAY,EAAE,UAAU,EAAE,QAAQ,CAAE,CAAC;YACnF,QAAQ,CAAC,kBAAkB,GAAG,KAAK,CAAC;SAEvC;QAED,IAAK,QAAQ,CAAC,gBAAgB,EAE1B,UAAU,CAAC,QAAQ,CAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAE,CAAC;QAIxD,kBAAkB;QAElB,UAAU,CAAC,QAAQ,CAAE,GAAG,EAAE,iBAAiB,EAAE,MAAM,CAAC,eAAe,CAAE,CAAC;QACtE,UAAU,CAAC,QAAQ,CAAE,GAAG,EAAE,cAAc,EAAE,MAAM,CAAC,YAAY,CAAE,CAAC;QAChE,UAAU,CAAC,QAAQ,CAAE,GAAG,EAAE,aAAa,EAAE,MAAM,CAAC,WAAW,CAAE,CAAC;QAE9D,OAAO,OAAO,CAAC;KAElB;IAED,4EAA4E;IAE5E,SAAS,6BAA6B,CAAE,QAAQ,EAAE,KAAK,EAAG;QAEtD,QAAQ,CAAC,iBAAiB,CAAC,WAAW,GAAG,KAAK,CAAC;QAC/C,QAAQ,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC;QAExC,QAAQ,CAAC,iBAAiB,CAAC,WAAW,GAAG,KAAK,CAAC;QAC/C,QAAQ,CAAC,uBAAuB,CAAC,WAAW,GAAG,KAAK,CAAC;QACrD,QAAQ,CAAC,WAAW,CAAC,WAAW,GAAG,KAAK,CAAC;QACzC,QAAQ,CAAC,iBAAiB,CAAC,WAAW,GAAG,KAAK,CAAC;QAC/C,QAAQ,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC;QACxC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC;QAC9C,QAAQ,CAAC,cAAc,CAAC,WAAW,GAAG,KAAK,CAAC;QAC5C,QAAQ,CAAC,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC;KAEjD;IAED,SAAS,mBAAmB,CAAE,QAAQ,EAAG;QAErC,OAAO,QAAQ,CAAC,qBAAqB,IAAI,QAAQ,CAAC,kBAAkB,IAAI,QAAQ,CAAC,mBAAmB,IAChG,QAAQ,CAAC,sBAAsB,IAAI,QAAQ,CAAC,gBAAgB,IAC1D,QAAQ,CAAC,gBAAgB,IAAI,QAAQ,CAAC,MAAM,KAAK,IAAI,AAAE,CAAC;KAEjE;IAED,IAAI,CAAC,iBAAiB,GAAG,WAAY;QAEjC,OAAO,sBAAsB,CAAC;KAEjC,CAAC;IAEF,IAAI,CAAC,oBAAoB,GAAG,WAAY;QAEpC,OAAO,yBAAyB,CAAC;KAEpC,CAAC;IAEF,IAAI,CAAC,eAAe,GAAG,WAAY;QAE/B,OAAO,oBAAoB,CAAC;KAE/B,CAAC;IAEF,IAAI,CAAC,uBAAuB,GAAG,SAAW,YAAY,EAAE,YAAY,EAAE,YAAY,EAAG;QAEjF,UAAU,CAAC,GAAG,CAAE,YAAY,CAAC,OAAO,CAAE,CAAC,cAAc,GAAG,YAAY,CAAC;QACrE,UAAU,CAAC,GAAG,CAAE,YAAY,CAAC,YAAY,CAAE,CAAC,cAAc,GAAG,YAAY,CAAC;QAE1E,MAAM,sBAAsB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAE,AAAC;QAC9D,sBAAsB,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAEpD,IAAK,sBAAsB,CAAC,qBAAqB,EAAG;YAEhD,sBAAsB,CAAC,yBAAyB,GAAG,YAAY,KAAK,SAAS,CAAC;YAE9E,IAAK,CAAE,sBAAsB,CAAC,yBAAyB,EAEnD,6EAA6E;YAC7E,mFAAmF;YACnF;gBAAA,IAAK,UAAU,CAAC,GAAG,CAAE,sCAAsC,CAAE,KAAK,IAAI,EAAG;oBAErE,OAAO,CAAC,IAAI,CAAE,wGAAwG,CAAE,CAAC;oBACzH,sBAAsB,CAAC,oBAAoB,GAAG,KAAK,CAAC;iBAEvD;aAAA,AAEJ;SAEJ;KAEJ,CAAC;IAEF,IAAI,CAAC,0BAA0B,GAAG,SAAW,YAAY,EAAE,kBAAkB,EAAG;QAE5E,MAAM,sBAAsB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAE,AAAC;QAC9D,sBAAsB,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC/D,sBAAsB,CAAC,uBAAuB,GAAG,kBAAkB,KAAK,SAAS,CAAC;KAErF,CAAC;IAEF,IAAI,CAAC,eAAe,GAAG,SAAW,YAAY,EAAE,cAAc,GAAG,CAAC,EAAE,iBAAiB,GAAG,CAAC,EAAG;QAExF,oBAAoB,GAAG,YAAY,CAAC;QACpC,sBAAsB,GAAG,cAAc,CAAC;QACxC,yBAAyB,GAAG,iBAAiB,CAAC;QAE9C,IAAI,qBAAqB,GAAG,IAAI,AAAC;QAEjC,IAAK,YAAY,EAAG;YAEhB,MAAM,sBAAsB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAE,AAAC;YAE9D,IAAK,sBAAsB,CAAC,uBAAuB,KAAK,SAAS,EAAG;gBAEhE,kDAAkD;gBAClD,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;gBACrC,qBAAqB,GAAG,KAAK,CAAC;aAEjC,MAAM,IAAK,sBAAsB,CAAC,kBAAkB,KAAK,SAAS,EAE/D,QAAQ,CAAC,iBAAiB,CAAE,YAAY,CAAE,CAAC;iBAExC,IAAK,sBAAsB,CAAC,qBAAqB,EAEpD,gFAAgF;YAChF,QAAQ,CAAC,cAAc,CAAE,YAAY,EAAE,UAAU,CAAC,GAAG,CAAE,YAAY,CAAC,OAAO,CAAE,CAAC,cAAc,EAAE,UAAU,CAAC,GAAG,CAAE,YAAY,CAAC,YAAY,CAAE,CAAC,cAAc,CAAE,CAAC;SAIlK;QAED,IAAI,WAAW,GAAG,IAAI,AAAC;QACvB,IAAI,MAAM,GAAG,KAAK,AAAC;QACnB,IAAI,gBAAgB,GAAG,KAAK,AAAC;QAE7B,IAAK,YAAY,EAAG;YAEhB,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,AAAC;YAErC,IAAK,OAAO,CAAC,eAAe,IAAI,OAAO,CAAC,kBAAkB,EAEtD,gBAAgB,GAAG,IAAI,CAAC;YAI5B,MAAM,kBAAkB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC,kBAAkB,AAAC;YAE7E,IAAK,YAAY,CAAC,uBAAuB,EAAG;gBAExC,WAAW,GAAG,kBAAkB,CAAE,cAAc,CAAE,CAAC;gBACnD,MAAM,GAAG,IAAI,CAAC;aAEjB,MAAM,IAAK,AAAE,YAAY,CAAC,QAAQ,IAAI,YAAY,CAAC,OAAO,GAAG,CAAC,IAAM,QAAQ,CAAC,kBAAkB,CAAE,YAAY,CAAE,KAAK,KAAK,EAEtH,WAAW,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC,8BAA8B,CAAC;iBAI5E,WAAW,GAAG,kBAAkB,CAAC;YAIrC,gBAAgB,CAAC,IAAI,CAAE,YAAY,CAAC,QAAQ,CAAE,CAAC;YAC/C,eAAe,CAAC,IAAI,CAAE,YAAY,CAAC,OAAO,CAAE,CAAC;YAC7C,mBAAmB,GAAG,YAAY,CAAC,WAAW,CAAC;SAElD,MAAM;YAEH,gBAAgB,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC,cAAc,CAAE,WAAW,CAAE,CAAC,KAAK,EAAE,CAAC;YACzE,eAAe,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC,cAAc,CAAE,WAAW,CAAE,CAAC,KAAK,EAAE,CAAC;YACvE,mBAAmB,GAAG,YAAY,CAAC;SAEtC;QAED,MAAM,gBAAgB,GAAG,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,WAAW,CAAE,AAAC;QAErE,IAAK,gBAAgB,IAAI,YAAY,CAAC,WAAW,IAAI,qBAAqB,EAEtE,KAAK,CAAC,WAAW,CAAE,YAAY,EAAE,WAAW,CAAE,CAAC;QAInD,KAAK,CAAC,QAAQ,CAAE,gBAAgB,CAAE,CAAC;QACnC,KAAK,CAAC,OAAO,CAAE,eAAe,CAAE,CAAC;QACjC,KAAK,CAAC,cAAc,CAAE,mBAAmB,CAAE,CAAC;QAE5C,IAAK,MAAM,EAAG;YAEV,MAAM,iBAAiB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAC,OAAO,CAAE,AAAC;YACjE,GAAG,CAAC,oBAAoB,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,cAAc,EAAE,iBAAiB,CAAC,cAAc,EAAE,iBAAiB,CAAE,CAAC;SAEzH,MAAM,IAAK,gBAAgB,EAAG;YAE3B,MAAM,iBAAiB,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAC,OAAO,CAAE,AAAC;YACjE,MAAM,KAAK,GAAG,cAAc,IAAI,CAAC,AAAC;YAClC,GAAG,CAAC,uBAAuB,CAAE,KAAK,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,EAAE,iBAAiB,IAAI,CAAC,EAAE,KAAK,CAAE,CAAC;SAEhH;QAED,kBAAkB,GAAG,EAAG,CAAC,CAAC,4DAA4D;KAEzF,CAAC;IAEF,IAAI,CAAC,sBAAsB,GAAG,SAAW,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,mBAAmB,EAAG;QAEtG,IAAK,CAAI,CAAA,YAAY,IAAI,YAAY,CAAC,mBAAmB,CAAA,AAAE,EAAG;YAE1D,OAAO,CAAC,KAAK,CAAE,0FAA0F,CAAE,CAAC;YAC5G,OAAO;SAEV;QAED,IAAI,WAAW,GAAG,UAAU,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC,kBAAkB,AAAC;QAEpE,IAAK,YAAY,CAAC,uBAAuB,IAAI,mBAAmB,KAAK,SAAS,EAE1E,WAAW,GAAG,WAAW,CAAE,mBAAmB,CAAE,CAAC;QAIrD,IAAK,WAAW,EAAG;YAEf,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,WAAW,CAAE,CAAC;YAE5C,IAAI;gBAEA,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,AAAC;gBACrC,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,AAAC;gBACrC,MAAM,WAAW,GAAG,OAAO,CAAC,IAAI,AAAC;gBAEjC,IAAK,aAAa,KAAK,UAAU,IAAI,KAAK,CAAC,OAAO,CAAE,aAAa,CAAE,KAAK,GAAG,CAAC,YAAY,CAAE,KAAK,CAAE,EAAG;oBAEhG,OAAO,CAAC,KAAK,CAAE,2GAA2G,CAAE,CAAC;oBAC7H,OAAO;iBAEV;gBAED,MAAM,uBAAuB,GAAG,AAAE,WAAW,KAAK,aAAa,IAAQ,CAAA,UAAU,CAAC,GAAG,CAAE,6BAA6B,CAAE,IAAM,YAAY,CAAC,QAAQ,IAAI,UAAU,CAAC,GAAG,CAAE,wBAAwB,CAAE,AAAE,CAAA,AAAE,AAAC;gBAEpM,IAAK,WAAW,KAAK,gBAAgB,IAAI,KAAK,CAAC,OAAO,CAAE,WAAW,CAAE,KAAK,GAAG,CAAC,YAAY,CAAE,KAAK,CAAE,IAC/F,CAAI,CAAA,WAAW,KAAK,SAAS,IAAM,CAAA,YAAY,CAAC,QAAQ,IAAI,UAAU,CAAC,GAAG,CAAE,mBAAmB,CAAE,IAAI,UAAU,CAAC,GAAG,CAAE,0BAA0B,CAAE,CAAA,AAAE,CAAA,AAAE,IACrJ,CAAE,uBAAuB,EAAG;oBAE5B,OAAO,CAAC,KAAK,CAAE,qHAAqH,CAAE,CAAC;oBACvI,OAAO;iBAEV;gBAED,8FAA8F;gBAE9F,IAAK,AAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAM,YAAY,CAAC,KAAK,GAAG,KAAK,AAAE,IAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAM,YAAY,CAAC,MAAM,GAAG,MAAM,AAAE,AAAE,EAEzG,GAAG,CAAC,UAAU,CAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,OAAO,CAAE,aAAa,CAAE,EAAE,KAAK,CAAC,OAAO,CAAE,WAAW,CAAE,EAAE,MAAM,CAAE,CAAC;aAInH,QAAS;gBAEN,4DAA4D;gBAE5D,MAAM,WAAW,GAAG,AAAE,oBAAoB,KAAK,IAAI,GAAK,UAAU,CAAC,GAAG,CAAE,oBAAoB,CAAE,CAAC,kBAAkB,GAAG,IAAI,AAAC;gBACzH,KAAK,CAAC,eAAe,CAAE,KAAK,EAAE,WAAW,CAAE,CAAC;aAE/C;SAEJ;KAEJ,CAAC;IAEF,IAAI,CAAC,wBAAwB,GAAG,SAAW,QAAQ,EAAE,OAAO,EAAE,KAAK,GAAG,CAAC,EAAG;QAEtE,IAAK,OAAO,CAAC,oBAAoB,KAAK,IAAI,EAAG;YAEzC,OAAO,CAAC,KAAK,CAAE,2FAA2F,CAAE,CAAC;YAC7G,OAAO;SAEV;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAE,KAAK,CAAE,AAAC;QAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAE,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAE,AAAC;QAC7D,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAE,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAE,AAAC;QAE/D,QAAQ,CAAC,YAAY,CAAE,OAAO,EAAE,CAAC,CAAE,CAAC;QAEpC,GAAG,CAAC,iBAAiB,CAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAElF,KAAK,CAAC,aAAa,EAAE,CAAC;KAEzB,CAAC;IAEF,IAAI,CAAC,oBAAoB,GAAG,SAAW,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,KAAK,GAAG,CAAC,EAAG;QAEjF,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,AAAC;QACrC,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,AAAC;QACvC,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAE,UAAU,CAAC,MAAM,CAAE,AAAC;QACpD,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAE,UAAU,CAAC,IAAI,CAAE,AAAC;QAEhD,QAAQ,CAAC,YAAY,CAAE,UAAU,EAAE,CAAC,CAAE,CAAC;QAEvC,yDAAyD;QACzD,4DAA4D;QAC5D,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,UAAU,CAAC,KAAK,CAAE,CAAC;QAC3C,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,UAAU,CAAC,gBAAgB,CAAE,CAAC;QACtD,GAAG,CAAC,WAAW,CAAE,IAAI,EAAE,UAAU,CAAC,eAAe,CAAE,CAAC;QAEpD,IAAK,UAAU,CAAC,aAAa,EAEzB,GAAG,CAAC,aAAa,CAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI,CAAE,CAAC;aAIjH,IAAK,UAAU,CAAC,mBAAmB,EAE/B,GAAG,CAAC,uBAAuB,CAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC,KAAK,EAAE,UAAU,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,CAAC;aAI1K,GAAG,CAAC,aAAa,CAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,KAAK,CAAE,CAAC;QAMrG,6CAA6C;QAC7C,IAAK,KAAK,KAAK,CAAC,IAAI,UAAU,CAAC,eAAe,EAAG,GAAG,CAAC,cAAc,CAAE,IAAI,CAAE,CAAC;QAE5E,KAAK,CAAC,aAAa,EAAE,CAAC;KAEzB,CAAC;IAEF,IAAI,CAAC,sBAAsB,GAAG,SAAW,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,KAAK,GAAG,CAAC,EAAG;QAE9F,IAAK,KAAK,CAAC,gBAAgB,EAAG;YAE1B,OAAO,CAAC,IAAI,CAAE,2EAA2E,CAAE,CAAC;YAC5F,OAAO;SAEV;QAED,MAAM,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAAC;QACpD,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAAC;QACrD,MAAM,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAAC;QACpD,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAE,UAAU,CAAC,MAAM,CAAE,AAAC;QACpD,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAE,UAAU,CAAC,IAAI,CAAE,AAAC;QAChD,IAAI,QAAQ,AAAC;QAEb,IAAK,UAAU,CAAC,eAAe,EAAG;YAE9B,QAAQ,CAAC,YAAY,CAAE,UAAU,EAAE,CAAC,CAAE,CAAC;YACvC,QAAQ,GAAG,KAAK,CAAC;SAEpB,MAAM,IAAK,UAAU,CAAC,kBAAkB,EAAG;YAExC,QAAQ,CAAC,iBAAiB,CAAE,UAAU,EAAE,CAAC,CAAE,CAAC;YAC5C,QAAQ,GAAG,KAAK,CAAC;SAEpB,MAAM;YAEH,OAAO,CAAC,IAAI,CAAE,6GAA6G,CAAE,CAAC;YAC9H,OAAO;SAEV;QAED,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,UAAU,CAAC,KAAK,CAAE,CAAC;QAC3C,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,UAAU,CAAC,gBAAgB,CAAE,CAAC;QACtD,GAAG,CAAC,WAAW,CAAE,IAAI,EAAE,UAAU,CAAC,eAAe,CAAE,CAAC;QAEpD,MAAM,YAAY,GAAG,GAAG,CAAC,YAAY,CAAE,IAAI,CAAE,AAAC;QAC9C,MAAM,iBAAiB,GAAG,GAAG,CAAC,YAAY,CAAE,KAAK,CAAE,AAAC;QACpD,MAAM,gBAAgB,GAAG,GAAG,CAAC,YAAY,CAAE,IAAI,CAAE,AAAC;QAClD,MAAM,cAAc,GAAG,GAAG,CAAC,YAAY,CAAE,IAAI,CAAE,AAAC;QAChD,MAAM,gBAAgB,GAAG,GAAG,CAAC,YAAY,CAAE,KAAK,CAAE,AAAC;QAEnD,MAAM,KAAK,GAAG,UAAU,CAAC,mBAAmB,GAAG,UAAU,CAAC,OAAO,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,KAAK,AAAC;QAE1F,GAAG,CAAC,WAAW,CAAE,IAAI,EAAE,KAAK,CAAC,KAAK,CAAE,CAAC;QACrC,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,KAAK,CAAC,MAAM,CAAE,CAAC;QACvC,GAAG,CAAC,WAAW,CAAE,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC;QACzC,GAAG,CAAC,WAAW,CAAE,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC;QACzC,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC;QAE1C,IAAK,UAAU,CAAC,aAAa,IAAI,UAAU,CAAC,eAAe,EAEvD,GAAG,CAAC,aAAa,CAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAE,CAAC;aAI7H,IAAK,UAAU,CAAC,mBAAmB,EAAG;YAElC,OAAO,CAAC,IAAI,CAAE,yFAAyF,CAAE,CAAC;YAC1G,GAAG,CAAC,uBAAuB,CAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAE,CAAC;SAElI,MAEG,GAAG,CAAC,aAAa,CAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAE,CAAC;QAMhI,GAAG,CAAC,WAAW,CAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QACtC,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,iBAAiB,CAAE,CAAC;QAC5C,GAAG,CAAC,WAAW,CAAE,IAAI,EAAE,gBAAgB,CAAE,CAAC;QAC1C,GAAG,CAAC,WAAW,CAAE,IAAI,EAAE,cAAc,CAAE,CAAC;QACxC,GAAG,CAAC,WAAW,CAAE,KAAK,EAAE,gBAAgB,CAAE,CAAC;QAE3C,6CAA6C;QAC7C,IAAK,KAAK,KAAK,CAAC,IAAI,UAAU,CAAC,eAAe,EAAG,GAAG,CAAC,cAAc,CAAE,QAAQ,CAAE,CAAC;QAEhF,KAAK,CAAC,aAAa,EAAE,CAAC;KAEzB,CAAC;IAEF,IAAI,CAAC,WAAW,GAAG,SAAW,OAAO,EAAG;QAEpC,QAAQ,CAAC,YAAY,CAAE,OAAO,EAAE,CAAC,CAAE,CAAC;QAEpC,KAAK,CAAC,aAAa,EAAE,CAAC;KAEzB,CAAC;IAEF,IAAI,CAAC,UAAU,GAAG,WAAY;QAE1B,sBAAsB,GAAG,CAAC,CAAC;QAC3B,yBAAyB,GAAG,CAAC,CAAC;QAC9B,oBAAoB,GAAG,IAAI,CAAC;QAE5B,KAAK,CAAC,KAAK,EAAE,CAAC;QACd,aAAa,CAAC,KAAK,EAAE,CAAC;KAEzB,CAAC;IAEF,IAAK,OAAO,kBAAkB,KAAK,WAAW,EAE1C,kBAAkB,CAAC,aAAa,CAAE,IAAI,WAAW,CAAE,SAAS,EAAE;QAAE,MAAM,EAAE,IAAI;KAAE,CAAE,CAAE,CAAC;CAI1F;AAED,aAAa,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC;AAE/C,MAAM,cAAc,SAAS,aAAa;CAAG;AAE7C,cAAc,CAAC,SAAS,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAEjD,MAAM,OAAO;IAET,YAAa,KAAK,EAAE,OAAO,GAAG,OAAO,CAAG;QAEpC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAEf,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAE,KAAK,CAAE,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAE1B;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,OAAO,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAE,CAAC;KAElD;IAED,MAAM,GAAe;QAEjB,OAAO;YACH,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAC1B,OAAO,EAAE,IAAI,CAAC,OAAO;SACxB,CAAC;KAEL;CAEJ;AAED,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;AAEnC,MAAM,GAAG;IAEL,YAAa,KAAK,EAAE,IAAI,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAG;QAEvC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAEf,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAE,KAAK,CAAE,CAAC;QAEhC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAElB;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,GAAG,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC;KAErD;IAED,MAAM,GAAe;QAEjB,OAAO;YACH,IAAI,EAAE,KAAK;YACX,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAC1B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,GAAG,EAAE,IAAI,CAAC,GAAG;SAChB,CAAC;KAEL;CAEJ;AAED,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;AAE3B,MAAM,KAAK,SAAS,QAAQ;IAExB,aAAc;QAEV,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QAEpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,0BAA0B;QAElD,IAAK,OAAO,kBAAkB,KAAK,WAAW,EAE1C,kBAAkB,CAAC,aAAa,CAAE,IAAI,WAAW,CAAE,SAAS,EAAE;YAAE,MAAM,EAAE,IAAI;SAAE,CAAE,CAAE,CAAC;KAI1F;IAED,IAAI,CAAE,MAAM,EAAE,SAAS,EAAG;QAEtB,KAAK,CAAC,IAAI,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;QAEhC,IAAK,MAAM,CAAC,UAAU,KAAK,IAAI,EAAG,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QAC9E,IAAK,MAAM,CAAC,WAAW,KAAK,IAAI,EAAG,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACjF,IAAK,MAAM,CAAC,GAAG,KAAK,IAAI,EAAG,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QAEzD,IAAK,MAAM,CAAC,gBAAgB,KAAK,IAAI,EAAG,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAEhG,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAEhD,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAE,IAAI,CAAE,AAAC;QAElC,IAAK,IAAI,CAAC,GAAG,KAAK,IAAI,EAAG,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QAE7D,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;AAE/B,MAAM,iBAAiB;IAEnB,YAAa,KAAK,EAAE,MAAM,CAAG;QAEzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;QAE7D,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG;YAAE,MAAM,EAAE,CAAC;YAAE,KAAK,EAAE,EAAG;SAAE,CAAC;QAE7C,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QAEjB,IAAI,CAAC,IAAI,GAAG,YAAY,EAAE,CAAC;KAE9B;IAED,gBAAgB,GAAG,EAAE;IAErB,IAAI,WAAW,CAAE,KAAK,EAAG;QAErB,IAAK,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC,OAAO,EAAG,CAAC;KAEzC;IAED,QAAQ,CAAE,KAAK,EAAG;QAEd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAC1D,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAG;QAEhC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;QACtB,MAAM,IAAI,SAAS,CAAC,MAAM,CAAC;QAE3B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAEzC,IAAI,CAAC,KAAK,CAAE,MAAM,GAAG,IAAC,CAAE,GAAG,SAAS,CAAC,KAAK,CAAE,MAAM,GAAG,IAAC,CAAE,CAAC;QAI7D,OAAO,IAAI,CAAC;KAEf;IAED,GAAG,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAG;QAErB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,IAAI,EAAG;QAEV,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAEhC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAI3B,IAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,EAEtC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,YAAY,EAAE,CAAC;QAI7C,IAAK,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAE,KAAK,SAAS,EAE3D,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,MAAM,CAAC;QAIhF,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAE,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAE,CAAE,AAAC;QAEzF,MAAM,EAAE,GAAG,IAAI,IAAI,CAAC,WAAW,CAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAE,AAAC;QACtD,EAAE,CAAC,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;QAE1B,OAAO,EAAE,CAAC;KAEb;IAED,QAAQ,CAAE,QAAQ,EAAG;QAEjB,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAEhC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAI3B,8CAA8C;QAE9C,IAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,EAEtC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,YAAY,EAAE,CAAC;QAI7C,IAAK,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAE,KAAK,SAAS,EAE3D,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAE,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,WAAW,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,CAAE,CAAC;QAItH,EAAE;QAEF,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK;YAC/B,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI;YACjC,MAAM,EAAE,IAAI,CAAC,MAAM;SACtB,CAAC;KAEL;CAEJ;AAED,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAEvD,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE9C,MAAM,0BAA0B;IAE5B,YAAa,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,GAAG,KAAK,CAAG;QAEnE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAEf,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,UAAU,GAAG,UAAU,KAAK,IAAI,CAAC;KAEzC;IAED,IAAI,KAAK,GAAG;QAER,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;KAE1B;IAED,IAAI,KAAK,GAAG;QAER,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;KAE1B;IAED,IAAI,WAAW,CAAE,KAAK,EAAG;QAErB,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAEjC;IAED,YAAY,CAAE,CAAC,EAAG;QAEd,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAEhD,SAAS,CAAC,mBAAmB,CAAE,IAAI,EAAE,IAAC,CAAE,CAAC;YAEzC,SAAS,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC;YAE5B,IAAI,CAAC,MAAM,CAAE,IAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAE,CAAC;SAE3D;QAED,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,CAAE,CAAC,EAAG;QAEnB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE3C,SAAS,CAAC,mBAAmB,CAAE,IAAI,EAAE,IAAC,CAAE,CAAC;YAEzC,SAAS,CAAC,iBAAiB,CAAE,CAAC,CAAE,CAAC;YAEjC,IAAI,CAAC,MAAM,CAAE,IAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAE,CAAC;SAE3D;QAED,OAAO,IAAI,CAAC;KAEf;IAED,kBAAkB,CAAE,CAAC,EAAG;QAEpB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE3C,SAAS,CAAC,mBAAmB,CAAE,IAAI,EAAE,IAAC,CAAE,CAAC;YAEzC,SAAS,CAAC,kBAAkB,CAAE,CAAC,CAAE,CAAC;YAElC,IAAI,CAAC,MAAM,CAAE,IAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAE,CAAC;SAE3D;QAED,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,KAAK,EAAE,CAAC,EAAG;QAEb,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAE,GAAG,CAAC,CAAC;QAE9D,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,KAAK,EAAE,CAAC,EAAG;QAEb,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAElE,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,KAAK,EAAE,CAAC,EAAG;QAEb,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAElE,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,KAAK,EAAE,CAAC,EAAG;QAEb,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAElE,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,KAAK,EAAG;QAEV,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAE,CAAC;KAEpE;IAED,IAAI,CAAE,KAAK,EAAG;QAEV,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;KAExE;IAED,IAAI,CAAE,KAAK,EAAG;QAEV,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;KAExE;IAED,IAAI,CAAE,KAAK,EAAG;QAEV,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;KAExE;IAED,KAAK,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAG;QAEjB,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAE/C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAErB,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAE/C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAEzB,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAE/C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,IAAI,EAAG;QAEV,IAAK,IAAI,KAAK,SAAS,EAAG;YAEtB,OAAO,CAAC,GAAG,CAAE,iHAAiH,CAAE,CAAC;YAEjI,MAAM,KAAK,GAAG,EAAE,AAAC;YAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,KAAK,EAAE,IAAC,EAAG,CAAG;gBAEpC,MAAM,KAAK,GAAG,IAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;gBAEjD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAG,CAEpC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,CAAE,CAAC;aAIlD;YAED,OAAO,IAAI,eAAe,CAAE,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAE,KAAK,CAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAE,CAAC;SAErG,MAAM;YAEH,IAAK,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAEtC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAIjC,IAAK,IAAI,CAAC,kBAAkB,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,KAAK,SAAS,EAExD,IAAI,CAAC,kBAAkB,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;YAIxE,OAAO,IAAI,0BAA0B,CAAE,IAAI,CAAC,kBAAkB,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAE,CAAC;SAEnI;KAEJ;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,IAAK,IAAI,KAAK,SAAS,EAAG;YAEtB,OAAO,CAAC,GAAG,CAAE,sHAAsH,CAAE,CAAC;YAEtI,MAAM,KAAK,GAAG,EAAE,AAAC;YAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,KAAK,EAAE,IAAC,EAAG,CAAG;gBAEpC,MAAM,KAAK,GAAG,IAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;gBAEjD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAG,CAEpC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAE,CAAE,CAAC;aAIlD;YAED,wEAAwE;YAExE,OAAO;gBACH,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI;gBACjC,KAAK,EAAE,KAAK;gBACZ,UAAU,EAAE,IAAI,CAAC,UAAU;aAC9B,CAAC;SAEL,MAAM;YAEH,oCAAoC;YAEpC,IAAK,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAEtC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAIjC,IAAK,IAAI,CAAC,kBAAkB,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,KAAK,SAAS,EAExD,IAAI,CAAC,kBAAkB,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC;YAIzE,OAAO;gBACH,4BAA4B,EAAE,IAAI;gBAClC,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;gBACpB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,UAAU,EAAE,IAAI,CAAC,UAAU;aAC9B,CAAC;SAEL;KAEJ;CAEJ;AAED,0BAA0B,CAAC,SAAS,CAAC,4BAA4B,GAAG,IAAI,CAAC;AAEzE,MAAM,cAAc,SAAS,QAAQ;IAEjC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;QAE7B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAE,QAAQ,CAAE,CAAC;QAEnC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAEhC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QAEtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAE9C,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,cAAc,CAAC,SAAS,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAEjD,IAAI,SAAS,AAAC;AAEd,MAAM,eAAe,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACpD,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAChD,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAEhD,MAAM,gBAAgB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACrD,MAAM,gBAAgB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACrD,MAAM,gBAAgB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAErD,MAAM,GAAG,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACxC,MAAM,GAAG,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACxC,MAAM,GAAG,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAExC,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACzC,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACzC,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAEzC,MAAM,MAAM,SAAS,QAAQ;IAEzB,YAAa,QAAQ,CAAG;QAEpB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QAErB,IAAK,SAAS,KAAK,SAAS,EAAG;YAE3B,SAAS,GAAG,IAAI,cAAc,EAAE,CAAC;YAEjC,MAAM,YAAY,GAAG,IAAI,YAAY,CAAE;AACnC,oBAAK;AAAE,oBAAK;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;AACrB,mBAAG;AAAE,oBAAK;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;AACnB,mBAAG;AAAE,mBAAG;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;AACjB,oBAAK;AAAE,mBAAG;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;aACtB,CAAE,AAAC;YAEJ,MAAM,iBAAiB,GAAG,IAAI,iBAAiB,CAAE,YAAY,EAAE,CAAC,CAAE,AAAC;YAEnE,SAAS,CAAC,QAAQ,CAAE;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;aAAE,CAAE,CAAC;YAC3C,SAAS,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,0BAA0B,CAAE,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAE,CAAE,CAAC;YACvG,SAAS,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,0BAA0B,CAAE,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAE,CAAE,CAAC;SAEpG;QAED,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,AAAE,QAAQ,KAAK,SAAS,GAAK,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;QAE7E,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;KAEzC;IAED,OAAO,CAAE,SAAS,EAAE,WAAU,EAAG;QAE7B,IAAK,SAAS,CAAC,MAAM,KAAK,IAAI,EAE1B,OAAO,CAAC,KAAK,CAAE,uFAAuF,CAAE,CAAC;QAI7G,WAAW,CAAC,kBAAkB,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;QAEnD,gBAAgB,CAAC,IAAI,CAAE,SAAS,CAAC,MAAM,CAAC,WAAW,CAAE,CAAC;QACtD,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAE,SAAS,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;QAE/F,WAAW,CAAC,qBAAqB,CAAE,IAAI,CAAC,eAAe,CAAE,CAAC;QAE1D,IAAK,SAAS,CAAC,MAAM,CAAC,mBAAmB,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,KAAK,KAAK,EAEhF,WAAW,CAAC,cAAc,CAAE,CAAE,WAAW,CAAC,CAAC,CAAE,CAAC;QAIlD,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,AAAC;QACxC,IAAI,GAAG,EAAE,GAAG,AAAC;QAEb,IAAK,QAAQ,KAAK,CAAC,EAAG;YAElB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;YAC3B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;SAE9B;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,eAAe,CAAE,GAAG,CAAC,GAAG,CAAE,IAAK,EAAE,IAAK,EAAE,CAAC,CAAE,EAAE,WAAW,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;QAC1F,eAAe,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,EAAE,IAAK,EAAE,CAAC,CAAE,EAAE,WAAW,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;QACxF,eAAe,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAE,EAAE,WAAW,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;QAEtF,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACjB,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACjB,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEjB,uBAAuB;QACvB,IAAI,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,eAAe,CAAE,AAAC;QAEzF,IAAK,SAAS,KAAK,IAAI,EAAG;YAEtB,wBAAwB;YACxB,eAAe,CAAE,GAAG,CAAC,GAAG,CAAE,IAAK,EAAE,GAAG,EAAE,CAAC,CAAE,EAAE,WAAW,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;YACxF,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YAEjB,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,eAAe,CAAE,CAAC;YACrF,IAAK,SAAS,KAAK,IAAI,EAEnB,OAAO;SAId;QAED,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAE,eAAe,CAAE,AAAC;QAEpE,IAAK,QAAQ,GAAG,SAAS,CAAC,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,EAAG,OAAO;QAEpE,WAAU,CAAC,IAAI,CAAE;YAEb,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,eAAe,CAAC,KAAK,EAAE;YAC9B,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAE,eAAe,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,OAAO,EAAE,CAAE;YACrF,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,IAAI;SAEf,CAAE,CAAC;KAEP;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAK,MAAM,CAAC,MAAM,KAAK,SAAS,EAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,CAAE,CAAC;QAErE,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;AAEjC,SAAS,eAAe,CAAE,cAAc,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAG;IAE5E,mCAAmC;IACnC,gBAAgB,CAAC,UAAU,CAAE,cAAc,EAAE,MAAM,CAAE,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;IAEzF,mCAAmC;IACnC,IAAK,GAAG,KAAK,SAAS,EAAG;QAErB,gBAAgB,CAAC,CAAC,GAAG,AAAE,GAAG,GAAG,gBAAgB,CAAC,CAAC,GAAO,GAAG,GAAG,gBAAgB,CAAC,CAAC,AAAE,CAAC;QACjF,gBAAgB,CAAC,CAAC,GAAG,AAAE,GAAG,GAAG,gBAAgB,CAAC,CAAC,GAAO,GAAG,GAAG,gBAAgB,CAAC,CAAC,AAAE,CAAC;KAEpF,MAEG,gBAAgB,CAAC,IAAI,CAAE,gBAAgB,CAAE,CAAC;IAK9C,cAAc,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC;IAClC,cAAc,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC;IACvC,cAAc,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC;IAEvC,2BAA2B;IAC3B,cAAc,CAAC,YAAY,CAAE,gBAAgB,CAAE,CAAC;CAEnD;AAED,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE1C,MAAM,GAAG,SAAS,QAAQ;IAEtB,aAAc;QAEV,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAEvB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAElB,MAAM,CAAC,gBAAgB,CAAE,IAAI,EAAE;YAC3B,MAAM,EAAE;gBACJ,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,EAAE;aACZ;YACD,KAAK,EAAE;gBACH,KAAK,EAAE,IAAI;aACd;SACJ,CAAE,CAAC;QAEJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAE1B;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;QAE5B,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,AAAC;QAE7B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE9C,MAAM,KAAK,GAAG,MAAM,CAAE,IAAC,CAAE,AAAC;YAE1B,IAAI,CAAC,QAAQ,CAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAE,CAAC;SAEzD;QAED,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QAEpC,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,MAAM,EAAE,QAAQ,GAAG,CAAC,EAAG;QAE7B,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QAEhC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAI,CAAC,AAAC;QAEN,IAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAG,CAAG;YAEnC,IAAK,QAAQ,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,QAAQ,EAEhC,MAAM;SAIb;QAED,MAAM,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE;YAAE,QAAQ,EAAE,QAAQ;YAAE,MAAM,EAAE,MAAM;SAAE,CAAE,CAAC;QAE9D,IAAI,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;QAEnB,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,GAAG;QAEd,OAAO,IAAI,CAAC,aAAa,CAAC;KAE7B;IAED,oBAAoB,CAAE,QAAQ,EAAG;QAE7B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EAAG;YAErB,IAAI,IAAC,EAAE,CAAC,AAAC;YAET,IAAM,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;gBAE1C,IAAK,QAAQ,GAAG,MAAM,CAAE,IAAC,CAAE,CAAC,QAAQ,EAEhC,MAAM;aAIb;YAED,OAAO,MAAM,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC,MAAM,CAAC;SAEjC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,SAAS,EAAE,WAAU,EAAG;QAE7B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EAAG;YAErB,KAAK,CAAC,qBAAqB,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;YAEhD,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAE,KAAK,CAAE,AAAC;YAE1D,IAAI,CAAC,oBAAoB,CAAE,QAAQ,CAAE,CAAC,OAAO,CAAE,SAAS,EAAE,WAAU,CAAE,CAAC;SAE1E;KAEJ;IAED,MAAM,CAAE,MAAM,EAAG;QAEb,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EAAG;YAErB,KAAK,CAAC,qBAAqB,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;YAClD,KAAK,CAAC,qBAAqB,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;YAEhD,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAE,KAAK,CAAE,GAAG,MAAM,CAAC,IAAI,AAAC;YAEzD,MAAM,CAAE,CAAC,CAAE,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YAElC,IAAI,IAAC,EAAE,CAAC,AAAC;YAET,IAAM,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;gBAE1C,IAAK,QAAQ,IAAI,MAAM,CAAE,IAAC,CAAE,CAAC,QAAQ,EAAG;oBAEpC,MAAM,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;oBACvC,MAAM,CAAE,IAAC,CAAE,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;iBAErC,MAEG,MAAM;aAIb;YAED,IAAI,CAAC,aAAa,GAAG,IAAC,GAAG,CAAC,CAAC;YAE3B,MAAQ,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAEf,MAAM,CAAE,IAAC,CAAE,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;SAI1C;KAEJ;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAE,IAAI,CAAE,AAAC;QAElC,IAAK,IAAI,CAAC,UAAU,KAAK,KAAK,EAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;QAEhE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;QAExB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE9C,MAAM,KAAK,GAAG,MAAM,CAAE,IAAC,CAAE,AAAC;YAE1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAE;gBACrB,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI;gBACzB,QAAQ,EAAE,KAAK,CAAC,QAAQ;aAC3B,CAAE,CAAC;SAEP;QAED,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,aAAa,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAElD,MAAM,UAAU,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC/C,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAEhD,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC9C,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE5C,MAAM,WAAW,SAAS,IAAI;IAE1B,YAAa,QAAQ,EAAE,QAAQ,CAAG;QAE9B,KAAK,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QAE5B,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;QAE1B,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,IAAI,OAAO,EAAE,CAAC;KAE1C;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,MAAM,CAAC,UAAU,CAAE,CAAC;QAC1C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAE,MAAM,CAAC,iBAAiB,CAAE,CAAC;QAExD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,QAAQ,EAAE,UAAU,EAAG;QAEzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAK,UAAU,KAAK,SAAS,EAAG;YAE5B,IAAI,CAAC,iBAAiB,CAAE,IAAI,CAAE,CAAC;YAE/B,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;YAElC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;SAEjC;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC;QACnC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC,MAAM,EAAE,CAAC;KAEtD;IAED,IAAI,GAAG;QAEH,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KAExB;IAED,oBAAoB,GAAG;QAEnB,MAAM,MAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAE7B,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,AAAC;QAEvD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,KAAK,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAEjD,MAAM,CAAC,mBAAmB,CAAE,UAAU,EAAE,IAAC,CAAE,CAAC;YAE5C,MAAM,KAAK,GAAG,CAAG,GAAG,MAAM,CAAC,eAAe,EAAE,AAAC;YAE7C,IAAK,KAAK,KAAK,QAAQ,EAEnB,MAAM,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;iBAI/B,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,CAAC,0BAA0B;YAIxD,UAAU,CAAC,OAAO,CAAE,IAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC;SAEnE;KAEJ;IAED,iBAAiB,CAAE,KAAK,EAAG;QAEvB,KAAK,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAC;QAEjC,IAAK,IAAI,CAAC,QAAQ,KAAK,UAAU,EAE7B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC,MAAM,EAAE,CAAC;aAEtD,IAAK,IAAI,CAAC,QAAQ,KAAK,UAAU,EAEpC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC,MAAM,EAAE,CAAC;aAIxD,OAAO,CAAC,IAAI,CAAE,4CAA4C,GAAG,IAAI,CAAC,QAAQ,CAAE,CAAC;KAIpF;IAED,aAAa,CAAE,KAAK,EAAE,MAAM,EAAG;QAE3B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAE/B,UAAU,CAAC,mBAAmB,CAAE,QAAQ,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAE,CAAC;QACvE,WAAW,CAAC,mBAAmB,CAAE,QAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAE,CAAC;QAEzE,aAAa,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC,YAAY,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QAE7D,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEtB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE3B,MAAM,MAAM,GAAG,WAAW,CAAC,YAAY,CAAE,IAAC,CAAE,AAAC;YAE7C,IAAK,MAAM,KAAK,CAAC,EAAG;gBAEhB,MAAM,SAAS,GAAG,UAAU,CAAC,YAAY,CAAE,IAAC,CAAE,AAAC;gBAE/C,OAAO,CAAC,gBAAgB,CAAE,QAAQ,CAAC,KAAK,CAAE,SAAS,CAAE,CAAC,WAAW,EAAE,QAAQ,CAAC,YAAY,CAAE,SAAS,CAAE,CAAE,CAAC;gBAExG,MAAM,CAAC,eAAe,CAAE,SAAS,CAAC,IAAI,CAAE,aAAa,CAAE,CAAC,YAAY,CAAE,OAAO,CAAE,EAAE,MAAM,CAAE,CAAC;aAE7F;SAEJ;QAED,OAAO,MAAM,CAAC,YAAY,CAAE,IAAI,CAAC,iBAAiB,CAAE,CAAC;KAExD;CAEJ;AAED,WAAW,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;AAE3C,MAAM,IAAI,SAAS,QAAQ;IAEvB,aAAc;QAEV,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;KAEtB;CAEJ;AAED,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;AAE7B,MAAM,WAAW,SAAS,OAAO;IAE7B,YAAa,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,GAAG,aAAa,EAAE,SAAS,GAAG,aAAa,EAAE,UAAU,EAAE,QAAQ,CAAG;QAE/J,KAAK,CAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAE,CAAC;QAE/F,IAAI,CAAC,KAAK,GAAG;YAAE,IAAI,EAAE,IAAI;YAAE,KAAK,EAAE,KAAK;YAAE,MAAM,EAAE,MAAM;SAAE,CAAC;QAE1D,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;KAE5B;CAEJ;AAED,WAAW,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;AAE3C,MAAM,aAAa,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAClD,MAAM,eAAe,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAEpD,MAAM,QAAQ;IAEV,YAAa,KAAK,GAAG,EAAE,EAAE,YAAY,GAAG,EAAE,CAAG;QAEzC,IAAI,CAAC,IAAI,GAAG,YAAY,EAAE,CAAC;QAE3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QAEzB,IAAI,CAAC,KAAK,GAAG,EAAG,CAAC;QAEjB,IAAI,CAAC,IAAI,EAAE,CAAC;KAEf;IAED,IAAI,GAAG;QAEH,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;QACzB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,AAAC;QAEvC,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAE,KAAK,CAAC,MAAM,GAAG,EAAE,CAAE,CAAC;QAE1D,+CAA+C;QAE/C,IAAK,YAAY,CAAC,MAAM,KAAK,CAAC,EAE1B,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAIzB,sBAAsB;QAEtB,IAAK,KAAK,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,EAAG;YAExC,OAAO,CAAC,IAAI,CAAE,iFAAiF,CAAE,CAAC;YAElG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YAEvB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAEjD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,IAAI,OAAO,EAAE,CAAE,CAAC;SAI/C;KAIR;IAED,iBAAiB,GAAG;QAEhB,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;QAE7B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;YAEpD,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,AAAC;YAE9B,IAAK,IAAI,CAAC,KAAK,CAAE,IAAC,CAAE,EAEhB,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAE,IAAC,CAAE,CAAC,WAAW,CAAE,CAAC,MAAM,EAAE,CAAC;YAIzD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;SAErC;KAEJ;IAED,IAAI,GAAG;QAEH,uCAAuC;QAEvC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;YAEpD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,IAAC,CAAE,AAAC;YAE7B,IAAK,IAAI,EAEL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,IAAI,CAAC,YAAY,CAAE,IAAC,CAAE,CAAE,CAAC,MAAM,EAAE,CAAC;SAIhE;QAED,8DAA8D;QAE9D,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,GAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,GAAE,EAAE,IAAC,EAAG,CAAG;YAEpD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,IAAC,CAAE,AAAC;YAE7B,IAAK,IAAI,EAAG;gBAER,IAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAG;oBAErC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAE,CAAC,MAAM,EAAE,CAAC;oBACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;iBAE5C,MAEG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;gBAIzC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAE,CAAC;aAEvE;SAEJ;KAEJ;IAED,MAAM,GAAG;QAEL,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;QACzB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,AAAC;QACvC,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,AAAC;QACvC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,AAAC;QAErC,iCAAiC;QAEjC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;YAE/C,oEAAoE;YAEpE,MAAM,MAAM,GAAG,KAAK,CAAE,IAAC,CAAE,GAAG,KAAK,CAAE,IAAC,CAAE,CAAC,WAAW,GAAG,eAAe,AAAC;YAErE,aAAa,CAAC,gBAAgB,CAAE,MAAM,EAAE,YAAY,CAAE,IAAC,CAAE,CAAE,CAAC;YAC5D,aAAa,CAAC,OAAO,CAAE,YAAY,EAAE,IAAC,GAAG,EAAE,CAAE,CAAC;SAEjD;QAED,IAAK,WAAW,KAAK,IAAI,EAErB,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;KAItC;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,QAAQ,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAE,CAAC;KAExD;IAED,kBAAkB,GAAG;QAEjB,+BAA+B;QAC/B,mEAAmE;QACnE,iEAAiE;QACjE,kEAAkE;QAClE,kEAAkE;QAClE,kEAAkE;QAElE,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAE,AAAC,EAAC,+BAA+B;QAC9E,IAAI,GAAG,cAAc,CAAE,IAAI,CAAE,CAAC;QAC9B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC;QAE3B,MAAM,YAAY,GAAG,IAAI,YAAY,CAAE,IAAI,GAAG,IAAI,GAAG,CAAC,CAAE,AAAC,EAAC,0BAA0B;QACpF,YAAY,CAAC,GAAG,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC,CAAC,sBAAsB;QAE7D,MAAM,WAAW,GAAG,IAAI,WAAW,CAAE,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,CAAE,AAAC;QACvF,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,IAAI,EAAG;QAElB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;YAEpD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,IAAC,CAAE,AAAC;YAE7B,IAAK,IAAI,CAAC,IAAI,KAAK,IAAI,EAEnB,OAAO,IAAI,CAAC;SAInB;QAED,OAAO,SAAS,CAAC;KAEpB;IAED,OAAO,GAAI;QAEP,IAAK,IAAI,CAAC,WAAW,KAAK,IAAI,EAAG;YAE7B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAE3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAE3B;KAEJ;IAED,QAAQ,CAAE,IAAI,EAAE,KAAK,EAAG;QAEpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAElD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,IAAC,CAAE,AAAC;YAC7B,IAAI,IAAI,GAAG,KAAK,CAAE,IAAI,CAAE,AAAC;YAEzB,IAAK,IAAI,KAAK,SAAS,EAAG;gBAEtB,OAAO,CAAC,IAAI,CAAE,0CAA0C,EAAE,IAAI,CAAE,CAAC;gBACjE,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;aAErB;YAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,IAAI,OAAO,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,YAAY,CAAE,IAAC,CAAE,CAAE,CAAE,CAAC;SAE/E;QAED,IAAI,CAAC,IAAI,EAAE,CAAC;QAEZ,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG;YACT,QAAQ,EAAE;gBACN,OAAO,EAAE,GAAG;gBACZ,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,iBAAiB;aAC/B;YACD,KAAK,EAAE,EAAE;YACT,YAAY,EAAE,EAAE;SACnB,AAAC;QAEF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;QACzB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,AAAC;QAEvC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE7C,MAAM,IAAI,GAAG,KAAK,CAAE,IAAC,CAAE,AAAC;YACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;YAE7B,MAAM,WAAW,GAAG,YAAY,CAAE,IAAC,CAAE,AAAC;YACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,WAAW,CAAC,OAAO,EAAE,CAAE,CAAC;SAEnD;QAED,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,wBAAwB,SAAS,eAAe;IAElD,YAAa,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,gBAAgB,GAAG,CAAC,CAAG;QAE7D,IAAK,OAAO,UAAU,KAAK,QAAQ,EAAG;YAElC,gBAAgB,GAAG,UAAU,CAAC;YAE9B,UAAU,GAAG,KAAK,CAAC;YAEnB,OAAO,CAAC,KAAK,CAAE,+FAA+F,CAAE,CAAC;SAEpH;QAED,KAAK,CAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAE,CAAC;QAErC,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAE5C;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAEhD,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAE9C,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;QAEvC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,wBAAwB,CAAC,SAAS,CAAC,0BAA0B,GAAG,IAAI,CAAC;AAErE,MAAM,oBAAoB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACzD,MAAM,oBAAoB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAEzD,MAAM,mBAAmB,GAAG,EAAE,AAAC;AAE/B,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,IAAI,EAAE,AAAC;AAEvC,MAAM,aAAa,SAAS,IAAI;IAE5B,YAAa,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAG;QAErC,KAAK,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QAE5B,IAAI,CAAC,cAAc,GAAG,IAAI,wBAAwB,CAAE,IAAI,YAAY,CAAE,KAAK,GAAG,EAAE,CAAE,EAAE,EAAE,CAAE,CAAC;QACzF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;KAE9B;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAE,MAAM,CAAC,cAAc,CAAE,CAAC;QAElD,IAAK,MAAM,CAAC,aAAa,KAAK,IAAI,EAAG,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAEvF,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;IAED,UAAU,CAAE,KAAK,EAAE,KAAK,EAAG;QAEvB,KAAK,CAAC,SAAS,CAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAE,CAAC;KAE1D;IAED,WAAW,CAAE,KAAK,EAAE,MAAM,EAAG;QAEzB,MAAM,CAAC,SAAS,CAAE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,GAAG,EAAE,CAAE,CAAC;KAE7D;IAED,OAAO,CAAE,SAAS,EAAE,WAAU,EAAG;QAE7B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,AAAC;QACrC,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,AAAC;QAEhC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE/B,IAAK,KAAK,CAAC,QAAQ,KAAK,SAAS,EAAG,OAAO;QAE3C,IAAM,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,YAAY,EAAE,UAAU,EAAG,CAAG;YAEjE,+CAA+C;YAE/C,IAAI,CAAC,WAAW,CAAE,UAAU,EAAE,oBAAoB,CAAE,CAAC;YAErD,oBAAoB,CAAC,gBAAgB,CAAE,WAAW,EAAE,oBAAoB,CAAE,CAAC;YAE3E,2CAA2C;YAE3C,KAAK,CAAC,WAAW,GAAG,oBAAoB,CAAC;YAEzC,KAAK,CAAC,OAAO,CAAE,SAAS,EAAE,mBAAmB,CAAE,CAAC;YAEhD,gCAAgC;YAEhC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;gBAE3D,MAAM,SAAS,GAAG,mBAAmB,CAAE,IAAC,CAAE,AAAC;gBAC3C,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC;gBAClC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;gBACxB,WAAU,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC;aAEhC;YAED,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC;SAElC;KAEJ;IAED,UAAU,CAAE,KAAK,EAAE,KAAK,EAAG;QAEvB,IAAK,IAAI,CAAC,aAAa,KAAK,IAAI,EAE5B,IAAI,CAAC,aAAa,GAAG,IAAI,wBAAwB,CAAE,IAAI,YAAY,CAAE,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,CAAC,CAAE,EAAE,CAAC,CAAE,CAAC;QAI9G,KAAK,CAAC,OAAO,CAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAE,CAAC;KAExD;IAED,WAAW,CAAE,KAAK,EAAE,MAAM,EAAG;QAEzB,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,GAAG,EAAE,CAAE,CAAC;KAE3D;IAED,kBAAkB,GAAG,EAEpB;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,aAAa,CAAE;YAAE,IAAI,EAAE,SAAS;SAAE,CAAE,CAAC;KAE7C;CAEJ;AAED,aAAa,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC;AAE/C,MAAM,iBAAiB,SAAS,QAAQ;IAEpC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;QAEhC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAE,QAAQ,CAAE,CAAC;QAEnC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExB,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAGD,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAEhC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAEvD,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC7C,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC3C,MAAM,gBAAgB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACrD,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,GAAG,EAAE,AAAC;AACvC,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,MAAM,EAAE,AAAC;AAE7C,MAAM,IAAI,SAAS,QAAQ;IAEvB,YAAa,QAAQ,GAAG,IAAI,cAAc,EAAE,EAAE,QAAQ,GAAG,IAAI,iBAAiB,EAAE,CAAG;QAE/E,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QAEnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAE7B;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,oBAAoB,GAAG;QAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAE/B,IAAK,QAAQ,CAAC,gBAAgB;YAE1B,iCAAiC;YAEjC,IAAK,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAG;gBAE3B,MAAM,iBAAiB,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,AAAC;gBACvD,MAAM,aAAa,GAAG;AAAE,qBAAC;iBAAE,AAAC;gBAE5B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,KAAK,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;oBAExD,QAAQ,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,IAAC,GAAG,CAAC,CAAE,CAAC;oBACzD,MAAM,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,IAAC,CAAE,CAAC;oBAEnD,aAAa,CAAE,IAAC,CAAE,GAAG,aAAa,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC;oBAC5C,aAAa,CAAE,IAAC,CAAE,IAAI,QAAQ,CAAC,UAAU,CAAE,MAAM,CAAE,CAAC;iBAEvD;gBAED,QAAQ,CAAC,YAAY,CAAE,cAAc,EAAE,IAAI,sBAAsB,CAAE,aAAa,EAAE,CAAC,CAAE,CAAE,CAAC;aAE3F,MAEG,OAAO,CAAC,IAAI,CAAE,+FAA+F,CAAE,CAAC;eAIjH,IAAK,QAAQ,CAAC,UAAU,EAE3B,OAAO,CAAC,KAAK,CAAE,wGAAwG,CAAE,CAAC;QAI9H,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,SAAS,EAAE,WAAU,EAAG;QAE7B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,AAAC;QACrC,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,AAAC;QAClD,MAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,AAAC;QAErC,0CAA0C;QAE1C,IAAK,QAAQ,CAAC,cAAc,KAAK,IAAI,EAAG,QAAQ,CAAC,qBAAqB,EAAE,CAAC;QAEzE,SAAS,CAAC,IAAI,CAAE,QAAQ,CAAC,cAAc,CAAE,CAAC;QAC1C,SAAS,CAAC,YAAY,CAAE,WAAW,CAAE,CAAC;QACtC,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC;QAE9B,IAAK,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAE,SAAS,CAAE,KAAK,KAAK,EAAG,OAAO;QAEpE,EAAE;QAEF,gBAAgB,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC,MAAM,EAAE,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAE,SAAS,CAAC,GAAG,CAAE,CAAC,YAAY,CAAE,gBAAgB,CAAE,CAAC;QAE9D,MAAM,cAAc,GAAG,SAAS,GAAK,CAAA,AAAE,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA,GAAK,CAAC,CAAA,AAAE,AAAC;QAC1F,MAAM,gBAAgB,GAAG,cAAc,GAAG,cAAc,AAAC;QAEzD,MAAM,MAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAC7B,MAAM,IAAI,GAAG,IAAI,OAAO,EAAE,AAAC;QAC3B,MAAM,YAAY,GAAG,IAAI,OAAO,EAAE,AAAC;QACnC,MAAM,QAAQ,GAAG,IAAI,OAAO,EAAE,AAAC;QAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,CAAC,AAAC;QAEzC,IAAK,QAAQ,CAAC,gBAAgB,EAAG;YAE7B,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,AAAC;YAC7B,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,AAAC;YACvC,MAAM,iBAAiB,GAAG,UAAU,CAAC,QAAQ,AAAC;YAE9C,IAAK,KAAK,KAAK,IAAI,EAAG;gBAElB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,SAAS,CAAC,KAAK,CAAE,AAAC;gBAC7C,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,KAAK,EAAI,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAI,AAAC;gBAE3E,IAAM,IAAI,IAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,IAAI,CAAG;oBAEjD,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAE,IAAC,CAAE,AAAC;oBAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAE,IAAC,GAAG,CAAC,CAAE,AAAC;oBAE9B,MAAM,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,CAAC,CAAE,CAAC;oBACnD,IAAI,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,CAAC,CAAE,CAAC;oBAEjD,MAAM,MAAM,GAAG,MAAM,CAAC,mBAAmB,CAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAE,AAAC;oBAElF,IAAK,MAAM,GAAG,gBAAgB,EAAG,SAAS;oBAE1C,QAAQ,CAAC,YAAY,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC,CAAC,mDAAmD;oBAE9F,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAE,QAAQ,CAAE,AAAC;oBAE7D,IAAK,QAAQ,GAAG,SAAS,CAAC,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,EAAG,SAAS;oBAEtE,WAAU,CAAC,IAAI,CAAE;wBAEb,QAAQ,EAAE,QAAQ;wBAClB,qEAAqE;wBACrE,uCAAuC;wBACvC,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,CAAE,IAAI,CAAC,WAAW,CAAE;wBAC5D,KAAK,EAAE,IAAC;wBACR,IAAI,EAAE,IAAI;wBACV,SAAS,EAAE,IAAI;wBACf,MAAM,EAAE,IAAI;qBAEf,CAAE,CAAC;iBAEP;aAEJ,MAAM;gBAEH,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,SAAS,CAAC,KAAK,CAAE,AAAC;gBAC7C,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,iBAAiB,CAAC,KAAK,EAAI,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAI,AAAC;gBAEvF,IAAM,IAAI,IAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,IAAI,CAAG;oBAEjD,MAAM,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,IAAC,CAAE,CAAC;oBACnD,IAAI,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,IAAC,GAAG,CAAC,CAAE,CAAC;oBAErD,MAAM,MAAM,GAAG,MAAM,CAAC,mBAAmB,CAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAE,AAAC;oBAElF,IAAK,MAAM,GAAG,gBAAgB,EAAG,SAAS;oBAE1C,QAAQ,CAAC,YAAY,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC,CAAC,mDAAmD;oBAE9F,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAE,QAAQ,CAAE,AAAC;oBAE7D,IAAK,QAAQ,GAAG,SAAS,CAAC,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,EAAG,SAAS;oBAEtE,WAAU,CAAC,IAAI,CAAE;wBAEb,QAAQ,EAAE,QAAQ;wBAClB,qEAAqE;wBACrE,uCAAuC;wBACvC,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,CAAC,YAAY,CAAE,IAAI,CAAC,WAAW,CAAE;wBAC5D,KAAK,EAAE,IAAC;wBACR,IAAI,EAAE,IAAI;wBACV,SAAS,EAAE,IAAI;wBACf,MAAM,EAAE,IAAI;qBAEf,CAAE,CAAC;iBAEP;aAEJ;SAEJ,MAAM,IAAK,QAAQ,CAAC,UAAU,EAE3B,OAAO,CAAC,KAAK,CAAE,2FAA2F,CAAE,CAAC;KAIpH;IAED,kBAAkB,GAAG;QAEjB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAE/B,IAAK,QAAQ,CAAC,gBAAgB,EAAG;YAE7B,MAAM,eAAe,GAAG,QAAQ,CAAC,eAAe,AAAC;YACjD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAE,eAAe,CAAE,AAAC;YAE5C,IAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAG;gBAEnB,MAAM,cAAc,GAAG,eAAe,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,AAAC;gBAEpD,IAAK,cAAc,KAAK,SAAS,EAAG;oBAEhC,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;oBAChC,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;oBAEhC,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;wBAExD,MAAM,IAAI,GAAG,cAAc,CAAE,CAAC,CAAE,CAAC,IAAI,IAAI,MAAM,CAAE,CAAC,CAAE,AAAC;wBAErD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;wBACrC,IAAI,CAAC,qBAAqB,CAAE,IAAI,CAAE,GAAG,CAAC,CAAC;qBAE1C;iBAEJ;aAEJ;SAEJ,MAAM;YAEH,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,AAAC;YAE3C,IAAK,YAAY,KAAK,SAAS,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAEtD,OAAO,CAAC,KAAK,CAAE,oGAAoG,CAAE,CAAC;SAI7H;KAEJ;CAEJ;AAED,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;AAE7B,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC3C,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAEzC,MAAM,YAAY,SAAS,IAAI;IAE3B,YAAa,QAAQ,EAAE,QAAQ,CAAG;QAE9B,KAAK,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QAE5B,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;KAE9B;IAED,oBAAoB,GAAG;QAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAE/B,IAAK,QAAQ,CAAC,gBAAgB;YAE1B,iCAAiC;YAEjC,IAAK,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAG;gBAE3B,MAAM,iBAAiB,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,AAAC;gBACvD,MAAM,aAAa,GAAG,EAAE,AAAC;gBAEzB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,KAAK,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,CAAC,CAAG;oBAE1D,MAAM,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,IAAC,CAAE,CAAC;oBACnD,IAAI,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,IAAC,GAAG,CAAC,CAAE,CAAC;oBAErD,aAAa,CAAE,IAAC,CAAE,GAAG,AAAE,IAAC,KAAK,CAAC,GAAK,CAAC,GAAG,aAAa,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC;oBAC9D,aAAa,CAAE,IAAC,GAAG,CAAC,CAAE,GAAG,aAAa,CAAE,IAAC,CAAE,GAAG,MAAM,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;iBAE3E;gBAED,QAAQ,CAAC,YAAY,CAAE,cAAc,EAAE,IAAI,sBAAsB,CAAE,aAAa,EAAE,CAAC,CAAE,CAAE,CAAC;aAE3F,MAEG,OAAO,CAAC,IAAI,CAAE,uGAAuG,CAAE,CAAC;eAIzH,IAAK,QAAQ,CAAC,UAAU,EAE3B,OAAO,CAAC,KAAK,CAAE,gHAAgH,CAAE,CAAC;QAItI,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,YAAY,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC;AAE7C,MAAM,QAAQ,SAAS,IAAI;IAEvB,YAAa,QAAQ,EAAE,QAAQ,CAAG;QAE9B,KAAK,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QAE5B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;KAE1B;CAEJ;AAED,QAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;AAErC,MAAM,cAAc,SAAS,QAAQ;IAEjC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;QAE7B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAE,QAAQ,CAAE,CAAC;QAEnC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAEhC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QAEtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAE9C,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,cAAc,CAAC,SAAS,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAEjD,MAAM,cAAc,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACnD,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,GAAG,EAAE,AAAC;AACrC,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,MAAM,EAAE,AAAC;AAC3C,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAEhD,MAAM,MAAM,SAAS,QAAQ;IAEzB,YAAa,QAAQ,GAAG,IAAI,cAAc,EAAE,EAAE,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAG;QAE5E,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QAErB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAE7B;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,SAAS,EAAE,WAAU,EAAG;QAE7B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,AAAC;QACrC,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,AAAC;QACpD,MAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,AAAC;QAErC,0CAA0C;QAE1C,IAAK,QAAQ,CAAC,cAAc,KAAK,IAAI,EAAG,QAAQ,CAAC,qBAAqB,EAAE,CAAC;QAEzE,OAAO,CAAC,IAAI,CAAE,QAAQ,CAAC,cAAc,CAAE,CAAC;QACxC,OAAO,CAAC,YAAY,CAAE,WAAW,CAAE,CAAC;QACpC,OAAO,CAAC,MAAM,IAAI,SAAS,CAAC;QAE5B,IAAK,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAE,OAAO,CAAE,KAAK,KAAK,EAAG,OAAO;QAElE,EAAE;QAEF,cAAc,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC,MAAM,EAAE,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAE,SAAS,CAAC,GAAG,CAAE,CAAC,YAAY,CAAE,cAAc,CAAE,CAAC;QAE1D,MAAM,cAAc,GAAG,SAAS,GAAK,CAAA,AAAE,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA,GAAK,CAAC,CAAA,AAAE,AAAC;QAC1F,MAAM,gBAAgB,GAAG,cAAc,GAAG,cAAc,AAAC;QAEzD,IAAK,QAAQ,CAAC,gBAAgB,EAAG;YAE7B,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,AAAC;YAC7B,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,AAAC;YACvC,MAAM,iBAAiB,GAAG,UAAU,CAAC,QAAQ,AAAC;YAE9C,IAAK,KAAK,KAAK,IAAI,EAAG;gBAElB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,SAAS,CAAC,KAAK,CAAE,AAAC;gBAC7C,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAC,KAAK,EAAI,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAI,AAAC;gBAE3E,IAAM,IAAI,IAAC,GAAG,KAAK,EAAE,EAAE,GAAG,GAAG,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;oBAE1C,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAE,IAAC,CAAE,AAAC;oBAE1B,WAAW,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,CAAC,CAAE,CAAC;oBAExD,SAAS,CAAE,WAAW,EAAE,CAAC,EAAE,gBAAgB,EAAE,WAAW,EAAE,SAAS,EAAE,WAAU,EAAE,IAAI,CAAE,CAAC;iBAE3F;aAEJ,MAAM;gBAEH,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,SAAS,CAAC,KAAK,CAAE,AAAC;gBAC7C,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,iBAAiB,CAAC,KAAK,EAAI,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAI,AAAC;gBAEvF,IAAM,IAAI,IAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;oBAExC,WAAW,CAAC,mBAAmB,CAAE,iBAAiB,EAAE,IAAC,CAAE,CAAC;oBAExD,SAAS,CAAE,WAAW,EAAE,IAAC,EAAE,gBAAgB,EAAE,WAAW,EAAE,SAAS,EAAE,WAAU,EAAE,IAAI,CAAE,CAAC;iBAE3F;aAEJ;SAEJ,MAEG,OAAO,CAAC,KAAK,CAAE,6FAA6F,CAAE,CAAC;KAItH;IAED,kBAAkB,GAAG;QAEjB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAE/B,IAAK,QAAQ,CAAC,gBAAgB,EAAG;YAE7B,MAAM,eAAe,GAAG,QAAQ,CAAC,eAAe,AAAC;YACjD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAE,eAAe,CAAE,AAAC;YAE5C,IAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAG;gBAEnB,MAAM,cAAc,GAAG,eAAe,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,AAAC;gBAEpD,IAAK,cAAc,KAAK,SAAS,EAAG;oBAEhC,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;oBAChC,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;oBAEhC,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;wBAExD,MAAM,IAAI,GAAG,cAAc,CAAE,CAAC,CAAE,CAAC,IAAI,IAAI,MAAM,CAAE,CAAC,CAAE,AAAC;wBAErD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;wBACrC,IAAI,CAAC,qBAAqB,CAAE,IAAI,CAAE,GAAG,CAAC,CAAC;qBAE1C;iBAEJ;aAEJ;SAEJ,MAAM;YAEH,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,AAAC;YAE3C,IAAK,YAAY,KAAK,SAAS,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAEtD,OAAO,CAAC,KAAK,CAAE,sGAAsG,CAAE,CAAC;SAI/H;KAEJ;CAEJ;AAED,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;AAEjC,SAAS,SAAS,CAAE,KAAK,EAAE,KAAK,EAAE,gBAAgB,EAAE,WAAW,EAAE,SAAS,EAAE,WAAU,EAAE,MAAM,EAAG;IAE7F,MAAM,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAE,KAAK,CAAE,AAAC;IAE3D,IAAK,kBAAkB,GAAG,gBAAgB,EAAG;QAEzC,MAAM,cAAc,GAAG,IAAI,OAAO,EAAE,AAAC;QAErC,IAAI,CAAC,mBAAmB,CAAE,KAAK,EAAE,cAAc,CAAE,CAAC;QAClD,cAAc,CAAC,YAAY,CAAE,WAAW,CAAE,CAAC;QAE3C,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAE,cAAc,CAAE,AAAC;QAEnE,IAAK,QAAQ,GAAG,SAAS,CAAC,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,GAAG,EAAG,OAAO;QAEpE,WAAU,CAAC,IAAI,CAAE;YAEb,QAAQ,EAAE,QAAQ;YAClB,aAAa,EAAE,IAAI,CAAC,IAAI,CAAE,kBAAkB,CAAE;YAC9C,KAAK,EAAE,cAAc;YACrB,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,MAAM;SAEjB,CAAE,CAAC;KAEP;CAEJ;AAED,MAAM,YAAY,SAAS,OAAO;IAE9B,YAAa,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAG;QAExF,KAAK,CAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAE,CAAC;QAEtF,IAAI,CAAC,SAAS,GAAG,SAAS,KAAK,SAAS,GAAG,SAAS,GAAG,YAAY,CAAC;QACpE,IAAI,CAAC,SAAS,GAAG,SAAS,KAAK,SAAS,GAAG,SAAS,GAAG,YAAY,CAAC;QAEpE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAE7B,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,SAAS,WAAW,GAAG;YAEnB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;YACzB,KAAK,CAAC,yBAAyB,CAAE,WAAW,CAAE,CAAC;SAElD;QAED,IAAK,2BAA2B,IAAI,KAAK,EAErC,KAAK,CAAC,yBAAyB,CAAE,WAAW,CAAE,CAAC;KAItD;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE1D;IAED,MAAM,GAAG;QAEL,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;QACzB,MAAM,qBAAqB,GAAG,2BAA2B,IAAI,KAAK,AAAC;QAEnE,IAAK,qBAAqB,KAAK,KAAK,IAAI,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,iBAAiB,EAE/E,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KAI/B;CAEJ;AAED,YAAY,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC;AAE7C,MAAM,kBAAkB,SAAS,OAAO;IAEpC,YAAa,KAAK,EAAE,MAAM,EAAE,MAAM,CAAG;QAEjC,KAAK,CAAE;YAAE,KAAK;YAAE,MAAM;SAAE,CAAE,CAAC;QAE3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;QAE/B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAE7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KAE3B;CAEJ;AAED,kBAAkB,CAAC,SAAS,CAAC,oBAAoB,GAAG,IAAI,CAAC;AAEzD,MAAM,iBAAiB,SAAS,OAAO;IAEnC,YAAa,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAG;QAEnH,KAAK,CAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,CAAE,CAAC;QAE/F,IAAI,CAAC,KAAK,GAAG;YAAE,KAAK,EAAE,KAAK;YAAE,MAAM,EAAE,MAAM;SAAE,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,gCAAgC;QAChC,wDAAwD;QAExD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,iDAAiD;QACjD,qCAAqC;QAErC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;KAEhC;CAEJ;AAED,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAEvD,MAAM,aAAa,SAAS,OAAO;IAE/B,YAAa,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAG;QAEzF,KAAK,CAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAE,CAAC;QAEvF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KAE3B;CAEJ;AAED,aAAa,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC;AAE/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA4BI,CAEJ,MAAM,KAAK;IAEP,aAAc;QAEV,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QAEpB,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;KAEjC;IAED,qEAAqE;IACrE,eAAe;IAEf,QAAQ,GAA4B;QAEhC,OAAO,CAAC,IAAI,CAAE,2CAA2C,CAAE,CAAC;QAC5D,OAAO,IAAI,CAAC;KAEf;IAED,kEAAkE;IAClE,eAAe;IAEf,UAAU,CAAE,CAAC,EAAE,cAAc,EAAG;QAE5B,MAAM,CAAC,GAAG,IAAI,CAAC,cAAc,CAAE,CAAC,CAAE,AAAC;QACnC,OAAO,IAAI,CAAC,QAAQ,CAAE,CAAC,EAAE,cAAc,CAAE,CAAC;KAE7C;IAED,6CAA6C;IAE7C,SAAS,CAAE,SAAS,GAAG,CAAC,EAAG;QAEvB,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,EAAG,CAEjC,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC,GAAG,SAAS,CAAE,CAAE,CAAC;QAIlD,OAAO,MAAM,CAAC;KAEjB;IAED,+CAA+C;IAE/C,eAAe,CAAE,SAAS,GAAG,CAAC,EAAG;QAE7B,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,EAAG,CAEjC,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC,GAAG,SAAS,CAAE,CAAE,CAAC;QAIpD,OAAO,MAAM,CAAC;KAEjB;IAED,6BAA6B;IAE7B,SAAS,GAAG;QAER,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,AAAC;QAClC,OAAO,OAAO,CAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;KAExC;IAED,yCAAyC;IAEzC,UAAU,CAAE,SAAS,GAAG,IAAI,CAAC,kBAAkB,EAAG;QAE9C,IAAK,IAAI,CAAC,eAAe,IACnB,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,SAAS,GAAG,CAAC,IAC/C,CAAE,IAAI,CAAC,WAAW,EAElB,OAAO,IAAI,CAAC,eAAe,CAAC;QAIhC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,MAAM,KAAK,GAAG,EAAE,AAAC;QACjB,IAAI,OAAO,EAAE,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAE,CAAC,CAAE,AAAC;QACvC,IAAI,GAAG,GAAG,CAAC,AAAC;QAEZ,KAAK,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;QAEhB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,EAAG,CAAG;YAEpC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAE,CAAC,GAAG,SAAS,CAAE,CAAC;YACzC,GAAG,IAAI,OAAO,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;YAClC,KAAK,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;YAClB,IAAI,GAAG,OAAO,CAAC;SAElB;QAED,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAE7B,OAAO,KAAK,CAAC,CAAC,yDAAyD;KAE1E;IAED,gBAAgB,GAAG;QAEf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,EAAE,CAAC;KAErB;IAED,qFAAqF;IAErF,cAAc,CAAE,CAAC,EAAE,QAAQ,EAAG;QAE1B,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,AAAC;QAErC,IAAI,IAAC,GAAG,CAAC,AAAC;QACV,MAAM,EAAE,GAAG,UAAU,CAAC,MAAM,AAAC;QAE7B,IAAI,eAAe,AAAC,EAAC,uCAAuC;QAE5D,IAAK,QAAQ,EAET,eAAe,GAAG,QAAQ,CAAC;aAI3B,eAAe,GAAG,CAAC,GAAG,UAAU,CAAE,EAAE,GAAG,CAAC,CAAE,CAAC;QAI/C,gFAAgF;QAEhF,IAAI,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,EAAE,GAAG,CAAC,EAAE,UAAU,AAAC;QAEvC,MAAQ,GAAG,IAAI,IAAI,CAAG;YAElB,IAAC,GAAG,IAAI,CAAC,KAAK,CAAE,GAAG,GAAG,AAAE,CAAA,IAAI,GAAG,GAAG,CAAA,GAAK,CAAC,CAAE,CAAC,CAAC,mHAAmH;YAE/J,UAAU,GAAG,UAAU,CAAE,IAAC,CAAE,GAAG,eAAe,CAAC;YAE/C,IAAK,UAAU,GAAG,CAAC,EAEf,GAAG,GAAG,IAAC,GAAG,CAAC,CAAC;iBAET,IAAK,UAAU,GAAG,CAAC,EAEtB,IAAI,GAAG,IAAC,GAAG,CAAC,CAAC;iBAEV;gBAEH,IAAI,GAAG,IAAC,CAAC;gBACT,MAAM;YAEN,OAAO;aAEV;SAEJ;QAED,IAAC,GAAG,IAAI,CAAC;QAET,IAAK,UAAU,CAAE,IAAC,CAAE,KAAK,eAAe,EAEpC,OAAO,IAAC,GAAK,CAAA,EAAE,GAAG,CAAC,CAAA,AAAE,CAAC;QAI1B,sFAAsF;QAEtF,MAAM,YAAY,GAAG,UAAU,CAAE,IAAC,CAAE,AAAC;QACrC,MAAM,WAAW,GAAG,UAAU,CAAE,IAAC,GAAG,CAAC,CAAE,AAAC;QAExC,MAAM,aAAa,GAAG,WAAW,GAAG,YAAY,AAAC;QAEjD,iEAAiE;QAEjE,MAAM,eAAe,GAAG,AAAE,CAAA,eAAe,GAAG,YAAY,CAAA,GAAK,aAAa,AAAC;QAE3E,kCAAkC;QAElC,MAAM,CAAC,GAAG,AAAE,CAAA,IAAC,GAAG,eAAe,CAAA,GAAO,CAAA,EAAE,GAAG,CAAC,CAAA,AAAE,AAAC;QAE/C,OAAO,CAAC,CAAC;KAEZ;IAED,qCAAqC;IACrC,mEAAmE;IACnE,iEAAiE;IACjE,iDAAiD;IAEjD,UAAU,CAAE,CAAC,EAAE,cAAc,EAAG;QAE5B,MAAM,KAAK,GAAG,MAAM,AAAC;QACrB,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,AAAC;QACnB,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,AAAC;QAEnB,4BAA4B;QAE5B,IAAK,EAAE,GAAG,CAAC,EAAG,EAAE,GAAG,CAAC,CAAC;QACrB,IAAK,EAAE,GAAG,CAAC,EAAG,EAAE,GAAG,CAAC,CAAC;QAErB,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAE,EAAE,CAAE,AAAC;QAChC,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAE,EAAE,CAAE,AAAC;QAEhC,MAAM,OAAO,GAAG,cAAc,IAAM,CAAA,AAAE,GAAG,CAAC,SAAS,GAAK,IAAI,OAAO,EAAE,GAAG,IAAI,OAAO,EAAE,CAAA,AAAE,AAAC;QAExF,OAAO,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAE,GAAG,CAAE,CAAC,SAAS,EAAE,CAAC;QAE3C,OAAO,OAAO,CAAC;KAElB;IAED,YAAY,CAAE,CAAC,EAAE,cAAc,EAAG;QAE9B,MAAM,CAAC,GAAG,IAAI,CAAC,cAAc,CAAE,CAAC,CAAE,AAAC;QACnC,OAAO,IAAI,CAAC,UAAU,CAAE,CAAC,EAAE,cAAc,CAAE,CAAC;KAE/C;IAED,mBAAmB,CAAE,QAAQ,EAAE,MAAM,EAAG;QAEpC,0DAA0D;QAE1D,MAAM,MAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAE7B,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,SAAS,GAAG,EAAE,AAAC;QAErB,MAAM,GAAG,GAAG,IAAI,OAAO,EAAE,AAAC;QAC1B,MAAM,GAAG,GAAG,IAAI,OAAO,EAAE,AAAC;QAE1B,4DAA4D;QAE5D,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,QAAQ,EAAE,IAAC,EAAG,CAAG;YAEnC,MAAM,CAAC,GAAG,IAAC,GAAG,QAAQ,AAAC;YAEvB,QAAQ,CAAE,IAAC,CAAE,GAAG,IAAI,CAAC,YAAY,CAAE,CAAC,EAAE,IAAI,OAAO,EAAE,CAAE,CAAC;SAEzD;QAED,6EAA6E;QAC7E,4DAA4D;QAE5D,OAAO,CAAE,CAAC,CAAE,GAAG,IAAI,OAAO,EAAE,CAAC;QAC7B,SAAS,CAAE,CAAC,CAAE,GAAG,IAAI,OAAO,EAAE,CAAC;QAC/B,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,AAAC;QAC3B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,AAAC;QACvC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,AAAC;QACvC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,AAAC;QAEvC,IAAK,EAAE,IAAI,GAAG,EAAG;YAEb,GAAG,GAAG,EAAE,CAAC;YACT,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SAEzB;QAED,IAAK,EAAE,IAAI,GAAG,EAAG;YAEb,GAAG,GAAG,EAAE,CAAC;YACT,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SAEzB;QAED,IAAK,EAAE,IAAI,GAAG,EAEV,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAI1B,GAAG,CAAC,YAAY,CAAE,QAAQ,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,SAAS,EAAE,CAAC;QAEtD,OAAO,CAAE,CAAC,CAAE,CAAC,YAAY,CAAE,QAAQ,CAAE,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC;QAChD,SAAS,CAAE,CAAC,CAAE,CAAC,YAAY,CAAE,QAAQ,CAAE,CAAC,CAAE,EAAE,OAAO,CAAE,CAAC,CAAE,CAAE,CAAC;QAG3D,uFAAuF;QAEvF,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,QAAQ,EAAE,IAAC,EAAG,CAAG;YAEnC,OAAO,CAAE,IAAC,CAAE,GAAG,OAAO,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC,KAAK,EAAE,CAAC;YAExC,SAAS,CAAE,IAAC,CAAE,GAAG,SAAS,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC,KAAK,EAAE,CAAC;YAE5C,GAAG,CAAC,YAAY,CAAE,QAAQ,CAAE,IAAC,GAAG,CAAC,CAAE,EAAE,QAAQ,CAAE,IAAC,CAAE,CAAE,CAAC;YAErD,IAAK,GAAG,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,EAAG;gBAEjC,GAAG,CAAC,SAAS,EAAE,CAAC;gBAEhB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAE,KAAK,CAAE,QAAQ,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC,GAAG,CAAE,QAAQ,CAAE,IAAC,CAAE,CAAE,EAAE,EAAG,EAAE,CAAC,CAAE,CAAE,AAAC,EAAC,+BAA+B;gBAEnH,OAAO,CAAE,IAAC,CAAE,CAAC,YAAY,CAAE,GAAG,CAAC,gBAAgB,CAAE,GAAG,EAAE,KAAK,CAAE,CAAE,CAAC;aAEnE;YAED,SAAS,CAAE,IAAC,CAAE,CAAC,YAAY,CAAE,QAAQ,CAAE,IAAC,CAAE,EAAE,OAAO,CAAE,IAAC,CAAE,CAAE,CAAC;SAE9D;QAED,oGAAoG;QAEpG,IAAK,MAAM,KAAK,IAAI,EAAG;YAEnB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAE,KAAK,CAAE,OAAO,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,OAAO,CAAE,QAAQ,CAAE,CAAE,EAAE,EAAG,EAAE,CAAC,CAAE,CAAE,AAAC;YAClF,KAAK,IAAI,QAAQ,CAAC;YAElB,IAAK,QAAQ,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,GAAG,CAAC,YAAY,CAAE,OAAO,CAAE,CAAC,CAAE,EAAE,OAAO,CAAE,QAAQ,CAAE,CAAE,CAAE,GAAG,CAAC,EAE/E,KAAK,GAAG,CAAE,KAAK,CAAC;YAIpB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,QAAQ,EAAE,IAAC,EAAG,CAAG;gBAEnC,oBAAoB;gBACpB,OAAO,CAAE,IAAC,CAAE,CAAC,YAAY,CAAE,GAAG,CAAC,gBAAgB,CAAE,QAAQ,CAAE,IAAC,CAAE,EAAE,KAAK,GAAG,IAAC,CAAE,CAAE,CAAC;gBAC9E,SAAS,CAAE,IAAC,CAAE,CAAC,YAAY,CAAE,QAAQ,CAAE,IAAC,CAAE,EAAE,OAAO,CAAE,IAAC,CAAE,CAAE,CAAC;aAE9D;SAEJ;QAED,OAAO;YACH,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,SAAS;SACvB,CAAC;KAEL;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QAEpD,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG;YACT,QAAQ,EAAE;gBACN,OAAO,EAAE,GAAG;gBACZ,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,cAAc;aAC5B;SACJ,AAAC;QAEF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAClD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,IAAI,EAAG;QAEb,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAElD,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,YAAY,SAAS,KAAK;IAE5B,YAAa,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,UAAU,GAAG,KAAK,EAAE,SAAS,GAAG,CAAC,CAAG;QAEjI,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;QAE3B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QAEb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAE7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAE9B;IAED,QAAQ,CAAE,CAAC,EAAE,cAAc,EAAG;QAE1B,MAAM,KAAK,GAAG,cAAc,IAAI,IAAI,OAAO,EAAE,AAAC;QAE9C,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,AAAC;QAC1B,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,AAAC;QACnD,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAE,UAAU,CAAE,GAAG,MAAM,CAAC,OAAO,AAAC;QAE3D,uCAAuC;QACvC,MAAQ,UAAU,GAAG,CAAC,CAAG,UAAU,IAAI,KAAK,CAAC;QAC7C,MAAQ,UAAU,GAAG,KAAK,CAAG,UAAU,IAAI,KAAK,CAAC;QAEjD,IAAK,UAAU,GAAG,MAAM,CAAC,OAAO;YAE5B,IAAK,UAAU,EAEX,UAAU,GAAG,CAAC,CAAC;iBAIf,UAAU,GAAG,KAAK,CAAC;SAI1B;QAED,IAAK,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,CAAE,UAAU;YAEzC,IAAK,UAAU,KAAK,KAAK,EAErB,UAAU,GAAG,CAAE,KAAK,CAAC;iBAIrB,UAAU,GAAG,UAAU,GAAG,KAAK,CAAC;SAIvC;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,UAAU,AAAC;QAChD,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;QACnD,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;QAEnD,IAAK,IAAI,CAAC,SAAS,KAAK,CAAC,EAAG;YAExB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,SAAS,CAAE,AAAC;YACvC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,SAAS,CAAE,AAAC;YAEvC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,AAAC;YACvB,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,AAAC;YAEvB,oDAAoD;YACpD,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;YAClC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;SAErC;QAED,OAAO,KAAK,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;KAE5B;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;QAEpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAE9B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QAEpC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAElB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAE5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAEhC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAElC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,IAAI,EAAG;QAEb,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEvB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAElB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAE5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAEhC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAElC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,YAAY,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC;AAE7C,MAAM,QAAQ,SAAS,YAAY;IAE/B,YAAa,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,CAAG;QAE/D,KAAK,CAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,CAAE,CAAC;QAEtE,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;KAE1B;CAEJ;AAED,QAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;AAErC;;;;;;;IAOG,CAGH;;;;;;;;GAQE,CAEF,SAAS,SAAS,GAAG;IAEjB,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,AAAC;IAEnC;;;;;;;QAOG,CACH,SAAS,IAAI,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG;QAE5B,EAAE,GAAG,EAAE,CAAC;QACR,EAAE,GAAG,EAAE,CAAC;QACR,EAAE,GAAG,EAAG,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;QACrC,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;KAElC;IAED,OAAO;QAEH,cAAc,EAAE,SAAW,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAG;YAEjD,IAAI,CAAE,EAAE,EAAE,EAAE,EAAE,OAAO,GAAK,CAAA,EAAE,GAAG,EAAE,CAAA,AAAE,EAAE,OAAO,GAAK,CAAA,EAAE,GAAG,EAAE,CAAA,AAAE,CAAE,CAAC;SAEhE;QAED,wBAAwB,EAAE,SAAW,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAG;YAEjE,iDAAiD;YACjD,IAAI,EAAE,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAK,GAAG,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAO,CAAA,GAAG,GAAG,GAAG,CAAA,AAAE,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAK,GAAG,AAAC;YAC7E,IAAI,EAAE,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAK,GAAG,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAO,CAAA,GAAG,GAAG,GAAG,CAAA,AAAE,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAK,GAAG,AAAC;YAE7E,gDAAgD;YAChD,EAAE,IAAI,GAAG,CAAC;YACV,EAAE,IAAI,GAAG,CAAC;YAEV,IAAI,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC;SAE1B;QAED,IAAI,EAAE,SAAW,CAAC,EAAG;YAEjB,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;YACjB,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,AAAC;YAClB,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;SAE1C;KAEJ,CAAC;CAEL;AAED,EAAE;AAEF,MAAM,GAAG,GAAG,IAAI,OAAO,EAAE,AAAC;AAC1B,MAAM,EAAE,GAAG,IAAI,SAAS,EAAE,EAAE,EAAE,GAAG,IAAI,SAAS,EAAE,EAAE,EAAE,GAAG,IAAI,SAAS,EAAE,AAAC;AAEvE,MAAM,gBAAgB,SAAS,KAAK;IAEhC,YAAa,MAAM,GAAG,EAAE,EAAE,MAAM,GAAG,KAAK,EAAE,SAAS,GAAG,aAAa,EAAE,OAAO,GAAG,GAAG,CAAG;QAEjF,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;QAE/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAE1B;IAED,QAAQ,CAAE,CAAC,EAAE,cAAc,GAAG,IAAI,OAAO,EAAE,EAAG;QAE1C,MAAM,KAAK,GAAG,cAAc,AAAC;QAE7B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAC3B,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,AAAC;QAExB,MAAM,CAAC,GAAG,AAAE,CAAA,CAAC,GAAK,CAAA,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAA,AAAE,CAAA,GAAK,CAAC,AAAC;QAC9C,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAE,AAAC;QAC/B,IAAI,MAAM,GAAG,CAAC,GAAG,QAAQ,AAAC;QAE1B,IAAK,IAAI,CAAC,MAAM,EAEZ,QAAQ,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,AAAE,CAAA,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA,GAAK,CAAC,CAAC;aAE/E,IAAK,MAAM,KAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAG;YAE7C,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,GAAG,CAAC,CAAC;SAEd;QAED,IAAI,EAAE,EAAE,EAAE,AAAC,EAAC,mCAAmC;QAE/C,IAAK,IAAI,CAAC,MAAM,IAAI,QAAQ,GAAG,CAAC,EAE5B,EAAE,GAAG,MAAM,CAAE,AAAE,CAAA,QAAQ,GAAG,CAAC,CAAA,GAAK,CAAC,CAAE,CAAC;aAEjC;YAEH,0BAA0B;YAC1B,GAAG,CAAC,UAAU,CAAE,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,CAAE,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC,CAAE,CAAE,CAAC;YAC9D,EAAE,GAAG,GAAG,CAAC;SAEZ;QAED,MAAM,EAAE,GAAG,MAAM,CAAE,QAAQ,GAAG,CAAC,CAAE,AAAC;QAClC,MAAM,EAAE,GAAG,MAAM,CAAE,AAAE,CAAA,QAAQ,GAAG,CAAC,CAAA,GAAK,CAAC,CAAE,AAAC;QAE1C,IAAK,IAAI,CAAC,MAAM,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,EAEhC,EAAE,GAAG,MAAM,CAAE,AAAE,CAAA,QAAQ,GAAG,CAAC,CAAA,GAAK,CAAC,CAAE,CAAC;aAEjC;YAEH,yBAAyB;YACzB,GAAG,CAAC,UAAU,CAAE,MAAM,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;YAC1E,EAAE,GAAG,GAAG,CAAC;SAEZ;QAED,IAAK,IAAI,CAAC,SAAS,KAAK,aAAa,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG;YAEpE,yCAAyC;YACzC,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,KAAK,SAAS,GAAG,GAAG,GAAG,IAAI,AAAC;YACtD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,EAAE,CAAC,iBAAiB,CAAE,EAAE,CAAE,EAAE,GAAG,CAAE,AAAC;YACtD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,EAAE,CAAC,iBAAiB,CAAE,EAAE,CAAE,EAAE,GAAG,CAAE,AAAC;YACtD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,EAAE,CAAC,iBAAiB,CAAE,EAAE,CAAE,EAAE,GAAG,CAAE,AAAC;YAEtD,mCAAmC;YACnC,IAAK,GAAG,GAAG,MAAI,EAAG,GAAG,GAAG,CAAG,CAAC;YAC5B,IAAK,GAAG,GAAG,MAAI,EAAG,GAAG,GAAG,GAAG,CAAC;YAC5B,IAAK,GAAG,GAAG,MAAI,EAAG,GAAG,GAAG,GAAG,CAAC;YAE5B,EAAE,CAAC,wBAAwB,CAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;YACrE,EAAE,CAAC,wBAAwB,CAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;YACrE,EAAE,CAAC,wBAAwB,CAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;SAExE,MAAM,IAAK,IAAI,CAAC,SAAS,KAAK,YAAY,EAAG;YAE1C,EAAE,CAAC,cAAc,CAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAE,CAAC;YAC1D,EAAE,CAAC,cAAc,CAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAE,CAAC;YAC1D,EAAE,CAAC,cAAc,CAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAE,CAAC;SAE7D;QAED,KAAK,CAAC,GAAG,CACL,EAAE,CAAC,IAAI,CAAE,MAAM,CAAE,EACjB,EAAE,CAAC,IAAI,CAAE,MAAM,CAAE,EACjB,EAAE,CAAC,IAAI,CAAE,MAAM,CAAE,CACpB,CAAC;QAEF,OAAO,KAAK,CAAC;KAEhB;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAErD,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAE,IAAC,CAAE,AAAC;YAEjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,KAAK,EAAE,CAAE,CAAC;SAErC;QAED,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAE9B,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAEnD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,AAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,OAAO,EAAE,CAAE,CAAC;SAEvC;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,IAAI,EAAG;QAEb,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEvB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAEnD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,AAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,IAAI,OAAO,EAAE,CAAC,SAAS,CAAE,KAAK,CAAE,CAAE,CAAC;SAExD;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAErD;;;IAGG,CAEH,SAAS,UAAU,CAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG;IAErC,MAAM,EAAE,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAK,GAAG,AAAC;IAC7B,MAAM,EAAE,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAK,GAAG,AAAC;IAC7B,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;IACjB,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,AAAC;IAClB,OAAO,AAAE,CAAA,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA,GAAK,EAAE,GAAG,AAAE,CAAA,EAAG,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAA,GAAK,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;CAEtG;AAED,EAAE;AAEF,SAAS,iBAAiB,CAAE,CAAC,EAAE,CAAC,EAAG;IAE/B,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;IAChB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CAEpB;AAED,SAAS,iBAAiB,CAAE,CAAC,EAAE,CAAC,EAAG;IAE/B,OAAO,CAAC,GAAK,CAAA,CAAC,GAAG,CAAC,CAAA,GAAK,CAAC,GAAG,CAAC,CAAC;CAEhC;AAED,SAAS,iBAAiB,CAAE,CAAC,EAAE,CAAC,EAAG;IAE/B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CAEpB;AAED,SAAS,eAAe,CAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG;IAEtC,OAAO,iBAAiB,CAAE,CAAC,EAAE,EAAE,CAAE,GAAG,iBAAiB,CAAE,CAAC,EAAE,EAAE,CAAE,GAC1D,iBAAiB,CAAE,CAAC,EAAE,EAAE,CAAE,CAAC;CAElC;AAED,EAAE;AAEF,SAAS,aAAa,CAAE,CAAC,EAAE,CAAC,EAAG;IAE3B,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;IAChB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CAExB;AAED,SAAS,aAAa,CAAE,CAAC,EAAE,CAAC,EAAG;IAE3B,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;IAChB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CAE5B;AAED,SAAS,aAAa,CAAE,CAAC,EAAE,CAAC,EAAG;IAE3B,OAAO,CAAC,GAAK,CAAA,CAAC,GAAG,CAAC,CAAA,GAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CAEpC;AAED,SAAS,aAAa,CAAE,CAAC,EAAE,CAAC,EAAG;IAE3B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CAExB;AAED,SAAS,WAAW,CAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG;IAEtC,OAAO,aAAa,CAAE,CAAC,EAAE,EAAE,CAAE,GAAG,aAAa,CAAE,CAAC,EAAE,EAAE,CAAE,GAAG,aAAa,CAAE,CAAC,EAAE,EAAE,CAAE,GAC3E,aAAa,CAAE,CAAC,EAAE,EAAE,CAAE,CAAC;CAE9B;AAED,MAAM,gBAAgB,SAAS,KAAK;IAEhC,YAAa,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,CAAG;QAE1F,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;QAE/B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KAEhB;IAED,QAAQ,CAAE,CAAC,EAAE,cAAc,GAAG,IAAI,OAAO,EAAE,EAAG;QAE1C,MAAM,KAAK,GAAG,cAAc,AAAC;QAE7B,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,AAAC;QAE7D,KAAK,CAAC,GAAG,CACL,WAAW,CAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,EACxC,WAAW,CAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAC3C,CAAC;QAEF,OAAO,KAAK,CAAC;KAEhB;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,IAAI,EAAG;QAEb,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEvB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAE7B,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAErD,MAAM,iBAAiB,SAAS,KAAK;IAEjC,YAAa,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,CAAG;QAE1F,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;QAEhC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KAEhB;IAED,QAAQ,CAAE,CAAC,EAAE,cAAc,GAAG,IAAI,OAAO,EAAE,EAAG;QAE1C,MAAM,KAAK,GAAG,cAAc,AAAC;QAE7B,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,AAAC;QAE7D,KAAK,CAAC,GAAG,CACL,WAAW,CAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,EACxC,WAAW,CAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,EACxC,WAAW,CAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAC3C,CAAC;QAEF,OAAO,KAAK,CAAC;KAEhB;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,IAAI,EAAG;QAEb,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEvB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAE7B,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAEvD,MAAM,SAAS,SAAS,KAAK;IAEzB,YAAa,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,CAAG;QAElD,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QAExB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KAEhB;IAED,QAAQ,CAAE,CAAC,EAAE,cAAc,GAAG,IAAI,OAAO,EAAE,EAAG;QAE1C,MAAM,KAAK,GAAG,cAAc,AAAC;QAE7B,IAAK,CAAC,KAAK,CAAC,EAER,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;aAEnB;YAEH,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;YACrC,KAAK,CAAC,cAAc,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;SAE5C;QAED,OAAO,KAAK,CAAC;KAEhB;IAED,+DAA+D;IAC/D,UAAU,CAAE,CAAC,EAAE,cAAc,EAAG;QAE5B,OAAO,IAAI,CAAC,QAAQ,CAAE,CAAC,EAAE,cAAc,CAAE,CAAC;KAE7C;IAED,UAAU,CAAE,CAAC,EAAE,cAAc,EAAG;QAE5B,MAAM,OAAO,GAAG,cAAc,IAAI,IAAI,OAAO,EAAE,AAAC;QAEhD,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC,SAAS,EAAE,CAAC;QAEnD,OAAO,OAAO,CAAC;KAElB;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,IAAI,EAAG;QAEb,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEvB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAE7B,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;AAEvC,MAAM,UAAU,SAAS,KAAK;IAE1B,YAAa,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,CAAG;QAElD,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KAEhB;IACD,QAAQ,CAAE,CAAC,EAAE,cAAc,GAAG,IAAI,OAAO,EAAE,EAAG;QAE1C,MAAM,KAAK,GAAG,cAAc,AAAC;QAE7B,IAAK,CAAC,KAAK,CAAC,EAER,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;aAEnB;YAEH,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;YACrC,KAAK,CAAC,cAAc,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;SAE5C;QAED,OAAO,KAAK,CAAC;KAEhB;IACD,+DAA+D;IAC/D,UAAU,CAAE,CAAC,EAAE,cAAc,EAAG;QAE5B,OAAO,IAAI,CAAC,QAAQ,CAAE,CAAC,EAAE,cAAc,CAAE,CAAC;KAE7C;IACD,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;IACD,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IACD,QAAQ,CAAE,IAAI,EAAG;QAEb,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEvB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAE7B,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,oBAAoB,SAAS,KAAK;IAEpC,YAAa,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,CAAG;QAEtE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;QAEnC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KAEhB;IAED,QAAQ,CAAE,CAAC,EAAE,cAAc,GAAG,IAAI,OAAO,EAAE,EAAG;QAE1C,MAAM,KAAK,GAAG,cAAc,AAAC;QAE7B,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,AAAC;QAE/C,KAAK,CAAC,GAAG,CACL,eAAe,CAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,EACtC,eAAe,CAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CACzC,CAAC;QAEF,OAAO,KAAK,CAAC;KAEhB;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,IAAI,EAAG;QAEb,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEvB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAE7B,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,oBAAoB,CAAC,SAAS,CAAC,sBAAsB,GAAG,IAAI,CAAC;AAE7D,MAAM,qBAAqB,SAAS,KAAK;IAErC,YAAa,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,OAAO,EAAE,CAAG;QAEtE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,uBAAuB,CAAC;QAEpC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KAEhB;IAED,QAAQ,CAAE,CAAC,EAAE,cAAc,GAAG,IAAI,OAAO,EAAE,EAAG;QAE1C,MAAM,KAAK,GAAG,cAAc,AAAC;QAE7B,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,AAAC;QAE/C,KAAK,CAAC,GAAG,CACL,eAAe,CAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,EACtC,eAAe,CAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,EACtC,eAAe,CAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CACzC,CAAC;QAEF,OAAO,KAAK,CAAC;KAEhB;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,IAAI,EAAG;QAEb,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEvB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAE7B,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,qBAAqB,CAAC,SAAS,CAAC,uBAAuB,GAAG,IAAI,CAAC;AAE/D,MAAM,WAAW,SAAS,KAAK;IAE3B,YAAa,MAAM,GAAG,EAAE,CAAG;QAEvB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;QAE1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KAExB;IAED,QAAQ,CAAE,CAAC,EAAE,cAAc,GAAG,IAAI,OAAO,EAAE,EAAG;QAE1C,MAAM,KAAK,GAAG,cAAc,AAAC;QAE7B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAC3B,MAAM,CAAC,GAAG,AAAE,CAAA,MAAM,CAAC,MAAM,GAAG,CAAC,CAAA,GAAK,CAAC,AAAC;QAEpC,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAE,AAAC;QACjC,MAAM,MAAM,GAAG,CAAC,GAAG,QAAQ,AAAC;QAE5B,MAAM,EAAE,GAAG,MAAM,CAAE,QAAQ,KAAK,CAAC,GAAG,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAAE,AAAC;QAC9D,MAAM,EAAE,GAAG,MAAM,CAAE,QAAQ,CAAE,AAAC;QAC9B,MAAM,EAAE,GAAG,MAAM,CAAE,QAAQ,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAE,AAAC;QACrF,MAAM,EAAE,GAAG,MAAM,CAAE,QAAQ,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAE,AAAC;QAErF,KAAK,CAAC,GAAG,CACL,UAAU,CAAE,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,EAC5C,UAAU,CAAE,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAC/C,CAAC;QAEF,OAAO,KAAK,CAAC;KAEhB;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAErD,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAE,IAAC,CAAE,AAAC;YAEjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,KAAK,EAAE,CAAE,CAAC;SAErC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAEnD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,AAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,OAAO,EAAE,CAAE,CAAC;SAEvC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,IAAI,EAAG;QAEb,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEvB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAEnD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,AAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,IAAI,OAAO,EAAE,CAAC,SAAS,CAAE,KAAK,CAAE,CAAE,CAAC;SAExD;QAED,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,WAAW,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;AAE3C,IAAI,MAAM,GAAG,aAAa,CAAA,MAAM,CAAC,MAAM,CAAC;IACpC,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,QAAQ;IAClB,gBAAgB,EAAE,gBAAgB;IAClC,gBAAgB,EAAE,gBAAgB;IAClC,iBAAiB,EAAE,iBAAiB;IACpC,YAAY,EAAE,YAAY;IAC1B,SAAS,EAAE,SAAS;IACpB,UAAU,EAAE,UAAU;IACtB,oBAAoB,EAAE,oBAAoB;IAC1C,qBAAqB,EAAE,qBAAqB;IAC5C,WAAW,EAAE,WAAW;CAC3B,CAAC,AAAC;AAEH;;;iEAGgE,CAEhE,MAAM,SAAS,SAAS,KAAK;IAEzB,aAAc;QAEV,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QAExB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,gCAAgC;KAE3D;IAED,GAAG,CAAE,KAAK,EAAG;QAET,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;KAE7B;IAED,SAAS,GAAG;QAER,+DAA+D;QAC/D,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,QAAQ,CAAE,CAAC,CAAE,AAAC;QAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC,QAAQ,CAAE,CAAC,CAAE,AAAC;QAErE,IAAK,CAAE,UAAU,CAAC,MAAM,CAAE,QAAQ,CAAE,EAEhC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,IAAI,SAAS,CAAE,QAAQ,EAAE,UAAU,CAAE,CAAE,CAAC;KAIjE;IAED,0CAA0C;IAC1C,kCAAkC;IAClC,4BAA4B;IAE5B,8CAA8C;IAC9C,uCAAuC;IACvC,yBAAyB;IACzB,iCAAiC;IAEjC,QAAQ,CAAE,CAAC,EAAE,cAAc,EAAG;QAE1B,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,AAAC;QAC/B,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,AAAC;QAC5C,IAAI,IAAC,GAAG,CAAC,AAAC;QAEV,oCAAoC;QAEpC,MAAQ,IAAC,GAAG,YAAY,CAAC,MAAM,CAAG;YAE9B,IAAK,YAAY,CAAE,IAAC,CAAE,IAAI,CAAC,EAAG;gBAE1B,MAAM,IAAI,GAAG,YAAY,CAAE,IAAC,CAAE,GAAG,CAAC,AAAC;gBACnC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,AAAC;gBAE/B,MAAM,aAAa,GAAG,KAAK,CAAC,SAAS,EAAE,AAAC;gBACxC,MAAM,CAAC,GAAG,aAAa,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,aAAa,AAAC;gBAE7D,OAAO,KAAK,CAAC,UAAU,CAAE,CAAC,EAAE,cAAc,CAAE,CAAC;aAEhD;YAED,IAAC,EAAG,CAAC;SAER;QAED,OAAO,IAAI,CAAC;IAEZ,0CAA0C;KAE7C;IAED,+EAA+E;IAC/E,wEAAwE;IACxE,kCAAkC;IAElC,SAAS,GAAG;QAER,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,EAAE,AAAC;QACpC,OAAO,IAAI,CAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;KAElC;IAED,qCAAqC;IACrC,gBAAgB,GAAG;QAEf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,eAAe,EAAE,CAAC;KAE1B;IAED,iCAAiC;IACjC,iEAAiE;IAEjE,eAAe,GAAG;QAEd,gEAAgE;QAEhE,IAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,EAErE,OAAO,IAAI,CAAC,YAAY,CAAC;QAI7B,0BAA0B;QAC1B,8BAA8B;QAE9B,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,IAAI,IAAI,GAAG,CAAC,AAAC;QAEb,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAEnD,IAAI,IAAI,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,CAAC,SAAS,EAAE,CAAC;YACrC,OAAO,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;SAExB;QAED,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAE5B,OAAO,OAAO,CAAC;KAElB;IAED,eAAe,CAAE,SAAS,GAAG,EAAE,EAAG;QAE9B,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,SAAS,EAAE,IAAC,EAAG,CAEjC,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,QAAQ,CAAE,IAAC,GAAG,SAAS,CAAE,CAAE,CAAC;QAIlD,IAAK,IAAI,CAAC,SAAS,EAEf,MAAM,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC,CAAE,CAAE,CAAC;QAI/B,OAAO,MAAM,CAAC;KAEjB;IAED,SAAS,CAAE,SAAS,GAAG,EAAE,EAAG;QAExB,MAAM,MAAM,GAAG,EAAE,AAAC;QAClB,IAAI,IAAI,AAAC;QAET,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;YAE7D,MAAM,KAAK,GAAG,MAAM,CAAE,IAAC,CAAE,AAAC;YAC1B,MAAM,UAAU,GAAG,KAAK,CAAC,cAAc,GAAG,SAAS,GAAG,CAAC,GACjD,AAAE,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,YAAY,GAAK,CAAC,GAC3C,KAAK,CAAC,aAAa,GAAG,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,GACjD,SAAS,AAAC;YAExB,MAAM,GAAG,GAAG,KAAK,CAAC,SAAS,CAAE,UAAU,CAAE,AAAC;YAE1C,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAG,CAAG;gBAEpC,MAAM,KAAK,GAAG,GAAG,CAAE,CAAC,CAAE,AAAC;gBAEvB,IAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAE,KAAK,CAAE,EAAG,SAAS,CAAC,+CAA+C;gBAE7F,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;gBACrB,IAAI,GAAG,KAAK,CAAC;aAEhB;SAEJ;QAED,IAAK,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAE,MAAM,CAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC,MAAM,CAAE,MAAM,CAAE,CAAC,CAAE,CAAE,EAE3F,MAAM,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC,CAAE,CAAE,CAAC;QAI/B,OAAO,MAAM,CAAC;KAEjB;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAErD,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAE,IAAC,CAAE,AAAC;YAEjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,KAAK,EAAE,CAAE,CAAC;SAErC;QAED,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAEnD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,AAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,MAAM,EAAE,CAAE,CAAC;SAEtC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,IAAI,EAAG;QAEb,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAEnD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,AAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,IAAI,MAAM,CAAE,KAAK,CAAC,IAAI,CAAE,EAAE,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAE,CAAC;SAEpE;QAED,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,IAAI,SAAS,SAAS;IAExB,YAAa,MAAM,CAAG;QAElB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QAEnB,IAAI,CAAC,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;QAElC,IAAK,MAAM,EAEP,IAAI,CAAC,aAAa,CAAE,MAAM,CAAE,CAAC;KAIpC;IAED,aAAa,CAAE,MAAM,EAAG;QAEpB,IAAI,CAAC,MAAM,CAAE,MAAM,CAAE,CAAC,CAAE,CAAC,CAAC,EAAE,MAAM,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC;QAE5C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAE3C,IAAI,CAAC,MAAM,CAAE,MAAM,CAAE,IAAC,CAAE,CAAC,CAAC,EAAE,MAAM,CAAE,IAAC,CAAE,CAAC,CAAC,CAAE,CAAC;QAIhD,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,CAAC,EAAE,CAAC,EAAG;QAEX,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC,CAAC,wDAAwD;QAEvF,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,CAAC,EAAE,CAAC,EAAG;QAEX,MAAM,KAAK,GAAG,IAAI,SAAS,CAAE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE,AAAC;QAC9E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QAE1B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAE9B,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,CAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAG;QAEnC,MAAM,KAAK,GAAG,IAAI,oBAAoB,CAClC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,EACzB,IAAI,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE,EACzB,IAAI,OAAO,CAAE,EAAE,EAAE,EAAE,CAAE,CACxB,AAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QAE1B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAG;QAEhD,MAAM,KAAK,GAAG,IAAI,gBAAgB,CAC9B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,EACzB,IAAI,OAAO,CAAE,KAAK,EAAE,KAAK,CAAE,EAC3B,IAAI,OAAO,CAAE,KAAK,EAAE,KAAK,CAAE,EAC3B,IAAI,OAAO,CAAE,EAAE,EAAE,EAAE,CAAE,CACxB,AAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QAE1B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,UAAU,CAAE,GAAG,CAAC,mBAAmB,CAApB,EAAuB;QAElC,MAAM,IAAI,GAAG;YAAE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;SAAE,CAAC,MAAM,CAAE,GAAG,CAAE,AAAC;QAEzD,MAAM,KAAK,GAAG,IAAI,WAAW,CAAE,IAAI,CAAE,AAAC;QACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QAE1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,GAAG,CAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAE,CAAE,CAAC;QAEhD,OAAO,IAAI,CAAC;KAEf;IAED,GAAG,CAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAG;QAEvD,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,AAAC;QAC/B,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,AAAC;QAE/B,IAAI,CAAC,MAAM,CAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,OAAO,EAClC,WAAW,EAAE,SAAS,EAAE,UAAU,CAAE,CAAC;QAEzC,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAG;QAE1D,IAAI,CAAC,UAAU,CAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,CAAE,CAAC;QAEhF,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAG;QAE/E,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,AAAC;QAC/B,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,AAAC;QAE/B,IAAI,CAAC,UAAU,CAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,CAAE,CAAC;QAErG,OAAO,IAAI,CAAC;KAEf;IAED,UAAU,CAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAG;QAElF,MAAM,KAAK,GAAG,IAAI,YAAY,CAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,CAAE,AAAC;QAE1G,IAAK,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAG;YAE1B,kDAAkD;YAClD,MAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAE,CAAC,CAAE,AAAC;YAEvC,IAAK,CAAE,UAAU,CAAC,MAAM,CAAE,IAAI,CAAC,YAAY,CAAE,EAEzC,IAAI,CAAC,MAAM,CAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAE,CAAC;SAIjD;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QAE1B,MAAM,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAE,CAAC,CAAE,AAAC;QACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC;QAEpC,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,MAAM,CAAC,YAAY,CAAE,CAAC;QAE9C,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAEhD,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,IAAI,EAAG;QAEb,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEvB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;QAEjD,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,aAAa,SAAS,cAAc;IAEtC,YAAa,MAAM,GAAG;QAAE,IAAI,OAAO,CAAE,CAAC,EAAE,GAAG,CAAE;QAAE,IAAI,OAAO,CAAE,GAAG,EAAE,CAAC,CAAE;QAAE,IAAI,OAAO,CAAE,CAAC,EAAE,IAAK,CAAE;KAAE,EAAE,QAAQ,GAAG,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAG;QAEpJ,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAE5B,IAAI,CAAC,UAAU,GAAG;YACd,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,SAAS;SACvB,CAAC;QAEF,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAE,QAAQ,CAAE,CAAC;QAElC,iDAAiD;QAEjD,SAAS,GAAG,KAAK,CAAE,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAE,CAAC;QAE/C,UAAU;QAEV,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,GAAG,GAAG,EAAE,AAAC;QACf,MAAM,WAAW,GAAG,EAAE,AAAC;QACvB,MAAM,OAAO,GAAG,EAAE,AAAC;QAEnB,mBAAmB;QAEnB,MAAM,eAAe,GAAG,CAAG,GAAG,QAAQ,AAAC;QACvC,MAAM,OAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAC7B,MAAM,EAAE,GAAG,IAAI,OAAO,EAAE,AAAC;QACzB,MAAM,MAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAC7B,MAAM,SAAS,GAAG,IAAI,OAAO,EAAE,AAAC;QAChC,MAAM,UAAU,GAAG,IAAI,OAAO,EAAE,AAAC;QACjC,IAAI,EAAE,GAAG,CAAC,AAAC;QACX,IAAI,EAAE,GAAG,CAAC,AAAC;QAEX,6CAA6C;QAE7C,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAM,MAAM,CAAC,MAAM,GAAG,CAAC,AAAE,EAAE,CAAC,EAAG,CAE7C,OAAS,CAAC;YAEN,KAAK,CAAC;gBAEF,EAAE,GAAG,MAAM,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC;gBACvC,EAAE,GAAG,MAAM,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC;gBAEvC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAG,CAAC;gBACpB,MAAM,CAAC,CAAC,GAAG,CAAE,EAAE,CAAC;gBAChB,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAG,CAAC;gBAEpB,UAAU,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;gBAE1B,MAAM,CAAC,SAAS,EAAE,CAAC;gBAEnB,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC;gBAEjD,MAAM;YAEV,KAAO,MAAM,CAAC,MAAM,GAAG,CAAC;gBAEpB,WAAW,CAAC,IAAI,CAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAE,CAAC;gBAE7D,MAAM;YAEV;gBAEI,EAAE,GAAG,MAAM,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC;gBACvC,EAAE,GAAG,MAAM,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC;gBAEvC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAG,CAAC;gBACpB,MAAM,CAAC,CAAC,GAAG,CAAE,EAAE,CAAC;gBAChB,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAG,CAAC;gBAEpB,SAAS,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;gBAEzB,MAAM,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;gBAEzB,MAAM,CAAC,SAAS,EAAE,CAAC;gBAEnB,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC;gBAEjD,UAAU,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC;SAEpC;QAIL,qCAAqC;QAErC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,QAAQ,EAAE,IAAC,EAAG,CAAG;YAEnC,MAAM,GAAG,GAAG,QAAQ,GAAG,IAAC,GAAG,eAAe,GAAG,SAAS,AAAC;YAEvD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,AAAC;YAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,AAAC;YAE5B,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAM,MAAM,CAAC,MAAM,GAAG,CAAC,AAAE,EAAE,CAAC,EAAG,CAAG;gBAEhD,SAAS;gBAET,OAAM,CAAC,CAAC,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC/B,OAAM,CAAC,CAAC,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC;gBACzB,OAAM,CAAC,CAAC,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,CAAC,GAAG,GAAG,CAAC;gBAE/B,QAAQ,CAAC,IAAI,CAAE,OAAM,CAAC,CAAC,EAAE,OAAM,CAAC,CAAC,EAAE,OAAM,CAAC,CAAC,CAAE,CAAC;gBAE9C,KAAK;gBAEL,EAAE,CAAC,CAAC,GAAG,IAAC,GAAG,QAAQ,CAAC;gBACpB,EAAE,CAAC,CAAC,GAAG,CAAC,GAAK,CAAA,MAAM,CAAC,MAAM,GAAG,CAAC,CAAA,AAAE,CAAC;gBAEjC,GAAG,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;gBAEvB,SAAS;gBAET,MAAM,CAAC,GAAG,WAAW,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAG,GAAG,AAAC;gBACzC,MAAM,CAAC,GAAG,WAAW,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,AAAC;gBACnC,MAAM,CAAC,GAAG,WAAW,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAG,GAAG,AAAC;gBAEzC,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;aAE3B;SAEJ;QAED,UAAU;QAEV,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,QAAQ,EAAE,IAAC,EAAG,CAE/B,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAK,MAAM,CAAC,MAAM,GAAG,CAAC,AAAE,EAAE,EAAC,EAAG,CAAG;YAE/C,MAAM,IAAI,GAAG,EAAC,GAAG,IAAC,GAAG,MAAM,CAAC,MAAM,AAAC;YAEnC,MAAM,CAAC,GAAG,IAAI,AAAC;YACf,MAAM,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,MAAM,AAAC;YAC/B,MAAM,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,AAAC;YACnC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,AAAC;YAEnB,QAAQ;YAER,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YACxB,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SAE3B;QAIL,iBAAiB;QAEjB,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,sBAAsB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAE,CAAC;QAChE,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,IAAI,sBAAsB,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;KAE3E;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,aAAa,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAE,CAAC;KAEzF;CAEJ;AAED,MAAM,eAAe,SAAS,aAAa;IAEvC,YAAa,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,EAAE,cAAc,GAAG,CAAC,CAAG;QAEvE,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,AAAC;QACxB,IAAI,CAAC,MAAM,CAAE,CAAC,EAAE,CAAE,MAAM,GAAG,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAE,CAAC;QACzD,IAAI,CAAC,MAAM,CAAE,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAE,CAAC;QAEvD,KAAK,CAAE,IAAI,CAAC,SAAS,CAAE,WAAW,CAAE,EAAE,cAAc,CAAE,CAAC;QAEvD,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAE9B,IAAI,CAAC,UAAU,GAAG;YACd,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;YACd,WAAW,EAAE,WAAW;YACxB,cAAc,EAAE,cAAc;SACjC,CAAC;KAEL;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,eAAe,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAE,CAAC;KAEjG;CAEJ;AAED,MAAM,cAAc,SAAS,cAAc;IAEvC,YAAa,MAAM,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,WAAW,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAG;QAE/E,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;QAE7B,IAAI,CAAC,UAAU,GAAG;YACd,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,QAAQ;YAClB,UAAU,EAAE,UAAU;YACtB,WAAW,EAAE,WAAW;SAC3B,CAAC;QAEF,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,QAAQ,CAAE,CAAC;QAEnC,UAAU;QAEV,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,GAAG,GAAG,EAAE,AAAC;QAEf,mBAAmB;QAEnB,MAAM,OAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAC7B,MAAM,EAAE,GAAG,IAAI,OAAO,EAAE,AAAC;QAEzB,eAAe;QAEf,QAAQ,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACzB,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACxB,GAAG,CAAC,IAAI,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;QAErB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAG,EAAE,IAAC,IAAI,CAAC,CAAG;YAElD,MAAM,OAAO,GAAG,UAAU,GAAG,CAAC,GAAG,QAAQ,GAAG,WAAW,AAAC;YAExD,SAAS;YAET,OAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;YACxC,OAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;YAExC,QAAQ,CAAC,IAAI,CAAE,OAAM,CAAC,CAAC,EAAE,OAAM,CAAC,CAAC,EAAE,OAAM,CAAC,CAAC,CAAE,CAAC;YAE9C,SAAS;YAET,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YAExB,MAAM;YAEN,EAAE,CAAC,CAAC,GAAG,AAAE,CAAA,QAAQ,CAAE,IAAC,CAAE,GAAG,MAAM,GAAG,CAAC,CAAA,GAAK,CAAC,CAAC;YAC1C,EAAE,CAAC,CAAC,GAAG,AAAE,CAAA,QAAQ,CAAE,IAAC,GAAG,CAAC,CAAE,GAAG,MAAM,GAAG,CAAC,CAAA,GAAK,CAAC,CAAC;YAE9C,GAAG,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;SAE1B;QAED,UAAU;QAEV,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,QAAQ,EAAE,IAAC,EAAG,CAEhC,OAAO,CAAC,IAAI,CAAE,IAAC,EAAE,IAAC,GAAG,CAAC,EAAE,CAAC,CAAE,CAAC;QAIhC,iBAAiB;QAEjB,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,IAAI,sBAAsB,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;QACxE,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,sBAAsB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAE,CAAC;KAEnE;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,cAAc,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;KAE9F;CAEJ;AAED,MAAM,gBAAgB,SAAS,cAAc;IAEzC,YAAa,SAAS,GAAG,CAAC,EAAE,YAAY,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,CAAC,EAAE,SAAS,GAAG,KAAK,EAAE,UAAU,GAAG,CAAC,EAAE,WAAW,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAG;QAE7J,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;QAE/B,IAAI,CAAC,UAAU,GAAG;YACd,SAAS,EAAE,SAAS;YACpB,YAAY,EAAE,YAAY;YAC1B,MAAM,EAAE,MAAM;YACd,cAAc,EAAE,cAAc;YAC9B,cAAc,EAAE,cAAc;YAC9B,SAAS,EAAE,SAAS;YACpB,UAAU,EAAE,UAAU;YACtB,WAAW,EAAE,WAAW;SAC3B,CAAC;QAEF,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,cAAc,CAAE,CAAC;QAC9C,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,cAAc,CAAE,CAAC;QAE9C,UAAU;QAEV,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,GAAG,GAAG,EAAE,AAAC;QAEf,mBAAmB;QAEnB,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,MAAM,UAAU,GAAG,EAAE,AAAC;QACtB,MAAM,UAAU,GAAG,MAAM,GAAG,CAAC,AAAC;QAC9B,IAAI,UAAU,GAAG,CAAC,AAAC;QAEnB,oBAAoB;QAEpB,aAAa,EAAE,CAAC;QAEhB,IAAK,SAAS,KAAK,KAAK,EAAG;YAEvB,IAAK,SAAS,GAAG,CAAC,EAAG,WAAW,CAAE,IAAI,CAAE,CAAC;YACzC,IAAK,YAAY,GAAG,CAAC,EAAG,WAAW,CAAE,KAAK,CAAE,CAAC;SAEhD;QAED,iBAAiB;QAEjB,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,IAAI,sBAAsB,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;QACxE,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,sBAAsB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAE,CAAC;QAEhE,SAAS,aAAa,GAAG;YAErB,MAAM,MAAM,GAAG,IAAI,OAAO,EAAE,AAAC;YAC7B,MAAM,OAAM,GAAG,IAAI,OAAO,EAAE,AAAC;YAE7B,IAAI,UAAU,GAAG,CAAC,AAAC;YAEnB,4CAA4C;YAC5C,MAAM,KAAK,GAAG,AAAE,CAAA,YAAY,GAAG,SAAS,CAAA,GAAK,MAAM,AAAC;YAEpD,qCAAqC;YAErC,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,CAAG;gBAEzC,MAAM,QAAQ,GAAG,EAAE,AAAC;gBAEpB,MAAM,CAAC,GAAG,CAAC,GAAG,cAAc,AAAC;gBAE7B,0CAA0C;gBAE1C,MAAM,MAAM,GAAG,CAAC,GAAK,CAAA,YAAY,GAAG,SAAS,CAAA,GAAK,SAAS,AAAC;gBAE5D,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,CAAG;oBAEzC,MAAM,CAAC,GAAG,CAAC,GAAG,cAAc,AAAC;oBAE7B,MAAM,KAAK,GAAG,CAAC,GAAG,WAAW,GAAG,UAAU,AAAC;oBAE3C,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;oBACnC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;oBAEnC,SAAS;oBAET,OAAM,CAAC,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC;oBAC7B,OAAM,CAAC,CAAC,GAAG,CAAE,CAAC,GAAG,MAAM,GAAG,UAAU,CAAC;oBACrC,OAAM,CAAC,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC;oBAC7B,QAAQ,CAAC,IAAI,CAAE,OAAM,CAAC,CAAC,EAAE,OAAM,CAAC,CAAC,EAAE,OAAM,CAAC,CAAC,CAAE,CAAC;oBAE9C,SAAS;oBAET,MAAM,CAAC,GAAG,CAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAE,CAAC,SAAS,EAAE,CAAC;oBACpD,OAAO,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC;oBAE7C,KAAK;oBAEL,GAAG,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAE,CAAC;oBAErB,yCAAyC;oBAEzC,QAAQ,CAAC,IAAI,CAAE,KAAK,EAAG,CAAE,CAAC;iBAE7B;gBAED,kDAAkD;gBAElD,UAAU,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC;aAE/B;YAED,mBAAmB;YAEnB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAG,CAErC,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,cAAc,EAAE,EAAC,EAAG,CAAG;gBAExC,uDAAuD;gBAEvD,MAAM,CAAC,GAAG,UAAU,CAAE,EAAC,CAAE,CAAE,CAAC,CAAE,AAAC;gBAC/B,MAAM,CAAC,GAAG,UAAU,CAAE,EAAC,GAAG,CAAC,CAAE,CAAE,CAAC,CAAE,AAAC;gBACnC,MAAM,CAAC,GAAG,UAAU,CAAE,EAAC,GAAG,CAAC,CAAE,CAAE,CAAC,GAAG,CAAC,CAAE,AAAC;gBACvC,MAAM,CAAC,GAAG,UAAU,CAAE,EAAC,CAAE,CAAE,CAAC,GAAG,CAAC,CAAE,AAAC;gBAEnC,QAAQ;gBAER,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACxB,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBAExB,uBAAuB;gBAEvB,UAAU,IAAI,CAAC,CAAC;aAEnB;YAIL,uEAAuE;YAEvE,KAAK,CAAC,QAAQ,CAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAE,CAAC;YAE5C,uCAAuC;YAEvC,UAAU,IAAI,UAAU,CAAC;SAE5B;QAED,SAAS,WAAW,CAAE,GAAG,EAAG;YAExB,4CAA4C;YAC5C,MAAM,gBAAgB,GAAG,KAAK,AAAC;YAE/B,MAAM,EAAE,GAAG,IAAI,OAAO,EAAE,AAAC;YACzB,MAAM,OAAM,GAAG,IAAI,OAAO,EAAE,AAAC;YAE7B,IAAI,UAAU,GAAG,CAAC,AAAC;YAEnB,MAAM,MAAM,GAAG,AAAE,GAAG,KAAK,IAAI,GAAK,SAAS,GAAG,YAAY,AAAC;YAC3D,MAAM,KAAI,GAAG,AAAE,GAAG,KAAK,IAAI,GAAK,CAAC,GAAG,EAAG,AAAC;YAExC,uDAAuD;YACvD,sDAAsD;YACtD,oDAAoD;YAEpD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,CAAG;gBAEzC,SAAS;gBAET,QAAQ,CAAC,IAAI,CAAE,CAAC,EAAE,UAAU,GAAG,KAAI,EAAE,CAAC,CAAE,CAAC;gBAEzC,SAAS;gBAET,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,KAAI,EAAE,CAAC,CAAE,CAAC;gBAE3B,KAAK;gBAEL,GAAG,CAAC,IAAI,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;gBAErB,iBAAiB;gBAEjB,KAAK,EAAG,CAAC;aAEZ;YAED,2CAA2C;YAC3C,MAAM,cAAc,GAAG,KAAK,AAAC;YAE7B,4DAA4D;YAE5D,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,IAAI,cAAc,EAAE,EAAC,EAAG,CAAG;gBAEzC,MAAM,CAAC,GAAG,EAAC,GAAG,cAAc,AAAC;gBAC7B,MAAM,KAAK,GAAG,CAAC,GAAG,WAAW,GAAG,UAAU,AAAC;gBAE3C,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;gBACnC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;gBAEnC,SAAS;gBAET,OAAM,CAAC,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC;gBAC7B,OAAM,CAAC,CAAC,GAAG,UAAU,GAAG,KAAI,CAAC;gBAC7B,OAAM,CAAC,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC;gBAC7B,QAAQ,CAAC,IAAI,CAAE,OAAM,CAAC,CAAC,EAAE,OAAM,CAAC,CAAC,EAAE,OAAM,CAAC,CAAC,CAAE,CAAC;gBAE9C,SAAS;gBAET,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,KAAI,EAAE,CAAC,CAAE,CAAC;gBAE3B,KAAK;gBAEL,EAAE,CAAC,CAAC,GAAG,AAAE,QAAQ,GAAG,GAAG,GAAK,GAAG,CAAC;gBAChC,EAAE,CAAC,CAAC,GAAG,AAAE,QAAQ,GAAG,GAAG,GAAG,KAAI,GAAK,GAAG,CAAC;gBACvC,GAAG,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;gBAEvB,iBAAiB;gBAEjB,KAAK,EAAG,CAAC;aAEZ;YAED,mBAAmB;YAEnB,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,cAAc,EAAE,EAAC,EAAG,CAAG;gBAExC,MAAM,CAAC,GAAG,gBAAgB,GAAG,EAAC,AAAC;gBAC/B,MAAM,IAAC,GAAG,cAAc,GAAG,EAAC,AAAC;gBAE7B,IAAK,GAAG,KAAK,IAAI,EAEb,WAAW;gBAEX,OAAO,CAAC,IAAI,CAAE,IAAC,EAAE,IAAC,GAAG,CAAC,EAAE,CAAC,CAAE,CAAC;qBAI5B,cAAc;gBAEd,OAAO,CAAC,IAAI,CAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAE,CAAC,CAAE,CAAC;gBAIhC,UAAU,IAAI,CAAC,CAAC;aAEnB;YAED,uEAAuE;YAEvE,KAAK,CAAC,QAAQ,CAAE,UAAU,EAAE,UAAU,EAAE,GAAG,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;YAE/D,uCAAuC;YAEvC,UAAU,IAAI,UAAU,CAAC;SAE5B;KAEJ;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,gBAAgB,CAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;KAE9K;CAEJ;AAED,MAAM,YAAY,SAAS,gBAAgB;IAEvC,YAAa,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,CAAC,EAAE,SAAS,GAAG,KAAK,EAAE,UAAU,GAAG,CAAC,EAAE,WAAW,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAG;QAExI,KAAK,CAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,cAAc,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,CAAE,CAAC;QAE/F,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;QAE3B,IAAI,CAAC,UAAU,GAAG;YACd,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;YACd,cAAc,EAAE,cAAc;YAC9B,cAAc,EAAE,cAAc;YAC9B,SAAS,EAAE,SAAS;YACpB,UAAU,EAAE,UAAU;YACtB,WAAW,EAAE,WAAW;SAC3B,CAAC;KAEL;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,YAAY,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;KAEpJ;CAEJ;AAED,MAAM,kBAAkB,SAAS,cAAc;IAE3C,YAAa,QAAQ,GAAG,EAAE,EAAE,OAAO,GAAG,EAAE,EAAE,OAAM,GAAG,CAAC,EAAE,OAAM,GAAG,CAAC,CAAG;QAE/D,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;QAEjC,IAAI,CAAC,UAAU,GAAG;YACd,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,OAAO;YAChB,MAAM,EAAE,OAAM;YACd,MAAM,EAAE,OAAM;SACjB,CAAC;QAEF,sBAAsB;QAEtB,MAAM,YAAY,GAAG,EAAE,AAAC;QACxB,MAAM,QAAQ,GAAG,EAAE,AAAC;QAEpB,iDAAiD;QAEjD,SAAS,CAAE,OAAM,CAAE,CAAC;QAEpB,qEAAqE;QAErE,WAAW,CAAE,OAAM,CAAE,CAAC;QAEtB,8BAA8B;QAE9B,WAAW,EAAE,CAAC;QAEd,6BAA6B;QAE7B,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,YAAY,EAAE,CAAC,CAAE,CAAE,CAAC;QAC/E,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,IAAI,sBAAsB,CAAE,YAAY,CAAC,KAAK,EAAE,EAAE,CAAC,CAAE,CAAE,CAAC;QACrF,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAErE,IAAK,OAAM,KAAK,CAAC,EAEb,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,eAAe;aAI5C,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,iBAAiB;QAI9C,mBAAmB;QAEnB,SAAS,SAAS,CAAE,MAAM,EAAG;YAEzB,MAAM,CAAC,GAAG,IAAI,OAAO,EAAE,AAAC;YACxB,MAAM,CAAC,GAAG,IAAI,OAAO,EAAE,AAAC;YACxB,MAAM,CAAC,GAAG,IAAI,OAAO,EAAE,AAAC;YAExB,4EAA4E;YAE5E,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,OAAO,CAAC,MAAM,EAAE,IAAC,IAAI,CAAC,CAAG;gBAE1C,+BAA+B;gBAE/B,gBAAgB,CAAE,OAAO,CAAE,IAAC,GAAG,CAAC,CAAE,EAAE,CAAC,CAAE,CAAC;gBACxC,gBAAgB,CAAE,OAAO,CAAE,IAAC,GAAG,CAAC,CAAE,EAAE,CAAC,CAAE,CAAC;gBACxC,gBAAgB,CAAE,OAAO,CAAE,IAAC,GAAG,CAAC,CAAE,EAAE,CAAC,CAAE,CAAC;gBAExC,sBAAsB;gBAEtB,aAAa,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;aAEpC;SAEJ;QAED,SAAS,aAAa,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAG;YAEtC,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,AAAC;YAExB,sFAAsF;YAEtF,MAAM,CAAC,GAAG,EAAE,AAAC;YAEb,qDAAqD;YAErD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,IAAI,EAAE,IAAC,EAAG,CAAG;gBAE/B,CAAC,CAAE,IAAC,CAAE,GAAG,EAAE,CAAC;gBAEZ,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,CAAE,CAAC,EAAE,IAAC,GAAG,IAAI,CAAE,AAAC;gBACzC,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,CAAE,CAAC,EAAE,IAAC,GAAG,IAAI,CAAE,AAAC;gBAEzC,MAAM,IAAI,GAAG,IAAI,GAAG,IAAC,AAAC;gBAEtB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAG,CAE5B,IAAK,CAAC,KAAK,CAAC,IAAI,IAAC,KAAK,IAAI,EAEtB,CAAC,CAAE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC;qBAIjB,CAAC,CAAE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,CAAE,EAAE,EAAE,CAAC,GAAG,IAAI,CAAE,CAAC;aAMzD;YAED,6BAA6B;YAE7B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,EAAE,IAAC,EAAG,CAE3B,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAK,CAAA,IAAI,GAAG,IAAC,CAAA,GAAK,CAAC,EAAE,CAAC,EAAG,CAAG;gBAE9C,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,AAAC;gBAE9B,IAAK,CAAC,GAAG,CAAC,KAAK,CAAC,EAAG;oBAEf,UAAU,CAAE,CAAC,CAAE,IAAC,CAAE,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;oBAC9B,UAAU,CAAE,CAAC,CAAE,IAAC,GAAG,CAAC,CAAE,CAAE,CAAC,CAAE,CAAE,CAAC;oBAC9B,UAAU,CAAE,CAAC,CAAE,IAAC,CAAE,CAAE,CAAC,CAAE,CAAE,CAAC;iBAE7B,MAAM;oBAEH,UAAU,CAAE,CAAC,CAAE,IAAC,CAAE,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;oBAC9B,UAAU,CAAE,CAAC,CAAE,IAAC,GAAG,CAAC,CAAE,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;oBAClC,UAAU,CAAE,CAAC,CAAE,IAAC,GAAG,CAAC,CAAE,CAAE,CAAC,CAAE,CAAE,CAAC;iBAEjC;aAEJ;SAIR;QAED,SAAS,WAAW,CAAE,MAAM,EAAG;YAE3B,MAAM,OAAM,GAAG,IAAI,OAAO,EAAE,AAAC;YAE7B,qEAAqE;YAErE,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,YAAY,CAAC,MAAM,EAAE,IAAC,IAAI,CAAC,CAAG;gBAE/C,OAAM,CAAC,CAAC,GAAG,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC;gBACjC,OAAM,CAAC,CAAC,GAAG,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC;gBACjC,OAAM,CAAC,CAAC,GAAG,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC;gBAEjC,OAAM,CAAC,SAAS,EAAE,CAAC,cAAc,CAAE,MAAM,CAAE,CAAC;gBAE5C,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,GAAG,OAAM,CAAC,CAAC,CAAC;gBACjC,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,GAAG,OAAM,CAAC,CAAC,CAAC;gBACjC,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,GAAG,OAAM,CAAC,CAAC,CAAC;aAEpC;SAEJ;QAED,SAAS,WAAW,GAAG;YAEnB,MAAM,OAAM,GAAG,IAAI,OAAO,EAAE,AAAC;YAE7B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,YAAY,CAAC,MAAM,EAAE,IAAC,IAAI,CAAC,CAAG;gBAE/C,OAAM,CAAC,CAAC,GAAG,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC;gBACjC,OAAM,CAAC,CAAC,GAAG,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC;gBACjC,OAAM,CAAC,CAAC,GAAG,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC;gBAEjC,MAAM,CAAC,GAAG,QAAO,CAAE,OAAM,CAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,AAAC;gBAChD,MAAM,CAAC,GAAG,WAAW,CAAE,OAAM,CAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,AAAC;gBAChD,QAAQ,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAE,CAAC;aAE7B;YAED,UAAU,EAAE,CAAC;YAEb,WAAW,EAAE,CAAC;SAEjB;QAED,SAAS,WAAW,GAAG;YAEnB,sDAAsD;YAEtD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,IAAI,CAAC,CAAG;gBAE3C,2BAA2B;gBAE3B,MAAM,EAAE,GAAG,QAAQ,CAAE,IAAC,GAAG,CAAC,CAAE,AAAC;gBAC7B,MAAM,EAAE,GAAG,QAAQ,CAAE,IAAC,GAAG,CAAC,CAAE,AAAC;gBAC7B,MAAM,EAAE,GAAG,QAAQ,CAAE,IAAC,GAAG,CAAC,CAAE,AAAC;gBAE7B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,AAAC;gBACnC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,AAAC;gBAEnC,4BAA4B;gBAE5B,IAAK,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,EAAG;oBAE1B,IAAK,EAAE,GAAG,GAAG,EAAG,QAAQ,CAAE,IAAC,GAAG,CAAC,CAAE,IAAI,CAAC,CAAC;oBACvC,IAAK,EAAE,GAAG,GAAG,EAAG,QAAQ,CAAE,IAAC,GAAG,CAAC,CAAE,IAAI,CAAC,CAAC;oBACvC,IAAK,EAAE,GAAG,GAAG,EAAG,QAAQ,CAAE,IAAC,GAAG,CAAC,CAAE,IAAI,CAAC,CAAC;iBAE1C;aAEJ;SAEJ;QAED,SAAS,UAAU,CAAE,OAAM,EAAG;YAE1B,YAAY,CAAC,IAAI,CAAE,OAAM,CAAC,CAAC,EAAE,OAAM,CAAC,CAAC,EAAE,OAAM,CAAC,CAAC,CAAE,CAAC;SAErD;QAED,SAAS,gBAAgB,CAAE,KAAK,EAAE,OAAM,EAAG;YAEvC,MAAM,MAAM,GAAG,KAAK,GAAG,CAAC,AAAC;YAEzB,OAAM,CAAC,CAAC,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,CAAE,CAAC;YAClC,OAAM,CAAC,CAAC,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,CAAE,CAAC;YAClC,OAAM,CAAC,CAAC,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,CAAE,CAAC;SAErC;QAED,SAAS,UAAU,GAAG;YAElB,MAAM,CAAC,GAAG,IAAI,OAAO,EAAE,AAAC;YACxB,MAAM,CAAC,GAAG,IAAI,OAAO,EAAE,AAAC;YACxB,MAAM,CAAC,GAAG,IAAI,OAAO,EAAE,AAAC;YAExB,MAAM,QAAQ,GAAG,IAAI,OAAO,EAAE,AAAC;YAE/B,MAAM,GAAG,GAAG,IAAI,OAAO,EAAE,AAAC;YAC1B,MAAM,GAAG,GAAG,IAAI,OAAO,EAAE,AAAC;YAC1B,MAAM,GAAG,GAAG,IAAI,OAAO,EAAE,AAAC;YAE1B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAC,GAAG,YAAY,CAAC,MAAM,EAAE,IAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAG;gBAE9D,CAAC,CAAC,GAAG,CAAE,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,EAAE,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,EAAE,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBAC7E,CAAC,CAAC,GAAG,CAAE,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,EAAE,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,EAAE,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBAC7E,CAAC,CAAC,GAAG,CAAE,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,EAAE,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,EAAE,YAAY,CAAE,IAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBAE7E,GAAG,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBAChD,GAAG,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBAChD,GAAG,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,EAAE,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBAEhD,QAAQ,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC;gBAEvD,MAAM,GAAG,GAAG,QAAO,CAAE,QAAQ,CAAE,AAAC;gBAEhC,SAAS,CAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC;gBAChC,SAAS,CAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC;gBAChC,SAAS,CAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC;aAEnC;SAEJ;QAED,SAAS,SAAS,CAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAG;YAE9C,IAAK,AAAE,OAAO,GAAG,CAAC,IAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,AAAE,EAElC,QAAQ,CAAE,MAAM,CAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;YAIlC,IAAK,AAAE,MAAM,CAAC,CAAC,KAAK,CAAC,IAAQ,MAAM,CAAC,CAAC,KAAK,CAAC,AAAE,EAEzC,QAAQ,CAAE,MAAM,CAAE,GAAG,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;SAIxD;QAED,sEAAsE;QAEtE,SAAS,QAAO,CAAE,MAAM,EAAG;YAEvB,OAAO,IAAI,CAAC,KAAK,CAAE,MAAM,CAAC,CAAC,EAAE,CAAE,MAAM,CAAC,CAAC,CAAE,CAAC;SAE7C;QAGD,4BAA4B;QAE5B,SAAS,WAAW,CAAE,MAAM,EAAG;YAE3B,OAAO,IAAI,CAAC,KAAK,CAAE,CAAE,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAE,AAAE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAO,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,AAAE,CAAE,CAAE,CAAC;SAEnG;KAEJ;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,kBAAkB,CAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAE,CAAC;KAE3F;CAEJ;AAED,MAAM,oBAAoB,SAAS,kBAAkB;IAEjD,YAAa,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAG;QAElC,MAAM,CAAC,GAAG,AAAE,CAAA,CAAC,GAAG,IAAI,CAAC,IAAI,CAAE,CAAC,CAAE,CAAA,GAAK,CAAC,AAAC;QACrC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;QAEhB,MAAM,QAAQ,GAAG;YAEb,kBAAe;AACZ,cAAA;AAAE,cAAG;AAAE,cAAG;AAAE,cAAG;AAAE,cAAG;AAAE,aAAC;AAC1B,cAAG;AAAE,aAAC;AAAE,cAAG;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AACtB,aAAC;AAAE,cAAG;AAAE,cAAG;AAAE,aAAC;AAAE,cAAG;AAAE,aAAC;AACtB,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;YAElB,oBAAgB;AACZ,aAAH;YAAE,CAAE,CAAC;YAAE,CAAE,CAAC;AAAE,aAAC;YAAE,CAAE,CAAC;YAAE,CAAC;AACtB,aAAC;YAAE,CAAC;YAAE,CAAE,CAAC;AAAE,aAAC;YAAE,CAAC;YAAE,CAAC;YAElB,oBAAgB;YACZ,CAAF,CAAC;YAAE,CAAE,CAAC;AAAE,aAAC;YAAE,CAAE,CAAC;YAAE,CAAC;AAAE,aAAC;YACtB,CAAC;YAAE,CAAE,CAAC;AAAE,aAAC;YAAE,CAAC;YAAE,CAAC;AAAE,aAAC;YAElB,oBAAgB;YACZ,CAAF,CAAC;AAAE,aAAC;YAAE,CAAE,CAAC;YAAE,CAAC;AAAE,aAAC;YAAE,CAAE,CAAC;YACtB,CAAE,CAAC;AAAE,aAAC;YAAE,CAAC;YAAE,CAAC;AAAE,aAAC;YAAE,CAAC;SACrB,AAAC;QAEF,MAAM,OAAO,GAAG;AACZ,aAAC;AAAE,cAAE;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,cAAE;AAAG,aAAC;AAAE,cAAE;AAAE,cAAE;AAC/B,aAAC;AAAE,cAAE;AAAE,cAAE;AAAG,aAAC;AAAE,cAAE;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,cAAE;AAC/B,cAAE;AAAE,aAAC;AAAE,aAAC;AAAG,cAAE;AAAE,aAAC;AAAE,cAAE;AAAG,cAAE;AAAE,cAAE;AAAE,aAAC;AAChC,aAAC;AAAE,aAAC;AAAE,cAAE;AAAG,aAAC;AAAE,cAAE;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,cAAE;AAC9B,aAAC;AAAE,cAAE;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,cAAE;AAAG,aAAC;AAAE,cAAE;AAAE,cAAE;AAC/B,aAAC;AAAE,cAAE;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,cAAE;AAAG,aAAC;AAAE,cAAE;AAAE,cAAE;AAC/B,aAAC;AAAE,cAAE;AAAE,cAAE;AAAG,aAAC;AAAE,cAAE;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,cAAE;AAC/B,cAAE;AAAE,aAAC;AAAE,aAAC;AAAG,cAAE;AAAE,aAAC;AAAE,cAAE;AAAG,cAAE;AAAE,cAAE;AAAE,aAAC;AAChC,aAAC;AAAE,cAAE;AAAE,cAAE;AAAG,aAAC;AAAE,cAAE;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,aAAC;AAC9B,cAAE;AAAE,aAAC;AAAE,aAAC;AAAG,cAAE;AAAE,aAAC;AAAE,cAAE;AAAG,cAAE;AAAE,cAAE;AAAE,aAAC;AAChC,cAAE;AAAE,aAAC;AAAE,cAAE;AAAG,cAAE;AAAE,cAAE;AAAE,aAAC;AAAG,cAAE;AAAE,aAAC;AAAE,cAAE;AACjC,aAAC;AAAE,cAAE;AAAE,cAAE;AAAG,aAAC;AAAE,cAAE;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,aAAC;SACjC,AAAC;QAEF,KAAK,CAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAE,CAAC;QAE3C,IAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;QAEnC,IAAI,CAAC,UAAU,GAAG;YACd,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;SACjB,CAAC;KAEL;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,oBAAoB,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;KAE/D;CAEJ;AAED,MAAM,GAAG,GAAG,IAAI,OAAO,EAAE,AAAC;AAC1B,MAAM,KAAK,GAAG,IAAI,OAAO,EAAE,AAAC;AAC5B,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,AAAC;AAC9B,MAAM,SAAS,GAAG,IAAI,QAAQ,EAAE,AAAC;AAEjC,MAAM,aAAa,SAAS,cAAc;IAEtC,YAAa,QAAQ,GAAG,IAAI,EAAE,cAAc,GAAG,CAAC,CAAG;QAE/C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAE5B,IAAI,CAAC,UAAU,GAAG;YACd,QAAQ,EAAE,QAAQ;YAClB,cAAc,EAAE,cAAc;SACjC,CAAC;QAEF,IAAK,QAAQ,KAAK,IAAI,EAAG;YAErB,MAAM,eAAe,GAAG,CAAC,AAAC;YAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAE,EAAE,EAAE,eAAe,CAAE,AAAC;YAClD,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAE,OAAO,GAAG,cAAc,CAAE,AAAC;YAE1D,MAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,EAAE,AAAC;YACtC,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAE,UAAU,CAAE,AAAC;YACzD,MAAM,UAAU,GAAG,SAAS,GAAG,SAAS,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,AAAC;YAEpE,MAAM,QAAQ,GAAG;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;aAAE,AAAC;YAC7B,MAAM,QAAQ,GAAG;gBAAE,GAAG;gBAAE,GAAG;gBAAE,GAAG;aAAE,AAAC;YACnC,MAAM,MAAM,GAAG,IAAI,KAAK,CAAE,CAAC,CAAE,AAAC;YAE9B,MAAM,QAAQ,GAAG,EAAE,AAAC;YACpB,MAAM,QAAQ,GAAG,EAAE,AAAC;YACpB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,UAAU,EAAE,IAAC,IAAI,CAAC,CAAG;gBAEtC,IAAK,SAAS,EAAG;oBAEb,QAAQ,CAAE,CAAC,CAAE,GAAG,SAAS,CAAC,IAAI,CAAE,IAAC,CAAE,CAAC;oBACpC,QAAQ,CAAE,CAAC,CAAE,GAAG,SAAS,CAAC,IAAI,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC;oBACxC,QAAQ,CAAE,CAAC,CAAE,GAAG,SAAS,CAAC,IAAI,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC;iBAE3C,MAAM;oBAEH,QAAQ,CAAE,CAAC,CAAE,GAAG,IAAC,CAAC;oBAClB,QAAQ,CAAE,CAAC,CAAE,GAAG,IAAC,GAAG,CAAC,CAAC;oBACtB,QAAQ,CAAE,CAAC,CAAE,GAAG,IAAC,GAAG,CAAC,CAAC;iBAEzB;gBAED,MAAM,EAAE,CAAC,CAAA,EAAE,CAAC,CAAA,EAAE,CAAC,CAAA,EAAE,GAAG,SAAS,AAAC;gBAC9B,CAAC,CAAC,mBAAmB,CAAE,YAAY,EAAE,QAAQ,CAAE,CAAC,CAAE,CAAE,CAAC;gBACrD,CAAC,CAAC,mBAAmB,CAAE,YAAY,EAAE,QAAQ,CAAE,CAAC,CAAE,CAAE,CAAC;gBACrD,CAAC,CAAC,mBAAmB,CAAE,YAAY,EAAE,QAAQ,CAAE,CAAC,CAAE,CAAE,CAAC;gBACrD,SAAS,CAAC,SAAS,CAAE,OAAO,CAAE,CAAC;gBAE/B,+CAA+C;gBAC/C,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,EAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,GAAG,SAAS,CAAE,CAAE,CAAC,EAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,GAAG,SAAS,CAAE,CAAE,CAAC,EAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,GAAG,SAAS,CAAE,CAAE,CAAC,CAAC;gBACzH,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,EAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,GAAG,SAAS,CAAE,CAAE,CAAC,EAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,GAAG,SAAS,CAAE,CAAE,CAAC,EAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,GAAG,SAAS,CAAE,CAAE,CAAC,CAAC;gBACzH,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,EAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,GAAG,SAAS,CAAE,CAAE,CAAC,EAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,GAAG,SAAS,CAAE,CAAE,CAAC,EAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,GAAG,SAAS,CAAE,CAAE,CAAC,CAAC;gBAEzH,4BAA4B;gBAC5B,IAAK,MAAM,CAAE,CAAC,CAAE,KAAK,MAAM,CAAE,CAAC,CAAE,IAAI,MAAM,CAAE,CAAC,CAAE,KAAK,MAAM,CAAE,CAAC,CAAE,IAAI,MAAM,CAAE,CAAC,CAAE,KAAK,MAAM,CAAE,CAAC,CAAE,EAE1F,SAAS;gBAIb,0BAA0B;gBAC1B,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,CAAG;oBAE3B,mDAAmD;oBACnD,MAAM,KAAK,GAAG,AAAE,CAAA,CAAC,GAAG,CAAC,CAAA,GAAK,CAAC,AAAC;oBAC5B,MAAM,QAAQ,GAAG,MAAM,CAAE,CAAC,CAAE,AAAC;oBAC7B,MAAM,QAAQ,GAAG,MAAM,CAAE,KAAK,CAAE,AAAC;oBACjC,MAAM,EAAE,GAAG,SAAS,CAAE,QAAQ,CAAE,CAAC,CAAE,CAAE,AAAC;oBACtC,MAAM,EAAE,GAAG,SAAS,CAAE,QAAQ,CAAE,KAAK,CAAE,CAAE,AAAC;oBAE1C,MAAM,IAAI,GAAG,CAAC,EAAG,QAAQ,CAAE,CAAC,EAAG,QAAQ,CAAE,CAAC,AAAC;oBAC3C,MAAM,WAAW,GAAG,CAAC,EAAG,QAAQ,CAAE,CAAC,EAAG,QAAQ,CAAE,CAAC,AAAC;oBAElD,IAAK,WAAW,IAAI,QAAQ,IAAI,QAAQ,CAAE,WAAW,CAAE,EAAG;wBAEtD,6DAA6D;wBAC7D,iEAAiE;wBACjE,IAAK,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAE,WAAW,CAAE,CAAC,MAAM,CAAE,IAAI,YAAY,EAAG;4BAEjE,QAAQ,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;4BAClC,QAAQ,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;yBAErC;wBAED,QAAQ,CAAE,WAAW,CAAE,GAAG,IAAI,CAAC;qBAElC,MAAM,IAAK,CAAI,CAAA,IAAI,IAAI,QAAQ,CAAA,AAAE,EAE9B,+DAA+D;oBAC/D,QAAQ,CAAE,IAAI,CAAE,GAAG;wBAEf,MAAM,EAAE,QAAQ,CAAE,CAAC,CAAE;wBACrB,MAAM,EAAE,QAAQ,CAAE,KAAK,CAAE;wBACzB,MAAM,EAAE,OAAO,CAAC,KAAK,EAAE;qBAE1B,CAAC;iBAIT;aAEJ;YAED,+EAA+E;YAC/E,IAAM,MAAM,GAAG,IAAI,QAAQ,CAEvB,IAAK,QAAQ,CAAE,GAAG,CAAE,EAAG;gBAEnB,MAAM,EAAE,MAAM,CAAA,EAAE,MAAM,CAAA,EAAE,GAAG,QAAQ,CAAE,GAAG,CAAE,AAAC;gBAC3C,GAAG,CAAC,mBAAmB,CAAE,YAAY,EAAE,MAAM,CAAE,CAAC;gBAChD,KAAK,CAAC,mBAAmB,CAAE,YAAY,EAAE,MAAM,CAAE,CAAC;gBAElD,QAAQ,CAAC,IAAI,CAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAE,CAAC;gBACrC,QAAQ,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE,CAAC;aAE9C;YAIL,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;SAE9E;KAEJ;CAEJ;AAED,MAAM,KAAK,SAAS,IAAI;IAEpB,YAAa,MAAM,CAAG;QAElB,KAAK,CAAE,MAAM,CAAE,CAAC;QAEhB,IAAI,CAAC,IAAI,GAAG,YAAY,EAAE,CAAC;QAE3B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QAEpB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KAEnB;IAED,cAAc,CAAE,SAAS,EAAG;QAExB,MAAM,QAAQ,GAAG,EAAE,AAAC;QAEpB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAE/C,QAAQ,CAAE,IAAC,CAAE,GAAG,IAAI,CAAC,KAAK,CAAE,IAAC,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,CAAC;QAI3D,OAAO,QAAQ,CAAC;KAEnB;IAED,wEAAwE;IAExE,aAAa,CAAE,SAAS,EAAG;QAEvB,OAAO;YAEH,KAAK,EAAE,IAAI,CAAC,SAAS,CAAE,SAAS,CAAE;YAClC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAE,SAAS,CAAE;SAE1C,CAAC;KAEL;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAEpD,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAE,IAAC,CAAE,AAAC;YAE/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,EAAE,CAAE,CAAC;SAEnC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAElD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,IAAC,CAAE,AAAC;YAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,EAAE,CAAE,CAAC;SAEpC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,IAAI,EAAG;QAEb,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAElD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,IAAC,CAAE,AAAC;YAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,IAAI,EAAE,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAE,CAAC;SAElD;QAED,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED;;IAEG,CAEH,MAAM,MAAM,GAAG;IAEX,WAAW,EAAE,SAAW,IAAI,EAAE,WAAW,EAAE,GAAG,GAAG,CAAC,EAAG;QAEjD,MAAM,QAAQ,GAAG,WAAW,IAAI,WAAW,CAAC,MAAM,AAAC;QACnD,MAAM,QAAQ,GAAG,QAAQ,GAAG,WAAW,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,AAAC;QACjE,IAAI,SAAS,GAAG,UAAU,CAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAE,AAAC;QAC3D,MAAM,SAAS,GAAG,EAAE,AAAC;QAErB,IAAK,CAAE,SAAS,IAAI,SAAS,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,EAAG,OAAO,SAAS,CAAC;QAEzE,IAAI,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,AAAC;QAE1C,IAAK,QAAQ,EAAG,SAAS,GAAG,cAAc,CAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,CAAE,CAAC;QAEhF,6FAA6F;QAC7F,IAAK,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,GAAG,EAAG;YAE1B,IAAI,GAAG,IAAI,GAAG,IAAI,CAAE,CAAC,CAAE,CAAC;YACxB,IAAI,GAAG,IAAI,GAAG,IAAI,CAAE,CAAC,CAAE,CAAC;YAExB,IAAM,IAAI,IAAC,GAAG,GAAG,EAAE,IAAC,GAAG,QAAQ,EAAE,IAAC,IAAI,GAAG,CAAG;gBAExC,CAAC,GAAG,IAAI,CAAE,IAAC,CAAE,CAAC;gBACd,CAAC,GAAG,IAAI,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC;gBAClB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;gBACzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;gBACzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;gBACzB,IAAK,CAAC,GAAG,IAAI,EAAG,IAAI,GAAG,CAAC,CAAC;aAE5B;YAED,kGAAkG;YAClG,OAAO,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAE,CAAC;YAC/C,OAAO,GAAG,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;SAE7C;QAED,YAAY,CAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAE,CAAC;QAE/D,OAAO,SAAS,CAAC;KAEpB;CAEJ,AAAC;AAEF,0FAA0F;AAC1F,SAAS,UAAU,CAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,EAAG;IAEpD,IAAI,IAAC,EAAE,IAAI,AAAC;IAEZ,IAAK,SAAS,KAAO,UAAU,CAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAE,GAAG,CAAC,AAAE,EAE1D,IAAM,IAAC,GAAG,KAAK,EAAE,IAAC,GAAG,GAAG,EAAE,IAAC,IAAI,GAAG,CAAG,IAAI,GAAG,UAAU,CAAE,IAAC,EAAE,IAAI,CAAE,IAAC,CAAE,EAAE,IAAI,CAAE,IAAC,GAAG,CAAC,CAAE,EAAE,IAAI,CAAE,CAAC;SAI5F,IAAM,IAAC,GAAG,GAAG,GAAG,GAAG,EAAE,IAAC,IAAI,KAAK,EAAE,IAAC,IAAI,GAAG,CAAG,IAAI,GAAG,UAAU,CAAE,IAAC,EAAE,IAAI,CAAE,IAAC,CAAE,EAAE,IAAI,CAAE,IAAC,GAAG,CAAC,CAAE,EAAE,IAAI,CAAE,CAAC;IAIvG,IAAK,IAAI,IAAI,MAAM,CAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAE,EAAG;QAErC,UAAU,CAAE,IAAI,CAAE,CAAC;QACnB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;KAEpB;IAED,OAAO,IAAI,CAAC;CAEf;AAED,yCAAyC;AACzC,SAAS,YAAY,CAAE,KAAK,EAAE,GAAG,EAAG;IAEhC,IAAK,CAAE,KAAK,EAAG,OAAO,KAAK,CAAC;IAC5B,IAAK,CAAE,GAAG,EAAG,GAAG,GAAG,KAAK,CAAC;IAEzB,IAAI,CAAC,GAAG,KAAK,EACT,KAAK,AAAC;IACV,GAAG;QAEC,KAAK,GAAG,KAAK,CAAC;QAEd,IAAK,CAAE,CAAC,CAAC,OAAO,IAAM,CAAA,MAAM,CAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,IAAI,IAAI,CAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,KAAK,CAAC,CAAA,AAAE,EAAG;YAE7E,UAAU,CAAE,CAAC,CAAE,CAAC;YAChB,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC;YACjB,IAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAG,MAAM;YAC1B,KAAK,GAAG,IAAI,CAAC;SAEhB,MAEG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;KAIlB,OAAS,KAAK,IAAI,CAAC,KAAK,GAAG,CAAG;IAE/B,OAAO,GAAG,CAAC;CAEd;AAED,8EAA8E;AAC9E,SAAS,YAAY,CAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAG;IAEpE,IAAK,CAAE,GAAG,EAAG,OAAO;IAEpB,qCAAqC;IACrC,IAAK,CAAE,IAAI,IAAI,OAAO,EAAG,UAAU,CAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAE,CAAC;IAEhE,IAAI,IAAI,GAAG,GAAG,EACV,IAAI,EAAE,IAAI,AAAC;IAEf,gDAAgD;IAChD,MAAQ,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAG;QAE5B,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QAChB,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QAEhB,IAAK,OAAO,GAAG,WAAW,CAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAE,GAAG,KAAK,CAAE,GAAG,CAAE,EAAG;YAEpE,uBAAuB;YACvB,SAAS,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAE,CAAC;YAC/B,SAAS,CAAC,IAAI,CAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAE,CAAC;YAC9B,SAAS,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAE,CAAC;YAE/B,UAAU,CAAE,GAAG,CAAE,CAAC;YAElB,0DAA0D;YAC1D,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;YAChB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAEjB,SAAS;SAEZ;QAED,GAAG,GAAG,IAAI,CAAC;QAEX,gFAAgF;QAChF,IAAK,GAAG,KAAK,IAAI,EAAG;YAEhB,yCAAyC;YACzC,IAAK,CAAE,IAAI,EAEP,YAAY,CAAE,YAAY,CAAE,GAAG,CAAE,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAE,CAAC;iBAIzE,IAAK,IAAI,KAAK,CAAC,EAAG;gBAErB,GAAG,GAAG,sBAAsB,CAAE,YAAY,CAAE,GAAG,CAAE,EAAE,SAAS,EAAE,GAAG,CAAE,CAAC;gBACpE,YAAY,CAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAE,CAAC;YAE5D,iEAAiE;aAEpE,MAAM,IAAK,IAAI,KAAK,CAAC,EAElB,WAAW,CAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAE,CAAC;YAI5D,MAAM;SAET;KAEJ;CAEJ;AAED,qEAAqE;AACrE,SAAS,KAAK,CAAE,GAAG,EAAG;IAElB,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,EACd,CAAC,GAAG,GAAG,EACP,CAAC,GAAG,GAAG,CAAC,IAAI,AAAC;IAEjB,IAAK,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC,CAAC,0BAA0B;IAEpE,oEAAoE;IACpE,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,AAAC;IAEtB,MAAQ,CAAC,KAAK,GAAG,CAAC,IAAI,CAAG;QAErB,IAAK,eAAe,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,IAC1D,IAAI,CAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC;QAClD,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;KAEd;IAED,OAAO,IAAI,CAAC;CAEf;AAED,SAAS,WAAW,CAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAG;IAE7C,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,EACd,CAAC,GAAG,GAAG,EACP,CAAC,GAAG,GAAG,CAAC,IAAI,AAAC;IAEjB,IAAK,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC,CAAC,0BAA0B;IAEpE,8DAA8D;IAC9D,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,AAAE,EAC3E,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,AAAE,EACzE,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,AAAE,EACzE,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,AAAE,AAAC;IAE9E,+CAA+C;IAC/C,MAAM,IAAI,GAAG,MAAM,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAE,EACpD,IAAI,GAAG,MAAM,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAE,AAAC;IAEvD,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,EACb,CAAC,GAAG,GAAG,CAAC,KAAK,AAAC;IAElB,yDAAyD;IACzD,MAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAG;QAE3C,IAAK,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IACjC,eAAe,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,IACzD,IAAI,CAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC;QAClD,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;QAEZ,IAAK,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IACjC,eAAe,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,IACzD,IAAI,CAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC;QAClD,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;KAEf;IAED,kDAAkD;IAClD,MAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAG;QAEvB,IAAK,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IACjC,eAAe,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,IACzD,IAAI,CAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC;QAClD,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;KAEf;IAED,kDAAkD;IAClD,MAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAG;QAEvB,IAAK,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IACjC,eAAe,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,IACzD,IAAI,CAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC;QAClD,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;KAEf;IAED,OAAO,IAAI,CAAC;CAEf;AAED,uEAAuE;AACvE,SAAS,sBAAsB,CAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAG;IAErD,IAAI,CAAC,GAAG,KAAK,AAAC;IACd,GAAG;QAEC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EACZ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,AAAC;QAEpB,IAAK,CAAE,MAAM,CAAE,CAAC,EAAE,CAAC,CAAE,IAAI,UAAU,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAE,IAAI,aAAa,CAAE,CAAC,EAAE,CAAC,CAAE,IAAI,aAAa,CAAE,CAAC,EAAE,CAAC,CAAE,EAAG;YAEvG,SAAS,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAE,CAAC;YAC5B,SAAS,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAE,CAAC;YAC5B,SAAS,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAE,CAAC;YAE5B,4BAA4B;YAC5B,UAAU,CAAE,CAAC,CAAE,CAAC;YAChB,UAAU,CAAE,CAAC,CAAC,IAAI,CAAE,CAAC;YAErB,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;SAEjB;QAED,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;KAEd,OAAS,CAAC,KAAK,KAAK,CAAG;IAExB,OAAO,YAAY,CAAE,CAAC,CAAE,CAAC;CAE5B;AAED,oEAAoE;AACpE,SAAS,WAAW,CAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAG;IAE/D,8DAA8D;IAC9D,IAAI,CAAC,GAAG,KAAK,AAAC;IACd,GAAG;QAEC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,AAAC;QACpB,MAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAG;YAEnB,IAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,eAAe,CAAE,CAAC,EAAE,CAAC,CAAE,EAAG;gBAE1C,2CAA2C;gBAC3C,IAAI,CAAC,GAAG,YAAY,CAAE,CAAC,EAAE,CAAC,CAAE,AAAC;gBAE7B,yCAAyC;gBACzC,CAAC,GAAG,YAAY,CAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,CAAC;gBAC9B,CAAC,GAAG,YAAY,CAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,CAAC;gBAE9B,0BAA0B;gBAC1B,YAAY,CAAE,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAE,CAAC;gBACvD,YAAY,CAAE,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAE,CAAC;gBACvD,OAAO;aAEV;YAED,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;SAEd;QAED,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;KAEd,OAAS,CAAC,KAAK,KAAK,CAAG;CAE3B;AAED,qFAAqF;AACrF,SAAS,cAAc,CAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,EAAG;IAEzD,MAAM,KAAK,GAAG,EAAE,AAAC;IACjB,IAAI,IAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,AAAC;IAE7B,IAAM,IAAC,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,IAAC,GAAG,GAAG,EAAE,IAAC,EAAG,CAAG;QAEnD,KAAK,GAAG,WAAW,CAAE,IAAC,CAAE,GAAG,GAAG,CAAC;QAC/B,GAAG,GAAG,IAAC,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,CAAE,IAAC,GAAG,CAAC,CAAE,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7D,IAAI,GAAG,UAAU,CAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAE,CAAC;QAClD,IAAK,IAAI,KAAK,IAAI,CAAC,IAAI,EAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAC9C,KAAK,CAAC,IAAI,CAAE,WAAW,CAAE,IAAI,CAAE,CAAE,CAAC;KAErC;IAED,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC;IAEvB,mCAAmC;IACnC,IAAM,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,KAAK,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;QAElC,aAAa,CAAE,KAAK,CAAE,IAAC,CAAE,EAAE,SAAS,CAAE,CAAC;QACvC,SAAS,GAAG,YAAY,CAAE,SAAS,EAAE,SAAS,CAAC,IAAI,CAAE,CAAC;KAEzD;IAED,OAAO,SAAS,CAAC;CAEpB;AAED,SAAS,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAG;IAEtB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;CAEpB;AAED,mFAAmF;AACnF,SAAS,aAAa,CAAE,IAAI,EAAE,SAAS,EAAG;IAEtC,SAAS,GAAG,cAAc,CAAE,IAAI,EAAE,SAAS,CAAE,CAAC;IAC9C,IAAK,SAAS,EAAG;QAEb,MAAM,CAAC,GAAG,YAAY,CAAE,SAAS,EAAE,IAAI,CAAE,AAAC;QAE1C,0CAA0C;QAC1C,YAAY,CAAE,SAAS,EAAE,SAAS,CAAC,IAAI,CAAE,CAAC;QAC1C,YAAY,CAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,CAAC;KAE7B;CAEJ;AAED,+EAA+E;AAC/E,SAAS,cAAc,CAAE,IAAI,EAAE,SAAS,EAAG;IAEvC,IAAI,CAAC,GAAG,SAAS,AAAC;IAClB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,AAAC;IAClB,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,AAAC;IAClB,IAAI,EAAE,GAAG,CAAE,QAAQ,EAAE,CAAC,AAAC;IAEvB,kFAAkF;IAClF,sEAAsE;IACtE,GAAG;QAEC,IAAK,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAG;YAEnD,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,AAAE,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA,GAAO,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,GAAO,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,AAAE,AAAC;YACvE,IAAK,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,EAAG;gBAErB,EAAE,GAAG,CAAC,CAAC;gBACP,IAAK,CAAC,KAAK,EAAE,EAAG;oBAEZ,IAAK,EAAE,KAAK,CAAC,CAAC,CAAC,EAAG,OAAO,CAAC,CAAC;oBAC3B,IAAK,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,EAAG,OAAO,CAAC,CAAC,IAAI,CAAC;iBAExC;gBAED,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;aAEnC;SAEJ;QAED,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;KAEd,OAAS,CAAC,KAAK,SAAS,CAAG;IAE5B,IAAK,CAAE,CAAC,EAAG,OAAO,IAAI,CAAC;IAEvB,IAAK,EAAE,KAAK,EAAE,EAAG,OAAO,CAAC,CAAC,CAAC,qDAAqD;IAEhF,wFAAwF;IACxF,4DAA4D;IAC5D,mFAAmF;IAEnF,MAAM,IAAI,GAAG,CAAC,EACV,EAAE,GAAG,CAAC,CAAC,CAAC,EACR,EAAE,GAAG,CAAC,CAAC,CAAC,AAAC;IACb,IAAI,MAAM,GAAG,QAAQ,EAAE,GAAG,AAAC;IAE3B,CAAC,GAAG,CAAC,CAAC;IAEN,GAAG;QAEC,IAAK,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,IACjC,eAAe,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,EAAG;YAExF,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAE,GAAK,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA,AAAE,CAAC,CAAC,aAAa;YAExD,IAAK,aAAa,CAAE,CAAC,EAAE,IAAI,CAAE,IAAM,CAAA,GAAG,GAAG,MAAM,IAAM,GAAG,KAAK,MAAM,IAAM,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,oBAAoB,CAAE,CAAC,EAAE,CAAC,CAAE,AAAE,CAAA,AAAE,AAAE,CAAA,AAAE,EAAG;gBAE1I,CAAC,GAAG,CAAC,CAAC;gBACN,MAAM,GAAG,GAAG,CAAC;aAEhB;SAEJ;QAED,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;KAEd,OAAS,CAAC,KAAK,IAAI,CAAG;IAEvB,OAAO,CAAC,CAAC;CAEZ;AAED,iFAAiF;AACjF,SAAS,oBAAoB,CAAE,CAAC,EAAE,CAAC,EAAG;IAElC,OAAO,IAAI,CAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,GAAG,CAAC,IAAI,IAAI,CAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,GAAG,CAAC,CAAC;CAEzE;AAED,qCAAqC;AACrC,SAAS,UAAU,CAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAG;IAE9C,IAAI,CAAC,GAAG,KAAK,AAAC;IACd,GAAG;QAEC,IAAK,CAAC,CAAC,CAAC,KAAK,IAAI,EAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAE,CAAC;QAClE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;QACjB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;QACjB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;KAEd,OAAS,CAAC,KAAK,KAAK,CAAG;IAExB,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;IACrB,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;IAEf,UAAU,CAAE,CAAC,CAAE,CAAC;CAEnB;AAED,kDAAkD;AAClD,uEAAuE;AACvE,SAAS,UAAU,CAAE,IAAI,EAAG;IAExB,IAAI,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EACzC,MAAM,GAAG,CAAC,AAAC;IAEf,GAAG;QAEC,CAAC,GAAG,IAAI,CAAC;QACT,IAAI,GAAG,IAAI,CAAC;QACZ,IAAI,GAAG,IAAI,CAAC;QACZ,SAAS,GAAG,CAAC,CAAC;QAEd,MAAQ,CAAC,CAAG;YAER,SAAS,EAAG,CAAC;YACb,CAAC,GAAG,CAAC,CAAC;YACN,KAAK,GAAG,CAAC,CAAC;YACV,IAAM,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,MAAM,EAAE,IAAC,EAAG,CAAG;gBAE5B,KAAK,EAAG,CAAC;gBACT,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;gBACZ,IAAK,CAAE,CAAC,EAAG,MAAM;aAEpB;YAED,KAAK,GAAG,MAAM,CAAC;YAEf,MAAQ,KAAK,GAAG,CAAC,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,AAAE,CAAG;gBAEtC,IAAK,KAAK,KAAK,CAAC,IAAM,CAAA,KAAK,KAAK,CAAC,IAAI,CAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,AAAE,EAAG;oBAEvD,CAAC,GAAG,CAAC,CAAC;oBACN,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;oBACZ,KAAK,EAAG,CAAC;iBAEZ,MAAM;oBAEH,CAAC,GAAG,CAAC,CAAC;oBACN,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;oBACZ,KAAK,EAAG,CAAC;iBAEZ;gBAED,IAAK,IAAI,EAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;qBACtB,IAAI,GAAG,CAAC,CAAC;gBAEd,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;gBACf,IAAI,GAAG,CAAC,CAAC;aAEZ;YAED,CAAC,GAAG,CAAC,CAAC;SAET;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,MAAM,IAAI,CAAC,CAAC;KAEf,OAAS,SAAS,GAAG,CAAC,CAAG;IAE1B,OAAO,IAAI,CAAC;CAEf;AAED,8EAA8E;AAC9E,SAAS,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAG;IAEzC,gEAAgE;IAChE,CAAC,GAAG,KAAK,GAAK,CAAA,CAAC,GAAG,IAAI,CAAA,GAAK,OAAO,CAAC;IACnC,CAAC,GAAG,KAAK,GAAK,CAAA,CAAC,GAAG,IAAI,CAAA,GAAK,OAAO,CAAC;IAEnC,CAAC,GAAG,AAAE,CAAA,CAAC,GAAK,CAAC,IAAI,CAAC,AAAE,CAAA,GAAK,QAAU,CAAC;IACpC,CAAC,GAAG,AAAE,CAAA,CAAC,GAAK,CAAC,IAAI,CAAC,AAAE,CAAA,GAAK,SAAU,CAAC;IACpC,CAAC,GAAG,AAAE,CAAA,CAAC,GAAK,CAAC,IAAI,CAAC,AAAE,CAAA,GAAK,SAAU,CAAC;IACpC,CAAC,GAAG,AAAE,CAAA,CAAC,GAAK,CAAC,IAAI,CAAC,AAAE,CAAA,GAAK,UAAU,CAAC;IAEpC,CAAC,GAAG,AAAE,CAAA,CAAC,GAAK,CAAC,IAAI,CAAC,AAAE,CAAA,GAAK,QAAU,CAAC;IACpC,CAAC,GAAG,AAAE,CAAA,CAAC,GAAK,CAAC,IAAI,CAAC,AAAE,CAAA,GAAK,SAAU,CAAC;IACpC,CAAC,GAAG,AAAE,CAAA,CAAC,GAAK,CAAC,IAAI,CAAC,AAAE,CAAA,GAAK,SAAU,CAAC;IACpC,CAAC,GAAG,AAAE,CAAA,CAAC,GAAK,CAAC,IAAI,CAAC,AAAE,CAAA,GAAK,UAAU,CAAC;IAEpC,OAAO,CAAC,GAAK,CAAC,IAAI,CAAC,AAAE,CAAC;CAEzB;AAED,2CAA2C;AAC3C,SAAS,WAAW,CAAE,KAAK,EAAG;IAE1B,IAAI,CAAC,GAAG,KAAK,EACT,QAAQ,GAAG,KAAK,AAAC;IACrB,GAAG;QAEC,IAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,AAAE,EAAG,QAAQ,GAAG,CAAC,CAAC;QACnF,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;KAEd,OAAS,CAAC,KAAK,KAAK,CAAG;IAExB,OAAO,QAAQ,CAAC;CAEnB;AAED,iDAAiD;AACjD,SAAS,eAAe,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAE,EAAE,GAAE,EAAG;IAEvD,OAAO,AAAE,CAAA,EAAE,GAAG,GAAE,CAAA,GAAO,CAAA,EAAE,GAAG,GAAE,CAAA,GAAK,AAAE,CAAA,EAAE,GAAG,GAAE,CAAA,GAAO,CAAA,EAAE,GAAG,GAAE,CAAA,AAAE,IAAI,CAAC,IACzD,AAAE,CAAA,EAAE,GAAG,GAAE,CAAA,GAAO,CAAA,EAAE,GAAG,GAAE,CAAA,GAAK,AAAE,CAAA,EAAE,GAAG,GAAE,CAAA,GAAO,CAAA,EAAE,GAAG,GAAE,CAAA,AAAE,IAAI,CAAC,IAC1D,AAAE,CAAA,EAAE,GAAG,GAAE,CAAA,GAAO,CAAA,EAAE,GAAG,GAAE,CAAA,GAAK,AAAE,CAAA,EAAE,GAAG,GAAE,CAAA,GAAO,CAAA,EAAE,GAAG,GAAE,CAAA,AAAE,IAAI,CAAC,CAAC;CAEtE;AAED,oFAAoF;AACpF,SAAS,eAAe,CAAE,CAAC,EAAE,CAAC,EAAG;IAE7B,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAE,iBAAiB,CAAE,CAAC,EAAE,CAAC,CAAE,IACpE,CAAA,aAAa,CAAE,CAAC,EAAE,CAAC,CAAE,IAAI,aAAa,CAAE,CAAC,EAAE,CAAC,CAAE,IAAI,YAAY,CAAE,CAAC,EAAE,CAAC,CAAE,IACtE,CAAA,IAAI,CAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,IAAI,IAAI,CAAE,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAE,CAAA,IACnD,MAAM,CAAE,CAAC,EAAE,CAAC,CAAE,IAAI,IAAI,CAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,GAAG,CAAC,IAAI,IAAI,CAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,GAAG,CAAC,CAAA,AAAE,CAAC,CAAC,2BAA2B;CAEtH;AAED,4BAA4B;AAC5B,SAAS,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;IAErB,OAAO,AAAE,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,GAAO,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,GAAK,AAAE,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,GAAO,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,AAAE,CAAC;CAExE;AAED,gCAAgC;AAChC,SAAS,MAAM,CAAE,EAAE,EAAE,EAAE,EAAG;IAEtB,OAAO,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;CAEzC;AAED,kCAAkC;AAClC,SAAS,UAAU,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG;IAElC,MAAM,EAAE,GAAG,IAAI,CAAE,IAAI,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAE,AAAC;IACtC,MAAM,EAAE,GAAG,IAAI,CAAE,IAAI,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAE,AAAC;IACtC,MAAM,EAAE,GAAG,IAAI,CAAE,IAAI,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAE,AAAC;IACtC,MAAM,EAAE,GAAG,IAAI,CAAE,IAAI,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAE,AAAC;IAEtC,IAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAG,OAAO,IAAI,CAAC,CAAC,eAAe;IAE1D,IAAK,EAAE,KAAK,CAAC,IAAI,SAAS,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,EAAG,OAAO,IAAI,CAAC,CAAC,kDAAkD;IAC1G,IAAK,EAAE,KAAK,CAAC,IAAI,SAAS,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,EAAG,OAAO,IAAI,CAAC,CAAC,kDAAkD;IAC1G,IAAK,EAAE,KAAK,CAAC,IAAI,SAAS,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,EAAG,OAAO,IAAI,CAAC,CAAC,kDAAkD;IAC1G,IAAK,EAAE,KAAK,CAAC,IAAI,SAAS,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,EAAG,OAAO,IAAI,CAAC,CAAC,kDAAkD;IAE1G,OAAO,KAAK,CAAC;CAEhB;AAED,oEAAoE;AACpE,SAAS,SAAS,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;IAE1B,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;CAEnI;AAED,SAAS,IAAI,CAAE,GAAG,EAAG;IAEjB,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,EAAG,GAAG,CAAC,CAAC;CAE1C;AAED,8DAA8D;AAC9D,SAAS,iBAAiB,CAAE,CAAC,EAAE,CAAC,EAAG;IAE/B,IAAI,CAAC,GAAG,CAAC,AAAC;IACV,GAAG;QAEC,IAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAC/D,UAAU,CAAE,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAE,EAAG,OAAO,IAAI,CAAC;QACpD,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;KAEd,OAAS,CAAC,KAAK,CAAC,CAAG;IAEpB,OAAO,KAAK,CAAC;CAEhB;AAED,4DAA4D;AAC5D,SAAS,aAAa,CAAE,CAAC,EAAE,CAAC,EAAG;IAE3B,OAAO,IAAI,CAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,GAAG,CAAC,GAChC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,IAAI,CAAC,IAAI,IAAI,CAAE,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAE,IAAI,CAAC,GACtD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAE,GAAG,CAAC,IAAI,IAAI,CAAE,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAE,GAAG,CAAC,CAAC;CAE5D;AAED,wEAAwE;AACxE,SAAS,YAAY,CAAE,CAAC,EAAE,CAAC,EAAG;IAE1B,IAAI,CAAC,GAAG,CAAC,EACL,MAAM,GAAG,KAAK,AAAC;IACnB,MAAM,GAAE,GAAG,AAAE,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,GAAK,CAAC,EACxB,GAAE,GAAG,AAAE,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,GAAK,CAAC,AAAC;IAC3B,GAAG;QAEC,IAAK,AAAI,CAAC,CAAC,CAAC,GAAG,GAAE,KAAS,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,GAAE,IAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IACrD,GAAE,GAAG,AAAE,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,GAAO,CAAA,GAAE,GAAG,CAAC,CAAC,CAAC,CAAA,GAAO,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,GAAK,CAAC,CAAC,CAAC,AAAE,EACzE,MAAM,GAAG,CAAE,MAAM,CAAC;QACtB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;KAEd,OAAS,CAAC,KAAK,CAAC,CAAG;IAEpB,OAAO,MAAM,CAAC;CAEjB;AAED,gHAAgH;AAChH,0FAA0F;AAC1F,SAAS,YAAY,CAAE,CAAC,EAAE,CAAC,EAAG;IAE1B,MAAM,EAAE,GAAG,IAAI,IAAI,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,EAChC,EAAE,GAAG,IAAI,IAAI,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,EAC9B,EAAE,GAAG,CAAC,CAAC,IAAI,EACX,EAAE,GAAG,CAAC,CAAC,IAAI,AAAC;IAEhB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IACX,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IAEX,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IACb,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IAEb,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IACb,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IAEb,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IACb,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IAEb,OAAO,EAAE,CAAC;CAEb;AAED,4FAA4F;AAC5F,SAAS,UAAU,CAAE,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAG;IAEjC,MAAM,CAAC,GAAG,IAAI,IAAI,CAAE,IAAC,EAAE,CAAC,EAAE,CAAC,CAAE,AAAC;IAE9B,IAAK,CAAE,IAAI,EAAG;QAEV,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;QACX,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;KAEd,MAAM;QAEH,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KAEjB;IAED,OAAO,CAAC,CAAC;CAEZ;AAED,SAAS,UAAU,CAAE,CAAC,EAAG;IAErB,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;IAErB,IAAK,CAAC,CAAC,KAAK,EAAG,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACvC,IAAK,CAAC,CAAC,KAAK,EAAG,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;CAE1C;AAED,SAAS,IAAI,CAAE,IAAC,EAAE,CAAC,EAAE,CAAC,EAAG;IAErB,oCAAoC;IACpC,IAAI,CAAC,CAAC,GAAG,IAAC,CAAC;IAEX,qBAAqB;IACrB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IAEX,mDAAmD;IACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAEjB,sBAAsB;IACtB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;IAEd,qCAAqC;IACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAElB,4CAA4C;IAC5C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;CAExB;AAED,SAAS,UAAU,CAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAG;IAEzC,IAAI,GAAG,GAAG,CAAC,AAAC;IACZ,IAAM,IAAI,IAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,IAAC,GAAG,GAAG,EAAE,IAAC,IAAI,GAAG,CAAG;QAEpD,GAAG,IAAI,AAAE,CAAA,IAAI,CAAE,CAAC,CAAE,GAAG,IAAI,CAAE,IAAC,CAAE,CAAA,GAAO,CAAA,IAAI,CAAE,IAAC,GAAG,CAAC,CAAE,GAAG,IAAI,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA,AAAE,CAAC;QACrE,CAAC,GAAG,IAAC,CAAC;KAET;IAED,OAAO,GAAG,CAAC;CAEd;AAED,MAAM,UAAU;IAEZ,wCAAwC;IAExC,OAAO,IAAI,CAAE,OAAO,EAAG;QAEnB,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,AAAC;QACzB,IAAI,CAAC,GAAG,CAAG,AAAC;QAEZ,IAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAG,CAEvC,CAAC,IAAI,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC,GAAG,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC,GAAG,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC,GAAG,OAAO,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC;QAI3E,OAAO,CAAC,GAAG,GAAG,CAAC;KAElB;IAED,OAAO,WAAW,CAAE,GAAG,EAAG;QAEtB,OAAO,UAAU,CAAC,IAAI,CAAE,GAAG,CAAE,GAAG,CAAC,CAAC;KAErC;IAED,OAAO,gBAAgB,CAAE,OAAO,EAAE,KAAK,EAAG;QAEtC,MAAM,QAAQ,GAAG,EAAE,AAAC,EAAC,2DAA2D;QAChF,MAAM,WAAW,GAAG,EAAE,AAAC,EAAC,wBAAwB;QAChD,MAAM,KAAK,GAAG,EAAE,AAAC,EAAC,8DAA8D;QAEhF,eAAe,CAAE,OAAO,CAAE,CAAC;QAC3B,UAAU,CAAE,QAAQ,EAAE,OAAO,CAAE,CAAC;QAEhC,EAAE;QAEF,IAAI,SAAS,GAAG,OAAO,CAAC,MAAM,AAAC;QAE/B,KAAK,CAAC,OAAO,CAAE,eAAe,CAAE,CAAC;QAEjC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,KAAK,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;YAEtC,WAAW,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC;YAC9B,SAAS,IAAI,KAAK,CAAE,IAAC,CAAE,CAAC,MAAM,CAAC;YAC/B,UAAU,CAAE,QAAQ,EAAE,KAAK,CAAE,IAAC,CAAE,CAAE,CAAC;SAEtC;QAED,EAAE;QAEF,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAE,QAAQ,EAAE,WAAW,CAAE,AAAC;QAE9D,EAAE;QAEF,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,SAAS,CAAC,MAAM,EAAE,IAAC,IAAI,CAAC,CAEzC,KAAK,CAAC,IAAI,CAAE,SAAS,CAAC,KAAK,CAAE,IAAC,EAAE,IAAC,GAAG,CAAC,CAAE,CAAE,CAAC;QAI9C,OAAO,KAAK,CAAC;KAEhB;CAEJ;AAED,SAAS,eAAe,CAAE,MAAM,EAAG;IAE/B,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,AAAC;IAExB,IAAK,CAAC,GAAG,CAAC,IAAI,MAAM,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,MAAM,CAAE,MAAM,CAAE,CAAC,CAAE,CAAE,EAE/C,MAAM,CAAC,GAAG,EAAE,CAAC;CAIpB;AAED,SAAS,UAAU,CAAE,QAAQ,EAAE,OAAO,EAAG;IAErC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,OAAO,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;QAExC,QAAQ,CAAC,IAAI,CAAE,OAAO,CAAE,IAAC,CAAE,CAAC,CAAC,CAAE,CAAC;QAChC,QAAQ,CAAC,IAAI,CAAE,OAAO,CAAE,IAAC,CAAE,CAAC,CAAC,CAAE,CAAC;KAEnC;CAEJ;AAED;;;;;;;;;;;;;;;;;;;;IAoBG,CAEH,MAAM,eAAe,SAAS,cAAc;IAExC,YAAa,MAAM,GAAG,IAAI,KAAK,CAAE;QAAE,IAAI,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE;QAAE,IAAI,OAAO,CAAE,IAAK,EAAE,GAAG,CAAE;QAAE,IAAI,OAAO,CAAE,IAAK,EAAE,IAAK,CAAE;QAAE,IAAI,OAAO,CAAE,GAAG,EAAE,IAAK,CAAE;KAAE,CAAE,EAAE,OAAO,GAAG,EAAE,CAAG;QAE9J,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAE9B,IAAI,CAAC,UAAU,GAAG;YACd,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,OAAO;SACnB,CAAC;QAEF,MAAM,GAAG,KAAK,CAAC,OAAO,CAAE,MAAM,CAAE,GAAG,MAAM,GAAG;YAAE,MAAM;SAAE,CAAC;QAEvD,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,MAAM,aAAa,GAAG,EAAE,AAAC;QACzB,MAAM,OAAO,GAAG,EAAE,AAAC;QAEnB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE9C,MAAM,KAAK,GAAG,MAAM,CAAE,IAAC,CAAE,AAAC;YAC1B,QAAQ,CAAE,KAAK,CAAE,CAAC;SAErB;QAED,iBAAiB;QAEjB,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,aAAa,EAAE,CAAC,CAAE,CAAE,CAAC;QAChF,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,sBAAsB,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;QAEpE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,YAAY;QAEZ,SAAS,QAAQ,CAAE,KAAK,EAAG;YAEvB,MAAM,WAAW,GAAG,EAAE,AAAC;YAEvB,UAAU;YAEV,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa,KAAK,SAAS,GAAG,OAAO,CAAC,aAAa,GAAG,EAAE,AAAC;YACvF,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,KAAK,GAAG,CAAC,AAAC;YAC9D,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,KAAK,GAAG,CAAC,AAAC;YAE5D,IAAI,YAAY,GAAG,OAAO,CAAC,YAAY,KAAK,SAAS,GAAG,OAAO,CAAC,YAAY,GAAG,IAAI,AAAC;YACpF,IAAI,cAAc,GAAG,OAAO,CAAC,cAAc,KAAK,SAAS,GAAG,OAAO,CAAC,cAAc,GAAG,GAAG,AAAC;YACzF,IAAI,SAAS,GAAG,OAAO,CAAC,SAAS,KAAK,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,cAAc,GAAG,GAAG,AAAC;YAC3F,IAAI,WAAW,GAAG,OAAO,CAAC,WAAW,KAAK,SAAS,GAAG,OAAO,CAAC,WAAW,GAAG,CAAC,AAAC;YAC9E,IAAI,aAAa,GAAG,OAAO,CAAC,aAAa,KAAK,SAAS,GAAG,OAAO,CAAC,aAAa,GAAG,CAAC,AAAC;YAEpF,MAAM,WAAW,GAAG,OAAO,CAAC,WAAW,AAAC;YAExC,MAAM,KAAK,GAAG,OAAO,CAAC,WAAW,KAAK,SAAS,GAAG,OAAO,CAAC,WAAW,GAAG,gBAAgB,AAAC;YAEzF,qBAAqB;YAErB,IAAK,OAAO,CAAC,MAAM,KAAK,SAAS,EAAG;gBAEhC,OAAO,CAAC,IAAI,CAAE,gEAAgE,CAAE,CAAC;gBACjF,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;aAE1B;YAED,EAAE;YAEF,IAAI,UAAU,EAAE,aAAa,GAAG,KAAK,AAAC;YACtC,IAAI,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,AAAC;YAE5C,IAAK,WAAW,EAAG;gBAEf,UAAU,GAAG,WAAW,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC;gBAElD,aAAa,GAAG,IAAI,CAAC;gBACrB,YAAY,GAAG,KAAK,CAAC,CAAC,0CAA0C;gBAEhE,sBAAsB;gBAEtB,sCAAsC;gBAEtC,UAAU,GAAG,WAAW,CAAC,mBAAmB,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC;gBAE7D,qHAAqH;gBAErH,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;gBACzB,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;gBACvB,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;aAE7B;YAED,uCAAuC;YAEvC,IAAK,CAAE,YAAY,EAAG;gBAElB,aAAa,GAAG,CAAC,CAAC;gBAClB,cAAc,GAAG,CAAC,CAAC;gBACnB,SAAS,GAAG,CAAC,CAAC;gBACd,WAAW,GAAG,CAAC,CAAC;aAEnB;YAED,2BAA2B;YAE3B,MAAM,WAAW,GAAG,KAAK,CAAC,aAAa,CAAE,aAAa,CAAE,AAAC;YAEzD,IAAI,QAAQ,GAAG,WAAW,CAAC,KAAK,AAAC;YACjC,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,AAAC;YAEhC,MAAM,OAAO,GAAG,CAAE,UAAU,CAAC,WAAW,CAAE,QAAQ,CAAE,AAAC;YAErD,IAAK,OAAO,EAAG;gBAEX,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;gBAE9B,yFAAyF;gBAEzF,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;oBAE/C,MAAM,KAAK,GAAG,KAAK,CAAE,CAAC,CAAE,AAAC;oBAEzB,IAAK,UAAU,CAAC,WAAW,CAAE,KAAK,CAAE,EAEhC,KAAK,CAAE,CAAC,CAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;iBAIpC;aAEJ;YAGD,MAAM,KAAK,GAAG,UAAU,CAAC,gBAAgB,CAAE,QAAQ,EAAE,KAAK,CAAE,AAAC;YAE7D,cAAc,CAEd,MAAM,QAAO,GAAG,QAAQ,AAAC,EAAC,uEAAuE;YAEjG,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,GAAE,GAAG,KAAK,CAAC,MAAM,EAAE,EAAC,GAAG,GAAE,EAAE,EAAC,EAAG,CAAG;gBAE/C,MAAM,KAAK,GAAG,KAAK,CAAE,EAAC,CAAE,AAAC;gBAEzB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAE,KAAK,CAAE,CAAC;aAEvC;YAGD,SAAS,QAAQ,CAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAG;gBAE/B,IAAK,CAAE,GAAG,EAAG,OAAO,CAAC,KAAK,CAAE,2CAA2C,CAAE,CAAC;gBAE1E,OAAO,GAAG,CAAC,KAAK,EAAE,CAAC,cAAc,CAAE,IAAI,CAAE,CAAC,GAAG,CAAE,EAAE,CAAE,CAAC;aAEvD;YAED,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAI,GAAG,KAAK,CAAC,MAAM,AAAC;YAGlD,qCAAqC;YAGrC,SAAS,WAAW,CAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAG;gBAEzC,mEAAmE;gBACnE,gEAAgE;gBAChE,8EAA8E;gBAC9E,EAAE;gBACF,iEAAiE;gBACjE,oEAAoE;gBAEpE,IAAI,SAAS,EAAE,SAAS,EAAE,SAAS,AAAC,EAAC,wCAAwC;gBAE7E,sEAAsE;gBACtE,kDAAkD;gBAElD,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAC9B,QAAQ,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,AAAC;gBACjC,MAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAC9B,QAAQ,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,AAAC;gBAEjC,MAAM,YAAY,GAAK,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,AAAE,AAAC;gBAEnE,4BAA4B;gBAC5B,MAAM,UAAU,GAAK,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,AAAE,AAAC;gBAEjE,IAAK,IAAI,CAAC,GAAG,CAAE,UAAU,CAAE,GAAG,MAAM,CAAC,OAAO,EAAG;oBAE3C,gBAAgB;oBAEhB,oCAAoC;oBAEpC,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAE,YAAY,CAAE,AAAC;oBAC7C,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAE,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAE,AAAC;oBAE1E,oDAAoD;oBAEpD,MAAM,aAAa,GAAK,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,UAAU,AAAE,AAAC;oBAC3D,MAAM,aAAa,GAAK,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,UAAU,AAAE,AAAC;oBAE3D,MAAM,aAAa,GAAK,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,UAAU,AAAE,AAAC;oBAC3D,MAAM,aAAa,GAAK,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,UAAU,AAAE,AAAC;oBAE3D,kDAAkD;oBAElD,MAAM,EAAE,GAAG,AAAE,CAAA,AAAE,CAAA,aAAa,GAAG,aAAa,CAAA,GAAK,QAAQ,GACjD,AAAE,CAAA,aAAa,GAAG,aAAa,CAAA,GAAK,QAAQ,CAAA,GAC9C,CAAA,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAA,AAAE,AAAC;oBAElD,yCAAyC;oBAEzC,SAAS,GAAK,aAAa,GAAG,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,AAAE,CAAC;oBACvD,SAAS,GAAK,aAAa,GAAG,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,AAAE,CAAC;oBAEvD,wDAAwD;oBACxD,4BAA4B;oBAC5B,MAAM,aAAa,GAAK,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,SAAS,AAAE,AAAC;oBACxE,IAAK,aAAa,IAAI,CAAC,EAEnB,OAAO,IAAI,OAAO,CAAE,SAAS,EAAE,SAAS,CAAE,CAAC;yBAI3C,SAAS,GAAG,IAAI,CAAC,IAAI,CAAE,aAAa,GAAG,CAAC,CAAE,CAAC;iBAIlD,MAAM;oBAEH,yCAAyC;oBAEzC,IAAI,YAAY,GAAG,KAAK,AAAC,EAAC,oBAAoB;oBAE9C,IAAK,QAAQ,GAAG,MAAM,CAAC,OAAO,EAE1B;wBAAA,IAAK,QAAQ,GAAG,MAAM,CAAC,OAAO,EAE1B,YAAY,GAAG,IAAI,CAAC;qBAEvB,MAEE;wBAEH,IAAK,QAAQ,GAAG,CAAE,MAAM,CAAC,OAAO,EAE5B;4BAAA,IAAK,QAAQ,GAAG,CAAE,MAAM,CAAC,OAAO,EAE5B,YAAY,GAAG,IAAI,CAAC;yBAEvB,MAID,IAAK,IAAI,CAAC,IAAI,CAAE,QAAQ,CAAE,KAAK,IAAI,CAAC,IAAI,CAAE,QAAQ,CAAE,EAEhD,YAAY,GAAG,IAAI,CAAC;qBAM/B;oBAED,IAAK,YAAY,EAAG;wBAEhB,yDAAyD;wBACzD,SAAS,GAAG,CAAE,QAAQ,CAAC;wBACvB,SAAS,GAAG,QAAQ,CAAC;wBACrB,SAAS,GAAG,IAAI,CAAC,IAAI,CAAE,YAAY,CAAE,CAAC;qBAEzC,MAAM;wBAEH,sDAAsD;wBACtD,SAAS,GAAG,QAAQ,CAAC;wBACrB,SAAS,GAAG,QAAQ,CAAC;wBACrB,SAAS,GAAG,IAAI,CAAC,IAAI,CAAE,YAAY,GAAG,CAAC,CAAE,CAAC;qBAE7C;iBAEJ;gBAED,OAAO,IAAI,OAAO,CAAE,SAAS,GAAG,SAAS,EAAE,SAAS,GAAG,SAAS,CAAE,CAAC;aAEtE;YAGD,MAAM,gBAAgB,GAAG,EAAE,AAAC;YAE5B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAO,CAAC,MAAM,EAAE,EAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAC,GAAG,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,EAAE,EAAC,EAAG,EAAE,EAAC,EAAG,CAAG;gBAEpF,IAAK,EAAC,KAAK,EAAE,EAAG,EAAC,GAAG,CAAC,CAAC;gBACtB,IAAK,EAAC,KAAK,EAAE,EAAG,EAAC,GAAG,CAAC,CAAC;gBAEtB,mBAAmB;gBACnB,iCAAiC;gBAEjC,gBAAgB,CAAE,IAAC,CAAE,GAAG,WAAW,CAAE,QAAO,CAAE,IAAC,CAAE,EAAE,QAAO,CAAE,EAAC,CAAE,EAAE,QAAO,CAAE,EAAC,CAAE,CAAE,CAAC;aAEnF;YAED,MAAM,cAAc,GAAG,EAAE,AAAC;YAC1B,IAAI,gBAAgB,EAAE,iBAAiB,GAAG,gBAAgB,CAAC,MAAM,EAAE,AAAC;YAEpE,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,GAAE,GAAG,KAAK,CAAC,MAAM,EAAE,EAAC,GAAG,GAAE,EAAE,EAAC,EAAG,CAAG;gBAE/C,MAAM,KAAK,GAAG,KAAK,CAAE,EAAC,CAAE,AAAC;gBAEzB,gBAAgB,GAAG,EAAE,CAAC;gBAEtB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,EAAE,CAAC,EAAG,EAAE,CAAC,EAAG,CAAG;oBAElF,IAAK,CAAC,KAAK,EAAE,EAAG,CAAC,GAAG,CAAC,CAAC;oBACtB,IAAK,CAAC,KAAK,EAAE,EAAG,CAAC,GAAG,CAAC,CAAC;oBAEtB,mBAAmB;oBACnB,gBAAgB,CAAE,IAAC,CAAE,GAAG,WAAW,CAAE,KAAK,CAAE,IAAC,CAAE,EAAE,KAAK,CAAE,CAAC,CAAE,EAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC;iBAE7E;gBAED,cAAc,CAAC,IAAI,CAAE,gBAAgB,CAAE,CAAC;gBACxC,iBAAiB,GAAG,iBAAiB,CAAC,MAAM,CAAE,gBAAgB,CAAE,CAAC;aAEpE;YAGD,sDAAsD;YAEtD,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,aAAa,EAAE,EAAC,EAAG,CAAG;gBAEvC,0CAA0C;gBAE1C,MAAM,CAAC,GAAG,EAAC,GAAG,aAAa,AAAC;gBAC5B,MAAM,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAE,AAAC;gBACvD,MAAM,EAAE,GAAG,SAAS,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAE,GAAG,WAAW,AAAC;gBAEjE,iBAAiB;gBAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAO,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;oBAEjD,MAAM,IAAI,GAAG,QAAQ,CAAE,QAAO,CAAE,IAAC,CAAE,EAAE,gBAAgB,CAAE,IAAC,CAAE,EAAE,EAAE,CAAE,AAAC;oBAEjE,CAAC,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC;iBAE5B;gBAED,eAAe;gBAEf,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;oBAE/C,MAAM,KAAK,GAAG,KAAK,CAAE,CAAC,CAAE,AAAC;oBACzB,gBAAgB,GAAG,cAAc,CAAE,CAAC,CAAE,CAAC;oBAEvC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;wBAE/C,MAAM,IAAI,GAAG,QAAQ,CAAE,KAAK,CAAE,IAAC,CAAE,EAAE,gBAAgB,CAAE,IAAC,CAAE,EAAE,EAAE,CAAE,AAAC;wBAE/D,CAAC,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC;qBAE5B;iBAEJ;aAEJ;YAED,MAAM,EAAE,GAAG,SAAS,GAAG,WAAW,AAAC;YAEnC,uBAAuB;YAEvB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,EAAE,IAAC,EAAG,CAAG;gBAE9B,MAAM,IAAI,GAAG,YAAY,GAAG,QAAQ,CAAE,QAAQ,CAAE,IAAC,CAAE,EAAE,iBAAiB,CAAE,IAAC,CAAE,EAAE,EAAE,CAAE,GAAG,QAAQ,CAAE,IAAC,CAAE,AAAC;gBAElG,IAAK,CAAE,aAAa,EAEhB,CAAC,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAE,CAAC;qBAEpB;oBAEH,8DAA8D;oBAE9D,MAAM,CAAC,IAAI,CAAE,UAAU,CAAC,OAAO,CAAE,CAAC,CAAE,CAAE,CAAC,cAAc,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;oBAChE,QAAQ,CAAC,IAAI,CAAE,UAAU,CAAC,SAAS,CAAE,CAAC,CAAE,CAAE,CAAC,cAAc,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;oBAEpE,SAAS,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC,CAAE,CAAE,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;oBAEhE,CAAC,CAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAE,CAAC;iBAE9C;aAEJ;YAED,0BAA0B;YAC1B,kCAAkC;YAElC,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,IAAI,KAAK,EAAE,EAAC,EAAG,CAE7B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,EAAE,IAAC,EAAG,CAAG;gBAE9B,MAAM,IAAI,GAAG,YAAY,GAAG,QAAQ,CAAE,QAAQ,CAAE,IAAC,CAAE,EAAE,iBAAiB,CAAE,IAAC,CAAE,EAAE,EAAE,CAAE,GAAG,QAAQ,CAAE,IAAC,CAAE,AAAC;gBAElG,IAAK,CAAE,aAAa,EAEhB,CAAC,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,KAAK,GAAG,EAAC,CAAE,CAAC;qBAEpC;oBAEH,sEAAsE;oBAEtE,MAAM,CAAC,IAAI,CAAE,UAAU,CAAC,OAAO,CAAE,EAAC,CAAE,CAAE,CAAC,cAAc,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;oBAChE,QAAQ,CAAC,IAAI,CAAE,UAAU,CAAC,SAAS,CAAE,EAAC,CAAE,CAAE,CAAC,cAAc,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC;oBAEpE,SAAS,CAAC,IAAI,CAAE,UAAU,CAAE,EAAC,CAAE,CAAE,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;oBAEhE,CAAC,CAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAE,CAAC;iBAE9C;aAEJ;YAKL,4BAA4B;YAE5B,2CAA2C;YAC3C,IAAM,IAAI,EAAC,GAAG,aAAa,GAAG,CAAC,EAAE,EAAC,IAAI,CAAC,EAAE,EAAC,EAAG,CAAG;gBAE5C,MAAM,CAAC,GAAG,EAAC,GAAG,aAAa,AAAC;gBAC5B,MAAM,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAE,AAAC;gBACvD,MAAM,EAAE,GAAG,SAAS,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAE,GAAG,WAAW,AAAC;gBAEjE,iBAAiB;gBAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAO,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;oBAEjD,MAAM,IAAI,GAAG,QAAQ,CAAE,QAAO,CAAE,IAAC,CAAE,EAAE,gBAAgB,CAAE,IAAC,CAAE,EAAE,EAAE,CAAE,AAAC;oBACjE,CAAC,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAE,CAAC;iBAElC;gBAED,eAAe;gBAEf,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;oBAE/C,MAAM,KAAK,GAAG,KAAK,CAAE,CAAC,CAAE,AAAC;oBACzB,gBAAgB,GAAG,cAAc,CAAE,CAAC,CAAE,CAAC;oBAEvC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;wBAE/C,MAAM,IAAI,GAAG,QAAQ,CAAE,KAAK,CAAE,IAAC,CAAE,EAAE,gBAAgB,CAAE,IAAC,CAAE,EAAE,EAAE,CAAE,AAAC;wBAE/D,IAAK,CAAE,aAAa,EAEhB,CAAC,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAE,CAAC;6BAI/B,CAAC,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,UAAU,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC,CAAC,EAAE,UAAU,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC;qBAItF;iBAEJ;aAEJ;YAED,WAAW,CAEX,uBAAuB;YAEvB,aAAa,EAAE,CAAC;YAEhB,cAAc;YAEd,cAAc,EAAE,CAAC;YAGjB,yBAAyB;YAEzB,SAAS,aAAa,GAAG;gBAErB,MAAM,KAAK,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,AAAC;gBAEvC,IAAK,YAAY,EAAG;oBAEhB,IAAI,KAAK,GAAG,CAAC,AAAC,EAAC,YAAY;oBAC3B,IAAI,MAAM,GAAG,IAAI,GAAG,KAAK,AAAC;oBAE1B,eAAe;oBAEf,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,EAAE,IAAC,EAAG,CAAG;wBAE9B,MAAM,IAAI,GAAG,KAAK,CAAE,IAAC,CAAE,AAAC;wBACxB,EAAE,CAAE,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,EAAE,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,EAAE,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,CAAC;qBAEpE;oBAED,KAAK,GAAG,KAAK,GAAG,aAAa,GAAG,CAAC,CAAC;oBAClC,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC;oBAEtB,YAAY;oBAEZ,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,EAAE,IAAC,EAAG,CAAG;wBAE9B,MAAM,IAAI,GAAG,KAAK,CAAE,IAAC,CAAE,AAAC;wBACxB,EAAE,CAAE,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,EAAE,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,EAAE,IAAI,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,CAAC;qBAEpE;iBAEJ,MAAM;oBAEH,eAAe;oBAEf,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,EAAE,IAAC,EAAG,CAAG;wBAE9B,MAAM,IAAI,GAAG,KAAK,CAAE,IAAC,CAAE,AAAC;wBACxB,EAAE,CAAE,IAAI,CAAE,CAAC,CAAE,EAAE,IAAI,CAAE,CAAC,CAAE,EAAE,IAAI,CAAE,CAAC,CAAE,CAAE,CAAC;qBAEzC;oBAED,YAAY;oBAEZ,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,EAAE,IAAC,EAAG,CAAG;wBAE9B,MAAM,IAAI,GAAG,KAAK,CAAE,IAAC,CAAE,AAAC;wBACxB,EAAE,CAAE,IAAI,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,KAAK,EAAE,IAAI,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,KAAK,EAAE,IAAI,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,KAAK,CAAE,CAAC;qBAEtF;iBAEJ;gBAED,KAAK,CAAC,QAAQ,CAAE,KAAK,EAAE,aAAa,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,EAAE,CAAC,CAAE,CAAC;aAEhE;YAED,4CAA4C;YAE5C,SAAS,cAAc,GAAG;gBAEtB,MAAM,KAAK,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,AAAC;gBACvC,IAAI,WAAW,GAAG,CAAC,AAAC;gBACpB,SAAS,CAAE,QAAO,EAAE,WAAW,CAAE,CAAC;gBAClC,WAAW,IAAI,QAAO,CAAC,MAAM,CAAC;gBAE9B,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;oBAE/C,MAAM,KAAK,GAAG,KAAK,CAAE,CAAC,CAAE,AAAC;oBACzB,SAAS,CAAE,KAAK,EAAE,WAAW,CAAE,CAAC;oBAEhC,QAAQ;oBACR,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC;iBAE/B;gBAGD,KAAK,CAAC,QAAQ,CAAE,KAAK,EAAE,aAAa,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,EAAE,CAAC,CAAE,CAAC;aAGhE;YAED,SAAS,SAAS,CAAE,OAAO,EAAE,WAAW,EAAG;gBAEvC,IAAI,IAAC,GAAG,OAAO,CAAC,MAAM,AAAC;gBAEvB,MAAQ,EAAG,IAAC,IAAI,CAAC,CAAG;oBAEhB,MAAM,CAAC,GAAG,IAAC,AAAC;oBACZ,IAAI,CAAC,GAAG,IAAC,GAAG,CAAC,AAAC;oBACd,IAAK,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;oBAEpC,gDAAgD;oBAEhD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAK,KAAK,GAAG,aAAa,GAAG,CAAC,AAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;wBAEhE,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC,AAAC;wBACvB,MAAM,KAAK,GAAG,IAAI,GAAK,CAAA,CAAC,GAAG,CAAC,CAAA,AAAE,AAAC;wBAE/B,MAAM,CAAC,GAAG,WAAW,GAAG,CAAC,GAAG,KAAK,EAC7B,CAAC,GAAG,WAAW,GAAG,CAAC,GAAG,KAAK,EAC3B,CAAC,GAAG,WAAW,GAAG,CAAC,GAAG,KAAK,EAC3B,CAAC,GAAG,WAAW,GAAG,CAAC,GAAG,KAAK,AAAC;wBAEhC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;qBAEpB;iBAEJ;aAEJ;YAED,SAAS,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;gBAElB,WAAW,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;gBACtB,WAAW,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;gBACtB,WAAW,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;aAEzB;YAGD,SAAS,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;gBAEnB,SAAS,CAAE,CAAC,CAAE,CAAC;gBACf,SAAS,CAAE,CAAC,CAAE,CAAC;gBACf,SAAS,CAAE,CAAC,CAAE,CAAC;gBAEf,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,AAAC;gBAC3C,MAAM,GAAG,GAAG,KAAK,CAAC,aAAa,CAAE,KAAK,EAAE,aAAa,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,CAAE,AAAC;gBAErG,KAAK,CAAE,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC;gBAClB,KAAK,CAAE,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC;gBAClB,KAAK,CAAE,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC;aAErB;YAED,SAAS,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;gBAEtB,SAAS,CAAE,CAAC,CAAE,CAAC;gBACf,SAAS,CAAE,CAAC,CAAE,CAAC;gBACf,SAAS,CAAE,CAAC,CAAE,CAAC;gBAEf,SAAS,CAAE,CAAC,CAAE,CAAC;gBACf,SAAS,CAAE,CAAC,CAAE,CAAC;gBACf,SAAS,CAAE,CAAC,CAAE,CAAC;gBAGf,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,AAAC;gBAC3C,MAAM,GAAG,GAAG,KAAK,CAAC,kBAAkB,CAAE,KAAK,EAAE,aAAa,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,CAAE,AAAC;gBAEzH,KAAK,CAAE,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC;gBAClB,KAAK,CAAE,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC;gBAClB,KAAK,CAAE,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC;gBAElB,KAAK,CAAE,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC;gBAClB,KAAK,CAAE,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC;gBAClB,KAAK,CAAE,GAAG,CAAE,CAAC,CAAE,CAAE,CAAC;aAErB;YAED,SAAS,SAAS,CAAE,KAAK,EAAG;gBAExB,aAAa,CAAC,IAAI,CAAE,WAAW,CAAE,KAAK,GAAG,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBACnD,aAAa,CAAC,IAAI,CAAE,WAAW,CAAE,KAAK,GAAG,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;gBACnD,aAAa,CAAC,IAAI,CAAE,WAAW,CAAE,KAAK,GAAG,CAAC,GAAG,CAAC,CAAE,CAAE,CAAC;aAEtD;YAGD,SAAS,KAAK,CAAE,OAAO,EAAG;gBAEtB,OAAO,CAAC,IAAI,CAAE,OAAO,CAAC,CAAC,CAAE,CAAC;gBAC1B,OAAO,CAAC,IAAI,CAAE,OAAO,CAAC,CAAC,CAAE,CAAC;aAE7B;SAEJ;KAEJ;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,AAAC;QACtC,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,AAAC;QAExC,OAAO,QAAQ,CAAE,MAAM,EAAE,OAAO,EAAE,IAAI,CAAE,CAAC;KAE5C;IAED,OAAO,QAAQ,CAAE,IAAI,EAAE,MAAM,EAAG;QAE5B,MAAM,cAAc,GAAG,EAAE,AAAC;QAE1B,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;YAErD,MAAM,KAAK,GAAG,MAAM,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,CAAE,AAAC;YAEzC,cAAc,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;SAEhC;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,AAAC;QAE7C,IAAK,WAAW,KAAK,SAAS,EAE1B,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,MAAM,CAAE,WAAW,CAAC,IAAI,CAAE,EAAE,CAAC,QAAQ,CAAE,WAAW,CAAE,CAAC;QAIxF,OAAO,IAAI,eAAe,CAAE,cAAc,EAAE,IAAI,CAAC,OAAO,CAAE,CAAC;KAE9D;CAEJ;AAED,MAAM,gBAAgB,GAAG;IAErB,aAAa,EAAE,SAAW,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAG;QAEnE,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,CAAE,AAAC;QACnC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,AAAC;QACvC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,CAAE,AAAC;QACnC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,AAAC;QACvC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,CAAE,AAAC;QACnC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,AAAC;QAEvC,OAAO;YACH,IAAI,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE;YACvB,IAAI,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE;YACvB,IAAI,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE;SAC1B,CAAC;KAEL;IAED,kBAAkB,EAAE,SAAW,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAG;QAEhF,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,CAAE,AAAC;QACnC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,AAAC;QACvC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,AAAC;QACvC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,CAAE,AAAC;QACnC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,AAAC;QACvC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,AAAC;QACvC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,CAAE,AAAC;QACnC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,AAAC;QACvC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,AAAC;QACvC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,CAAE,AAAC;QACnC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,AAAC;QACvC,MAAM,GAAG,GAAG,QAAQ,CAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,AAAC;QAEvC,IAAK,IAAI,CAAC,GAAG,CAAE,GAAG,GAAG,GAAG,CAAE,GAAG,IAAI,CAAC,GAAG,CAAE,GAAG,GAAG,GAAG,CAAE,EAE9C,OAAO;YACH,IAAI,OAAO,CAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAE;YAC3B,IAAI,OAAO,CAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAE;YAC3B,IAAI,OAAO,CAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAE;YAC3B,IAAI,OAAO,CAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAE;SAC9B,CAAC;aAIF,OAAO;YACH,IAAI,OAAO,CAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAE;YAC3B,IAAI,OAAO,CAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAE;YAC3B,IAAI,OAAO,CAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAE;YAC3B,IAAI,OAAO,CAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAE;SAC9B,CAAC;KAIT;CAEJ,AAAC;AAEF,SAAS,QAAQ,CAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAG;IAEvC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAEjB,IAAK,KAAK,CAAC,OAAO,CAAE,MAAM,CAAE,EAExB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;QAE9C,MAAM,KAAK,GAAG,MAAM,CAAE,IAAC,CAAE,AAAC;QAE1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,IAAI,CAAE,CAAC;KAElC;SAID,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,IAAI,CAAE,CAAC;IAIpC,IAAK,OAAO,CAAC,WAAW,KAAK,SAAS,EAAG,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAEjG,OAAO,IAAI,CAAC;CAEf;AAED,MAAM,mBAAmB,SAAS,kBAAkB;IAEhD,YAAa,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAG;QAElC,MAAM,CAAC,GAAG,AAAE,CAAA,CAAC,GAAG,IAAI,CAAC,IAAI,CAAE,CAAC,CAAE,CAAA,GAAK,CAAC,AAAC;QAErC,MAAM,QAAQ,GAAG;AACb,cAAG;YAAE,CAAC;AAAE,aAAC;AAAG,aAAC;YAAE,CAAC;AAAE,aAAC;AAAG,cAAG;YAAE,CAAE,CAAC;AAAE,aAAC;AAAG,aAAC;YAAE,CAAE,CAAC;AAAE,aAAC;AAC7C,aAAC;AAAE,cAAG;YAAE,CAAC;AAAG,aAAC;AAAE,aAAC;YAAE,CAAC;AAAE,aAAC;AAAE,cAAG;YAAE,CAAE,CAAC;AAAG,aAAC;AAAE,aAAC;YAAE,CAAE,CAAC;YAC5C,CAAC;AAAE,aAAC;AAAE,cAAG;YAAG,CAAC;AAAE,aAAC;AAAE,aAAC;YAAG,CAAE,CAAC;AAAE,aAAC;AAAE,cAAG;YAAG,CAAE,CAAC;AAAE,aAAC;AAAE,aAAC;SAChD,AAAC;QAEF,MAAM,OAAO,GAAG;AACZ,aAAC;AAAE,cAAE;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,cAAE;AAAG,aAAC;AAAE,cAAE;AAAE,cAAE;AACnD,aAAC;AAAE,aAAC;AAAE,aAAC;AAAG,aAAC;AAAE,cAAE;AAAE,aAAC;AAAE,cAAE;AAAE,cAAE;AAAE,aAAC;AAAE,cAAE;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAChD,aAAC;AAAE,aAAC;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAC5C,aAAC;AAAE,aAAC;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,cAAE;AAAE,aAAC;AAAE,aAAC;AAAE,cAAE;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;SACjD,AAAC;QAEF,KAAK,CAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAE,CAAC;QAE3C,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;QAElC,IAAI,CAAC,UAAU,GAAG;YACd,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;SACjB,CAAC;KAEL;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,mBAAmB,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;KAE9D;CAEJ;AAED,MAAM,kBAAkB,SAAS,kBAAkB;IAE/C,YAAa,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAG;QAElC,MAAM,QAAQ,GAAG;AACb,aAAC;AAAE,aAAC;AAAE,aAAC;AAAG,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAC5B,aAAC;AAAE,cAAG;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;SACjC,AAAC;QAEF,MAAM,OAAO,GAAG;AACZ,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AACzB,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AACzB,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;SACnB,AAAC;QAEF,KAAK,CAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAE,CAAC;QAE3C,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;QAEjC,IAAI,CAAC,UAAU,GAAG;YACd,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;SACjB,CAAC;KAEL;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,kBAAkB,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;KAE7D;CAEJ;AAED,MAAM,YAAY,SAAS,cAAc;IAErC,YAAa,WAAW,GAAG,GAAG,EAAE,WAAW,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,WAAW,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAG;QAE7H,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;QAE3B,IAAI,CAAC,UAAU,GAAG;YACd,WAAW,EAAE,WAAW;YACxB,WAAW,EAAE,WAAW;YACxB,aAAa,EAAE,aAAa;YAC5B,WAAW,EAAE,WAAW;YACxB,UAAU,EAAE,UAAU;YACtB,WAAW,EAAE,WAAW;SAC3B,CAAC;QAEF,aAAa,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,aAAa,CAAE,CAAC;QAC7C,WAAW,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,WAAW,CAAE,CAAC;QAEzC,UAAU;QAEV,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,GAAG,GAAG,EAAE,AAAC;QAEf,wBAAwB;QAExB,IAAI,MAAM,GAAG,WAAW,AAAC;QACzB,MAAM,UAAU,GAAK,AAAE,CAAA,WAAW,GAAG,WAAW,CAAA,GAAK,WAAW,AAAE,AAAC;QACnE,MAAM,OAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAC7B,MAAM,EAAE,GAAG,IAAI,OAAO,EAAE,AAAC;QAEzB,qCAAqC;QAErC,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,WAAW,EAAE,CAAC,EAAG,CAAG;YAEtC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,aAAa,EAAE,IAAC,EAAG,CAAG;gBAExC,iEAAiE;gBAEjE,MAAM,OAAO,GAAG,UAAU,GAAG,IAAC,GAAG,aAAa,GAAG,WAAW,AAAC;gBAE7D,SAAS;gBAET,OAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;gBACxC,OAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;gBAExC,QAAQ,CAAC,IAAI,CAAE,OAAM,CAAC,CAAC,EAAE,OAAM,CAAC,CAAC,EAAE,OAAM,CAAC,CAAC,CAAE,CAAC;gBAE9C,SAAS;gBAET,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBAExB,KAAK;gBAEL,EAAE,CAAC,CAAC,GAAG,AAAE,CAAA,OAAM,CAAC,CAAC,GAAG,WAAW,GAAG,CAAC,CAAA,GAAK,CAAC,CAAC;gBAC1C,EAAE,CAAC,CAAC,GAAG,AAAE,CAAA,OAAM,CAAC,CAAC,GAAG,WAAW,GAAG,CAAC,CAAA,GAAK,CAAC,CAAC;gBAE1C,GAAG,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;aAE1B;YAED,+CAA+C;YAE/C,MAAM,IAAI,UAAU,CAAC;SAExB;QAED,UAAU;QAEV,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,WAAW,EAAE,EAAC,EAAG,CAAG;YAErC,MAAM,iBAAiB,GAAG,EAAC,GAAK,CAAA,aAAa,GAAG,CAAC,CAAA,AAAE,AAAC;YAEpD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,aAAa,EAAE,IAAC,EAAG,CAAG;gBAEvC,MAAM,OAAO,GAAG,IAAC,GAAG,iBAAiB,AAAC;gBAEtC,MAAM,CAAC,GAAG,OAAO,AAAC;gBAClB,MAAM,CAAC,GAAG,OAAO,GAAG,aAAa,GAAG,CAAC,AAAC;gBACtC,MAAM,CAAC,GAAG,OAAO,GAAG,aAAa,GAAG,CAAC,AAAC;gBACtC,MAAM,CAAC,GAAG,OAAO,GAAG,CAAC,AAAC;gBAEtB,QAAQ;gBAER,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACxB,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;aAE3B;SAEJ;QAED,iBAAiB;QAEjB,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,IAAI,sBAAsB,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;QACxE,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,sBAAsB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAE,CAAC;KAEnE;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,YAAY,CAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;KAE1I;CAEJ;AAED,MAAM,aAAa,SAAS,cAAc;IAEtC,YAAa,MAAM,GAAG,IAAI,KAAK,CAAE;QAAE,IAAI,OAAO,CAAE,CAAC,EAAE,GAAG,CAAE;QAAE,IAAI,OAAO,CAAE,IAAK,EAAE,IAAK,CAAE;QAAE,IAAI,OAAO,CAAE,GAAG,EAAE,IAAK,CAAE;KAAE,CAAE,EAAE,aAAa,GAAG,EAAE,CAAG;QAEvI,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAE5B,IAAI,CAAC,UAAU,GAAG;YACd,MAAM,EAAE,MAAM;YACd,aAAa,EAAE,aAAa;SAC/B,CAAC;QAEF,UAAU;QAEV,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,GAAG,GAAG,EAAE,AAAC;QAEf,mBAAmB;QAEnB,IAAI,UAAU,GAAG,CAAC,AAAC;QACnB,IAAI,UAAU,GAAG,CAAC,AAAC;QAEnB,uDAAuD;QAEvD,IAAK,KAAK,CAAC,OAAO,CAAE,MAAM,CAAE,KAAK,KAAK,EAElC,QAAQ,CAAE,MAAM,CAAE,CAAC;aAInB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;YAEvC,QAAQ,CAAE,MAAM,CAAE,IAAC,CAAE,CAAE,CAAC;YAExB,IAAI,CAAC,QAAQ,CAAE,UAAU,EAAE,UAAU,EAAE,IAAC,CAAE,CAAC,CAAC,gCAAgC;YAE5E,UAAU,IAAI,UAAU,CAAC;YACzB,UAAU,GAAG,CAAC,CAAC;SAElB;QAIL,iBAAiB;QAEjB,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,IAAI,sBAAsB,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;QACxE,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,sBAAsB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAE,CAAC;QAGhE,mBAAmB;QAEnB,SAAS,QAAQ,CAAE,KAAK,EAAG;YAEvB,MAAM,WAAW,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,AAAC;YACxC,MAAM,MAAM,GAAG,KAAK,CAAC,aAAa,CAAE,aAAa,CAAE,AAAC;YAEpD,IAAI,aAAa,GAAG,MAAM,CAAC,KAAK,AAAC;YACjC,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,AAAC;YAEhC,8BAA8B;YAE9B,IAAK,UAAU,CAAC,WAAW,CAAE,aAAa,CAAE,KAAK,KAAK,EAElD,aAAa,GAAG,aAAa,CAAC,OAAO,EAAE,CAAC;YAI5C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;gBAElD,MAAM,SAAS,GAAG,UAAU,CAAE,IAAC,CAAE,AAAC;gBAElC,IAAK,UAAU,CAAC,WAAW,CAAE,SAAS,CAAE,KAAK,IAAI,EAE7C,UAAU,CAAE,IAAC,CAAE,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;aAI7C;YAED,MAAM,KAAK,GAAG,UAAU,CAAC,gBAAgB,CAAE,aAAa,EAAE,UAAU,CAAE,AAAC;YAEvE,2DAA2D;YAE3D,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAC,GAAG,UAAU,CAAC,MAAM,EAAE,IAAC,GAAG,EAAC,EAAE,IAAC,EAAG,CAAG;gBAElD,MAAM,SAAS,GAAG,UAAU,CAAE,IAAC,CAAE,AAAC;gBAClC,aAAa,GAAG,aAAa,CAAC,MAAM,CAAE,SAAS,CAAE,CAAC;aAErD;YAED,yBAAyB;YAEzB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAC,GAAG,aAAa,CAAC,MAAM,EAAE,IAAC,GAAG,EAAC,EAAE,IAAC,EAAG,CAAG;gBAErD,MAAM,QAAM,GAAG,aAAa,CAAE,IAAC,CAAE,AAAC;gBAElC,QAAQ,CAAC,IAAI,CAAE,QAAM,CAAC,CAAC,EAAE,QAAM,CAAC,CAAC,EAAE,CAAC,CAAE,CAAC;gBACvC,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACxB,GAAG,CAAC,IAAI,CAAE,QAAM,CAAC,CAAC,EAAE,QAAM,CAAC,CAAC,CAAE,CAAC,CAAC,YAAY;aAE/C;YAED,UAAU;YAEV,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAC,GAAG,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,EAAC,EAAE,IAAC,EAAG,CAAG;gBAE7C,MAAM,IAAI,GAAG,KAAK,CAAE,IAAC,CAAE,AAAC;gBAExB,MAAM,CAAC,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,WAAW,AAAC;gBAClC,MAAM,CAAC,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,WAAW,AAAC;gBAClC,MAAM,CAAC,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,WAAW,AAAC;gBAElC,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACxB,UAAU,IAAI,CAAC,CAAC;aAEnB;SAEJ;KAEJ;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,AAAC;QAEtC,OAAO,MAAM,CAAE,MAAM,EAAE,IAAI,CAAE,CAAC;KAEjC;IAED,OAAO,QAAQ,CAAE,IAAI,EAAE,MAAM,EAAG;QAE5B,MAAM,cAAc,GAAG,EAAE,AAAC;QAE1B,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;YAErD,MAAM,KAAK,GAAG,MAAM,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,CAAE,AAAC;YAEzC,cAAc,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;SAEhC;QAED,OAAO,IAAI,aAAa,CAAE,cAAc,EAAE,IAAI,CAAC,aAAa,CAAE,CAAC;KAElE;CAEJ;AAED,SAAS,MAAM,CAAE,MAAM,EAAE,IAAI,EAAG;IAE5B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAEjB,IAAK,KAAK,CAAC,OAAO,CAAE,MAAM,CAAE,EAExB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;QAE9C,MAAM,KAAK,GAAG,MAAM,CAAE,IAAC,CAAE,AAAC;QAE1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,IAAI,CAAE,CAAC;KAElC;SAID,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,IAAI,CAAE,CAAC;IAIpC,OAAO,IAAI,CAAC;CAEf;AAED,MAAM,cAAc,SAAS,cAAc;IAEvC,YAAa,MAAM,GAAG,CAAC,EAAE,aAAa,GAAG,EAAE,EAAE,cAAc,GAAG,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,WAAW,GAAG,IAAI,CAAC,EAAE,CAAG;QAE7I,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;QAE7B,IAAI,CAAC,UAAU,GAAG;YACd,MAAM,EAAE,MAAM;YACd,aAAa,EAAE,aAAa;YAC5B,cAAc,EAAE,cAAc;YAC9B,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,SAAS;YACpB,UAAU,EAAE,UAAU;YACtB,WAAW,EAAE,WAAW;SAC3B,CAAC;QAEF,aAAa,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAE,aAAa,CAAE,CAAE,CAAC;QAC3D,cAAc,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAE,cAAc,CAAE,CAAE,CAAC;QAE7D,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,UAAU,GAAG,WAAW,EAAE,IAAI,CAAC,EAAE,CAAE,AAAC;QAE/D,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,MAAM,IAAI,GAAG,EAAE,AAAC;QAEhB,MAAM,QAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAC7B,MAAM,MAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAE7B,UAAU;QAEV,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,GAAG,GAAG,EAAE,AAAC;QAEf,qCAAqC;QAErC,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,cAAc,EAAE,EAAE,EAAG,CAAG;YAE5C,MAAM,WAAW,GAAG,EAAE,AAAC;YAEvB,MAAM,CAAC,GAAG,EAAE,GAAG,cAAc,AAAC;YAE9B,6BAA6B;YAE7B,IAAI,OAAO,GAAG,CAAC,AAAC;YAEhB,IAAK,EAAE,IAAI,CAAC,IAAI,UAAU,IAAI,CAAC,EAE3B,OAAO,GAAG,GAAG,GAAG,aAAa,CAAC;iBAE3B,IAAK,EAAE,IAAI,cAAc,IAAI,QAAQ,IAAI,IAAI,CAAC,EAAE,EAEnD,OAAO,GAAG,IAAK,GAAG,aAAa,CAAC;YAIpC,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,aAAa,EAAE,EAAE,EAAG,CAAG;gBAE3C,MAAM,CAAC,GAAG,EAAE,GAAG,aAAa,AAAC;gBAE7B,SAAS;gBAET,QAAM,CAAC,CAAC,GAAG,CAAE,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,QAAQ,GAAG,CAAC,GAAG,SAAS,CAAE,GAAG,IAAI,CAAC,GAAG,CAAE,UAAU,GAAG,CAAC,GAAG,WAAW,CAAE,CAAC;gBACtG,QAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,UAAU,GAAG,CAAC,GAAG,WAAW,CAAE,CAAC;gBAC7D,QAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,QAAQ,GAAG,CAAC,GAAG,SAAS,CAAE,GAAG,IAAI,CAAC,GAAG,CAAE,UAAU,GAAG,CAAC,GAAG,WAAW,CAAE,CAAC;gBAEpG,QAAQ,CAAC,IAAI,CAAE,QAAM,CAAC,CAAC,EAAE,QAAM,CAAC,CAAC,EAAE,QAAM,CAAC,CAAC,CAAE,CAAC;gBAE9C,SAAS;gBAET,MAAM,CAAC,IAAI,CAAE,QAAM,CAAE,CAAC,SAAS,EAAE,CAAC;gBAClC,OAAO,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC;gBAE7C,KAAK;gBAEL,GAAG,CAAC,IAAI,CAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,CAAC,CAAE,CAAC;gBAE/B,WAAW,CAAC,IAAI,CAAE,KAAK,EAAG,CAAE,CAAC;aAEhC;YAED,IAAI,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;SAE5B;QAED,UAAU;QAEV,IAAM,IAAI,GAAE,GAAG,CAAC,EAAE,GAAE,GAAG,cAAc,EAAE,GAAE,EAAG,CAExC,IAAM,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,aAAa,EAAE,EAAE,EAAG,CAAG;YAE1C,MAAM,CAAC,GAAG,IAAI,CAAE,GAAE,CAAE,CAAE,EAAE,GAAG,CAAC,CAAE,AAAC;YAC/B,MAAM,CAAC,GAAG,IAAI,CAAE,GAAE,CAAE,CAAE,EAAE,CAAE,AAAC;YAC3B,MAAM,CAAC,GAAG,IAAI,CAAE,GAAE,GAAG,CAAC,CAAE,CAAE,EAAE,CAAE,AAAC;YAC/B,MAAM,CAAC,GAAG,IAAI,CAAE,GAAE,GAAG,CAAC,CAAE,CAAE,EAAE,GAAG,CAAC,CAAE,AAAC;YAEnC,IAAK,GAAE,KAAK,CAAC,IAAI,UAAU,GAAG,CAAC,EAAG,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YAC1D,IAAK,GAAE,KAAK,cAAc,GAAG,CAAC,IAAI,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAG,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SAElF;QAIL,iBAAiB;QAEjB,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,IAAI,sBAAsB,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;QACxE,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,sBAAsB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAE,CAAC;KAEnE;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,cAAc,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;KAEvJ;CAEJ;AAED,MAAM,mBAAmB,SAAS,kBAAkB;IAEhD,YAAa,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAG;QAElC,MAAM,QAAQ,GAAG;AACb,aAAC;AAAE,aAAC;AAAE,aAAC;AAAG,cAAG;AAAE,cAAG;AAAE,aAAC;AAAG,cAAG;AAAE,aAAC;AAAE,cAAG;AAAG,aAAC;AAAE,cAAG;AAAE,cAAG;SACpD,AAAC;QAEF,MAAM,OAAO,GAAG;AACZ,aAAC;AAAE,aAAC;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;SACtC,AAAC;QAEF,KAAK,CAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAE,CAAC;QAE3C,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;QAElC,IAAI,CAAC,UAAU,GAAG;YACd,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;SACjB,CAAC;KAEL;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,mBAAmB,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;KAE9D;CAEJ;AAED,MAAM,aAAa,SAAS,cAAc;IAEtC,YAAa,MAAM,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,cAAc,GAAG,CAAC,EAAE,eAAe,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAG;QAE9F,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAE5B,IAAI,CAAC,UAAU,GAAG;YACd,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI;YACV,cAAc,EAAE,cAAc;YAC9B,eAAe,EAAE,eAAe;YAChC,GAAG,EAAE,GAAG;SACX,CAAC;QAEF,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,cAAc,CAAE,CAAC;QAC9C,eAAe,GAAG,IAAI,CAAC,KAAK,CAAE,eAAe,CAAE,CAAC;QAEhD,UAAU;QAEV,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,GAAG,GAAG,EAAE,AAAC;QAEf,mBAAmB;QAEnB,MAAM,MAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAC7B,MAAM,QAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAC7B,MAAM,MAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAE7B,qCAAqC;QAErC,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,CAEtC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,eAAe,EAAE,IAAC,EAAG,CAAG;YAE1C,MAAM,CAAC,GAAG,IAAC,GAAG,eAAe,GAAG,GAAG,AAAC;YACpC,MAAM,CAAC,GAAG,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,AAAC;YAE3C,SAAS;YAET,QAAM,CAAC,CAAC,GAAG,AAAE,CAAA,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,CAAA,GAAK,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC;YAC7D,QAAM,CAAC,CAAC,GAAG,AAAE,CAAA,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,CAAA,GAAK,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC;YAC7D,QAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC;YAEhC,QAAQ,CAAC,IAAI,CAAE,QAAM,CAAC,CAAC,EAAE,QAAM,CAAC,CAAC,EAAE,QAAM,CAAC,CAAC,CAAE,CAAC;YAE9C,SAAS;YAET,MAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC;YAClC,MAAM,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC;YAClC,MAAM,CAAC,UAAU,CAAE,QAAM,EAAE,MAAM,CAAE,CAAC,SAAS,EAAE,CAAC;YAEhD,OAAO,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC;YAE7C,KAAK;YAEL,GAAG,CAAC,IAAI,CAAE,IAAC,GAAG,eAAe,CAAE,CAAC;YAChC,GAAG,CAAC,IAAI,CAAE,CAAC,GAAG,cAAc,CAAE,CAAC;SAElC;QAIL,mBAAmB;QAEnB,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,IAAI,cAAc,EAAE,EAAC,EAAG,CAEtC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,eAAe,EAAE,IAAC,EAAG,CAAG;YAE1C,UAAU;YAEV,MAAM,CAAC,GAAG,AAAE,CAAA,eAAe,GAAG,CAAC,CAAA,GAAK,EAAC,GAAG,IAAC,GAAG,CAAC,AAAC;YAC9C,MAAM,CAAC,GAAG,AAAE,CAAA,eAAe,GAAG,CAAC,CAAA,GAAO,CAAA,EAAC,GAAG,CAAC,CAAA,GAAK,IAAC,GAAG,CAAC,AAAC;YACtD,MAAM,CAAC,GAAG,AAAE,CAAA,eAAe,GAAG,CAAC,CAAA,GAAO,CAAA,EAAC,GAAG,CAAC,CAAA,GAAK,IAAC,AAAC;YAClD,MAAM,CAAC,GAAG,AAAE,CAAA,eAAe,GAAG,CAAC,CAAA,GAAK,EAAC,GAAG,IAAC,AAAC;YAE1C,QAAQ;YAER,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YACxB,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SAE3B;QAIL,iBAAiB;QAEjB,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,IAAI,sBAAsB,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;QACxE,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,sBAAsB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAE,CAAC;KAEnE;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,aAAa,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC;KAE3G;CAEJ;AAED,MAAM,iBAAiB,SAAS,cAAc;IAE1C,YAAa,OAAM,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,eAAe,GAAG,EAAE,EAAE,cAAc,GAAG,CAAC,EAAE,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,CAAC,CAAG;QAE1F,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;QAEhC,IAAI,CAAC,UAAU,GAAG;YACd,MAAM,EAAE,OAAM;YACd,IAAI,EAAE,IAAI;YACV,eAAe,EAAE,eAAe;YAChC,cAAc,EAAE,cAAc;YAC9B,CAAC,EAAE,EAAC;YACJ,CAAC,EAAE,EAAC;SACP,CAAC;QAEF,eAAe,GAAG,IAAI,CAAC,KAAK,CAAE,eAAe,CAAE,CAAC;QAChD,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,cAAc,CAAE,CAAC;QAE9C,UAAU;QAEV,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,GAAG,GAAG,EAAE,AAAC;QAEf,mBAAmB;QAEnB,MAAM,QAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAC7B,MAAM,MAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAE7B,MAAM,EAAE,GAAG,IAAI,OAAO,EAAE,AAAC;QACzB,MAAM,EAAE,GAAG,IAAI,OAAO,EAAE,AAAC;QAEzB,MAAM,CAAC,GAAG,IAAI,OAAO,EAAE,AAAC;QACxB,MAAM,CAAC,GAAG,IAAI,OAAO,EAAE,AAAC;QACxB,MAAM,CAAC,GAAG,IAAI,OAAO,EAAE,AAAC;QAExB,qCAAqC;QAErC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,eAAe,EAAE,EAAG,IAAC,CAAG;YAE1C,qGAAqG;YAErG,MAAM,CAAC,GAAG,IAAC,GAAG,eAAe,GAAG,EAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,AAAC;YAEhD,sGAAsG;YACtG,6HAA6H;YAE7H,wBAAwB,CAAE,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,OAAM,EAAE,EAAE,CAAE,CAAC;YAChD,wBAAwB,CAAE,CAAC,GAAG,IAAI,EAAE,EAAC,EAAE,EAAC,EAAE,OAAM,EAAE,EAAE,CAAE,CAAC;YAEvD,8BAA8B;YAE9B,CAAC,CAAC,UAAU,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;YACvB,CAAC,CAAC,UAAU,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;YACvB,CAAC,CAAC,YAAY,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YACvB,CAAC,CAAC,YAAY,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YAEvB,oDAAoD;YAEpD,CAAC,CAAC,SAAS,EAAE,CAAC;YACd,CAAC,CAAC,SAAS,EAAE,CAAC;YAEd,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,EAAG,CAAC,CAAG;gBAEzC,0FAA0F;gBAC1F,uFAAuF;gBAEvF,MAAM,CAAC,GAAG,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,AAAC;gBAC3C,MAAM,EAAE,GAAG,CAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,AAAC;gBAClC,MAAM,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,AAAC;gBAEhC,2CAA2C;gBAC3C,4GAA4G;gBAE5G,QAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAK,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA,AAAE,CAAC;gBAC1C,QAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAK,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA,AAAE,CAAC;gBAC1C,QAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAK,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA,AAAE,CAAC;gBAE1C,QAAQ,CAAC,IAAI,CAAE,QAAM,CAAC,CAAC,EAAE,QAAM,CAAC,CAAC,EAAE,QAAM,CAAC,CAAC,CAAE,CAAC;gBAE9C,uGAAuG;gBAEvG,MAAM,CAAC,UAAU,CAAE,QAAM,EAAE,EAAE,CAAE,CAAC,SAAS,EAAE,CAAC;gBAE5C,OAAO,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC;gBAE7C,KAAK;gBAEL,GAAG,CAAC,IAAI,CAAE,IAAC,GAAG,eAAe,CAAE,CAAC;gBAChC,GAAG,CAAC,IAAI,CAAE,CAAC,GAAG,cAAc,CAAE,CAAC;aAElC;SAEJ;QAED,mBAAmB;QAEnB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,eAAe,EAAE,CAAC,EAAG,CAEvC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,cAAc,EAAE,IAAC,EAAG,CAAG;YAEzC,UAAU;YAEV,MAAM,CAAC,GAAG,AAAE,CAAA,cAAc,GAAG,CAAC,CAAA,GAAO,CAAA,CAAC,GAAG,CAAC,CAAA,GAAO,CAAA,IAAC,GAAG,CAAC,CAAA,AAAE,AAAC;YACzD,MAAM,CAAC,GAAG,AAAE,CAAA,cAAc,GAAG,CAAC,CAAA,GAAK,CAAC,GAAK,CAAA,IAAC,GAAG,CAAC,CAAA,AAAE,AAAC;YACjD,MAAM,CAAC,GAAG,AAAE,CAAA,cAAc,GAAG,CAAC,CAAA,GAAK,CAAC,GAAG,IAAC,AAAC;YACzC,MAAM,CAAC,GAAG,AAAE,CAAA,cAAc,GAAG,CAAC,CAAA,GAAO,CAAA,CAAC,GAAG,CAAC,CAAA,GAAK,IAAC,AAAC;YAEjD,QAAQ;YAER,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YACxB,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;SAE3B;QAIL,iBAAiB;QAEjB,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,IAAI,sBAAsB,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;QACxE,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,sBAAsB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAE,CAAC;QAEhE,mEAAmE;QAEnE,SAAS,wBAAwB,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAG;YAE3D,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,AAAC;YACzB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,AAAC;YACzB,MAAM,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;YAC1B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;YAE/B,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAK,CAAA,CAAC,GAAG,EAAE,CAAA,GAAK,GAAG,GAAG,EAAE,CAAC;YAC5C,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAK,CAAA,CAAC,GAAG,EAAE,CAAA,GAAK,EAAE,GAAG,GAAG,CAAC;YAC5C,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAE,OAAO,CAAE,GAAG,GAAG,CAAC;SAEnD;KAEJ;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,OAAO,IAAI,iBAAiB,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE,CAAC;KAErH;CAEJ;AAED,MAAM,YAAY,SAAS,cAAc;IAErC,YAAa,IAAI,GAAG,IAAI,qBAAqB,CAAE,IAAI,OAAO,CAAE,EAAG,EAAE,EAAG,EAAE,CAAC,CAAE,EAAE,IAAI,OAAO,CAAE,EAAG,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE,EAAE,eAAe,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,EAAE,cAAc,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,CAAG;QAElM,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;QAE3B,IAAI,CAAC,UAAU,GAAG;YACd,IAAI,EAAE,IAAI;YACV,eAAe,EAAE,eAAe;YAChC,MAAM,EAAE,MAAM;YACd,cAAc,EAAE,cAAc;YAC9B,MAAM,EAAE,MAAM;SACjB,CAAC;QAEF,MAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAE,eAAe,EAAE,MAAM,CAAE,AAAC;QAEnE,mBAAmB;QAEnB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,mBAAmB;QAEnB,MAAM,QAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAC7B,MAAM,MAAM,GAAG,IAAI,OAAO,EAAE,AAAC;QAC7B,MAAM,EAAE,GAAG,IAAI,OAAO,EAAE,AAAC;QACzB,IAAI,CAAC,GAAG,IAAI,OAAO,EAAE,AAAC;QAEtB,SAAS;QAET,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,MAAM,GAAG,GAAG,EAAE,AAAC;QACf,MAAM,OAAO,GAAG,EAAE,AAAC;QAEnB,qBAAqB;QAErB,kBAAkB,EAAE,CAAC;QAErB,iBAAiB;QAEjB,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,IAAI,sBAAsB,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;QACxE,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,sBAAsB,CAAE,GAAG,EAAE,CAAC,CAAE,CAAE,CAAC;QAEhE,YAAY;QAEZ,SAAS,kBAAkB,GAAG;YAE1B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,eAAe,EAAE,IAAC,EAAG,CAEtC,eAAe,CAAE,IAAC,CAAE,CAAC;YAIzB,+EAA+E;YAC/E,4CAA4C;YAC5C,EAAE;YACF,+FAA+F;YAE/F,eAAe,CAAE,AAAE,MAAM,KAAK,KAAK,GAAK,eAAe,GAAG,CAAC,CAAE,CAAC;YAE9D,4CAA4C;YAC5C,kEAAkE;YAElE,WAAW,EAAE,CAAC;YAEd,uBAAuB;YAEvB,eAAe,EAAE,CAAC;SAErB;QAED,SAAS,eAAe,CAAE,IAAC,EAAG;YAE1B,4EAA4E;YAE5E,CAAC,GAAG,IAAI,CAAC,UAAU,CAAE,IAAC,GAAG,eAAe,EAAE,CAAC,CAAE,CAAC;YAE9C,6CAA6C;YAE7C,MAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAE,IAAC,CAAE,AAAC;YAC9B,MAAM,CAAC,GAAG,MAAM,CAAC,SAAS,CAAE,IAAC,CAAE,AAAC;YAEhC,wDAAwD;YAExD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,CAAG;gBAEzC,MAAM,CAAC,GAAG,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,AAAC;gBAE3C,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,AAAC;gBAC1B,MAAM,GAAG,GAAG,CAAE,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,AAAC;gBAE5B,SAAS;gBAET,MAAM,CAAC,CAAC,GAAK,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,AAAE,CAAC;gBACrC,MAAM,CAAC,CAAC,GAAK,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,AAAE,CAAC;gBACrC,MAAM,CAAC,CAAC,GAAK,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,AAAE,CAAC;gBACrC,MAAM,CAAC,SAAS,EAAE,CAAC;gBAEnB,OAAO,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC;gBAE7C,SAAS;gBAET,QAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;gBACnC,QAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;gBACnC,QAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;gBAEnC,QAAQ,CAAC,IAAI,CAAE,QAAM,CAAC,CAAC,EAAE,QAAM,CAAC,CAAC,EAAE,QAAM,CAAC,CAAC,CAAE,CAAC;aAEjD;SAEJ;QAED,SAAS,eAAe,GAAG;YAEvB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,eAAe,EAAE,CAAC,EAAG,CAEvC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,cAAc,EAAE,IAAC,EAAG,CAAG;gBAEzC,MAAM,CAAC,GAAG,AAAE,CAAA,cAAc,GAAG,CAAC,CAAA,GAAO,CAAA,CAAC,GAAG,CAAC,CAAA,GAAO,CAAA,IAAC,GAAG,CAAC,CAAA,AAAE,AAAC;gBACzD,MAAM,CAAC,GAAG,AAAE,CAAA,cAAc,GAAG,CAAC,CAAA,GAAK,CAAC,GAAK,CAAA,IAAC,GAAG,CAAC,CAAA,AAAE,AAAC;gBACjD,MAAM,CAAC,GAAG,AAAE,CAAA,cAAc,GAAG,CAAC,CAAA,GAAK,CAAC,GAAG,IAAC,AAAC;gBACzC,MAAM,CAAC,GAAG,AAAE,CAAA,cAAc,GAAG,CAAC,CAAA,GAAO,CAAA,CAAC,GAAG,CAAC,CAAA,GAAK,IAAC,AAAC;gBAEjD,QAAQ;gBAER,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACxB,OAAO,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;aAE3B;SAIR;QAED,SAAS,WAAW,GAAG;YAEnB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,eAAe,EAAE,IAAC,EAAG,CAEvC,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAG,CAAG;gBAEzC,EAAE,CAAC,CAAC,GAAG,IAAC,GAAG,eAAe,CAAC;gBAC3B,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC;gBAE1B,GAAG,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;aAE1B;SAIR;KAEJ;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,AAAC;QAE5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QAE1C,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,QAAQ,CAAE,IAAI,EAAG;QAEpB,+DAA+D;QAC/D,0EAA0E;QAC1E,OAAO,IAAI,YAAY,CACnB,IAAI,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,EAAE,CAAC,QAAQ,CAAE,IAAI,CAAC,IAAI,CAAE,EACpD,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,MAAM,CACd,CAAC;KAEL;CAEJ;AAED,MAAM,iBAAiB,SAAS,cAAc;IAE1C,YAAa,QAAQ,GAAG,IAAI,CAAG;QAE3B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;QAEhC,IAAI,CAAC,UAAU,GAAG;YACd,QAAQ,EAAE,QAAQ;SACrB,CAAC;QAEF,IAAK,QAAQ,KAAK,IAAI,EAAG;YAErB,SAAS;YAET,MAAM,QAAQ,GAAG,EAAE,AAAC;YACpB,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,AAAC;YAExB,mBAAmB;YAEnB,MAAM,KAAK,GAAG,IAAI,OAAO,EAAE,AAAC;YAC5B,MAAM,GAAG,GAAG,IAAI,OAAO,EAAE,AAAC;YAE1B,IAAK,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAG;gBAE3B,yBAAyB;gBAEzB,MAAM,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,AAAC;gBAC9C,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,AAAC;gBAC/B,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,AAAC;gBAE7B,IAAK,MAAM,CAAC,MAAM,KAAK,CAAC,EAEpB,MAAM,GAAG;oBAAE;wBAAE,KAAK,EAAE,CAAC;wBAAE,KAAK,EAAE,OAAO,CAAC,KAAK;wBAAE,aAAa,EAAE,CAAC;qBAAE;iBAAE,CAAC;gBAItE,qEAAqE;gBAErE,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAG,CAAC,CAAG;oBAEhD,MAAM,KAAK,GAAG,MAAM,CAAE,CAAC,CAAE,AAAC;oBAE1B,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,AAAC;oBAC/B,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,AAAC;oBAE/B,IAAM,IAAI,IAAC,GAAG,UAAU,EAAE,CAAC,GAAK,UAAU,GAAG,UAAU,AAAE,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,CAAC,CAEpE,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,CAAG;wBAE3B,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAE,IAAC,GAAG,CAAC,CAAE,AAAC;wBACrC,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAE,IAAC,GAAG,AAAE,CAAA,CAAC,GAAG,CAAC,CAAA,GAAK,CAAC,CAAE,AAAC;wBAEjD,KAAK,CAAC,mBAAmB,CAAE,QAAQ,EAAE,MAAM,CAAE,CAAC;wBAC9C,GAAG,CAAC,mBAAmB,CAAE,QAAQ,EAAE,MAAM,CAAE,CAAC;wBAE5C,IAAK,YAAY,CAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAE,KAAK,IAAI,EAAG;4BAE9C,QAAQ,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE,CAAC;4BAC3C,QAAQ,CAAC,IAAI,CAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAE,CAAC;yBAExC;qBAEJ;iBAIR;aAEJ,MAAM;gBAEH,6BAA6B;gBAE7B,MAAM,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,QAAQ,AAAC;gBAE9C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAK,QAAQ,CAAC,KAAK,GAAG,CAAC,AAAE,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAEpD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG,CAAG;oBAE3B,uEAAuE;oBACvE,qEAAqE;oBAErE,MAAM,MAAM,GAAG,CAAC,GAAG,IAAC,GAAG,CAAC,AAAC;oBACzB,MAAM,MAAM,GAAG,CAAC,GAAG,IAAC,GAAK,AAAE,CAAA,CAAC,GAAG,CAAC,CAAA,GAAK,CAAC,AAAE,AAAC;oBAEzC,KAAK,CAAC,mBAAmB,CAAE,QAAQ,EAAE,MAAM,CAAE,CAAC;oBAC9C,GAAG,CAAC,mBAAmB,CAAE,QAAQ,EAAE,MAAM,CAAE,CAAC;oBAE5C,IAAK,YAAY,CAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAE,KAAK,IAAI,EAAG;wBAE9C,QAAQ,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE,CAAC;wBAC3C,QAAQ,CAAC,IAAI,CAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAE,CAAC;qBAExC;iBAEJ;aAIR;YAED,iBAAiB;YAEjB,IAAI,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;SAE9E;KAEJ;CAEJ;AAED,SAAS,YAAY,CAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAG;IAEvC,MAAM,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,AAAC;IAC5E,MAAM,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,AAAC,EAAC,kBAAkB;IAE/F,IAAK,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,KAAK,IAAI,IAAI,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,KAAK,IAAI,EAE3D,OAAO,KAAK,CAAC;SAEV;QAEH,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QACnB,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QACnB,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,IAAI,UAAU,GAAG,aAAa,CAAA,MAAM,CAAC,MAAM,CAAC;IACxC,SAAS,EAAE,IAAI;IACf,WAAW,EAAE,WAAW;IACxB,iBAAiB,EAAE,WAAW;IAC9B,eAAe,EAAE,eAAe;IAChC,qBAAqB,EAAE,eAAe;IACtC,cAAc,EAAE,cAAc;IAC9B,oBAAoB,EAAE,cAAc;IACpC,YAAY,EAAE,YAAY;IAC1B,kBAAkB,EAAE,YAAY;IAChC,gBAAgB,EAAE,gBAAgB;IAClC,sBAAsB,EAAE,gBAAgB;IACxC,oBAAoB,EAAE,oBAAoB;IAC1C,0BAA0B,EAAE,oBAAoB;IAChD,aAAa,EAAE,aAAa;IAC5B,eAAe,EAAE,eAAe;IAChC,qBAAqB,EAAE,eAAe;IACtC,mBAAmB,EAAE,mBAAmB;IACxC,yBAAyB,EAAE,mBAAmB;IAC9C,aAAa,EAAE,aAAa;IAC5B,mBAAmB,EAAE,aAAa;IAClC,kBAAkB,EAAE,kBAAkB;IACtC,wBAAwB,EAAE,kBAAkB;IAC5C,aAAa,EAAE,aAAa;IAC5B,mBAAmB,EAAE,aAAa;IAClC,kBAAkB,EAAE,kBAAkB;IACtC,wBAAwB,EAAE,kBAAkB;IAC5C,YAAY,EAAE,YAAY;IAC1B,kBAAkB,EAAE,YAAY;IAChC,aAAa,EAAE,aAAa;IAC5B,mBAAmB,EAAE,aAAa;IAClC,cAAc,EAAE,cAAc;IAC9B,oBAAoB,EAAE,cAAc;IACpC,mBAAmB,EAAE,mBAAmB;IACxC,yBAAyB,EAAE,mBAAmB;IAC9C,aAAa,EAAE,aAAa;IAC5B,mBAAmB,EAAE,aAAa;IAClC,iBAAiB,EAAE,iBAAiB;IACpC,uBAAuB,EAAE,iBAAiB;IAC1C,YAAY,EAAE,YAAY;IAC1B,kBAAkB,EAAE,YAAY;IAChC,iBAAiB,EAAE,iBAAiB;CACvC,CAAC,AAAC;AAEH,MAAM,cAAc,SAAS,QAAQ;IAEjC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;QAE7B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAE,CAAQ,CAAE,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,cAAc,CAAC,SAAS,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAEjD,MAAM,iBAAiB,SAAS,cAAc;IAE1C,YAAa,UAAU,CAAG;QAEtB,KAAK,CAAE,UAAU,CAAE,CAAC;QAEpB,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;KAEnC;CAEJ;AAED,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAEvD,MAAM,oBAAoB,SAAS,QAAQ;IAEvC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,OAAO,GAAG;YAAE,UAAU,EAAE,EAAE;SAAE,CAAC;QAElC,IAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;QAEnC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC,UAAU;QAC9C,IAAI,CAAC,SAAS,GAAG,CAAG,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,CAAG,CAAC;QAErB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,CAAG,CAAC;QAE7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,CAAG,CAAC;QAE1B,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAE,CAAQ,CAAE,CAAC;QACtC,IAAI,CAAC,iBAAiB,GAAG,CAAG,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,qBAAqB,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEvC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,eAAe,GAAG,CAAG,CAAC;QAE3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;QAEjC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,OAAO,GAAG;YAAE,UAAU,EAAE,EAAE;SAAE,CAAC;QAElC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QAEtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAE5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,MAAM,CAAC,QAAQ,CAAE,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;QAE5C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAEhD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QAExC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QAExC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAE9C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QACpD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,oBAAoB,CAAC,SAAS,CAAC,sBAAsB,GAAG,IAAI,CAAC;AAE7D,MAAM,oBAAoB,SAAS,oBAAoB;IAEnD,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,OAAO,GAAG;YAEX,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;SAEjB,CAAC;QAEF,IAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;QAEnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,CAAG,CAAC;QAC9B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,oBAAoB,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAChD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEf,MAAM,CAAC,cAAc,CAAE,IAAI,EAAE,cAAc,EAAE;YACzC,GAAG,EAAE,WAAY;gBAEb,OAAS,KAAK,CAAE,GAAG,GAAK,CAAA,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA,GAAO,CAAA,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA,AAAE,EAAE,CAAC,EAAE,CAAC,CAAE,CAAG;aAEvE;YACD,GAAG,EAAE,SAAW,YAAY,EAAG;gBAE3B,IAAI,CAAC,GAAG,GAAG,AAAE,CAAA,CAAC,GAAG,GAAG,GAAG,YAAY,CAAA,GAAO,CAAA,CAAC,GAAG,GAAG,GAAG,YAAY,CAAA,AAAE,CAAC;aAEtE;SACJ,CAAE,CAAC;QAEJ,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAE,CAAQ,CAAE,CAAC;QACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,CAAG,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAE9B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,mBAAmB,GAAG,CAAG,CAAC;QAC/B,IAAI,CAAC,gBAAgB,GAAG,IAAI,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAE7C,IAAI,CAAC,iBAAiB,GAAG,CAAG,CAAC;QAC7B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC1C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,IAAI,CAAC,MAAM,GAAG,CAAG,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAEvB,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAED,IAAI,KAAK,GAAG;QAER,OAAO,IAAI,CAAC,MAAM,CAAC;KAEtB;IAED,IAAI,KAAK,CAAE,KAAK,EAAG;QAEf,IAAK,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,EAE9B,IAAI,CAAC,OAAO,EAAG,CAAC;QAIpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KAEvB;IAED,IAAI,SAAS,GAAG;QAEZ,OAAO,IAAI,CAAC,UAAU,CAAC;KAE1B;IAED,IAAI,SAAS,CAAE,KAAK,EAAG;QAEnB,IAAK,IAAI,CAAC,UAAU,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,EAElC,IAAI,CAAC,OAAO,EAAG,CAAC;QAIpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KAE3B;IAED,IAAI,YAAY,GAAG;QAEf,OAAO,IAAI,CAAC,aAAa,CAAC;KAE7B;IAED,IAAI,YAAY,CAAE,KAAK,EAAG;QAEtB,IAAK,IAAI,CAAC,aAAa,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,EAErC,IAAI,CAAC,OAAO,EAAG,CAAC;QAIpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;KAE9B;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,OAAO,GAAG;YAEX,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;SAEjB,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QACpD,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC,qBAAqB,CAAC;QAC1D,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QACpD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAE,MAAM,CAAC,oBAAoB,CAAE,CAAC;QAE9D,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QAEtB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,MAAM,CAAC,UAAU,CAAE,CAAC;QAC1C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAE9C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,CAAC;QACtD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAE,MAAM,CAAC,gBAAgB,CAAE,CAAC;QAEtD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAClD,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAE,MAAM,CAAC,aAAa,CAAE,CAAC;QAChD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAEhD,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,oBAAoB,CAAC,SAAS,CAAC,sBAAsB,GAAG,IAAI,CAAC;AAE7D,MAAM,iBAAiB,SAAS,QAAQ;IAEpC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;QAEhC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC,UAAU;QAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAE,OAAQ,CAAE,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAEpB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,CAAG,CAAC;QAE7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,CAAG,CAAC;QAE1B,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAE,CAAQ,CAAE,CAAC;QACtC,IAAI,CAAC,iBAAiB,GAAG,CAAG,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,qBAAqB,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEvC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;QAEjC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,MAAM,CAAC,QAAQ,CAAE,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QAEtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAE5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,MAAM,CAAC,QAAQ,CAAE,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;QAE5C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAEhD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAE9C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QACpD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAEvD,MAAM,gBAAgB,SAAS,QAAQ;IAEnC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,OAAO,GAAG;YAAE,MAAM,EAAE,EAAE;SAAE,CAAC;QAE9B,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;QAE/B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAE,QAAQ,CAAE,CAAC;QAEnC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,CAAG,CAAC;QAE7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,CAAG,CAAC;QAE1B,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAE,CAAQ,CAAE,CAAC;QACtC,IAAI,CAAC,iBAAiB,GAAG,CAAG,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,qBAAqB,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEvC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;QAEjC,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAEhC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAE5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,MAAM,CAAC,QAAQ,CAAE,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;QAE5C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAEhD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QACpD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAErD,MAAM,kBAAkB,SAAS,QAAQ;IAErC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;QAEjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,qBAAqB,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEvC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAE5B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QAEjB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;QAE5C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAEhD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QAEpD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,kBAAkB,CAAC,SAAS,CAAC,oBAAoB,GAAG,IAAI,CAAC;AAEzD,MAAM,mBAAmB,SAAS,QAAQ;IAEtC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;QAElC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC,UAAU;QAE9C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,CAAG,CAAC;QAE7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,CAAG,CAAC;QAE1B,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAE,CAAQ,CAAE,CAAC;QACtC,IAAI,CAAC,iBAAiB,GAAG,CAAG,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;QAEjC,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAEhC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QAEtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAE5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,MAAM,CAAC,QAAQ,CAAE,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAE9C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QACpD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAElD,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,mBAAmB,CAAC,SAAS,CAAC,qBAAqB,GAAG,IAAI,CAAC;AAE3D,MAAM,kBAAkB,SAAS,QAAQ;IAErC,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,OAAO,GAAG;YAAE,QAAQ,EAAE,EAAE;SAAE,CAAC;QAEhC,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;QAEjC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC,UAAU;QAE9C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,qBAAqB,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEvC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAGD,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,OAAO,GAAG;YAAE,QAAQ,EAAE,EAAE;SAAE,CAAC;QAEhC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAEhC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAE5B,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QAEtB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;QAE5C,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAEhD,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAEhC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,kBAAkB,CAAC,SAAS,CAAC,oBAAoB,GAAG,IAAI,CAAC;AAEzD,MAAM,kBAAkB,SAAS,iBAAiB;IAE9C,YAAa,UAAU,CAAG;QAEtB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;QAEjC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QAEjB,IAAI,CAAC,SAAS,CAAE,UAAU,CAAE,CAAC;KAEhC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAE9B,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,kBAAkB,CAAC,SAAS,CAAC,oBAAoB,GAAG,IAAI,CAAC;AAEzD,MAAM,WAAW,GAAG;IAChB,cAAc;IACd,cAAc;IACd,iBAAiB;IACjB,cAAc;IACd,cAAc;IACd,oBAAoB;IACpB,oBAAoB;IACpB,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;IAClB,mBAAmB;IACnB,iBAAiB;IACjB,oBAAoB;IACpB,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;IACjB,QAAQ;CACX,AAAC;AAEF,QAAQ,CAAC,QAAQ,GAAG,SAAW,IAAI,EAAG;IAElC,OAAO,IAAI,WAAW,CAAE,IAAI,CAAE,EAAE,CAAC;CAEpC,CAAC;AAEF,MAAM,cAAc,GAAG;IAEnB,gEAAgE;IAChE,UAAU,EAAE,SAAW,KAAK,EAAE,IAAI,EAAE,EAAE,EAAG;QAErC,IAAK,cAAc,CAAC,YAAY,CAAE,KAAK,CAAE,EAErC,kEAAkE;QAClE,mEAAmE;QACnE,OAAO,IAAI,KAAK,CAAC,WAAW,CAAE,KAAK,CAAC,QAAQ,CAAE,IAAI,EAAE,EAAE,KAAK,SAAS,GAAG,EAAE,GAAG,KAAK,CAAC,MAAM,CAAE,CAAE,CAAC;QAIjG,OAAO,KAAK,CAAC,KAAK,CAAE,IAAI,EAAE,EAAE,CAAE,CAAC;KAElC;IAED,uCAAuC;IACvC,YAAY,EAAE,SAAW,KAAK,EAAE,IAAI,EAAE,UAAU,EAAG;QAE/C,IAAK,CAAE,KAAK,IACR,CAAE,UAAU,IAAI,KAAK,CAAC,WAAW,KAAK,IAAI,EAAG,OAAO,KAAK,CAAC;QAE9D,IAAK,OAAO,IAAI,CAAC,iBAAiB,KAAK,QAAQ,EAE3C,OAAO,IAAI,IAAI,CAAE,KAAK,CAAE,CAAC,CAAC,qBAAqB;QAInD,OAAO,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,CAAC,eAAe;KAE9D;IAED,YAAY,EAAE,SAAW,MAAM,EAAG;QAE9B,OAAO,WAAW,CAAC,MAAM,CAAE,MAAM,CAAE,IAC/B,CAAI,CAAA,MAAM,YAAY,QAAQ,CAAA,AAAE,CAAC;KAExC;IAED,2DAA2D;IAC3D,gBAAgB,EAAE,SAAW,KAAK,EAAG;QAEjC,SAAS,WAAW,CAAE,IAAC,EAAE,CAAC,EAAG;YAEzB,OAAO,KAAK,CAAE,IAAC,CAAE,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;SAElC;QAED,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,AAAC;QACvB,MAAM,MAAM,GAAG,IAAI,KAAK,CAAE,CAAC,CAAE,AAAC;QAC9B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG,MAAM,CAAE,IAAC,CAAE,GAAG,IAAC,CAAC;QAEjD,MAAM,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;QAE3B,OAAO,MAAM,CAAC;KAEjB;IAED,wEAAwE;IACxE,WAAW,EAAE,SAAW,MAAM,EAAE,MAAM,EAAE,KAAK,EAAG;QAE5C,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,AAAC;QAC9B,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,WAAW,CAAE,OAAO,CAAE,AAAC;QAEjD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,KAAK,OAAO,EAAE,EAAG,IAAC,CAAG;YAE1D,MAAM,SAAS,GAAG,KAAK,CAAE,IAAC,CAAE,GAAG,MAAM,AAAC;YAEtC,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC,CAE/B,MAAM,CAAE,SAAS,EAAG,CAAE,GAAG,MAAM,CAAE,SAAS,GAAG,CAAC,CAAE,CAAC;SAIxD;QAED,OAAO,MAAM,CAAC;KAEjB;IAED,4CAA4C;IAC5C,WAAW,EAAE,SAAW,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,iBAAiB,EAAG;QAEjE,IAAI,IAAC,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAE,CAAC,CAAE,AAAC;QAE/B,MAAQ,GAAG,KAAK,SAAS,IAAI,GAAG,CAAE,iBAAiB,CAAE,KAAK,SAAS,CAE/D,GAAG,GAAG,QAAQ,CAAE,IAAC,EAAG,CAAE,CAAC;QAI3B,IAAK,GAAG,KAAK,SAAS,EAAG,OAAO,CAAC,UAAU;QAE3C,IAAI,KAAK,GAAG,GAAG,CAAE,iBAAiB,CAAE,AAAC;QACrC,IAAK,KAAK,KAAK,SAAS,EAAG,OAAO,CAAC,UAAU;QAE7C,IAAK,KAAK,CAAC,OAAO,CAAE,KAAK,CAAE,EAEvB,GAAG;YAEC,KAAK,GAAG,GAAG,CAAE,iBAAiB,CAAE,CAAC;YAEjC,IAAK,KAAK,KAAK,SAAS,EAAG;gBAEvB,KAAK,CAAC,IAAI,CAAE,GAAG,CAAC,IAAI,CAAE,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC,CAAC,oBAAoB;aAE3D;YAED,GAAG,GAAG,QAAQ,CAAE,IAAC,EAAG,CAAE,CAAC;SAE1B,OAAS,GAAG,KAAK,SAAS,CAAG;aAE3B,IAAK,KAAK,CAAC,OAAO,KAAK,SAAS,EAEnC,2BAA2B;QAE3B,GAAG;YAEC,KAAK,GAAG,GAAG,CAAE,iBAAiB,CAAE,CAAC;YAEjC,IAAK,KAAK,KAAK,SAAS,EAAG;gBAEvB,KAAK,CAAC,IAAI,CAAE,GAAG,CAAC,IAAI,CAAE,CAAC;gBACvB,KAAK,CAAC,OAAO,CAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAE,CAAC;aAE1C;YAED,GAAG,GAAG,QAAQ,CAAE,IAAC,EAAG,CAAE,CAAC;SAE1B,OAAS,GAAG,KAAK,SAAS,CAAG;aAI9B,uBAAuB;QAEvB,GAAG;YAEC,KAAK,GAAG,GAAG,CAAE,iBAAiB,CAAE,CAAC;YAEjC,IAAK,KAAK,KAAK,SAAS,EAAG;gBAEvB,KAAK,CAAC,IAAI,CAAE,GAAG,CAAC,IAAI,CAAE,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;aAExB;YAED,GAAG,GAAG,QAAQ,CAAE,IAAC,EAAG,CAAE,CAAC;SAE1B,OAAS,GAAG,KAAK,SAAS,CAAG;KAIrC;IAED,OAAO,EAAE,SAAW,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,GAAG,EAAE,EAAG;QAEnE,MAAM,IAAI,GAAG,UAAU,CAAC,KAAK,EAAE,AAAC;QAEhC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAG,IAAC,CAAG;YAE5C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,AAAC;YAC/B,MAAM,SAAS,GAAG,KAAK,CAAC,YAAY,EAAE,AAAC;YAEvC,MAAM,KAAK,GAAG,EAAE,AAAC;YACjB,MAAM,MAAM,GAAG,EAAE,AAAC;YAElB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,EAAG,CAAC,CAAG;gBAE5C,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,AAAC;gBAErC,IAAK,KAAK,GAAG,UAAU,IAAI,KAAK,IAAI,QAAQ,EAAG,SAAS;gBAExD,KAAK,CAAC,IAAI,CAAE,KAAK,CAAC,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC;gBAE/B,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,EAAG,CAAC,CAEhC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,MAAM,CAAE,CAAC,GAAG,SAAS,GAAG,CAAC,CAAE,CAAE,CAAC;aAIxD;YAED,IAAK,KAAK,CAAC,MAAM,KAAK,CAAC,EAAG,SAAS;YAEnC,KAAK,CAAC,KAAK,GAAG,cAAc,CAAC,YAAY,CAAE,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,WAAW,CAAE,CAAC;YAC5E,KAAK,CAAC,MAAM,GAAG,cAAc,CAAC,YAAY,CAAE,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,WAAW,CAAE,CAAC;YAE/E,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;SAExB;QAED,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,kEAAkE;QAElE,IAAI,YAAY,GAAG,QAAQ,AAAC;QAE5B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAG,IAAC,CAEzC,IAAK,YAAY,GAAG,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,CAAC,KAAK,CAAE,CAAC,CAAE,EAE3C,YAAY,GAAG,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;QAMnD,gDAAgD;QAEhD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAG,IAAC,CAEzC,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,CAAC,KAAK,CAAE,EAAG,GAAG,YAAY,CAAE,CAAC;QAIjD,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,EAAE,SAAW,UAAU,EAAE,cAAc,GAAG,CAAC,EAAE,aAAa,GAAG,UAAU,EAAE,GAAG,GAAG,EAAE,EAAG;QAEhG,IAAK,GAAG,IAAI,CAAC,EAAG,GAAG,GAAG,EAAE,CAAC;QAEzB,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,CAAC,MAAM,AAAC;QAC9C,MAAM,aAAa,GAAG,cAAc,GAAG,GAAG,AAAC;QAE3C,yEAAyE;QACzE,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,SAAS,EAAE,EAAG,IAAC,CAAG;YAEnC,MAAM,cAAc,GAAG,aAAa,CAAC,MAAM,CAAE,IAAC,CAAE,AAAC;YACjD,MAAM,kBAAkB,GAAG,cAAc,CAAC,aAAa,AAAC;YAExD,sCAAsC;YACtC,IAAK,kBAAkB,KAAK,MAAM,IAAI,kBAAkB,KAAK,QAAQ,EAAG,SAAS;YAEjF,oFAAoF;YACpF,MAAM,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAE,SAAW,KAAK,EAAG;gBAE3D,OAAO,KAAK,CAAC,IAAI,KAAK,cAAc,CAAC,IAAI,IAClC,KAAK,CAAC,aAAa,KAAK,kBAAkB,CAAC;aAErD,CAAE,AAAC;YAEJ,IAAK,WAAW,KAAK,SAAS,EAAG,SAAS;YAE1C,IAAI,eAAe,GAAG,CAAC,AAAC;YACxB,MAAM,kBAAkB,GAAG,cAAc,CAAC,YAAY,EAAE,AAAC;YAEzD,IAAK,cAAc,CAAC,iBAAiB,CAAC,yCAAyC,EAE3E,eAAe,GAAG,kBAAkB,GAAG,CAAC,CAAC;YAI7C,IAAI,YAAY,GAAG,CAAC,AAAC;YACrB,MAAM,eAAe,GAAG,WAAW,CAAC,YAAY,EAAE,AAAC;YAEnD,IAAK,WAAW,CAAC,iBAAiB,CAAC,yCAAyC,EAExE,YAAY,GAAG,eAAe,GAAG,CAAC,CAAC;YAIvC,MAAM,SAAS,GAAG,cAAc,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,AAAC;YAClD,IAAI,cAAc,AAAC;YAEnB,8CAA8C;YAC9C,IAAK,aAAa,IAAI,cAAc,CAAC,KAAK,CAAE,CAAC,CAAE,EAAG;gBAE9C,qFAAqF;gBACrF,MAAM,UAAU,GAAG,eAAe,AAAC;gBACnC,MAAM,QAAQ,GAAG,kBAAkB,GAAG,eAAe,AAAC;gBACtD,cAAc,GAAG,cAAc,CAAC,UAAU,CAAE,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAE,CAAC;aAE7F,MAAM,IAAK,aAAa,IAAI,cAAc,CAAC,KAAK,CAAE,SAAS,CAAE,EAAG;gBAE7D,4EAA4E;gBAC5E,MAAM,UAAU,GAAG,SAAS,GAAG,kBAAkB,GAAG,eAAe,AAAC;gBACpE,MAAM,QAAQ,GAAG,UAAU,GAAG,kBAAkB,GAAG,eAAe,AAAC;gBACnE,cAAc,GAAG,cAAc,CAAC,UAAU,CAAE,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAE,CAAC;aAE7F,MAAM;gBAEH,qCAAqC;gBACrC,MAAM,WAAW,GAAG,cAAc,CAAC,iBAAiB,EAAE,AAAC;gBACvD,MAAM,UAAU,GAAG,eAAe,AAAC;gBACnC,MAAM,QAAQ,GAAG,kBAAkB,GAAG,eAAe,AAAC;gBACtD,WAAW,CAAC,QAAQ,CAAE,aAAa,CAAE,CAAC;gBACtC,cAAc,GAAG,cAAc,CAAC,UAAU,CAAE,WAAW,CAAC,YAAY,EAAE,UAAU,EAAE,QAAQ,CAAE,CAAC;aAEhG;YAED,2BAA2B;YAC3B,IAAK,kBAAkB,KAAK,YAAY,EAAG;gBAEvC,MAAM,aAAa,GAAG,IAAI,UAAU,EAAE,CAAC,SAAS,CAAE,cAAc,CAAE,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,AAAC;gBAC3F,aAAa,CAAC,OAAO,CAAE,cAAc,CAAE,CAAC;aAE3C;YAED,4DAA4D;YAE5D,MAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,AAAC;YAC1C,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAG,CAAC,CAAG;gBAElC,MAAM,UAAU,GAAG,CAAC,GAAG,eAAe,GAAG,YAAY,AAAC;gBAEtD,IAAK,kBAAkB,KAAK,YAAY,EAEpC,oDAAoD;gBACpD,UAAU,CAAC,uBAAuB,CAC9B,WAAW,CAAC,MAAM,EAClB,UAAU,EACV,cAAc,EACd,CAAC,EACD,WAAW,CAAC,MAAM,EAClB,UAAU,CACb,CAAC;qBAEC;oBAEH,MAAM,QAAQ,GAAG,eAAe,GAAG,YAAY,GAAG,CAAC,AAAC;oBAEpD,wDAAwD;oBACxD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAG,CAAC,CAE/B,WAAW,CAAC,MAAM,CAAE,UAAU,GAAG,CAAC,CAAE,IAAI,cAAc,CAAE,CAAC,CAAE,CAAC;iBAInE;aAEJ;SAEJ;QAED,UAAU,CAAC,SAAS,GAAG,0BAA0B,CAAC;QAElD,OAAO,UAAU,CAAC;KAErB;CAEJ,AAAC;AAEF;;;;;;;;;;;;;;;;;;;IAmBG,CAEH,MAAM,WAAW;IAEb,YAAa,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAG;QAEtE,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QAEtB,IAAI,CAAC,YAAY,GAAG,YAAY,KAAK,SAAS,GAC1C,YAAY,GAAG,IAAI,YAAY,CAAC,WAAW,CAAE,UAAU,CAAE,CAAC;QAC9D,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;QAE5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;KAE9B;IAED,QAAQ,CAAE,CAAC,EAAG;QAEV,MAAM,EAAE,GAAG,IAAI,CAAC,kBAAkB,AAAC;QACnC,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,EACtB,EAAE,GAAG,EAAE,CAAE,EAAE,CAAE,EACb,EAAE,GAAG,EAAE,CAAE,EAAE,GAAG,CAAC,CAAE,AAAC;QAEtB,iBAAiB,EAAE;YAEf,IAAI,EAAE;gBAEF,IAAI,KAAK,AAAC;gBAEV,WAAW,EAAE;oBAET,mDAAmD;oBACnD,gBAAgB;oBAChB,GAAG;oBACH,4CAA4C;oBAC5C,YAAY,EAAE,IAAK,CAAI,CAAA,CAAC,GAAG,EAAE,CAAA,AAAE,EAAG;wBAE9B,IAAM,IAAI,QAAQ,GAAG,EAAE,GAAG,CAAC,GAAM;4BAE7B,IAAK,EAAE,KAAK,SAAS,EAAG;gCAEpB,IAAK,CAAC,GAAG,EAAE,EAAG,MAAM,YAAY,CAAC;gCAEjC,YAAY;gCAEZ,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;gCACf,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gCACvB,OAAO,IAAI,CAAC,SAAS,CAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAE,CAAC;6BAE1C;4BAED,IAAK,EAAE,KAAK,QAAQ,EAAG,MAAM,CAAC,YAAY;4BAE1C,EAAE,GAAG,EAAE,CAAC;4BACR,EAAE,GAAG,EAAE,CAAE,EAAG,EAAE,CAAE,CAAC;4BAEjB,IAAK,CAAC,GAAG,EAAE,EAGP,MAAM,IAAI,CAAC;yBAIlB;wBAED,uDAAuD;wBACvD,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC;wBAClB,MAAM,WAAW,CAAC;qBAErB;oBAED,gBAAgB;oBAChB,2CAA2C;oBAC3C,IAAK,CAAI,CAAA,CAAC,IAAI,EAAE,CAAA,AAAE,EAAG;wBAEjB,WAAW;wBAEX,MAAM,QAAQ,GAAG,EAAE,CAAE,CAAC,CAAE,AAAC;wBAEzB,IAAK,CAAC,GAAG,QAAQ,EAAG;4BAEhB,EAAE,GAAG,CAAC,CAAC,CAAC,sCAAsC;4BAC9C,EAAE,GAAG,QAAQ,CAAC;yBAEjB;wBAED,sBAAsB;wBAEtB,IAAM,IAAI,QAAQ,GAAG,EAAE,GAAG,CAAC,GAAM;4BAE7B,IAAK,EAAE,KAAK,SAAS,EAAG;gCAEpB,eAAe;gCAEf,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;gCACtB,OAAO,IAAI,CAAC,YAAY,CAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAE,CAAC;6BAExC;4BAED,IAAK,EAAE,KAAK,QAAQ,EAAG,MAAM,CAAC,YAAY;4BAE1C,EAAE,GAAG,EAAE,CAAC;4BACR,EAAE,GAAG,EAAE,CAAE,EAAG,EAAE,GAAG,CAAC,CAAE,CAAC;4BAErB,IAAK,CAAC,IAAI,EAAE,EAGR,MAAM,IAAI,CAAC;yBAIlB;wBAED,sDAAsD;wBACtD,KAAK,GAAG,EAAE,CAAC;wBACX,EAAE,GAAG,CAAC,CAAC;wBACP,MAAM,WAAW,CAAC;qBAErB;oBAID,MAAM,iBAAiB,CAAC;iBAE3B,CAAC,cAAc;gBAEhB,gBAAgB;gBAEhB,MAAQ,EAAE,GAAG,KAAK,CAAG;oBAEjB,MAAM,GAAG,GAAG,AAAE,EAAE,GAAG,KAAK,KAAO,CAAC,AAAC;oBAEjC,IAAK,CAAC,GAAG,EAAE,CAAE,GAAG,CAAE,EAEd,KAAK,GAAG,GAAG,CAAC;yBAIZ,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;iBAIpB;gBAED,EAAE,GAAG,EAAE,CAAE,EAAE,CAAE,CAAC;gBACd,EAAE,GAAG,EAAE,CAAE,EAAE,GAAG,CAAC,CAAE,CAAC;gBAElB,8BAA8B;gBAE9B,IAAK,EAAE,KAAK,SAAS,EAAG;oBAEpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;oBACtB,OAAO,IAAI,CAAC,YAAY,CAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAE,CAAC;iBAExC;gBAED,IAAK,EAAE,KAAK,SAAS,EAAG;oBAEpB,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;oBACf,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;oBACvB,OAAO,IAAI,CAAC,SAAS,CAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAE,CAAC;iBAE1C;aAEJ,CAAC,OAAO;YAET,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YAEvB,IAAI,CAAC,gBAAgB,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC;SAEvC,CAAC,oBAAoB;QAEtB,OAAO,IAAI,CAAC,YAAY,CAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAE,CAAC;KAE7C;IAED,YAAY,GAAG;QAEX,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC;KAEjD;IAED,gBAAgB,CAAE,KAAK,EAAG;QAEtB,6CAA6C;QAE7C,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAC5B,MAAM,GAAG,IAAI,CAAC,YAAY,EAC1B,MAAM,GAAG,IAAI,CAAC,SAAS,EACvB,MAAM,GAAG,KAAK,GAAG,MAAM,AAAC;QAE5B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,MAAM,EAAE,EAAG,IAAC,CAE/B,MAAM,CAAE,IAAC,CAAE,GAAG,MAAM,CAAE,MAAM,GAAG,IAAC,CAAE,CAAC;QAIvC,OAAO,MAAM,CAAC;KAEjB;IAED,wCAAwC;IAExC,YAAY,GAAwB;QAEhC,MAAM,IAAI,KAAK,CAAE,yBAAyB,CAAE,CAAC;IAC7C,iDAAiD;KAEpD;IAED,gBAAgB,GAAqB;IAEjC,QAAQ;KAEX;CAEJ;AAED,oBAAoB;AAEpB,WAAW,CAAC,SAAS,CAAC,YAAY,GAAG,WAAW,CAAC,SAAS,CAAC,gBAAgB,CAAC;AAC5E,WAAW,CAAC,SAAS,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC,gBAAgB,CAAC;AAEzE;;;;;;IAMG,CAEH,MAAM,gBAAgB,SAAS,WAAW;IAEtC,YAAa,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAG;QAEtE,KAAK,CAAE,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAE,CAAC;QAEpE,IAAI,CAAC,WAAW,GAAG,EAAG,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,EAAG,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,EAAG,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,EAAG,CAAC;QAEvB,IAAI,CAAC,gBAAgB,GAAG;YAEpB,WAAW,EAAE,mBAAmB;YAChC,SAAS,EAAE,mBAAmB;SAEjC,CAAC;KAEL;IAED,gBAAgB,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG;QAE3B,MAAM,EAAE,GAAG,IAAI,CAAC,kBAAkB,AAAC;QACnC,IAAI,KAAK,GAAG,EAAE,GAAG,CAAC,EACd,KAAK,GAAG,EAAE,GAAG,CAAC,EAEd,KAAK,GAAG,EAAE,CAAE,KAAK,CAAE,EACnB,KAAK,GAAG,EAAE,CAAE,KAAK,CAAE,AAAC;QAExB,IAAK,KAAK,KAAK,SAAS,EAEpB,OAAS,IAAI,CAAC,YAAY,EAAE,CAAC,WAAW;YAEpC,KAAK,eAAe;gBAEhB,aAAa;gBACb,KAAK,GAAG,EAAE,CAAC;gBACX,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;gBAEpB,MAAM;YAEV,KAAK,gBAAgB;gBAEjB,iCAAiC;gBACjC,KAAK,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;gBACtB,KAAK,GAAG,EAAE,GAAG,EAAE,CAAE,KAAK,CAAE,GAAG,EAAE,CAAE,KAAK,GAAG,CAAC,CAAE,CAAC;gBAE3C,MAAM;YAEV;gBAEI,oCAAoC;gBACpC,KAAK,GAAG,EAAE,CAAC;gBACX,KAAK,GAAG,EAAE,CAAC;SAElB;QAIL,IAAK,KAAK,KAAK,SAAS,EAEpB,OAAS,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS;YAElC,KAAK,eAAe;gBAEhB,aAAa;gBACb,KAAK,GAAG,EAAE,CAAC;gBACX,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;gBAEpB,MAAM;YAEV,KAAK,gBAAgB;gBAEjB,iCAAiC;gBACjC,KAAK,GAAG,CAAC,CAAC;gBACV,KAAK,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC;gBAE/B,MAAM;YAEV;gBAEI,qCAAqC;gBACrC,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC;gBACf,KAAK,GAAG,EAAE,CAAC;SAElB;QAIL,MAAM,MAAM,GAAG,AAAE,CAAA,EAAE,GAAG,EAAE,CAAA,GAAK,GAAG,EAC5B,MAAM,GAAG,IAAI,CAAC,SAAS,AAAC;QAE5B,IAAI,CAAC,WAAW,GAAG,MAAM,GAAK,CAAA,EAAE,GAAG,KAAK,CAAA,AAAE,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,MAAM,GAAK,CAAA,KAAK,GAAG,EAAE,CAAA,AAAE,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,MAAM,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,MAAM,CAAC;KAErC;IAED,YAAY,CAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG;QAE1B,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAC5B,MAAM,GAAG,IAAI,CAAC,YAAY,EAC1B,MAAM,GAAG,IAAI,CAAC,SAAS,EAEvB,EAAE,GAAG,EAAE,GAAG,MAAM,EAAG,EAAE,GAAG,EAAE,GAAG,MAAM,EACnC,EAAE,GAAG,IAAI,CAAC,WAAW,EAAG,EAAE,GAAG,IAAI,CAAC,WAAW,EAC7C,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,EAE5C,CAAC,GAAG,AAAE,CAAA,CAAC,GAAG,EAAE,CAAA,GAAO,CAAA,EAAE,GAAG,EAAE,CAAA,AAAE,EAC5B,EAAE,GAAG,CAAC,GAAG,CAAC,EACV,GAAG,GAAG,EAAE,GAAG,CAAC,AAAC;QAEjB,uBAAuB;QAEvB,MAAM,EAAE,GAAG,CAAE,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,AAAC;QAC7C,MAAM,EAAE,GAAG,AAAE,CAAA,CAAC,GAAG,EAAE,CAAA,GAAK,GAAG,GAAG,AAAE,CAAA,IAAK,GAAG,CAAC,GAAG,EAAE,CAAA,GAAK,EAAE,GAAG,AAAE,CAAA,IAAK,GAAG,EAAE,CAAA,GAAK,CAAC,GAAG,CAAC,AAAC;QAC/E,MAAM,EAAE,GAAG,AAAE,CAAA,EAAG,GAAG,EAAE,CAAA,GAAK,GAAG,GAAG,AAAE,CAAA,GAAG,GAAG,EAAE,CAAA,GAAK,EAAE,GAAG,GAAG,GAAG,CAAC,AAAC;QAC5D,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,AAAC;QAE9B,wBAAwB;QAExB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,MAAM,EAAE,EAAG,IAAC,CAE/B,MAAM,CAAE,IAAC,CAAE,GACH,EAAE,GAAG,MAAM,CAAE,EAAE,GAAG,IAAC,CAAE,GACrB,EAAE,GAAG,MAAM,CAAE,EAAE,GAAG,IAAC,CAAE,GACrB,EAAE,GAAG,MAAM,CAAE,EAAE,GAAG,IAAC,CAAE,GACrB,EAAE,GAAG,MAAM,CAAE,EAAE,GAAG,IAAC,CAAE,CAAC;QAIlC,OAAO,MAAM,CAAC;KAEjB;CAEJ;AAED,MAAM,iBAAiB,SAAS,WAAW;IAEvC,YAAa,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAG;QAEtE,KAAK,CAAE,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAE,CAAC;KAEvE;IAED,YAAY,CAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG;QAE1B,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAC5B,MAAM,GAAG,IAAI,CAAC,YAAY,EAC1B,MAAM,GAAG,IAAI,CAAC,SAAS,EAEvB,OAAO,GAAG,EAAE,GAAG,MAAM,EACrB,OAAO,GAAG,OAAO,GAAG,MAAM,EAE1B,OAAO,GAAG,AAAE,CAAA,CAAC,GAAG,EAAE,CAAA,GAAO,CAAA,EAAE,GAAG,EAAE,CAAA,AAAE,EAClC,OAAO,GAAG,CAAC,GAAG,OAAO,AAAC;QAE1B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,MAAM,EAAE,EAAG,IAAC,CAE/B,MAAM,CAAE,IAAC,CAAE,GACH,MAAM,CAAE,OAAO,GAAG,IAAC,CAAE,GAAG,OAAO,GAC/B,MAAM,CAAE,OAAO,GAAG,IAAC,CAAE,GAAG,OAAO,CAAC;QAI5C,OAAO,MAAM,CAAC;KAEjB;CAEJ;AAED;;;;IAIG,CAEH,MAAM,mBAAmB,SAAS,WAAW;IAEzC,YAAa,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAG;QAEtE,KAAK,CAAE,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAE,CAAC;KAEvE;IAED,YAAY,CAAE,EAAE,CAAC,gBAAgB,CAAjB,EAAoB;QAEhC,OAAO,IAAI,CAAC,gBAAgB,CAAE,EAAE,GAAG,CAAC,CAAE,CAAC;KAE1C;CAEJ;AAED,MAAM,aAAa;IAEf,YAAa,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,CAAG;QAE9C,IAAK,IAAI,KAAK,SAAS,EAAG,MAAM,IAAI,KAAK,CAAE,8CAA8C,CAAE,CAAC;QAC5F,IAAK,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAG,MAAM,IAAI,KAAK,CAAE,mDAAmD,GAAG,IAAI,CAAE,CAAC;QAE/H,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,YAAY,CAAE,KAAK,EAAE,IAAI,CAAC,cAAc,CAAE,CAAC;QACvE,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,YAAY,CAAE,MAAM,EAAE,IAAI,CAAC,eAAe,CAAE,CAAC;QAE1E,IAAI,CAAC,gBAAgB,CAAE,aAAa,IAAI,IAAI,CAAC,oBAAoB,CAAE,CAAC;KAEvE;IAED,sEAAsE;IACtE,wCAAwC;IAExC,OAAO,MAAM,CAAE,KAAK,EAAG;QAEnB,MAAM,SAAS,GAAG,KAAK,CAAC,WAAW,AAAC;QAEpC,IAAI,IAAI,AAAC;QAET,oDAAoD;QACpD,IAAK,SAAS,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,EAEjC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAE,KAAK,CAAE,CAAC;aAE9B;YAEH,yDAAyD;YACzD,IAAI,GAAG;gBAEH,MAAM,EAAE,KAAK,CAAC,IAAI;gBAClB,OAAO,EAAE,cAAc,CAAC,YAAY,CAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAE;gBAC1D,QAAQ,EAAE,cAAc,CAAC,YAAY,CAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAE;aAE/D,CAAC;YAEF,MAAM,aAAa,GAAG,KAAK,CAAC,gBAAgB,EAAE,AAAC;YAE/C,IAAK,aAAa,KAAK,KAAK,CAAC,oBAAoB,EAE7C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SAI1C;QAED,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,YAAY;QAE7C,OAAO,IAAI,CAAC;KAEf;IAED,gCAAgC,CAAE,MAAM,EAAG;QAEvC,OAAO,IAAI,mBAAmB,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,MAAM,CAAE,CAAC;KAE1F;IAED,8BAA8B,CAAE,MAAM,EAAG;QAErC,OAAO,IAAI,iBAAiB,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,MAAM,CAAE,CAAC;KAExF;IAED,8BAA8B,CAAE,MAAM,EAAG;QAErC,OAAO,IAAI,gBAAgB,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,MAAM,CAAE,CAAC;KAEvF;IAED,gBAAgB,CAAE,aAAa,EAAG;QAE9B,IAAI,aAAa,AAAC;QAElB,OAAS,aAAa;YAElB,KAAK,mBAAmB;gBAEpB,aAAa,GAAG,IAAI,CAAC,gCAAgC,CAAC;gBAEtD,MAAM;YAEV,KAAK,iBAAiB;gBAElB,aAAa,GAAG,IAAI,CAAC,8BAA8B,CAAC;gBAEpD,MAAM;YAEV,KAAK,iBAAiB;gBAElB,aAAa,GAAG,IAAI,CAAC,8BAA8B,CAAC;gBAEpD,MAAM;SAEb;QAED,IAAK,aAAa,KAAK,SAAS,EAAG;YAE/B,MAAM,OAAO,GAAG,gCAAgC,GAC5C,IAAI,CAAC,aAAa,GAAG,wBAAwB,GAAG,IAAI,CAAC,IAAI,AAAC;YAE9D,IAAK,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAG;gBAExC,+DAA+D;gBAC/D,IAAK,aAAa,KAAK,IAAI,CAAC,oBAAoB,EAE5C,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,oBAAoB,CAAE,CAAC;qBAInD,MAAM,IAAI,KAAK,CAAE,OAAO,CAAE,CAAC,CAAC,sBAAsB;aAIzD;YAED,OAAO,CAAC,IAAI,CAAE,sBAAsB,EAAE,OAAO,CAAE,CAAC;YAChD,OAAO,IAAI,CAAC;SAEf;QAED,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC;QAEvC,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,GAAG;QAEf,OAAS,IAAI,CAAC,iBAAiB;YAE3B,KAAK,IAAI,CAAC,gCAAgC;gBAEtC,OAAO,mBAAmB,CAAC;YAE/B,KAAK,IAAI,CAAC,8BAA8B;gBAEpC,OAAO,iBAAiB,CAAC;YAE7B,KAAK,IAAI,CAAC,8BAA8B;gBAEpC,OAAO,iBAAiB,CAAC;SAEhC;KAEJ;IAED,YAAY,GAAG;QAEX,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;KAEjD;IAED,0DAA0D;IAC1D,KAAK,CAAE,UAAU,EAAG;QAEhB,IAAK,UAAU,KAAK,CAAG,EAAG;YAEtB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;YAEzB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE5C,KAAK,CAAE,IAAC,CAAE,IAAI,UAAU,CAAC;SAIhC;QAED,OAAO,IAAI,CAAC;KAEf;IAED,kFAAkF;IAClF,KAAK,CAAE,SAAS,EAAG;QAEf,IAAK,SAAS,KAAK,CAAG,EAAG;YAErB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;YAEzB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE5C,KAAK,CAAE,IAAC,CAAE,IAAI,SAAS,CAAC;SAI/B;QAED,OAAO,IAAI,CAAC;KAEf;IAED,kHAAkH;IAClH,qIAAqI;IACrI,IAAI,CAAE,SAAS,EAAE,OAAO,EAAG;QAEvB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EACpB,KAAK,GAAG,KAAK,CAAC,MAAM,AAAC;QAEzB,IAAI,IAAI,GAAG,CAAC,EACR,EAAE,GAAG,KAAK,GAAG,CAAC,AAAC;QAEnB,MAAQ,IAAI,KAAK,KAAK,IAAI,KAAK,CAAE,IAAI,CAAE,GAAG,SAAS,CAE/C,EAAG,IAAI,CAAC;QAIZ,MAAQ,EAAE,KAAK,EAAG,IAAI,KAAK,CAAE,EAAE,CAAE,GAAG,OAAO,CAEvC,EAAG,EAAE,CAAC;QAIV,EAAG,EAAE,CAAC,CAAC,+BAA+B;QAEtC,IAAK,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,KAAK,EAAG;YAE9B,4DAA4D;YAC5D,IAAK,IAAI,IAAI,EAAE,EAAG;gBAEd,EAAE,GAAG,IAAI,CAAC,GAAG,CAAE,EAAE,EAAE,CAAC,CAAE,CAAC;gBACvB,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC;aAEjB;YAED,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,AAAC;YACnC,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,UAAU,CAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAE,CAAC;YAC1D,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,UAAU,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,MAAM,EAAE,EAAE,GAAG,MAAM,CAAE,CAAC;SAEtF;QAED,OAAO,IAAI,CAAC;KAEf;IAED,uGAAuG;IACvG,QAAQ,GAAG;QAEP,IAAI,KAAK,GAAG,IAAI,AAAC;QAEjB,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,AAAC;QACtC,IAAK,SAAS,GAAG,IAAI,CAAC,KAAK,CAAE,SAAS,CAAE,KAAK,CAAC,EAAG;YAE7C,OAAO,CAAC,KAAK,CAAE,mDAAmD,EAAE,IAAI,CAAE,CAAC;YAC3E,KAAK,GAAG,KAAK,CAAC;SAEjB;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EACpB,MAAM,GAAG,IAAI,CAAC,MAAM,EAEpB,KAAK,GAAG,KAAK,CAAC,MAAM,AAAC;QAEzB,IAAK,KAAK,KAAK,CAAC,EAAG;YAEf,OAAO,CAAC,KAAK,CAAE,sCAAsC,EAAE,IAAI,CAAE,CAAC;YAC9D,KAAK,GAAG,KAAK,CAAC;SAEjB;QAED,IAAI,QAAQ,GAAG,IAAI,AAAC;QAEpB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,KAAK,EAAE,IAAC,EAAG,CAAG;YAEjC,MAAM,QAAQ,GAAG,KAAK,CAAE,IAAC,CAAE,AAAC;YAE5B,IAAK,OAAO,QAAQ,KAAK,QAAQ,IAAI,KAAK,CAAE,QAAQ,CAAE,EAAG;gBAErD,OAAO,CAAC,KAAK,CAAE,kDAAkD,EAAE,IAAI,EAAE,IAAC,EAAE,QAAQ,CAAE,CAAC;gBACvF,KAAK,GAAG,KAAK,CAAC;gBACd,MAAM;aAET;YAED,IAAK,QAAQ,KAAK,IAAI,IAAI,QAAQ,GAAG,QAAQ,EAAG;gBAE5C,OAAO,CAAC,KAAK,CAAE,yCAAyC,EAAE,IAAI,EAAE,IAAC,EAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;gBACxF,KAAK,GAAG,KAAK,CAAC;gBACd,MAAM;aAET;YAED,QAAQ,GAAG,QAAQ,CAAC;SAEvB;QAED,IAAK,MAAM,KAAK,SAAS,EAAG;YAExB,IAAK,cAAc,CAAC,YAAY,CAAE,MAAM,CAAE,EAEtC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;gBAEhD,MAAM,KAAK,GAAG,MAAM,CAAE,IAAC,CAAE,AAAC;gBAE1B,IAAK,KAAK,CAAE,KAAK,CAAE,EAAG;oBAElB,OAAO,CAAC,KAAK,CAAE,mDAAmD,EAAE,IAAI,EAAE,IAAC,EAAE,KAAK,CAAE,CAAC;oBACrF,KAAK,GAAG,KAAK,CAAC;oBACd,MAAM;iBAET;aAEJ;SAIR;QAED,OAAO,KAAK,CAAC;KAEhB;IAED,yEAAyE;IACzE,kDAAkD;IAClD,QAAQ,GAAG;QAEP,4EAA4E;QAC5E,MAAM,KAAK,GAAG,cAAc,CAAC,UAAU,CAAE,IAAI,CAAC,KAAK,CAAE,EACjD,MAAM,GAAG,cAAc,CAAC,UAAU,CAAE,IAAI,CAAC,MAAM,CAAE,EACjD,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,EAE5B,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,EAAE,KAAK,iBAAiB,EAEnE,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,AAAC;QAEjC,IAAI,UAAU,GAAG,CAAC,AAAC;QAEnB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,SAAS,EAAE,EAAG,IAAC,CAAG;YAEnC,IAAI,IAAI,GAAG,KAAK,AAAC;YAEjB,MAAM,IAAI,GAAG,KAAK,CAAE,IAAC,CAAE,AAAC;YACxB,MAAM,QAAQ,GAAG,KAAK,CAAE,IAAC,GAAG,CAAC,CAAE,AAAC;YAEhC,uDAAuD;YAEvD,IAAK,IAAI,KAAK,QAAQ,IAAM,CAAA,IAAC,KAAK,CAAC,IAAI,IAAI,KAAK,KAAK,CAAE,CAAC,CAAE,CAAA,AAAE;gBAExD,IAAK,CAAE,mBAAmB,EAAG;oBAEzB,uDAAuD;oBAEvD,MAAM,MAAM,GAAG,IAAC,GAAG,MAAM,EACrB,OAAO,GAAG,MAAM,GAAG,MAAM,EACzB,OAAO,GAAG,MAAM,GAAG,MAAM,AAAC;oBAE9B,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC,CAAG;wBAElC,MAAM,KAAK,GAAG,MAAM,CAAE,MAAM,GAAG,CAAC,CAAE,AAAC;wBAEnC,IAAK,KAAK,KAAK,MAAM,CAAE,OAAO,GAAG,CAAC,CAAE,IAChC,KAAK,KAAK,MAAM,CAAE,OAAO,GAAG,CAAC,CAAE,EAAG;4BAElC,IAAI,GAAG,IAAI,CAAC;4BACZ,MAAM;yBAET;qBAEJ;iBAEJ,MAEG,IAAI,GAAG,IAAI,CAAC;aAInB;YAED,sBAAsB;YAEtB,IAAK,IAAI,EAAG;gBAER,IAAK,IAAC,KAAK,UAAU,EAAG;oBAEpB,KAAK,CAAE,UAAU,CAAE,GAAG,KAAK,CAAE,IAAC,CAAE,CAAC;oBAEjC,MAAM,UAAU,GAAG,IAAC,GAAG,MAAM,EACzB,WAAW,GAAG,UAAU,GAAG,MAAM,AAAC;oBAEtC,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC,CAE/B,MAAM,CAAE,WAAW,GAAG,CAAC,CAAE,GAAG,MAAM,CAAE,UAAU,GAAG,CAAC,CAAE,CAAC;iBAI5D;gBAED,EAAG,UAAU,CAAC;aAEjB;SAEJ;QAED,+CAA+C;QAE/C,IAAK,SAAS,GAAG,CAAC,EAAG;YAEjB,KAAK,CAAE,UAAU,CAAE,GAAG,KAAK,CAAE,SAAS,CAAE,CAAC;YAEzC,IAAM,IAAI,UAAU,GAAG,SAAS,GAAG,MAAM,EAAE,WAAW,GAAG,UAAU,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,MAAM,EAAE,EAAG,CAAC,CAEnG,MAAM,CAAE,WAAW,GAAG,CAAC,CAAE,GAAG,MAAM,CAAE,UAAU,GAAG,CAAC,CAAE,CAAC;YAIzD,EAAG,UAAU,CAAC;SAEjB;QAED,IAAK,UAAU,KAAK,KAAK,CAAC,MAAM,EAAG;YAE/B,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,UAAU,CAAE,KAAK,EAAE,CAAC,EAAE,UAAU,CAAE,CAAC;YAC/D,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,UAAU,CAAE,MAAM,EAAE,CAAC,EAAE,UAAU,GAAG,MAAM,CAAE,CAAC;SAE7E,MAAM;YAEH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SAExB;QAED,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,MAAM,KAAK,GAAG,cAAc,CAAC,UAAU,CAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAE,AAAC;QACzD,MAAM,MAAM,GAAG,cAAc,CAAC,UAAU,CAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAE,AAAC;QAE3D,MAAM,kBAAkB,GAAG,IAAI,CAAC,WAAW,AAAC;QAC5C,MAAM,KAAK,GAAG,IAAI,kBAAkB,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAE,AAAC;QAEjE,yFAAyF;QACzF,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAEjD,OAAO,KAAK,CAAC;KAEhB;CAEJ;AAED,aAAa,CAAC,SAAS,CAAC,cAAc,GAAG,YAAY,CAAC;AACtD,aAAa,CAAC,SAAS,CAAC,eAAe,GAAG,YAAY,CAAC;AACvD,aAAa,CAAC,SAAS,CAAC,oBAAoB,GAAG,iBAAiB,CAAC;AAEjE;;IAEG,CACH,MAAM,oBAAoB,SAAS,aAAa;CAAG;AAEnD,oBAAoB,CAAC,SAAS,CAAC,aAAa,GAAG,MAAM,CAAC;AACtD,oBAAoB,CAAC,SAAS,CAAC,eAAe,GAAG,KAAK,CAAC;AACvD,oBAAoB,CAAC,SAAS,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;AAC1E,oBAAoB,CAAC,SAAS,CAAC,8BAA8B,GAAG,SAAS,CAAC;AAC1E,oBAAoB,CAAC,SAAS,CAAC,8BAA8B,GAAG,SAAS,CAAC;AAE1E;;IAEG,CACH,MAAM,kBAAkB,SAAS,aAAa;CAAG;AAEjD,kBAAkB,CAAC,SAAS,CAAC,aAAa,GAAG,OAAO,CAAC;AAErD;;IAEG,CACH,MAAM,mBAAmB,SAAS,aAAa;CAAG;AAElD,mBAAmB,CAAC,SAAS,CAAC,aAAa,GAAG,QAAQ,CAAC;AAEvD;;IAEG,CAEH,MAAM,2BAA2B,SAAS,WAAW;IAEjD,YAAa,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAG;QAEtE,KAAK,CAAE,kBAAkB,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAE,CAAC;KAEvE;IAED,YAAY,CAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG;QAE1B,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAC5B,MAAM,GAAG,IAAI,CAAC,YAAY,EAC1B,MAAM,GAAG,IAAI,CAAC,SAAS,EAEvB,KAAK,GAAG,AAAE,CAAA,CAAC,GAAG,EAAE,CAAA,GAAO,CAAA,EAAE,GAAG,EAAE,CAAA,AAAE,AAAC;QAErC,IAAI,MAAM,GAAG,EAAE,GAAG,MAAM,AAAC;QAEzB,IAAM,IAAI,GAAG,GAAG,MAAM,GAAG,MAAM,EAAE,MAAM,KAAK,GAAG,EAAE,MAAM,IAAI,CAAC,CAExD,UAAU,CAAC,SAAS,CAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAE,CAAC;QAItF,OAAO,MAAM,CAAC;KAEjB;CAEJ;AAED;;IAEG,CACH,MAAM,uBAAuB,SAAS,aAAa;IAE/C,8BAA8B,CAAE,MAAM,EAAG;QAErC,OAAO,IAAI,2BAA2B,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,MAAM,CAAE,CAAC;KAElG;CAEJ;AAED,uBAAuB,CAAC,SAAS,CAAC,aAAa,GAAG,YAAY,CAAC;AAC/D,+BAA+B;AAC/B,uBAAuB,CAAC,SAAS,CAAC,oBAAoB,GAAG,iBAAiB,CAAC;AAC3E,uBAAuB,CAAC,SAAS,CAAC,8BAA8B,GAAG,SAAS,CAAC;AAE7E;;IAEG,CACH,MAAM,mBAAmB,SAAS,aAAa;CAAG;AAElD,mBAAmB,CAAC,SAAS,CAAC,aAAa,GAAG,QAAQ,CAAC;AACvD,mBAAmB,CAAC,SAAS,CAAC,eAAe,GAAG,KAAK,CAAC;AACtD,mBAAmB,CAAC,SAAS,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;AACzE,mBAAmB,CAAC,SAAS,CAAC,8BAA8B,GAAG,SAAS,CAAC;AACzE,mBAAmB,CAAC,SAAS,CAAC,8BAA8B,GAAG,SAAS,CAAC;AAEzE;;IAEG,CACH,MAAM,mBAAmB,SAAS,aAAa;CAAG;AAElD,mBAAmB,CAAC,SAAS,CAAC,aAAa,GAAG,QAAQ,CAAC;AAEvD,MAAM,aAAa;IAEf,YAAa,IAAI,EAAE,QAAQ,GAAG,EAAG,EAAE,MAAM,EAAE,SAAS,GAAG,wBAAwB,CAAG;QAE9E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,CAAC,IAAI,GAAG,YAAY,EAAE,CAAC;QAE3B,sEAAsE;QACtE,IAAK,IAAI,CAAC,QAAQ,GAAG,CAAC,EAElB,IAAI,CAAC,aAAa,EAAE,CAAC;KAI5B;IAGD,OAAO,KAAK,CAAE,IAAI,EAAG;QAEjB,MAAM,MAAM,GAAG,EAAE,EACb,UAAU,GAAG,IAAI,CAAC,MAAM,EACxB,SAAS,GAAG,CAAG,GAAK,CAAA,IAAI,CAAC,GAAG,IAAI,CAAG,CAAA,AAAE,AAAC;QAE1C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAEjD,MAAM,CAAC,IAAI,CAAE,kBAAkB,CAAE,UAAU,CAAE,IAAC,CAAE,CAAE,CAAC,KAAK,CAAE,SAAS,CAAE,CAAE,CAAC;QAI5E,MAAM,IAAI,GAAG,IAAI,IAAI,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,CAAE,AAAC;QAC1E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,MAAM,CAAE,IAAI,EAAG;QAElB,MAAM,MAAM,GAAG,EAAE,EACb,UAAU,GAAG,IAAI,CAAC,MAAM,AAAC;QAE7B,MAAM,IAAI,GAAG;YAET,MAAM,EAAE,IAAI,CAAC,IAAI;YACjB,UAAU,EAAE,IAAI,CAAC,QAAQ;YACzB,QAAQ,EAAE,MAAM;YAChB,MAAM,EAAE,IAAI,CAAC,IAAI;YACjB,WAAW,EAAE,IAAI,CAAC,SAAS;SAE9B,AAAC;QAEF,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAEjD,MAAM,CAAC,IAAI,CAAE,aAAa,CAAC,MAAM,CAAE,UAAU,CAAE,IAAC,CAAE,CAAE,CAAE,CAAC;QAI3D,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,6BAA6B,CAAE,IAAI,EAAE,mBAAmB,EAAE,GAAG,EAAE,MAAM,EAAG;QAE3E,MAAM,eAAe,GAAG,mBAAmB,CAAC,MAAM,AAAC;QACnD,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,eAAe,EAAE,IAAC,EAAG,CAAG;YAEzC,IAAI,KAAK,GAAG,EAAE,AAAC;YACf,IAAI,MAAM,GAAG,EAAE,AAAC;YAEhB,KAAK,CAAC,IAAI,CACN,AAAE,CAAA,IAAC,GAAG,eAAe,GAAG,CAAC,CAAA,GAAK,eAAe,EAC7C,IAAC,EACD,AAAE,CAAA,IAAC,GAAG,CAAC,CAAA,GAAK,eAAe,CAAE,CAAC;YAElC,MAAM,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YAEvB,MAAM,KAAK,GAAG,cAAc,CAAC,gBAAgB,CAAE,KAAK,CAAE,AAAC;YACvD,KAAK,GAAG,cAAc,CAAC,WAAW,CAAE,KAAK,EAAE,CAAC,EAAE,KAAK,CAAE,CAAC;YACtD,MAAM,GAAG,cAAc,CAAC,WAAW,CAAE,MAAM,EAAE,CAAC,EAAE,KAAK,CAAE,CAAC;YAExD,4DAA4D;YAC5D,uCAAuC;YACvC,IAAK,CAAE,MAAM,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,EAAG;gBAEhC,KAAK,CAAC,IAAI,CAAE,eAAe,CAAE,CAAC;gBAC9B,MAAM,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC,CAAE,CAAE,CAAC;aAE9B;YAED,MAAM,CAAC,IAAI,CACP,IAAI,mBAAmB,CACnB,yBAAyB,GAAG,mBAAmB,CAAE,IAAC,CAAE,CAAC,IAAI,GAAG,GAAG,EAC/D,KAAK,EAAE,MAAM,CAChB,CAAC,KAAK,CAAE,CAAG,GAAG,GAAG,CAAE,CAAE,CAAC;SAE9B;QAED,OAAO,IAAI,IAAI,CAAE,IAAI,EAAE,EAAG,EAAE,MAAM,CAAE,CAAC;KAExC;IAED,OAAO,UAAU,CAAE,iBAAiB,EAAE,IAAI,EAAG;QAEzC,IAAI,SAAS,GAAG,iBAAiB,AAAC;QAElC,IAAK,CAAE,KAAK,CAAC,OAAO,CAAE,iBAAiB,CAAE,EAAG;YAExC,MAAM,CAAC,GAAG,iBAAiB,AAAC;YAC5B,SAAS,GAAG,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,CAAC;SAEnE;QAED,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,SAAS,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;YAE1C,IAAK,SAAS,CAAE,IAAC,CAAE,CAAC,IAAI,KAAK,IAAI,EAE7B,OAAO,SAAS,CAAE,IAAC,CAAE,CAAC;SAI7B;QAED,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,mCAAmC,CAAE,YAAY,EAAE,GAAG,EAAE,MAAM,EAAG;QAEpE,MAAM,uBAAuB,GAAG,EAAE,AAAC;QAEnC,uDAAuD;QACvD,yDAAyD;QACzD,MAAM,OAAO,uBAAuB,AAAC;QAErC,sDAAsD;QACtD,qDAAqD;QACrD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,YAAY,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;YAEtD,MAAM,WAAW,GAAG,YAAY,CAAE,IAAC,CAAE,AAAC;YACtC,MAAM,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,CAAE,OAAO,CAAE,AAAC;YAEhD,IAAK,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAG;gBAE7B,MAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,AAAC;gBAExB,IAAI,qBAAqB,GAAG,uBAAuB,CAAE,IAAI,CAAE,AAAC;gBAE5D,IAAK,CAAE,qBAAqB,EAExB,uBAAuB,CAAE,IAAI,CAAE,GAAG,qBAAqB,GAAG,EAAE,CAAC;gBAIjE,qBAAqB,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;aAE7C;SAEJ;QAED,MAAM,KAAK,GAAG,EAAE,AAAC;QAEjB,IAAM,MAAM,IAAI,IAAI,uBAAuB,CAEvC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,6BAA6B,CAAE,IAAI,EAAE,uBAAuB,CAAE,IAAI,CAAE,EAAE,GAAG,EAAE,MAAM,CAAE,CAAE,CAAC;QAI3G,OAAO,KAAK,CAAC;KAEhB;IAED,uCAAuC;IACvC,OAAO,cAAc,CAAE,SAAS,EAAE,KAAK,EAAG;QAEtC,IAAK,CAAE,SAAS,EAAG;YAEf,OAAO,CAAC,KAAK,CAAE,uDAAuD,CAAE,CAAC;YACzE,OAAO,IAAI,CAAC;SAEf;QAED,MAAM,gBAAgB,GAAG,SAAW,SAAS,EAAE,SAAS,EAAE,aAAa,EAAE,YAAY,EAAE,UAAU,EAAG;YAEhG,gDAAgD;YAChD,IAAK,aAAa,CAAC,MAAM,KAAK,CAAC,EAAG;gBAE9B,MAAM,KAAK,GAAG,EAAE,AAAC;gBACjB,MAAM,MAAM,GAAG,EAAE,AAAC;gBAElB,cAAc,CAAC,WAAW,CAAE,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,CAAE,CAAC;gBAEzE,8CAA8C;gBAC9C,IAAK,KAAK,CAAC,MAAM,KAAK,CAAC,EAEnB,UAAU,CAAC,IAAI,CAAE,IAAI,SAAS,CAAE,SAAS,EAAE,KAAK,EAAE,MAAM,CAAE,CAAE,CAAC;aAIpE;SAEJ,AAAC;QAEF,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,IAAI,SAAS,AAAC;QAC7C,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG,IAAI,EAAE,AAAC;QAChC,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,AAAC;QAEtC,mDAAmD;QACnD,IAAI,QAAQ,GAAG,SAAS,CAAC,MAAM,IAAI,EAAG,AAAC;QAEvC,MAAM,eAAe,GAAG,SAAS,CAAC,SAAS,IAAI,EAAE,AAAC;QAElD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAG,CAAG;YAEhD,MAAM,aAAa,GAAG,eAAe,CAAE,CAAC,CAAE,CAAC,IAAI,AAAC;YAEhD,oBAAoB;YACpB,IAAK,CAAE,aAAa,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAG,SAAS;YAE9D,wBAAwB;YACxB,IAAK,aAAa,CAAE,CAAC,CAAE,CAAC,YAAY,EAAG;gBAEnC,kDAAkD;gBAClD,MAAM,gBAAgB,GAAG,EAAE,AAAC;gBAE5B,IAAI,CAAC,AAAC;gBAEN,IAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAG,CAAG;oBAE1C,IAAK,aAAa,CAAE,CAAC,CAAE,CAAC,YAAY,EAEhC,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAE,CAAC,CAAE,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAG,CAE7D,gBAAgB,CAAE,aAAa,CAAE,CAAC,CAAE,CAAC,YAAY,CAAE,CAAC,CAAE,CAAE,GAAG,EAAG,CAAC;iBAM1E;gBAED,qDAAqD;gBACrD,qDAAqD;gBACrD,4BAA4B;gBAC5B,IAAM,MAAM,eAAe,IAAI,gBAAgB,CAAG;oBAE9C,MAAM,KAAK,GAAG,EAAE,AAAC;oBACjB,MAAM,MAAM,GAAG,EAAE,AAAC;oBAElB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,aAAa,CAAE,CAAC,CAAE,CAAC,YAAY,CAAC,MAAM,EAAE,EAAG,CAAC,CAAG;wBAElE,MAAM,YAAY,GAAG,aAAa,CAAE,CAAC,CAAE,AAAC;wBAExC,KAAK,CAAC,IAAI,CAAE,YAAY,CAAC,IAAI,CAAE,CAAC;wBAChC,MAAM,CAAC,IAAI,CAAE,AAAE,YAAY,CAAC,WAAW,KAAK,eAAe,GAAK,CAAC,GAAG,CAAC,CAAE,CAAC;qBAE3E;oBAED,MAAM,CAAC,IAAI,CAAE,IAAI,mBAAmB,CAAE,wBAAwB,GAAG,eAAe,GAAG,GAAG,EAAE,KAAK,EAAE,MAAM,CAAE,CAAE,CAAC;iBAE7G;gBAED,QAAQ,GAAG,gBAAgB,CAAC,MAAM,GAAG,GAAG,CAAC;aAE5C,MAAM;gBAEH,+BAA+B;gBAE/B,MAAM,QAAQ,GAAG,SAAS,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC,IAAI,GAAG,GAAG,AAAC;gBAEnD,gBAAgB,CACZ,mBAAmB,EAAE,QAAQ,GAAG,WAAW,EAC3C,aAAa,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;gBAEnC,gBAAgB,CACZ,uBAAuB,EAAE,QAAQ,GAAG,aAAa,EACjD,aAAa,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;gBAEnC,gBAAgB,CACZ,mBAAmB,EAAE,QAAQ,GAAG,QAAQ,EACxC,aAAa,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;aAEtC;SAEJ;QAED,IAAK,MAAM,CAAC,MAAM,KAAK,CAAC,EAEpB,OAAO,IAAI,CAAC;QAIhB,MAAM,IAAI,GAAG,IAAI,IAAI,CAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAE,AAAC;QAE/D,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,GAAG;QAEZ,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAC3B,IAAI,QAAQ,GAAG,CAAC,AAAC;QAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;YAEhD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,AAAC;YAE/B,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAE,CAAE,CAAC;SAE1E;QAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,GAAG;QAEH,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,EAAG,CAEzC,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,CAAC,IAAI,CAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;QAI9C,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,GAAG;QAEP,IAAI,KAAK,GAAG,IAAI,AAAC;QAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,EAAG,CAEzC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,CAAC,QAAQ,EAAE,CAAC;QAIjD,OAAO,KAAK,CAAC;KAEhB;IAED,QAAQ,GAAG;QAEP,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,EAAG,CAEzC,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,CAAC,QAAQ,EAAE,CAAC;QAIhC,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAC,EAAG,CAEzC,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,CAAC,KAAK,EAAE,CAAE,CAAC;QAI5C,OAAO,IAAI,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,CAAE,CAAC;KAEnF;IAED,MAAM,GAAG;QAEL,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC;KAE1C;CAEJ;AAED,SAAS,4BAA4B,CAAE,QAAQ,EAAG;IAE9C,OAAS,QAAQ,CAAC,WAAW,EAAE;QAE3B,KAAK,QAAQ,CAAC;QACd,KAAK,QAAQ,CAAC;QACd,KAAK,OAAO,CAAC;QACb,KAAK,QAAQ,CAAC;QACd,KAAK,SAAS;YAEV,OAAO,mBAAmB,CAAC;QAE/B,KAAK,QAAQ,CAAC;QACd,KAAK,SAAS,CAAC;QACf,KAAK,SAAS,CAAC;QACf,KAAK,SAAS;YAEV,OAAO,mBAAmB,CAAC;QAE/B,KAAK,OAAO;YAER,OAAO,kBAAkB,CAAC;QAE9B,KAAK,YAAY;YAEb,OAAO,uBAAuB,CAAC;QAEnC,KAAK,MAAM,CAAC;QACZ,KAAK,SAAS;YAEV,OAAO,oBAAoB,CAAC;QAEhC,KAAK,QAAQ;YAET,OAAO,mBAAmB,CAAC;KAElC;IAED,MAAM,IAAI,KAAK,CAAE,6CAA6C,GAAG,QAAQ,CAAE,CAAC;CAE/E;AAED,SAAS,kBAAkB,CAAE,IAAI,EAAG;IAEhC,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAExB,MAAM,IAAI,KAAK,CAAE,0DAA0D,CAAE,CAAC;IAIlF,MAAM,SAAS,GAAG,4BAA4B,CAAE,IAAI,CAAC,IAAI,CAAE,AAAC;IAE5D,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAAG;QAE5B,MAAM,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG,EAAE,AAAC;QAE9B,cAAc,CAAC,WAAW,CAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAE,CAAC;QAEhE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KAExB;IAED,mDAAmD;IACnD,IAAK,SAAS,CAAC,KAAK,KAAK,SAAS,EAE9B,OAAO,SAAS,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;SAI/B,+DAA+D;IAC/D,OAAO,IAAI,SAAS,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAE,CAAC;CAItF;AAED,MAAM,KAAK,GAAG;IAEV,OAAO,EAAE,KAAK;IAEd,KAAK,EAAE,EAAE;IAET,GAAG,EAAE,SAAW,GAAG,EAAE,IAAI,EAAG;QAExB,IAAK,IAAI,CAAC,OAAO,KAAK,KAAK,EAAG,OAAO;QAErC,oDAAoD;QAEpD,IAAI,CAAC,KAAK,CAAE,GAAG,CAAE,GAAG,IAAI,CAAC;KAE5B;IAED,GAAG,EAAE,SAAW,GAAG,EAAG;QAElB,IAAK,IAAI,CAAC,OAAO,KAAK,KAAK,EAAG,OAAO;QAErC,sDAAsD;QAEtD,OAAO,IAAI,CAAC,KAAK,CAAE,GAAG,CAAE,CAAC;KAE5B;IAED,MAAM,EAAE,SAAW,GAAG,EAAG;QAErB,OAAO,IAAI,CAAC,KAAK,CAAE,GAAG,CAAE,CAAC;KAE5B;IAED,KAAK,EAAE,WAAY;QAEf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KAEnB;CAEJ,AAAC;AAEF,MAAM,cAAc;IAEhB,YAAa,MAAM,EAAE,UAAU,EAAE,OAAO,CAAG;QAEvC,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,IAAI,SAAS,GAAG,KAAK,AAAC;QACtB,IAAI,WAAW,GAAG,CAAC,AAAC;QACpB,IAAI,UAAU,GAAG,CAAC,AAAC;QACnB,IAAI,WAAW,GAAG,SAAS,AAAC;QAC5B,MAAM,QAAQ,GAAG,EAAE,AAAC;QAEpB,0DAA0D;QAC1D,qBAAqB;QAErB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,CAAC,SAAS,GAAG,SAAW,GAAG,EAAG;YAE9B,UAAU,EAAG,CAAC;YAEd,IAAK,SAAS,KAAK,KAAK,EAEpB;gBAAA,IAAK,KAAK,CAAC,OAAO,KAAK,SAAS,EAE5B,KAAK,CAAC,OAAO,CAAE,GAAG,EAAE,WAAW,EAAE,UAAU,CAAE,CAAC;aAEjD,AAEJ;YAED,SAAS,GAAG,IAAI,CAAC;SAEpB,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,SAAW,GAAG,EAAG;YAE5B,WAAW,EAAG,CAAC;YAEf,IAAK,KAAK,CAAC,UAAU,KAAK,SAAS,EAE/B,KAAK,CAAC,UAAU,CAAE,GAAG,EAAE,WAAW,EAAE,UAAU,CAAE,CAAC;YAIrD,IAAK,WAAW,KAAK,UAAU,EAAG;gBAE9B,SAAS,GAAG,KAAK,CAAC;gBAElB,IAAK,KAAK,CAAC,MAAM,KAAK,SAAS,EAE3B,KAAK,CAAC,MAAM,EAAE,CAAC;aAItB;SAEJ,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,SAAW,GAAG,EAAG;YAE9B,IAAK,KAAK,CAAC,OAAO,KAAK,SAAS,EAE5B,KAAK,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC;SAI5B,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,SAAW,GAAG,EAAG;YAE/B,IAAK,WAAW,EAEZ,OAAO,WAAW,CAAE,GAAG,CAAE,CAAC;YAI9B,OAAO,GAAG,CAAC;SAEd,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG,SAAW,SAAS,EAAG;YAEzC,WAAW,GAAG,SAAS,CAAC;YAExB,OAAO,IAAI,CAAC;SAEf,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,SAAW,KAAK,EAAE,MAAM,EAAG;YAEzC,QAAQ,CAAC,IAAI,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;YAE/B,OAAO,IAAI,CAAC;SAEf,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,SAAW,KAAK,EAAG;YAEpC,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAE,KAAK,CAAE,AAAC;YAExC,IAAK,KAAK,KAAK,EAAG,EAEd,QAAQ,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;YAIhC,OAAO,IAAI,CAAC;SAEf,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,SAAW,IAAI,EAAG;YAEhC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,CAAC,CAAG;gBAElD,MAAM,KAAK,GAAG,QAAQ,CAAE,IAAC,CAAE,AAAC;gBAC5B,MAAM,MAAM,GAAG,QAAQ,CAAE,IAAC,GAAG,CAAC,CAAE,AAAC;gBAEjC,IAAK,KAAK,CAAC,MAAM,EAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,aAAa;gBAEtD,IAAK,KAAK,CAAC,IAAI,CAAE,IAAI,CAAE,EAEnB,OAAO,MAAM,CAAC;aAIrB;YAED,OAAO,IAAI,CAAC;SAEf,CAAC;KAEL;CAEJ;AAED,MAAM,qBAAqB,GAAG,IAAI,cAAc,EAAE,AAAC;AAEnD,MAAM,MAAM;IAER,YAAa,OAAO,CAAG;QAEnB,IAAI,CAAC,OAAO,GAAG,AAAE,OAAO,KAAK,SAAS,GAAK,OAAO,GAAG,qBAAqB,CAAC;QAE3E,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KAE3B;IAED,IAAI,GAA2C,EAAE;IAEjD,SAAS,CAAE,GAAG,EAAE,UAAU,EAAG;QAEzB,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,OAAO,IAAI,OAAO,CAAE,SAAW,OAAO,EAAE,MAAM,EAAG;YAE7C,KAAK,CAAC,IAAI,CAAE,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,CAAE,CAAC;SAElD,CAAE,CAAC;KAEP;IAED,KAAK,GAAe,EAAE;IAEtB,cAAc,CAAE,WAAW,EAAG;QAE1B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,OAAO,IAAI,CAAC;KAEf;IAED,kBAAkB,CAAE,KAAK,EAAG;QAExB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,IAAI,EAAG;QAEZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,CAAE,YAAY,EAAG;QAE5B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,CAAE,aAAa,EAAG;QAE9B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,OAAO,GAAG,EAAE,AAAC;AAEnB,MAAM,UAAU,SAAS,MAAM;IAE3B,YAAa,OAAO,CAAG;QAEnB,KAAK,CAAE,OAAO,CAAE,CAAC;KAEpB;IAED,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAG;QAErC,IAAK,GAAG,KAAK,SAAS,EAAG,GAAG,GAAG,EAAE,CAAC;QAElC,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAErD,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAE,GAAG,CAAE,CAAC;QAErC,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAE,GAAG,CAAE,AAAC;QAEhC,IAAK,MAAM,KAAK,SAAS,EAAG;YAExB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;YAE9B,UAAU,CAAE,IAAM;gBAEd,IAAK,MAAM,EAAG,MAAM,CAAE,MAAM,CAAE,CAAC;gBAE/B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC;aAE/B,EAAE,CAAC,CAAE,CAAC;YAEP,OAAO,MAAM,CAAC;SAEjB;QAED,gCAAgC;QAEhC,IAAK,OAAO,CAAE,GAAG,CAAE,KAAK,SAAS,EAAG;YAEhC,OAAO,CAAE,GAAG,CAAE,CAAC,IAAI,CAAE;gBAEjB,MAAM,EAAE,MAAM;gBACd,UAAU,EAAE,UAAU;gBACtB,OAAO,EAAE,OAAO;aAEnB,CAAE,CAAC;YAEJ,OAAO;SAEV;QAED,0CAA0C;QAC1C,OAAO,CAAE,GAAG,CAAE,GAAG,EAAE,CAAC;QAEpB,OAAO,CAAE,GAAG,CAAE,CAAC,IAAI,CAAE;YACjB,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,UAAU;YACtB,OAAO,EAAE,OAAO;SACnB,CAAE,CAAC;QAEJ,iBAAiB;QACjB,MAAM,GAAG,GAAG,IAAI,OAAO,CAAE,GAAG,EAAE;YAC1B,OAAO,EAAE,IAAI,OAAO,CAAE,IAAI,CAAC,aAAa,CAAE;YAC1C,WAAW,EAAE,IAAI,CAAC,eAAe,GAAG,SAAS,GAAG,aAAa;SAEhE,CAAE,AAAC;QAEJ,oCAAoC;QACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAC/B,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,AAAC;QAEvC,kBAAkB;QAClB,KAAK,CAAE,GAAG,CAAE,CACP,IAAI,CAAE,CAAA,QAAQ,GAAI;YAEf,IAAK,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAG;gBAEpD,kEAAkE;gBAClE,kDAAkD;gBAElD,IAAK,QAAQ,CAAC,MAAM,KAAK,CAAC,EAEtB,OAAO,CAAC,IAAI,CAAE,2CAA2C,CAAE,CAAC;gBAIhE,gFAAgF;gBAEhF,IAAK,OAAO,cAAc,KAAK,WAAW,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,EAE9G,OAAO,QAAQ,CAAC;gBAIpB,MAAM,SAAS,GAAG,OAAO,CAAE,GAAG,CAAE,AAAC;gBACjC,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,AAAC;gBACzC,MAAM,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAE,gBAAgB,CAAE,AAAC;gBAC/D,MAAM,KAAK,GAAG,aAAa,GAAG,QAAQ,CAAE,aAAa,CAAE,GAAG,CAAC,AAAC;gBAC5D,MAAM,gBAAgB,GAAG,KAAK,KAAK,CAAC,AAAC;gBACrC,IAAI,MAAM,GAAG,CAAC,AAAC;gBAEf,8EAA8E;gBAC9E,MAAM,MAAM,GAAG,IAAI,cAAc,CAAE;oBAC/B,KAAK,EAAE,UAAU,EAAG;wBAEhB,QAAQ,EAAE,CAAC;wBAEX,SAAS,QAAQ,GAAG;4BAEhB,MAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAE,CAAE,EAAE,IAAI,CAAA,EAAE,KAAK,CAAA,EAAE,GAAM;gCAEvC,IAAK,IAAI,EAEL,UAAU,CAAC,KAAK,EAAE,CAAC;qCAEhB;oCAEH,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC;oCAE3B,MAAM,KAAK,GAAG,IAAI,aAAa,CAAE,UAAU,EAAE;wCAAE,gBAAgB;wCAAE,MAAM;wCAAE,KAAK;qCAAE,CAAE,AAAC;oCACnF,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;wCAEnD,MAAM,QAAQ,GAAG,SAAS,CAAE,IAAC,CAAE,AAAC;wCAChC,IAAK,QAAQ,CAAC,UAAU,EAAG,QAAQ,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC;qCAE3D;oCAED,UAAU,CAAC,OAAO,CAAE,KAAK,CAAE,CAAC;oCAC5B,QAAQ,EAAE,CAAC;iCAEd;6BAEJ,CAAE,CAAC;yBAEP;qBAEJ;iBAEJ,CAAE,AAAC;gBAEJ,OAAO,IAAI,QAAQ,CAAE,MAAM,CAAE,CAAC;aAEjC,MAEG,MAAM,KAAK,CAAE,CAAC,WAAW,EAAE,QAAQ,CAAC,GAAG,CAAC,iBAAiB,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC;SAI9G,CAAE,CACF,IAAI,CAAE,CAAA,QAAQ,GAAI;YAEf,OAAS,YAAY;gBAEjB,KAAK,aAAa;oBAEd,OAAO,QAAQ,CAAC,WAAW,EAAE,CAAC;gBAElC,KAAK,MAAM;oBAEP,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAE3B,KAAK,UAAU;oBAEX,OAAO,QAAQ,CAAC,IAAI,EAAE,CACjB,IAAI,CAAE,CAAA,IAAI,GAAI;wBAEX,MAAM,MAAM,GAAG,IAAI,SAAS,EAAE,AAAC;wBAC/B,OAAO,MAAM,CAAC,eAAe,CAAE,IAAI,EAAE,QAAQ,CAAE,CAAC;qBAEnD,CAAE,CAAC;gBAEZ,KAAK,MAAM;oBAEP,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAE3B;oBAEI,IAAK,QAAQ,KAAK,SAAS,EAEvB,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;yBAEpB;wBAEH,iBAAiB;wBACjB,MAAM,EAAE,4BAA4B,AAAC;wBACrC,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,AAAC;wBACjC,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,CAAE,CAAC,CAAE,GAAG,IAAI,CAAE,CAAC,CAAE,CAAC,WAAW,EAAE,GAAG,SAAS,AAAC;wBACtE,MAAM,OAAO,GAAG,IAAI,WAAW,CAAE,KAAK,CAAE,AAAC;wBACzC,OAAO,QAAQ,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,CAAA,EAAE,GAAI,OAAO,CAAC,MAAM,CAAE,EAAE,CAAE;wBAAA,CAAE,CAAC;qBAEpE;aAER;SAEJ,CAAE,CACF,IAAI,CAAE,CAAA,IAAI,GAAI;YAEX,6DAA6D;YAC7D,yDAAyD;YACzD,KAAK,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAE,CAAC;YAEvB,MAAM,SAAS,GAAG,OAAO,CAAE,GAAG,CAAE,AAAC;YACjC,OAAO,OAAO,CAAE,GAAG,CAAE,CAAC;YAEtB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;gBAEnD,MAAM,QAAQ,GAAG,SAAS,CAAE,IAAC,CAAE,AAAC;gBAChC,IAAK,QAAQ,CAAC,MAAM,EAAG,QAAQ,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC;aAElD;SAEJ,CAAE,CACF,KAAK,CAAE,CAAA,GAAG,GAAI;YAEX,qDAAqD;YAErD,MAAM,SAAS,GAAG,OAAO,CAAE,GAAG,CAAE,AAAC;YAEjC,IAAK,SAAS,KAAK,SAAS,EAAG;gBAE3B,0DAA0D;gBAC1D,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;gBAC9B,MAAM,GAAG,CAAC;aAEb;YAED,OAAO,OAAO,CAAE,GAAG,CAAE,CAAC;YAEtB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;gBAEnD,MAAM,QAAQ,GAAG,SAAS,CAAE,IAAC,CAAE,AAAC;gBAChC,IAAK,QAAQ,CAAC,OAAO,EAAG,QAAQ,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC;aAEnD;YAED,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;SAEjC,CAAE,CACF,OAAO,CAAE,IAAM;YAEZ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC;SAE/B,CAAE,CAAC;QAER,IAAI,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;KAEjC;IAED,eAAe,CAAE,KAAK,EAAG;QAErB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,OAAO,IAAI,CAAC;KAEf;IAED,WAAW,CAAE,KAAK,EAAG;QAEjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,eAAe,SAAS,MAAM;IAEhC,YAAa,OAAO,CAAG;QAEnB,KAAK,CAAE,OAAO,CAAE,CAAC;KAEpB;IAED,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAG;QAErC,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,MAAM,MAAM,GAAG,IAAI,UAAU,CAAE,IAAI,CAAC,OAAO,CAAE,AAAC;QAC9C,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAC5B,MAAM,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;QAC9C,MAAM,CAAC,kBAAkB,CAAE,IAAI,CAAC,eAAe,CAAE,CAAC;QAClD,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,SAAW,IAAI,EAAG;YAEhC,IAAI;gBAEA,MAAM,CAAE,KAAK,CAAC,KAAK,CAAE,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,CAAE,CAAE,CAAC;aAE/C,CAAC,OAAQ,CAAC,EAAG;gBAEV,IAAK,OAAO,EAER,OAAO,CAAE,CAAC,CAAE,CAAC;qBAIb,OAAO,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;gBAIvB,KAAK,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;aAElC;SAEJ,EAAE,UAAU,EAAE,OAAO,CAAE,CAAC;KAE5B;IAED,KAAK,CAAE,IAAI,EAAG;QAEV,MAAM,UAAU,GAAG,EAAE,AAAC;QAEtB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;YAErC,MAAM,IAAI,GAAG,aAAa,CAAC,KAAK,CAAE,IAAI,CAAE,IAAC,CAAE,CAAE,AAAC;YAE9C,UAAU,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;SAE3B;QAED,OAAO,UAAU,CAAC;KAErB;CAEJ;AAED;;;;IAIG,CAEH,MAAM,uBAAuB,SAAS,MAAM;IAExC,YAAa,OAAO,CAAG;QAEnB,KAAK,CAAE,OAAO,CAAE,CAAC;KAEpB;IAED,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAG;QAErC,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,MAAM,OAAO,GAAG,IAAI,iBAAiB,EAAE,AAAC;QAExC,MAAM,MAAM,GAAG,IAAI,UAAU,CAAE,IAAI,CAAC,OAAO,CAAE,AAAC;QAC9C,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAC5B,MAAM,CAAC,eAAe,CAAE,aAAa,CAAE,CAAC;QACxC,MAAM,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;QAC9C,MAAM,CAAC,kBAAkB,CAAE,KAAK,CAAC,eAAe,CAAE,CAAC;QAEnD,IAAI,MAAM,GAAG,CAAC,AAAC;QAEf,SAAS,WAAW,CAAE,IAAC,EAAG;YAEtB,MAAM,CAAC,IAAI,CAAE,GAAG,CAAE,IAAC,CAAE,EAAE,SAAW,MAAM,EAAG;gBAEvC,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAE,MAAM,EAAE,IAAI,CAAE,AAAC;gBAE7C,MAAM,CAAE,IAAC,CAAE,GAAG;oBACV,KAAK,EAAE,QAAQ,CAAC,KAAK;oBACrB,MAAM,EAAE,QAAQ,CAAC,MAAM;oBACvB,MAAM,EAAE,QAAQ,CAAC,MAAM;oBACvB,OAAO,EAAE,QAAQ,CAAC,OAAO;iBAC5B,CAAC;gBAEF,MAAM,IAAI,CAAC,CAAC;gBAEZ,IAAK,MAAM,KAAK,CAAC,EAAG;oBAEhB,IAAK,QAAQ,CAAC,WAAW,KAAK,CAAC,EAAG,OAAO,CAAC,SAAS,GAAG,YAAY,CAAC;oBAEnE,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC;oBACvB,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;oBACjC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;oBAE3B,IAAK,MAAM,EAAG,MAAM,CAAE,OAAO,CAAE,CAAC;iBAEnC;aAEJ,EAAE,UAAU,EAAE,OAAO,CAAE,CAAC;SAE5B;QAED,IAAK,KAAK,CAAC,OAAO,CAAE,GAAG,CAAE,EAErB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,EAAG,IAAC,CAE1C,WAAW,CAAE,IAAC,CAAE,CAAC;aAMrB,yDAAyD;QAEzD,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,SAAW,MAAM,EAAG;YAElC,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAE,MAAM,EAAE,IAAI,CAAE,AAAC;YAE7C,IAAK,QAAQ,CAAC,SAAS,EAAG;gBAEtB,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,WAAW,AAAC;gBAE7D,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAG,CAAG;oBAE/B,MAAM,CAAE,CAAC,CAAE,GAAG;wBAAE,OAAO,EAAE,EAAE;qBAAE,CAAC;oBAE9B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,QAAQ,CAAC,WAAW,EAAE,IAAC,EAAG,CAAG;wBAE9C,MAAM,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,IAAI,CAAE,QAAQ,CAAC,OAAO,CAAE,CAAC,GAAG,QAAQ,CAAC,WAAW,GAAG,IAAC,CAAE,CAAE,CAAC;wBAC7E,MAAM,CAAE,CAAC,CAAE,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;wBACrC,MAAM,CAAE,CAAC,CAAE,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;wBACnC,MAAM,CAAE,CAAC,CAAE,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;qBAExC;iBAEJ;gBAED,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC;aAE1B,MAAM;gBAEH,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;gBACrC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;gBACvC,OAAO,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;aAEtC;YAED,IAAK,QAAQ,CAAC,WAAW,KAAK,CAAC,EAE3B,OAAO,CAAC,SAAS,GAAG,YAAY,CAAC;YAIrC,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;YACjC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;YAE3B,IAAK,MAAM,EAAG,MAAM,CAAE,OAAO,CAAE,CAAC;SAEnC,EAAE,UAAU,EAAE,OAAO,CAAE,CAAC;QAI7B,OAAO,OAAO,CAAC;KAElB;CAEJ;AAED,MAAM,WAAW,SAAS,MAAM;IAE5B,YAAa,OAAO,CAAG;QAEnB,KAAK,CAAE,OAAO,CAAE,CAAC;KAEpB;IAED,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAG;QAErC,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAErD,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAE,GAAG,CAAE,CAAC;QAErC,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAE,GAAG,CAAE,AAAC;QAEhC,IAAK,MAAM,KAAK,SAAS,EAAG;YAExB,KAAK,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;YAE/B,UAAU,CAAE,WAAY;gBAEpB,IAAK,MAAM,EAAG,MAAM,CAAE,MAAM,CAAE,CAAC;gBAE/B,KAAK,CAAC,OAAO,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC;aAEhC,EAAE,CAAC,CAAE,CAAC;YAEP,OAAO,MAAM,CAAC;SAEjB;QAED,MAAM,KAAK,GAAG,eAAe,CAAE,KAAK,CAAE,AAAC;QAEvC,SAAS,WAAW,GAAG;YAEnB,oBAAoB,EAAE,CAAC;YAEvB,KAAK,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAE,CAAC;YAEvB,IAAK,MAAM,EAAG,MAAM,CAAE,IAAI,CAAE,CAAC;YAE7B,KAAK,CAAC,OAAO,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC;SAEhC;QAED,SAAS,YAAY,CAAE,KAAK,EAAG;YAE3B,oBAAoB,EAAE,CAAC;YAEvB,IAAK,OAAO,EAAG,OAAO,CAAE,KAAK,CAAE,CAAC;YAEhC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;YAC/B,KAAK,CAAC,OAAO,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC;SAEhC;QAED,SAAS,oBAAoB,GAAG;YAE5B,KAAK,CAAC,mBAAmB,CAAE,MAAM,EAAE,WAAW,EAAE,KAAK,CAAE,CAAC;YACxD,KAAK,CAAC,mBAAmB,CAAE,OAAO,EAAE,YAAY,EAAE,KAAK,CAAE,CAAC;SAE7D;QAED,KAAK,CAAC,gBAAgB,CAAE,MAAM,EAAE,WAAW,EAAE,KAAK,CAAE,CAAC;QACrD,KAAK,CAAC,gBAAgB,CAAE,OAAO,EAAE,YAAY,EAAE,KAAK,CAAE,CAAC;QAEvD,IAAK,GAAG,CAAC,KAAK,CAAE,CAAC,EAAE,CAAC,CAAE,KAAK,OAAO,EAE9B;YAAA,IAAK,IAAI,CAAC,WAAW,KAAK,SAAS,EAAG,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SAAA,AAE9E;QAED,KAAK,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;QAE/B,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;QAEhB,OAAO,KAAK,CAAC;KAEhB;CAEJ;AAED,MAAM,iBAAiB,SAAS,MAAM;IAElC,YAAa,OAAO,CAAG;QAEnB,KAAK,CAAE,OAAO,CAAE,CAAC;KAEpB;IAED,IAAI,CAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAG;QAEtC,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,AAAC;QAElC,MAAM,MAAM,GAAG,IAAI,WAAW,CAAE,IAAI,CAAC,OAAO,CAAE,AAAC;QAC/C,MAAM,CAAC,cAAc,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;QAC1C,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAE5B,IAAI,MAAM,GAAG,CAAC,AAAC;QAEf,SAAS,WAAW,CAAE,IAAC,EAAG;YAEtB,MAAM,CAAC,IAAI,CAAE,IAAI,CAAE,IAAC,CAAE,EAAE,SAAW,KAAK,EAAG;gBAEvC,OAAO,CAAC,MAAM,CAAE,IAAC,CAAE,GAAG,KAAK,CAAC;gBAE5B,MAAM,EAAG,CAAC;gBAEV,IAAK,MAAM,KAAK,CAAC,EAAG;oBAEhB,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;oBAE3B,IAAK,MAAM,EAAG,MAAM,CAAE,OAAO,CAAE,CAAC;iBAEnC;aAEJ,EAAE,SAAS,EAAE,OAAO,CAAE,CAAC;SAE3B;QAED,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAG,IAAC,CAElC,WAAW,CAAE,IAAC,CAAE,CAAC;QAIrB,OAAO,OAAO,CAAC;KAElB;CAEJ;AAED;;;;IAIG,CAEH,MAAM,iBAAiB,SAAS,MAAM;IAElC,YAAa,OAAO,CAAG;QAEnB,KAAK,CAAE,OAAO,CAAE,CAAC;KAEpB;IAED,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAG;QAErC,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,AAAC;QAElC,MAAM,MAAM,GAAG,IAAI,UAAU,CAAE,IAAI,CAAC,OAAO,CAAE,AAAC;QAC9C,MAAM,CAAC,eAAe,CAAE,aAAa,CAAE,CAAC;QACxC,MAAM,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;QAC9C,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAC5B,MAAM,CAAC,kBAAkB,CAAE,KAAK,CAAC,eAAe,CAAE,CAAC;QACnD,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,SAAW,MAAM,EAAG;YAElC,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAE,MAAM,CAAE,AAAC;YAEtC,IAAK,CAAE,OAAO,EAAG,OAAO;YAExB,IAAK,OAAO,CAAC,KAAK,KAAK,SAAS,EAE5B,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;iBAE3B,IAAK,OAAO,CAAC,IAAI,KAAK,SAAS,EAAG;gBAErC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;gBACpC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;gBACtC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;aAErC;YAED,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,KAAK,GAAG,mBAAmB,CAAC;YAClF,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,KAAK,GAAG,mBAAmB,CAAC;YAElF,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,KAAK,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,YAAY,CAAC;YACvF,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,KAAK,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,YAAY,CAAC;YAEvF,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,KAAK,SAAS,GAAG,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;YAE/E,IAAK,OAAO,CAAC,QAAQ,KAAK,SAAS,EAE/B,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YAIxC,IAAK,OAAO,CAAC,KAAK,KAAK,SAAS,EAE5B,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAIlC,IAAK,OAAO,CAAC,MAAM,KAAK,SAAS,EAE7B,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YAIpC,IAAK,OAAO,CAAC,IAAI,KAAK,SAAS,EAE3B,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YAIhC,IAAK,OAAO,CAAC,OAAO,KAAK,SAAS,EAAG;gBAEjC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;gBAClC,OAAO,CAAC,SAAS,GAAG,wBAAwB,CAAC,CAAC,gBAAgB;aAEjE;YAED,IAAK,OAAO,CAAC,WAAW,KAAK,CAAC,EAE1B,OAAO,CAAC,SAAS,GAAG,YAAY,CAAC;YAIrC,IAAK,OAAO,CAAC,eAAe,KAAK,SAAS,EAEtC,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;YAItD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;YAE3B,IAAK,MAAM,EAAG,MAAM,CAAE,OAAO,EAAE,OAAO,CAAE,CAAC;SAE5C,EAAE,UAAU,EAAE,OAAO,CAAE,CAAC;QAGzB,OAAO,OAAO,CAAC;KAElB;CAEJ;AAED,MAAM,aAAa,SAAS,MAAM;IAE9B,YAAa,OAAO,CAAG;QAEnB,KAAK,CAAE,OAAO,CAAE,CAAC;KAEpB;IAED,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAG;QAErC,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,AAAC;QAE9B,MAAM,MAAM,GAAG,IAAI,WAAW,CAAE,IAAI,CAAC,OAAO,CAAE,AAAC;QAC/C,MAAM,CAAC,cAAc,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;QAC1C,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAE5B,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,SAAW,KAAK,EAAG;YAEjC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;YACtB,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;YAE3B,IAAK,MAAM,KAAK,SAAS,EAErB,MAAM,CAAE,OAAO,CAAE,CAAC;SAIzB,EAAE,UAAU,EAAE,OAAO,CAAE,CAAC;QAEzB,OAAO,OAAO,CAAC;KAElB;CAEJ;AAED,MAAM,KAAK,SAAS,QAAQ;IAExB,YAAa,KAAK,EAAE,SAAS,GAAG,CAAC,CAAG;QAEhC,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QAEpB,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAE,KAAK,CAAE,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAE9B;IAED,OAAO,GAAG;IAEN,sDAAsD;KAEzD;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAE,IAAI,CAAE,AAAC;QAElC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAEvC,IAAK,IAAI,CAAC,WAAW,KAAK,SAAS,EAAG,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAE1F,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACxE,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC/D,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC/D,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAExE,IAAK,IAAI,CAAC,MAAM,KAAK,SAAS,EAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QAE3E,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;AAE/B,MAAM,eAAe,SAAS,KAAK;IAE/B,YAAa,QAAQ,EAAE,WAAW,EAAE,SAAS,CAAG;QAE5C,KAAK,CAAE,QAAQ,EAAE,SAAS,CAAE,CAAC;QAE7B,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAE9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,QAAQ,CAAC,SAAS,CAAE,CAAC;QACzC,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,CAAE,WAAW,CAAE,CAAC;KAE/C;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAE,IAAI,EAAE,MAAM,CAAE,CAAC;QAE1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;QAE5C,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,eAAe,CAAC,SAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAEnD,MAAM,mBAAmB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACxD,MAAM,qBAAqB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1D,MAAM,aAAa,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAElD,MAAM,WAAW;IAEb,YAAa,MAAM,CAAG;QAElB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QAErB,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;QAEvC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;QAE5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEzC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG;YAEd,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;SAE5B,CAAC;KAEL;IAED,gBAAgB,GAAG;QAEf,OAAO,IAAI,CAAC,cAAc,CAAC;KAE9B;IAED,UAAU,GAAG;QAET,OAAO,IAAI,CAAC,QAAQ,CAAC;KAExB;IAED,cAAc,CAAE,KAAK,EAAG;QAEpB,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,AAAC;QACjC,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,AAAC;QAEjC,qBAAqB,CAAC,qBAAqB,CAAE,KAAK,CAAC,WAAW,CAAE,CAAC;QACjE,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAE,qBAAqB,CAAE,CAAC;QAEpD,aAAa,CAAC,qBAAqB,CAAE,KAAK,CAAC,MAAM,CAAC,WAAW,CAAE,CAAC;QAChE,YAAY,CAAC,MAAM,CAAE,aAAa,CAAE,CAAC;QACrC,YAAY,CAAC,iBAAiB,EAAE,CAAC;QAEjC,mBAAmB,CAAC,gBAAgB,CAAE,YAAY,CAAC,gBAAgB,EAAE,YAAY,CAAC,kBAAkB,CAAE,CAAC;QACvG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAE,mBAAmB,CAAE,CAAC;QAE7D,YAAY,CAAC,GAAG,CACZ,GAAG,EAAE,CAAG,EAAE,CAAG,EAAE,GAAG,EAClB,CAAG,EAAE,GAAG,EAAE,CAAG,EAAE,GAAG,EAClB,CAAG,EAAE,CAAG,EAAE,GAAG,EAAE,GAAG,EAClB,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,CACrB,CAAC;QAEF,YAAY,CAAC,QAAQ,CAAE,YAAY,CAAC,gBAAgB,CAAE,CAAC;QACvD,YAAY,CAAC,QAAQ,CAAE,YAAY,CAAC,kBAAkB,CAAE,CAAC;KAE5D;IAED,WAAW,CAAE,aAAa,EAAG;QAEzB,OAAO,IAAI,CAAC,UAAU,CAAE,aAAa,CAAE,CAAC;KAE3C;IAED,eAAe,GAAG;QAEd,OAAO,IAAI,CAAC,aAAa,CAAC;KAE7B;IAED,OAAO,GAAG;QAEN,IAAK,IAAI,CAAC,GAAG,EAET,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAIvB,IAAK,IAAI,CAAC,OAAO,EAEb,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;KAI9B;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QAEpC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAE5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,MAAM,CAAC,OAAO,CAAE,CAAC;QAEpC,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;IAED,MAAM,GAAG;QAEL,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,IAAK,IAAI,CAAC,IAAI,KAAK,CAAC,EAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC/C,IAAK,IAAI,CAAC,UAAU,KAAK,CAAC,EAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACjE,IAAK,IAAI,CAAC,MAAM,KAAK,CAAC,EAAG,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACrD,IAAK,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,EAAG,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAEhG,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,KAAK,CAAE,CAAC,MAAM,CAAC;QACnD,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;QAE5B,OAAO,MAAM,CAAC;KAEjB;CAEJ;AAED,MAAM,eAAe,SAAS,WAAW;IAErC,aAAc;QAEV,KAAK,CAAE,IAAI,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAE,CAAE,CAAC;QAElD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;KAElB;IAED,cAAc,CAAE,KAAK,EAAG;QAEpB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,MAAM,IAAG,GAAG,OAAO,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;QACnD,MAAM,OAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,AAAC;QACxD,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,AAAC;QAEzC,IAAK,IAAG,KAAK,MAAM,CAAC,GAAG,IAAI,OAAM,KAAK,MAAM,CAAC,MAAM,IAAI,GAAG,KAAK,MAAM,CAAC,GAAG,EAAG;YAExE,MAAM,CAAC,GAAG,GAAG,IAAG,CAAC;YACjB,MAAM,CAAC,MAAM,GAAG,OAAM,CAAC;YACvB,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;YACjB,MAAM,CAAC,sBAAsB,EAAE,CAAC;SAEnC;QAED,KAAK,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;KAEjC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,eAAe,CAAC,SAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAEnD,MAAM,SAAS,SAAS,KAAK;IAEzB,YAAa,KAAK,EAAE,SAAS,EAAE,QAAQ,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAG;QAExF,KAAK,CAAE,KAAK,EAAE,SAAS,CAAE,CAAC;QAE1B,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QAExB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,QAAQ,CAAC,SAAS,CAAE,CAAC;QACzC,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;QAE7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,8CAA8C;QAElE,IAAI,CAAC,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;KAEvC;IAED,IAAI,KAAK,GAAG;QAER,iFAAiF;QACjF,oFAAmF;QAClF,OAAM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;KAEnC;IAED,IAAI,KAAK,CAAE,KAAK,EAAG;QAEf,qFAAqF;QACrF,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC;KAEpC;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;KAEzB;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAE1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QAEpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QAEpC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;AAEvC,MAAM,iBAAiB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACtD,MAAM,mBAAmB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACxD,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAEhD,MAAM,gBAAgB,SAAS,WAAW;IAEtC,aAAc;QAEV,KAAK,CAAE,IAAI,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAE,CAAE,CAAC;QAElD,IAAI,CAAC,aAAa,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEzC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG;YACd,4DAA4D;YAC5D,yBAAyB;YACzB,EAAE;YACF,QAAQ;YACR,QAAQ;YACR,EAAE;YACF,2BAA2B;YAC3B,2BAA2B;YAC3B,2BAA2B;YAC3B,2BAA2B;YAC3B,2BAA2B;YAC3B,2BAA2B;YAE3B,aAAa;YACb,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YACzB,aAAa;YACb,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YACzB,aAAa;YACb,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YACzB,aAAa;YACb,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YACzB,aAAa;YACb,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YACzB,aAAa;YACb,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;SAC5B,CAAC;QAEF,IAAI,CAAC,eAAe,GAAG;YACnB,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YAAE,IAAI,OAAO,CAAE,EAAG,EAAE,CAAC,EAAE,CAAC,CAAE;YAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YACxE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE;YAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YAAE,IAAI,OAAO,CAAE,CAAC,EAAE,EAAG,EAAE,CAAC,CAAE;SAC7E,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG;YACZ,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YACtE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;YAAE,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE;SAC3E,CAAC;KAEL;IAED,cAAc,CAAE,KAAK,EAAE,aAAa,GAAG,CAAC,EAAG;QAEvC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAC3B,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,AAAC;QAEjC,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,AAAC;QAEzC,IAAK,GAAG,KAAK,MAAM,CAAC,GAAG,EAAG;YAEtB,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;YACjB,MAAM,CAAC,sBAAsB,EAAE,CAAC;SAEnC;QAED,mBAAmB,CAAC,qBAAqB,CAAE,KAAK,CAAC,WAAW,CAAE,CAAC;QAC/D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAE,mBAAmB,CAAE,CAAC;QAE5C,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,QAAQ,CAAE,CAAC;QACpC,WAAW,CAAC,GAAG,CAAE,IAAI,CAAC,eAAe,CAAE,aAAa,CAAE,CAAE,CAAC;QACzD,MAAM,CAAC,EAAE,CAAC,IAAI,CAAE,IAAI,CAAC,QAAQ,CAAE,aAAa,CAAE,CAAE,CAAC;QACjD,MAAM,CAAC,MAAM,CAAE,WAAW,CAAE,CAAC;QAC7B,MAAM,CAAC,iBAAiB,EAAE,CAAC;QAE3B,YAAY,CAAC,eAAe,CAAE,CAAE,mBAAmB,CAAC,CAAC,EAAE,CAAE,mBAAmB,CAAC,CAAC,EAAE,CAAE,mBAAmB,CAAC,CAAC,CAAE,CAAC;QAE1G,iBAAiB,CAAC,gBAAgB,CAAE,MAAM,CAAC,gBAAgB,EAAE,MAAM,CAAC,kBAAkB,CAAE,CAAC;QACzF,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAE,iBAAiB,CAAE,CAAC;KAE9D;CAEJ;AAED,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAErD,MAAM,UAAU,SAAS,KAAK;IAE1B,YAAa,KAAK,EAAE,SAAS,EAAE,QAAQ,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAG;QAErD,KAAK,CAAE,KAAK,EAAE,SAAS,CAAE,CAAC;QAE1B,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;QAEzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,8CAA8C;QAElE,IAAI,CAAC,MAAM,GAAG,IAAI,gBAAgB,EAAE,CAAC;KAExC;IAED,IAAI,KAAK,GAAG;QAER,iFAAiF;QACjF,oFAAmF;QAClF,OAAM,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;KAEvC;IAED,IAAI,KAAK,CAAE,KAAK,EAAG;QAEf,qFAAqF;QACrF,IAAI,CAAC,SAAS,GAAG,KAAK,GAAK,CAAA,CAAC,GAAG,IAAI,CAAC,EAAE,CAAA,AAAE,CAAC;KAE5C;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;KAEzB;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAE1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QAEpC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,UAAU,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AAEzC,MAAM,sBAAsB,SAAS,WAAW;IAE5C,aAAc;QAEV,KAAK,CAAE,IAAI,kBAAkB,CAAE,EAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAE,CAAC;KAE/D;CAEJ;AAED,sBAAsB,CAAC,SAAS,CAAC,wBAAwB,GAAG,IAAI,CAAC;AAEjE,MAAM,gBAAgB,SAAS,KAAK;IAEhC,YAAa,KAAK,EAAE,SAAS,CAAG;QAE5B,KAAK,CAAE,KAAK,EAAE,SAAS,CAAE,CAAC;QAE1B,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;QAE/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,QAAQ,CAAC,SAAS,CAAE,CAAC;QACzC,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;QAE7B,IAAI,CAAC,MAAM,GAAG,IAAI,sBAAsB,EAAE,CAAC;KAE9C;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;KAEzB;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QAEpC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,gBAAgB,CAAC,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAErD,MAAM,YAAY,SAAS,KAAK;IAE5B,YAAa,KAAK,EAAE,SAAS,CAAG;QAE5B,KAAK,CAAE,KAAK,EAAE,SAAS,CAAE,CAAC;QAE1B,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;KAE9B;CAEJ;AAED,YAAY,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC;AAE7C,MAAM,aAAa,SAAS,KAAK;IAE7B,YAAa,KAAK,EAAE,SAAS,EAAE,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG,EAAE,CAAG;QAErD,KAAK,CAAE,KAAK,EAAE,SAAS,CAAE,CAAC;QAE1B,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAE5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KAExB;IAED,IAAI,KAAK,GAAG;QAER,8EAA8E;QAC9E,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC;KAE9D;IAED,IAAI,KAAK,CAAE,KAAK,EAAG;QAEf,kFAAkF;QAClF,IAAI,CAAC,SAAS,GAAG,KAAK,GAAK,CAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAA,AAAE,CAAC;KAEnE;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAE,IAAI,CAAE,AAAC;QAElC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,aAAa,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC;AAE/C;;;;;;IAMG,CAEH,sCAAsC;AAEtC,MAAM,mBAAmB;IAErB,aAAc;QAEV,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,IAAI,OAAO,EAAE,CAAE,CAAC;KAI/C;IAED,GAAG,CAAE,YAAY,EAAG;QAEhB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,IAAI,CAAC,YAAY,CAAE,IAAC,CAAE,CAAC,IAAI,CAAE,YAAY,CAAE,IAAC,CAAE,CAAE,CAAC;QAIrD,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,GAAG;QAEH,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,IAAI,CAAC,YAAY,CAAE,IAAC,CAAE,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAI1C,OAAO,IAAI,CAAC;KAEf;IAED,kDAAkD;IAClD,sBAAsB;IACtB,KAAK,CAAE,MAAM,EAAE,MAAM,EAAG;QAEpB,sCAAsC;QAEtC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,AAAC;QAE/C,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,AAAC;QAEhC,SAAS;QACT,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC,cAAc,CAAE,QAAQ,CAAE,CAAC;QAErD,SAAS;QACT,MAAM,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAG,CAAC,CAAE,CAAC;QACnD,MAAM,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAG,CAAC,CAAE,CAAC;QACnD,MAAM,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAG,CAAC,CAAE,CAAC;QAEnD,SAAS;QACT,MAAM,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAK,CAAA,CAAC,GAAG,CAAC,CAAA,AAAE,CAAE,CAAC;QAC3D,MAAM,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAK,CAAA,CAAC,GAAG,CAAC,CAAA,AAAE,CAAE,CAAC;QAC3D,MAAM,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAK,CAAA,CAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAG,CAAA,AAAE,CAAE,CAAC;QACvE,MAAM,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAK,CAAA,CAAC,GAAG,CAAC,CAAA,AAAE,CAAE,CAAC;QAC3D,MAAM,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAK,CAAA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,AAAE,CAAE,CAAC;QAEnE,OAAO,MAAM,CAAC;KAEjB;IAED,0FAA0F;IAC1F,sBAAsB;IACtB,yDAAyD;IACzD,eAAe,CAAE,MAAM,EAAE,MAAM,EAAG;QAE9B,sCAAsC;QAEtC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,AAAC;QAE/C,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,AAAC;QAEhC,SAAS;QACT,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,CAAE,CAAE,CAAC,cAAc,CAAE,QAAQ,CAAE,CAAC,CAAC,gBAAe;QAEpE,SAAQ;QACT,MAAM,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAc,GAAG,CAAC,CAAE,CAAC,CAAC,4BAA2B;QACpF,MAAK,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAc,GAAG,CAAC,CAAE,CAAC;QACzD,MAAM,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAc,GAAG,CAAC,CAAE,CAAC;QAEzD,SAAS;QACT,MAAM,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAc,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,wBAAuB;QACpF,MAAK,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAc,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;QAC7D,MAAM,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAE,CAAC,CAAC,4BAA2B;QAC7F,MAAK,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAc,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;QAC7D,MAAM,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAK,CAAA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,AAAE,CAAE,CAAC,CAAC,wBAAuB;QAE3F,OAAO,MAAM,CAAC;KAEjB;IAED,GAAG,CAAE,EAAE,EAAG;QAEN,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,IAAI,CAAC,YAAY,CAAE,IAAC,CAAE,CAAC,GAAG,CAAE,EAAE,CAAC,YAAY,CAAE,IAAC,CAAE,CAAE,CAAC;QAIvD,OAAO,IAAI,CAAC;KAEf;IAED,WAAW,CAAE,EAAE,EAAE,CAAC,EAAG;QAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,IAAI,CAAC,YAAY,CAAE,IAAC,CAAE,CAAC,eAAe,CAAE,EAAE,CAAC,YAAY,CAAE,IAAC,CAAE,EAAE,CAAC,CAAE,CAAC;QAItE,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,CAAC,EAAG;QAEP,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,IAAI,CAAC,YAAY,CAAE,IAAC,CAAE,CAAC,cAAc,CAAE,CAAC,CAAE,CAAC;QAI/C,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,EAAE,EAAE,KAAK,EAAG;QAEd,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,IAAI,CAAC,YAAY,CAAE,IAAC,CAAE,CAAC,IAAI,CAAE,EAAE,CAAC,YAAY,CAAE,IAAC,CAAE,EAAE,KAAK,CAAE,CAAC;QAI/D,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,EAAE,EAAG;QAET,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE3B,IAAK,CAAE,IAAI,CAAC,YAAY,CAAE,IAAC,CAAE,CAAC,MAAM,CAAE,EAAE,CAAC,YAAY,CAAE,IAAC,CAAE,CAAE,EAExD,OAAO,KAAK,CAAC;SAIpB;QAED,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,EAAE,EAAG;QAEP,OAAO,IAAI,CAAC,GAAG,CAAE,EAAE,CAAC,YAAY,CAAE,CAAC;KAEtC;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;IAED,SAAS,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAG;QAE3B,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,AAAC;QAEvC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,YAAY,CAAE,IAAC,CAAE,CAAC,SAAS,CAAE,KAAK,EAAE,MAAM,GAAK,IAAC,GAAG,CAAC,AAAE,CAAE,CAAC;QAI7D,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,EAAG;QAE9B,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,AAAC;QAEvC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAExB,YAAY,CAAE,IAAC,CAAE,CAAC,OAAO,CAAE,KAAK,EAAE,MAAM,GAAK,IAAC,GAAG,CAAC,AAAE,CAAE,CAAC;QAI3D,OAAO,KAAK,CAAC;KAEhB;IAED,+BAA+B;IAC/B,2BAA2B;IAC3B,OAAO,UAAU,CAAE,MAAM,EAAE,OAAO,EAAG;QAEjC,sCAAsC;QAEtC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,AAAC;QAE/C,SAAS;QACT,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,CAAC;QAExB,SAAS;QACT,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG,CAAC,CAAC;QAC5B,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG,CAAC,CAAC;QAC5B,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG,CAAC,CAAC;QAE5B,SAAS;QACT,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QAChC,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QAChC,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAK,CAAA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,AAAE,CAAC;QAC5C,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QAChC,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAK,CAAA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,AAAE,CAAC;KAE/C;CAEJ;AAED,mBAAmB,CAAC,SAAS,CAAC,qBAAqB,GAAG,IAAI,CAAC;AAE3D,MAAM,UAAU,SAAS,KAAK;IAE1B,YAAa,EAAE,GAAG,IAAI,mBAAmB,EAAE,EAAE,SAAS,GAAG,CAAC,CAAG;QAEzD,KAAK,CAAE,SAAS,EAAE,SAAS,CAAE,CAAC;QAE9B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KAEhB;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAE,MAAM,CAAC,EAAE,CAAE,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,IAAI,EAAG;QAEb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,2CAA2C;QAC5E,IAAI,CAAC,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC;QAE7B,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAE,IAAI,CAAE,AAAC;QAElC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QAEnC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,UAAU,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AAEzC,MAAM,cAAc,SAAS,MAAM;IAE/B,YAAa,OAAO,CAAG;QAEnB,KAAK,CAAE,OAAO,CAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KAEtB;IAED,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAG;QAErC,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,MAAM,MAAM,GAAG,IAAI,UAAU,CAAE,KAAK,CAAC,OAAO,CAAE,AAAC;QAC/C,MAAM,CAAC,OAAO,CAAE,KAAK,CAAC,IAAI,CAAE,CAAC;QAC7B,MAAM,CAAC,gBAAgB,CAAE,KAAK,CAAC,aAAa,CAAE,CAAC;QAC/C,MAAM,CAAC,kBAAkB,CAAE,KAAK,CAAC,eAAe,CAAE,CAAC;QACnD,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,SAAW,IAAI,EAAG;YAEhC,IAAI;gBAEA,MAAM,CAAE,KAAK,CAAC,KAAK,CAAE,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,CAAE,CAAE,CAAC;aAE/C,CAAC,OAAQ,CAAC,EAAG;gBAEV,IAAK,OAAO,EAER,OAAO,CAAE,CAAC,CAAE,CAAC;qBAIb,OAAO,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;gBAIvB,KAAK,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;aAElC;SAEJ,EAAE,UAAU,EAAE,OAAO,CAAE,CAAC;KAE5B;IAED,KAAK,CAAE,IAAI,EAAG;QAEV,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAE/B,SAAS,UAAU,CAAE,IAAI,EAAG;YAExB,IAAK,QAAQ,CAAE,IAAI,CAAE,KAAK,SAAS,EAE/B,OAAO,CAAC,IAAI,CAAE,yCAAyC,EAAE,IAAI,CAAE,CAAC;YAIpE,OAAO,QAAQ,CAAE,IAAI,CAAE,CAAC;SAE3B;QAED,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAE,IAAI,CAAC,IAAI,CAAE,AAAC;QAEhD,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACzD,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACzD,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,QAAQ,CAAC,KAAK,KAAK,SAAS,EAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;QACpG,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACxE,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACxE,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAAG,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5D,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG,QAAQ,CAAC,UAAU,GAAG,IAAI,KAAK,EAAE,CAAC,MAAM,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QACjG,IAAK,IAAI,CAAC,cAAc,KAAK,SAAS,EAAG,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QACvF,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,QAAQ,CAAC,QAAQ,KAAK,SAAS,EAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;QAChH,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,QAAQ,CAAC,QAAQ,KAAK,SAAS,EAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;QAChH,IAAK,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAG,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAChG,IAAK,IAAI,CAAC,aAAa,KAAK,SAAS,IAAI,QAAQ,CAAC,aAAa,KAAK,SAAS,EAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;QACpI,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACxE,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACxE,IAAK,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAG,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACnG,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAAG,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACjF,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACxE,IAAK,IAAI,CAAC,mBAAmB,KAAK,SAAS,EAAG,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACtG,IAAK,IAAI,CAAC,gBAAgB,KAAK,SAAS,IAAI,QAAQ,CAAC,gBAAgB,KAAK,SAAS,EAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC;QAChJ,IAAK,IAAI,CAAC,GAAG,KAAK,SAAS,EAAG,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACtD,IAAK,IAAI,CAAC,WAAW,KAAK,SAAS,EAAG,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9E,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACrE,IAAK,IAAI,CAAC,OAAO,KAAK,SAAS,EAAG,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAClE,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACzD,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3E,IAAK,IAAI,CAAC,OAAO,KAAK,SAAS,EAAG,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAClE,IAAK,IAAI,CAAC,WAAW,KAAK,SAAS,EAAG,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9E,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACxE,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACxE,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3E,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAE3E,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAAG,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACjF,IAAK,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAG,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC7F,IAAK,IAAI,CAAC,WAAW,KAAK,SAAS,EAAG,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9E,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3E,IAAK,IAAI,CAAC,eAAe,KAAK,SAAS,EAAG,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC1F,IAAK,IAAI,CAAC,WAAW,KAAK,SAAS,EAAG,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9E,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAAG,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACjF,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAAG,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAEjF,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACxE,IAAK,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAG,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACnG,IAAK,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAG,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC7F,IAAK,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAG,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAEhG,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAErE,IAAK,IAAI,CAAC,SAAS,KAAK,CAAC,EAAG,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChE,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACrE,IAAK,IAAI,CAAC,OAAO,KAAK,SAAS,EAAG,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAClE,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAAG,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAE5D,IAAK,IAAI,CAAC,aAAa,KAAK,SAAS,EAAG,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACpF,IAAK,IAAI,CAAC,mBAAmB,KAAK,SAAS,EAAG,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACtG,IAAK,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAG,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAEnG,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAExE,IAAK,IAAI,CAAC,eAAe,KAAK,SAAS,EAAG,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC1F,IAAK,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAG,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAEnG,IAAK,IAAI,CAAC,OAAO,KAAK,SAAS,EAAG,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAElE,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAE3E,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAErE,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS;YAEhC,IAAK,OAAO,IAAI,CAAC,YAAY,KAAK,QAAQ,EAEtC,QAAQ,CAAC,YAAY,GAAG,AAAE,IAAI,CAAC,YAAY,GAAG,CAAC,GAAK,IAAI,GAAG,KAAK,CAAC;iBAIjE,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SAIjD;QAED,kBAAkB;QAElB,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAE5B,IAAM,MAAM,KAAI,IAAI,IAAI,CAAC,QAAQ,CAAG;YAEhC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAE,KAAI,CAAE,AAAC;YAEtC,QAAQ,CAAC,QAAQ,CAAE,KAAI,CAAE,GAAG,EAAE,CAAC;YAE/B,OAAS,OAAO,CAAC,IAAI;gBAEjB,KAAK,GAAG;oBACJ,QAAQ,CAAC,QAAQ,CAAE,KAAI,CAAE,CAAC,KAAK,GAAG,UAAU,CAAE,OAAO,CAAC,KAAK,CAAE,CAAC;oBAC9D,MAAM;gBAEV,KAAK,GAAG;oBACJ,QAAQ,CAAC,QAAQ,CAAE,KAAI,CAAE,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,MAAM,CAAE,OAAO,CAAC,KAAK,CAAE,CAAC;oBACtE,MAAM;gBAEV,KAAK,IAAI;oBACL,QAAQ,CAAC,QAAQ,CAAE,KAAI,CAAE,CAAC,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC,SAAS,CAAE,OAAO,CAAC,KAAK,CAAE,CAAC;oBAC3E,MAAM;gBAEV,KAAK,IAAI;oBACL,QAAQ,CAAC,QAAQ,CAAE,KAAI,CAAE,CAAC,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC,SAAS,CAAE,OAAO,CAAC,KAAK,CAAE,CAAC;oBAC3E,MAAM;gBAEV,KAAK,IAAI;oBACL,QAAQ,CAAC,QAAQ,CAAE,KAAI,CAAE,CAAC,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC,SAAS,CAAE,OAAO,CAAC,KAAK,CAAE,CAAC;oBAC3E,MAAM;gBAEV,KAAK,IAAI;oBACL,QAAQ,CAAC,QAAQ,CAAE,KAAI,CAAE,CAAC,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC,SAAS,CAAE,OAAO,CAAC,KAAK,CAAE,CAAC;oBAC3E,MAAM;gBAEV,KAAK,IAAI;oBACL,QAAQ,CAAC,QAAQ,CAAE,KAAI,CAAE,CAAC,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC,SAAS,CAAE,OAAO,CAAC,KAAK,CAAE,CAAC;oBAC3E,MAAM;gBAEV;oBACI,QAAQ,CAAC,QAAQ,CAAE,KAAI,CAAE,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;aAEvD;SAEJ;QAIL,IAAK,IAAI,CAAC,OAAO,KAAK,SAAS,EAAG,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAClE,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAAG,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACjF,IAAK,IAAI,CAAC,cAAc,KAAK,SAAS,EAAG,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAEvF,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAE9B,IAAM,MAAM,GAAG,IAAI,IAAI,CAAC,UAAU,CAE9B,QAAQ,CAAC,UAAU,CAAE,GAAG,CAAE,GAAG,IAAI,CAAC,UAAU,CAAE,GAAG,CAAE,CAAC;QAM5D,aAAa;QAEb,IAAK,IAAI,CAAC,OAAO,KAAK,SAAS,EAAG,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,oBAAoB;QAEjG,qBAAqB;QAErB,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACzD,IAAK,IAAI,CAAC,eAAe,KAAK,SAAS,EAAG,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAE1F,OAAO;QAEP,IAAK,IAAI,CAAC,GAAG,KAAK,SAAS,EAAG,QAAQ,CAAC,GAAG,GAAG,UAAU,CAAE,IAAI,CAAC,GAAG,CAAE,CAAC;QACpE,IAAK,IAAI,CAAC,MAAM,KAAK,SAAS,EAAG,QAAQ,CAAC,MAAM,GAAG,UAAU,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAE7E,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,QAAQ,CAAC,QAAQ,GAAG,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;QAEnF,IAAK,IAAI,CAAC,OAAO,KAAK,SAAS,EAAG,QAAQ,CAAC,OAAO,GAAG,UAAU,CAAE,IAAI,CAAC,OAAO,CAAE,CAAC;QAChF,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAExE,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,QAAQ,CAAC,SAAS,GAAG,UAAU,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC;QACtF,IAAK,IAAI,CAAC,aAAa,KAAK,SAAS,EAAG,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACpF,IAAK,IAAI,CAAC,WAAW,KAAK,SAAS,EAAG;YAElC,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,AAAC;YAEnC,IAAK,KAAK,CAAC,OAAO,CAAE,WAAW,CAAE,KAAK,KAAK,EAEvC,sDAAsD;YAEtD,WAAW,GAAG;gBAAE,WAAW;gBAAE,WAAW;aAAE,CAAC;YAI/C,QAAQ,CAAC,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC,SAAS,CAAE,WAAW,CAAE,CAAC;SAEjE;QAED,IAAK,IAAI,CAAC,eAAe,KAAK,SAAS,EAAG,QAAQ,CAAC,eAAe,GAAG,UAAU,CAAE,IAAI,CAAC,eAAe,CAAE,CAAC;QACxG,IAAK,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAG,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAChG,IAAK,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAG,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAE7F,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAAG,QAAQ,CAAC,YAAY,GAAG,UAAU,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;QAC/F,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAAG,QAAQ,CAAC,YAAY,GAAG,UAAU,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;QAE/F,IAAK,IAAI,CAAC,WAAW,KAAK,SAAS,EAAG,QAAQ,CAAC,WAAW,GAAG,UAAU,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;QAC5F,IAAK,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAG,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAEhG,IAAK,IAAI,CAAC,WAAW,KAAK,SAAS,EAAG,QAAQ,CAAC,WAAW,GAAG,UAAU,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;QAC5F,IAAK,IAAI,CAAC,oBAAoB,KAAK,SAAS,EAAG,QAAQ,CAAC,oBAAoB,GAAG,UAAU,CAAE,IAAI,CAAC,oBAAoB,CAAE,CAAC;QACvH,IAAK,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAG,QAAQ,CAAC,gBAAgB,GAAG,UAAU,CAAE,IAAI,CAAC,gBAAgB,CAAE,CAAC;QAE3G,IAAK,IAAI,CAAC,MAAM,KAAK,SAAS,EAAG,QAAQ,CAAC,MAAM,GAAG,UAAU,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAC7E,IAAK,IAAI,CAAC,eAAe,KAAK,SAAS,EAAG,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAE1F,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAAG,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACjF,IAAK,IAAI,CAAC,eAAe,KAAK,SAAS,EAAG,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAE1F,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,QAAQ,CAAC,QAAQ,GAAG,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;QACnF,IAAK,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAG,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAEhG,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAAG,QAAQ,CAAC,KAAK,GAAG,UAAU,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;QAC1E,IAAK,IAAI,CAAC,cAAc,KAAK,SAAS,EAAG,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAEvF,IAAK,IAAI,CAAC,WAAW,KAAK,SAAS,EAAG,QAAQ,CAAC,WAAW,GAAG,UAAU,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;QAE5F,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAAG,QAAQ,CAAC,YAAY,GAAG,UAAU,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;QAC/F,IAAK,IAAI,CAAC,qBAAqB,KAAK,SAAS,EAAG,QAAQ,CAAC,qBAAqB,GAAG,UAAU,CAAE,IAAI,CAAC,qBAAqB,CAAE,CAAC;QAC1H,IAAK,IAAI,CAAC,kBAAkB,KAAK,SAAS,EAAG,QAAQ,CAAC,kBAAkB,GAAG,UAAU,CAAE,IAAI,CAAC,kBAAkB,CAAE,CAAC;QACjH,IAAK,IAAI,CAAC,oBAAoB,KAAK,SAAS,EAAG,QAAQ,CAAC,oBAAoB,GAAG,IAAI,OAAO,EAAE,CAAC,SAAS,CAAE,IAAI,CAAC,oBAAoB,CAAE,CAAC;QAEpI,IAAK,IAAI,CAAC,eAAe,KAAK,SAAS,EAAG,QAAQ,CAAC,eAAe,GAAG,UAAU,CAAE,IAAI,CAAC,eAAe,CAAE,CAAC;QACxG,IAAK,IAAI,CAAC,YAAY,KAAK,SAAS,EAAG,QAAQ,CAAC,YAAY,GAAG,UAAU,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;QAE/F,IAAK,IAAI,CAAC,aAAa,KAAK,SAAS,EAAG,QAAQ,CAAC,aAAa,GAAG,UAAU,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;QAClG,IAAK,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAG,QAAQ,CAAC,iBAAiB,GAAG,UAAU,CAAE,IAAI,CAAC,iBAAiB,CAAE,CAAC;QAE9G,OAAO,QAAQ,CAAC;KAEnB;IAED,WAAW,CAAE,KAAK,EAAG;QAEjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,WAAW;IAEb,OAAO,UAAU,CAAE,KAAK,EAAG;QAEvB,IAAK,OAAO,WAAW,KAAK,WAAW,EAEnC,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAE,KAAK,CAAE,CAAC;QAI7C,mEAAmE;QACnE,sEAAsE;QAEtE,IAAI,CAAC,GAAG,EAAE,AAAC;QAEX,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAE5C,oCAAoC;QACpC,CAAC,IAAI,MAAM,CAAC,YAAY,CAAE,KAAK,CAAE,IAAC,CAAE,CAAE,CAAC;QAI3C,IAAI;YAEA,sCAAsC;YAEtC,OAAO,kBAAkB,CAAE,MAAM,CAAE,CAAC,CAAE,CAAE,CAAC;SAE5C,CAAC,OAAQ,CAAC,EAAG;YAEV,OAAO,CAAC,CAAC;SAEZ;KAEJ;IAED,OAAO,cAAc,CAAE,GAAG,EAAG;QAEzB,MAAM,KAAK,GAAG,GAAG,CAAC,WAAW,CAAE,GAAG,CAAE,AAAC;QAErC,IAAK,KAAK,KAAK,EAAG,EAAG,OAAO,IAAI,CAAC;QAEjC,OAAO,GAAG,CAAC,KAAK,CAAE,CAAC,EAAE,KAAK,GAAG,CAAC,CAAE,CAAC;KAEpC;IAED,OAAO,UAAU,CAAE,GAAG,EAAE,IAAI,EAAG;QAE3B,cAAc;QACd,IAAK,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,EAAE,EAAG,OAAO,EAAE,CAAC;QAEvD,oBAAoB;QACpB,IAAK,gBAAgB,IAAI,CAAE,IAAI,CAAE,IAAI,MAAM,IAAI,CAAE,GAAG,CAAE,EAElD,IAAI,GAAG,IAAI,CAAC,OAAO,4BAA6B,IAAI,CAAE,CAAC;QAI3D,mCAAmC;QACnC,IAAK,mBAAmB,IAAI,CAAE,GAAG,CAAE,EAAG,OAAO,GAAG,CAAC;QAEjD,WAAW;QACX,IAAK,gBAAgB,IAAI,CAAE,GAAG,CAAE,EAAG,OAAO,GAAG,CAAC;QAE9C,WAAW;QACX,IAAK,aAAa,IAAI,CAAE,GAAG,CAAE,EAAG,OAAO,GAAG,CAAC;QAE3C,eAAe;QACf,OAAO,IAAI,GAAG,GAAG,CAAC;KAErB;CAEJ;AAED,MAAM,uBAAuB,SAAS,cAAc;IAEhD,aAAc;QAEV,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,yBAAyB,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;KAEjC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAE1C,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAE,IAAI,CAAE,AAAC;QAElC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAExC,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;QAEtC,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,uBAAuB,CAAC,SAAS,CAAC,yBAAyB,GAAG,IAAI,CAAC;AAEnE,MAAM,oBAAoB,SAAS,MAAM;IAErC,YAAa,OAAO,CAAG;QAEnB,KAAK,CAAE,OAAO,CAAE,CAAC;KAEpB;IAED,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAG;QAErC,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,MAAM,MAAM,GAAG,IAAI,UAAU,CAAE,KAAK,CAAC,OAAO,CAAE,AAAC;QAC/C,MAAM,CAAC,OAAO,CAAE,KAAK,CAAC,IAAI,CAAE,CAAC;QAC7B,MAAM,CAAC,gBAAgB,CAAE,KAAK,CAAC,aAAa,CAAE,CAAC;QAC/C,MAAM,CAAC,kBAAkB,CAAE,KAAK,CAAC,eAAe,CAAE,CAAC;QACnD,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,SAAW,IAAI,EAAG;YAEhC,IAAI;gBAEA,MAAM,CAAE,KAAK,CAAC,KAAK,CAAE,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,CAAE,CAAE,CAAC;aAE/C,CAAC,OAAQ,CAAC,EAAG;gBAEV,IAAK,OAAO,EAER,OAAO,CAAE,CAAC,CAAE,CAAC;qBAIb,OAAO,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;gBAIvB,KAAK,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;aAElC;SAEJ,EAAE,UAAU,EAAE,OAAO,CAAE,CAAC;KAE5B;IAED,KAAK,CAAE,KAAI,EAAG;QAEV,MAAM,oBAAoB,GAAG,EAAE,AAAC;QAChC,MAAM,cAAc,GAAG,EAAE,AAAC;QAE1B,SAAS,oBAAoB,CAAE,IAAI,EAAE,IAAI,EAAG;YAExC,IAAK,oBAAoB,CAAE,IAAI,CAAE,KAAK,SAAS,EAAG,OAAO,oBAAoB,CAAE,IAAI,CAAE,CAAC;YAEtF,MAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,AAAC;YACnD,MAAM,iBAAiB,GAAG,kBAAkB,CAAE,IAAI,CAAE,AAAC;YAErD,MAAM,MAAM,GAAG,cAAc,CAAE,IAAI,EAAE,iBAAiB,CAAC,MAAM,CAAE,AAAC;YAEhE,MAAM,KAAK,GAAG,aAAa,CAAE,iBAAiB,CAAC,IAAI,EAAE,MAAM,CAAE,AAAC;YAC9D,MAAM,EAAE,GAAG,IAAI,iBAAiB,CAAE,KAAK,EAAE,iBAAiB,CAAC,MAAM,CAAE,AAAC;YACpE,EAAE,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC;YAEjC,oBAAoB,CAAE,IAAI,CAAE,GAAG,EAAE,CAAC;YAElC,OAAO,EAAE,CAAC;SAEb;QAED,SAAS,cAAc,CAAE,IAAI,EAAE,IAAI,EAAG;YAElC,IAAK,cAAc,CAAE,IAAI,CAAE,KAAK,SAAS,EAAG,OAAO,cAAc,CAAE,IAAI,CAAE,CAAC;YAE1E,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,AAAC;YACvC,MAAM,WAAW,GAAG,YAAY,CAAE,IAAI,CAAE,AAAC;YAEzC,MAAM,EAAE,GAAG,IAAI,WAAW,CAAE,WAAW,CAAE,CAAC,MAAM,AAAC;YAEjD,cAAc,CAAE,IAAI,CAAE,GAAG,EAAE,CAAC;YAE5B,OAAO,EAAE,CAAC;SAEb;QAED,MAAM,QAAQ,GAAG,KAAI,CAAC,yBAAyB,GAAG,IAAI,uBAAuB,EAAE,GAAG,IAAI,cAAc,EAAE,AAAC;QAEvG,MAAM,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,AAAC;QAE9B,IAAK,KAAK,KAAK,SAAS,EAAG;YAEvB,MAAM,UAAU,GAAG,aAAa,CAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAE,AAAC;YAC5D,QAAQ,CAAC,QAAQ,CAAE,IAAI,eAAe,CAAE,UAAU,EAAE,CAAC,CAAE,CAAE,CAAC;SAE7D;QAED,MAAM,UAAU,GAAG,KAAI,CAAC,IAAI,CAAC,UAAU,AAAC;QAExC,IAAM,MAAM,GAAG,IAAI,UAAU,CAAG;YAE5B,MAAM,SAAS,GAAG,UAAU,CAAE,GAAG,CAAE,AAAC;YACpC,IAAI,eAAe,AAAC;YAEpB,IAAK,SAAS,CAAC,4BAA4B,EAAG;gBAE1C,MAAM,iBAAiB,GAAG,oBAAoB,CAAE,KAAI,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAE,AAAC;gBAC5E,eAAe,GAAG,IAAI,0BAA0B,CAAE,iBAAiB,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,UAAU,CAAE,CAAC;aAErI,MAAM;gBAEH,MAAM,UAAU,GAAG,aAAa,CAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,CAAE,AAAC;gBACpE,MAAM,qBAAqB,GAAG,SAAS,CAAC,0BAA0B,GAAG,wBAAwB,GAAG,eAAe,AAAC;gBAChH,eAAe,GAAG,IAAI,qBAAqB,CAAE,UAAU,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,UAAU,CAAE,CAAC;aAEvG;YAED,IAAK,SAAS,CAAC,IAAI,KAAK,SAAS,EAAG,eAAe,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;YAC1E,IAAK,SAAS,CAAC,KAAK,KAAK,SAAS,EAAG,eAAe,CAAC,QAAQ,CAAE,SAAS,CAAC,KAAK,CAAE,CAAC;YAEjF,IAAK,SAAS,CAAC,WAAW,KAAK,SAAS,EAAG;gBAEvC,eAAe,CAAC,WAAW,CAAC,MAAM,GAAG,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC;gBAClE,eAAe,CAAC,WAAW,CAAC,KAAK,GAAG,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC;aAEnE;YAED,QAAQ,CAAC,YAAY,CAAE,GAAG,EAAE,eAAe,CAAE,CAAC;SAEjD;QAED,MAAM,eAAe,GAAG,KAAI,CAAC,IAAI,CAAC,eAAe,AAAC;QAElD,IAAK,eAAe,EAEhB,IAAM,MAAM,IAAG,IAAI,eAAe,CAAG;YAEjC,MAAM,cAAc,GAAG,eAAe,CAAE,IAAG,CAAE,AAAC;YAE9C,MAAM,KAAK,GAAG,EAAE,AAAC;YAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,cAAc,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;gBAExD,MAAM,SAAS,GAAG,cAAc,CAAE,IAAC,CAAE,AAAC;gBACtC,IAAI,eAAe,AAAC;gBAEpB,IAAK,SAAS,CAAC,4BAA4B,EAAG;oBAE1C,MAAM,iBAAiB,GAAG,oBAAoB,CAAE,KAAI,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAE,AAAC;oBAC5E,eAAe,GAAG,IAAI,0BAA0B,CAAE,iBAAiB,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,UAAU,CAAE,CAAC;iBAErI,MAAM;oBAEH,MAAM,UAAU,GAAG,aAAa,CAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,CAAE,AAAC;oBACpE,eAAe,GAAG,IAAI,eAAe,CAAE,UAAU,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,UAAU,CAAE,CAAC;iBAEjG;gBAED,IAAK,SAAS,CAAC,IAAI,KAAK,SAAS,EAAG,eAAe,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;gBAC1E,KAAK,CAAC,IAAI,CAAE,eAAe,CAAE,CAAC;aAEjC;YAED,QAAQ,CAAC,eAAe,CAAE,IAAG,CAAE,GAAG,KAAK,CAAC;SAE3C;QAIL,MAAM,oBAAoB,GAAG,KAAI,CAAC,IAAI,CAAC,oBAAoB,AAAC;QAE5D,IAAK,oBAAoB,EAErB,QAAQ,CAAC,oBAAoB,GAAG,IAAI,CAAC;QAIzC,MAAM,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC,MAAM,IAAI,KAAI,CAAC,IAAI,CAAC,SAAS,IAAI,KAAI,CAAC,IAAI,CAAC,OAAO,AAAC;QAE5E,IAAK,MAAM,KAAK,SAAS,EAErB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;YAEhD,MAAM,KAAK,GAAG,MAAM,CAAE,IAAC,CAAE,AAAC;YAE1B,QAAQ,CAAC,QAAQ,CAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,aAAa,CAAE,CAAC;SAEtE;QAIL,MAAM,cAAc,GAAG,KAAI,CAAC,IAAI,CAAC,cAAc,AAAC;QAEhD,IAAK,cAAc,KAAK,SAAS,EAAG;YAEhC,MAAM,MAAM,GAAG,IAAI,OAAO,EAAE,AAAC;YAE7B,IAAK,cAAc,CAAC,MAAM,KAAK,SAAS,EAEpC,MAAM,CAAC,SAAS,CAAE,cAAc,CAAC,MAAM,CAAE,CAAC;YAI9C,QAAQ,CAAC,cAAc,GAAG,IAAI,MAAM,CAAE,MAAM,EAAE,cAAc,CAAC,MAAM,CAAE,CAAC;SAEzE;QAED,IAAK,KAAI,CAAC,IAAI,EAAG,QAAQ,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;QAC3C,IAAK,KAAI,CAAC,QAAQ,EAAG,QAAQ,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC;QAEvD,OAAO,QAAQ,CAAC;KAEnB;CAEJ;AAED,MAAM,YAAY,SAAS,MAAM;IAE7B,YAAa,OAAO,CAAG;QAEnB,KAAK,CAAE,OAAO,CAAE,CAAC;KAEpB;IAED,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAG;QAErC,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,MAAM,IAAI,GAAG,AAAE,IAAI,CAAC,IAAI,KAAK,EAAE,GAAK,WAAW,CAAC,cAAc,CAAE,GAAG,CAAE,GAAG,IAAI,CAAC,IAAI,AAAC;QAClF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC;QAE9C,MAAM,MAAM,GAAG,IAAI,UAAU,CAAE,IAAI,CAAC,OAAO,CAAE,AAAC;QAC9C,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAC5B,MAAM,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;QAC9C,MAAM,CAAC,kBAAkB,CAAE,IAAI,CAAC,eAAe,CAAE,CAAC;QAClD,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,SAAW,IAAI,EAAG;YAEhC,IAAI,IAAI,GAAG,IAAI,AAAC;YAEhB,IAAI;gBAEA,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;aAE7B,CAAC,OAAQ,KAAK,EAAG;gBAEd,IAAK,OAAO,KAAK,SAAS,EAAG,OAAO,CAAE,KAAK,CAAE,CAAC;gBAE9C,OAAO,CAAC,KAAK,CAAE,mCAAmC,GAAG,GAAG,GAAG,GAAG,EAAE,KAAK,CAAC,OAAO,CAAE,CAAC;gBAEhF,OAAO;aAEV;YAED,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;YAE/B,IAAK,QAAQ,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,UAAU,EAAG;gBAEvG,OAAO,CAAC,KAAK,CAAE,kCAAkC,GAAG,GAAG,CAAE,CAAC;gBAC1D,OAAO;aAEV;YAED,KAAK,CAAC,KAAK,CAAE,IAAI,EAAE,MAAM,CAAE,CAAC;SAE/B,EAAE,UAAU,EAAE,OAAO,CAAE,CAAC;KAE5B;IAED,MAAM,SAAS,CAAE,GAAG,EAAE,UAAU,EAAG;QAE/B,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,MAAM,IAAI,GAAG,AAAE,IAAI,CAAC,IAAI,KAAK,EAAE,GAAK,WAAW,CAAC,cAAc,CAAE,GAAG,CAAE,GAAG,IAAI,CAAC,IAAI,AAAC;QAClF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC;QAE9C,MAAM,MAAM,GAAG,IAAI,UAAU,CAAE,IAAI,CAAC,OAAO,CAAE,AAAC;QAC9C,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAC5B,MAAM,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;QAC9C,MAAM,CAAC,kBAAkB,CAAE,IAAI,CAAC,eAAe,CAAE,CAAC;QAElD,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,SAAS,CAAE,GAAG,EAAE,UAAU,CAAE,AAAC;QAEvD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,AAAC;QAEhC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAE/B,IAAK,QAAQ,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,UAAU,EAEpG,MAAM,IAAI,KAAK,CAAE,kCAAkC,GAAG,GAAG,CAAE,CAAC;QAIhE,OAAO,MAAM,KAAK,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;KAEzC;IAED,KAAK,CAAE,IAAI,EAAE,MAAM,EAAG;QAElB,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAE,IAAI,CAAC,UAAU,CAAE,AAAC;QAC3D,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,MAAM,CAAE,AAAC;QAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAE,IAAI,CAAC,UAAU,EAAE,MAAM,CAAE,AAAC;QAEnE,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,MAAM,EAAE,WAAY;YAEtD,IAAK,MAAM,KAAK,SAAS,EAAG,MAAM,CAAE,MAAM,CAAE,CAAC;SAEhD,CAAE,AAAC;QAEJ,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAE,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAE,AAAC;QAC7D,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAE,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAE,AAAC;QAElE,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAE,AAAC;QAC5F,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAE,IAAI,CAAC,SAAS,EAAE,MAAM,CAAE,AAAC;QAEhE,IAAI,CAAC,aAAa,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;QAExC,EAAE;QAEF,IAAK,MAAM,KAAK,SAAS,EAAG;YAExB,IAAI,SAAS,GAAG,KAAK,AAAC;YAEtB,IAAM,MAAM,IAAI,IAAI,MAAM,CAEtB,IAAK,MAAM,CAAE,IAAI,CAAE,YAAY,gBAAgB,EAAG;gBAE9C,SAAS,GAAG,IAAI,CAAC;gBACjB,MAAM;aAET;YAIL,IAAK,SAAS,KAAK,KAAK,EAAG,MAAM,CAAE,MAAM,CAAE,CAAC;SAE/C;QAED,OAAO,MAAM,CAAC;KAEjB;IAED,MAAM,UAAU,CAAE,IAAI,EAAG;QAErB,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAE,IAAI,CAAC,UAAU,CAAE,AAAC;QAC3D,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,MAAM,CAAE,AAAC;QAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAE,IAAI,CAAC,UAAU,EAAE,MAAM,CAAE,AAAC;QAEnE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,MAAM,CAAE,AAAC;QAE1D,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAE,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAE,AAAC;QAC7D,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAE,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAE,AAAC;QAElE,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAE,AAAC;QAC5F,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAE,IAAI,CAAC,SAAS,EAAE,MAAM,CAAE,AAAC;QAEhE,IAAI,CAAC,aAAa,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;QAExC,OAAO,MAAM,CAAC;KAEjB;IAED,WAAW,CAAE,IAAI,EAAG;QAEhB,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,IAAK,IAAI,KAAK,SAAS,EAEnB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE5C,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,QAAQ,CAAE,IAAI,CAAE,IAAC,CAAE,CAAE,AAAC;YAEhD,MAAM,CAAE,KAAK,CAAC,IAAI,CAAE,GAAG,KAAK,CAAC;SAEhC;QAIL,OAAO,MAAM,CAAC;KAEjB;IAED,cAAc,CAAE,IAAI,EAAE,MAAM,EAAG;QAE3B,MAAM,SAAS,GAAG,EAAE,AAAC;QACrB,MAAM,KAAK,GAAG,EAAE,AAAC;QAEjB,6BAA6B;QAE7B,MAAM,CAAC,QAAQ,CAAE,SAAW,KAAK,EAAG;YAEhC,IAAK,KAAK,CAAC,MAAM,EAAG,KAAK,CAAE,KAAK,CAAC,IAAI,CAAE,GAAG,KAAK,CAAC;SAEnD,CAAE,CAAC;QAEJ,mBAAmB;QAEnB,IAAK,IAAI,KAAK,SAAS,EAEnB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE5C,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC,QAAQ,CAAE,IAAI,CAAE,IAAC,CAAE,EAAE,KAAK,CAAE,AAAC;YAE7D,SAAS,CAAE,QAAQ,CAAC,IAAI,CAAE,GAAG,QAAQ,CAAC;SAEzC;QAIL,OAAO,SAAS,CAAC;KAEpB;IAED,eAAe,CAAE,IAAI,EAAE,MAAM,EAAG;QAE5B,MAAM,UAAU,GAAG,EAAE,AAAC;QAEtB,IAAK,IAAI,KAAK,SAAS,EAAG;YAEtB,MAAM,oBAAoB,GAAG,IAAI,oBAAoB,EAAE,AAAC;YAExD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;gBAE5C,IAAI,QAAQ,AAAC;gBACb,MAAM,IAAI,GAAG,IAAI,CAAE,IAAC,CAAE,AAAC;gBAEvB,OAAS,IAAI,CAAC,IAAI;oBAEd,KAAK,gBAAgB,CAAC;oBACtB,KAAK,yBAAyB;wBAE1B,QAAQ,GAAG,oBAAoB,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;wBAE9C,MAAM;oBAEV,KAAK,UAAU;wBAEX,OAAO,CAAC,KAAK,CAAE,sEAAsE,CAAE,CAAC;wBAExF,MAAM;oBAEV;wBAEI,IAAK,IAAI,CAAC,IAAI,IAAI,UAAU,EAExB,QAAQ,GAAG,UAAU,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC,QAAQ,CAAE,IAAI,EAAE,MAAM,CAAE,CAAC;6BAI5D,OAAO,CAAC,IAAI,CAAE,CAAC,+CAA+C,EAAG,IAAI,CAAC,IAAI,CAAE,CAAC,CAAC,CAAE,CAAC;iBAI5F;gBAED,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAE1B,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACzD,IAAK,QAAQ,CAAC,gBAAgB,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAE3G,UAAU,CAAE,IAAI,CAAC,IAAI,CAAE,GAAG,QAAQ,CAAC;aAEtC;SAEJ;QAED,OAAO,UAAU,CAAC;KAErB;IAED,cAAc,CAAE,IAAI,EAAE,QAAQ,EAAG;QAE7B,MAAM,KAAK,GAAG,EAAE,AAAC,EAAC,gBAAgB;QAClC,MAAM,SAAS,GAAG,EAAE,AAAC;QAErB,IAAK,IAAI,KAAK,SAAS,EAAG;YAEtB,MAAM,MAAM,GAAG,IAAI,cAAc,EAAE,AAAC;YACpC,MAAM,CAAC,WAAW,CAAE,QAAQ,CAAE,CAAC;YAE/B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;gBAE5C,MAAM,IAAI,GAAG,IAAI,CAAE,IAAC,CAAE,AAAC;gBAEvB,IAAK,IAAI,CAAC,IAAI,KAAK,eAAe,EAAG;oBAEjC,aAAa;oBAEb,MAAM,KAAK,GAAG,EAAE,AAAC;oBAEjB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAG,CAAG;wBAE/C,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAE,CAAC,CAAE,AAAC;wBAErC,IAAK,KAAK,CAAE,QAAQ,CAAC,IAAI,CAAE,KAAK,SAAS,EAErC,KAAK,CAAE,QAAQ,CAAC,IAAI,CAAE,GAAG,MAAM,CAAC,KAAK,CAAE,QAAQ,CAAE,CAAC;wBAItD,KAAK,CAAC,IAAI,CAAE,KAAK,CAAE,QAAQ,CAAC,IAAI,CAAE,CAAE,CAAC;qBAExC;oBAED,SAAS,CAAE,IAAI,CAAC,IAAI,CAAE,GAAG,KAAK,CAAC;iBAElC,MAAM;oBAEH,IAAK,KAAK,CAAE,IAAI,CAAC,IAAI,CAAE,KAAK,SAAS,EAEjC,KAAK,CAAE,IAAI,CAAC,IAAI,CAAE,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;oBAI9C,SAAS,CAAE,IAAI,CAAC,IAAI,CAAE,GAAG,KAAK,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;iBAE/C;aAEJ;SAEJ;QAED,OAAO,SAAS,CAAC;KAEpB;IAED,eAAe,CAAE,IAAI,EAAG;QAEpB,MAAM,UAAU,GAAG,EAAE,AAAC;QAEtB,IAAK,IAAI,KAAK,SAAS,EAEnB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;YAErC,MAAM,IAAI,GAAG,IAAI,CAAE,IAAC,CAAE,AAAC;YAEvB,MAAM,IAAI,GAAG,aAAa,CAAC,KAAK,CAAE,IAAI,CAAE,AAAC;YAEzC,UAAU,CAAE,IAAI,CAAC,IAAI,CAAE,GAAG,IAAI,CAAC;SAElC;QAIL,OAAO,UAAU,CAAC;KAErB;IAED,WAAW,CAAE,IAAI,EAAE,MAAM,EAAG;QAExB,MAAM,KAAK,GAAG,IAAI,AAAC;QACnB,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,IAAI,MAAM,AAAC;QAEX,SAAS,SAAS,CAAE,GAAG,EAAG;YAEtB,KAAK,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;YAE/B,OAAO,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,WAAY;gBAEjC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC;aAEhC,EAAE,SAAS,EAAE,WAAY;gBAEtB,KAAK,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;gBAC/B,KAAK,CAAC,OAAO,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC;aAEhC,CAAE,CAAC;SAEP;QAED,SAAS,gBAAgB,CAAE,KAAK,EAAG;YAE/B,IAAK,OAAO,KAAK,KAAK,QAAQ,EAAG;gBAE7B,MAAM,GAAG,GAAG,KAAK,AAAC;gBAElB,MAAM,IAAI,GAAG,4BAA4B,IAAI,CAAE,GAAG,CAAE,GAAG,GAAG,GAAG,KAAK,CAAC,YAAY,GAAG,GAAG,AAAC;gBAEtF,OAAO,SAAS,CAAE,IAAI,CAAE,CAAC;aAE5B,MAAM;gBAEH,IAAK,KAAK,CAAC,IAAI,EAEX,OAAO;oBACH,IAAI,EAAE,aAAa,CAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAE;oBAC7C,KAAK,EAAE,KAAK,CAAC,KAAK;oBAClB,MAAM,EAAE,KAAK,CAAC,MAAM;iBACvB,CAAC;qBAIF,OAAO,IAAI,CAAC;aAInB;SAEJ;QAED,IAAK,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAG;YAEzC,MAAM,OAAO,GAAG,IAAI,cAAc,CAAE,MAAM,CAAE,AAAC;YAE7C,MAAM,GAAG,IAAI,WAAW,CAAE,OAAO,CAAE,CAAC;YACpC,MAAM,CAAC,cAAc,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;YAE1C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;gBAE9C,MAAM,KAAK,GAAG,IAAI,CAAE,IAAC,CAAE,AAAC;gBACxB,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,AAAC;gBAEtB,IAAK,KAAK,CAAC,OAAO,CAAE,GAAG,CAAE,EAAG;oBAExB,uCAAuC;oBAEvC,MAAM,UAAU,GAAG,EAAE,AAAC;oBAEtB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;wBAE7C,MAAM,UAAU,GAAG,GAAG,CAAE,CAAC,CAAE,AAAC;wBAE5B,MAAM,iBAAiB,GAAG,gBAAgB,CAAE,UAAU,CAAE,AAAC;wBAEzD,IAAK,iBAAiB,KAAK,IAAI;4BAE3B,IAAK,iBAAiB,YAAY,gBAAgB,EAE9C,UAAU,CAAC,IAAI,CAAE,iBAAiB,CAAE,CAAC;iCAIrC,gEAAgE;4BAEhE,UAAU,CAAC,IAAI,CAAE,IAAI,WAAW,CAAE,iBAAiB,CAAC,IAAI,EAAE,iBAAiB,CAAC,KAAK,EAAE,iBAAiB,CAAC,MAAM,CAAE,CAAE,CAAC;yBAIvH;qBAEJ;oBAED,MAAM,CAAE,KAAK,CAAC,IAAI,CAAE,GAAG,IAAI,MAAM,CAAE,UAAU,CAAE,CAAC;iBAEnD,MAAM;oBAEH,oBAAoB;oBAEpB,MAAM,iBAAiB,GAAG,gBAAgB,CAAE,KAAK,CAAC,GAAG,CAAE,AAAC;oBACxD,MAAM,CAAE,KAAK,CAAC,IAAI,CAAE,GAAG,IAAI,MAAM,CAAE,iBAAiB,CAAE,CAAC;iBAG1D;aAEJ;SAEJ;QAED,OAAO,MAAM,CAAC;KAEjB;IAED,MAAM,gBAAgB,CAAE,IAAI,EAAG;QAE3B,MAAM,KAAK,GAAG,IAAI,AAAC;QACnB,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,IAAI,MAAM,AAAC;QAEX,eAAe,gBAAgB,CAAE,KAAK,EAAG;YAErC,IAAK,OAAO,KAAK,KAAK,QAAQ,EAAG;gBAE7B,MAAM,GAAG,GAAG,KAAK,AAAC;gBAElB,MAAM,IAAI,GAAG,4BAA4B,IAAI,CAAE,GAAG,CAAE,GAAG,GAAG,GAAG,KAAK,CAAC,YAAY,GAAG,GAAG,AAAC;gBAEtF,OAAO,MAAM,MAAM,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;aAEzC,MAAM;gBAEH,IAAK,KAAK,CAAC,IAAI,EAEX,OAAO;oBACH,IAAI,EAAE,aAAa,CAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAE;oBAC7C,KAAK,EAAE,KAAK,CAAC,KAAK;oBAClB,MAAM,EAAE,KAAK,CAAC,MAAM;iBACvB,CAAC;qBAIF,OAAO,IAAI,CAAC;aAInB;SAEJ;QAED,IAAK,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAG;YAEzC,MAAM,GAAG,IAAI,WAAW,CAAE,IAAI,CAAC,OAAO,CAAE,CAAC;YACzC,MAAM,CAAC,cAAc,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;YAE1C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;gBAE9C,MAAM,KAAK,GAAG,IAAI,CAAE,IAAC,CAAE,AAAC;gBACxB,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,AAAC;gBAEtB,IAAK,KAAK,CAAC,OAAO,CAAE,GAAG,CAAE,EAAG;oBAExB,uCAAuC;oBAEvC,MAAM,UAAU,GAAG,EAAE,AAAC;oBAEtB,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAAG;wBAE7C,MAAM,UAAU,GAAG,GAAG,CAAE,CAAC,CAAE,AAAC;wBAE5B,MAAM,iBAAiB,GAAG,MAAM,gBAAgB,CAAE,UAAU,CAAE,AAAC;wBAE/D,IAAK,iBAAiB,KAAK,IAAI;4BAE3B,IAAK,iBAAiB,YAAY,gBAAgB,EAE9C,UAAU,CAAC,IAAI,CAAE,iBAAiB,CAAE,CAAC;iCAIrC,gEAAgE;4BAEhE,UAAU,CAAC,IAAI,CAAE,IAAI,WAAW,CAAE,iBAAiB,CAAC,IAAI,EAAE,iBAAiB,CAAC,KAAK,EAAE,iBAAiB,CAAC,MAAM,CAAE,CAAE,CAAC;yBAIvH;qBAEJ;oBAED,MAAM,CAAE,KAAK,CAAC,IAAI,CAAE,GAAG,IAAI,MAAM,CAAE,UAAU,CAAE,CAAC;iBAEnD,MAAM;oBAEH,oBAAoB;oBAEpB,MAAM,iBAAiB,GAAG,MAAM,gBAAgB,CAAE,KAAK,CAAC,GAAG,CAAE,AAAC;oBAC9D,MAAM,CAAE,KAAK,CAAC,IAAI,CAAE,GAAG,IAAI,MAAM,CAAE,iBAAiB,CAAE,CAAC;iBAE1D;aAEJ;SAEJ;QAED,OAAO,MAAM,CAAC;KAEjB;IAED,aAAa,CAAE,IAAI,EAAE,MAAM,EAAG;QAE1B,SAAS,aAAa,CAAE,KAAK,EAAE,IAAI,EAAG;YAElC,IAAK,OAAO,KAAK,KAAK,QAAQ,EAAG,OAAO,KAAK,CAAC;YAE9C,OAAO,CAAC,IAAI,CAAE,sEAAsE,EAAE,KAAK,CAAE,CAAC;YAE9F,OAAO,IAAI,CAAE,KAAK,CAAE,CAAC;SAExB;QAED,MAAM,QAAQ,GAAG,EAAE,AAAC;QAEpB,IAAK,IAAI,KAAK,SAAS,EAEnB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;YAE5C,MAAM,IAAI,GAAG,IAAI,CAAE,IAAC,CAAE,AAAC;YAEvB,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAEzB,OAAO,CAAC,IAAI,CAAE,8CAA8C,EAAE,IAAI,CAAC,IAAI,CAAE,CAAC;YAI9E,IAAK,MAAM,CAAE,IAAI,CAAC,KAAK,CAAE,KAAK,SAAS,EAEnC,OAAO,CAAC,IAAI,CAAE,qCAAqC,EAAE,IAAI,CAAC,KAAK,CAAE,CAAC;YAItE,MAAM,MAAM,GAAG,MAAM,CAAE,IAAI,CAAC,KAAK,CAAE,AAAC;YACpC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,AAAC;YAE1B,IAAI,OAAO,AAAC;YAEZ,IAAK,KAAK,CAAC,OAAO,CAAE,KAAK,CAAE,EAAG;gBAE1B,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;gBAE5B,IAAK,KAAK,CAAC,MAAM,KAAK,CAAC,EAAG,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;aAExD,MAAM;gBAEH,IAAK,KAAK,IAAI,KAAK,CAAC,IAAI,EAEpB,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;qBAI5B,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;gBAI5B,IAAK,KAAK,EAAG,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,yCAAyC;aAErF;YAED,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;YAExB,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAEzB,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAExD,IAAK,IAAI,CAAC,OAAO,KAAK,SAAS,EAAG,OAAO,CAAC,OAAO,GAAG,aAAa,CAAE,IAAI,CAAC,OAAO,EAAE,eAAe,CAAE,CAAC;YAEnG,IAAK,IAAI,CAAC,MAAM,KAAK,SAAS,EAAG,OAAO,CAAC,MAAM,CAAC,SAAS,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;YACzE,IAAK,IAAI,CAAC,MAAM,KAAK,SAAS,EAAG,OAAO,CAAC,MAAM,CAAC,SAAS,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;YACzE,IAAK,IAAI,CAAC,MAAM,KAAK,SAAS,EAAG,OAAO,CAAC,MAAM,CAAC,SAAS,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;YACzE,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEpE,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG;gBAE3B,OAAO,CAAC,KAAK,GAAG,aAAa,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC,CAAE,EAAE,gBAAgB,CAAE,CAAC;gBAClE,OAAO,CAAC,KAAK,GAAG,aAAa,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC,CAAE,EAAE,gBAAgB,CAAE,CAAC;aAErE;YAED,IAAK,IAAI,CAAC,MAAM,KAAK,SAAS,EAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9D,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACxD,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEpE,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,OAAO,CAAC,SAAS,GAAG,aAAa,CAAE,IAAI,CAAC,SAAS,EAAE,cAAc,CAAE,CAAC;YACxG,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,OAAO,CAAC,SAAS,GAAG,aAAa,CAAE,IAAI,CAAC,SAAS,EAAE,cAAc,CAAE,CAAC;YACxG,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAE1E,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAAG,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAE3D,IAAK,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAG,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC5F,IAAK,IAAI,CAAC,eAAe,KAAK,SAAS,EAAG,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;YAEzF,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEpE,QAAQ,CAAE,IAAI,CAAC,IAAI,CAAE,GAAG,OAAO,CAAC;SAEnC;QAIL,OAAO,QAAQ,CAAC;KAEnB;IAED,WAAW,CAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAG;QAE7D,IAAI,MAAM,AAAC;QAEX,SAAS,WAAW,CAAE,IAAI,EAAG;YAEzB,IAAK,UAAU,CAAE,IAAI,CAAE,KAAK,SAAS,EAEjC,OAAO,CAAC,IAAI,CAAE,wCAAwC,EAAE,IAAI,CAAE,CAAC;YAInE,OAAO,UAAU,CAAE,IAAI,CAAE,CAAC;SAE7B;QAED,SAAS,WAAW,CAAE,IAAI,EAAG;YAEzB,IAAK,IAAI,KAAK,SAAS,EAAG,OAAO,SAAS,CAAC;YAE3C,IAAK,KAAK,CAAC,OAAO,CAAE,IAAI,CAAE,EAAG;gBAEzB,MAAM,KAAK,GAAG,EAAE,AAAC;gBAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;oBAE5C,MAAM,IAAI,GAAG,IAAI,CAAE,IAAC,CAAE,AAAC;oBAEvB,IAAK,SAAS,CAAE,IAAI,CAAE,KAAK,SAAS,EAEhC,OAAO,CAAC,IAAI,CAAE,wCAAwC,EAAE,IAAI,CAAE,CAAC;oBAInE,KAAK,CAAC,IAAI,CAAE,SAAS,CAAE,IAAI,CAAE,CAAE,CAAC;iBAEnC;gBAED,OAAO,KAAK,CAAC;aAEhB;YAED,IAAK,SAAS,CAAE,IAAI,CAAE,KAAK,SAAS,EAEhC,OAAO,CAAC,IAAI,CAAE,wCAAwC,EAAE,IAAI,CAAE,CAAC;YAInE,OAAO,SAAS,CAAE,IAAI,CAAE,CAAC;SAE5B;QAED,SAAS,UAAU,CAAE,IAAI,EAAG;YAExB,IAAK,QAAQ,CAAE,IAAI,CAAE,KAAK,SAAS,EAE/B,OAAO,CAAC,IAAI,CAAE,uCAAuC,EAAE,IAAI,CAAE,CAAC;YAIlE,OAAO,QAAQ,CAAE,IAAI,CAAE,CAAC;SAE3B;QAED,IAAI,QAAQ,EAAE,QAAQ,AAAC;QAEvB,OAAS,IAAI,CAAC,IAAI;YAEd,KAAK,OAAO;gBAER,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;gBAErB,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS;oBAE9B,IAAK,MAAM,CAAC,SAAS,CAAE,IAAI,CAAC,UAAU,CAAE,EAEpC,MAAM,CAAC,UAAU,GAAG,IAAI,KAAK,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;yBAIjD,MAAM,CAAC,UAAU,GAAG,UAAU,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;iBAIzD;gBAED,IAAK,IAAI,CAAC,WAAW,KAAK,SAAS,EAE/B,MAAM,CAAC,WAAW,GAAG,UAAU,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;gBAIxD,IAAK,IAAI,CAAC,GAAG,KAAK,SAAS,EAAG;oBAE1B,IAAK,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,KAAK,EAExB,MAAM,CAAC,GAAG,GAAG,IAAI,GAAG,CAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;yBAEjE,IAAK,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,SAAS,EAEnC,MAAM,CAAC,GAAG,GAAG,IAAI,OAAO,CAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAE,CAAC;iBAIpE;gBAED,MAAM;YAEV,KAAK,mBAAmB;gBAEpB,MAAM,GAAG,IAAI,iBAAiB,CAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC;gBAE7E,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC1D,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvD,IAAK,IAAI,CAAC,SAAS,KAAK,SAAS,EAAG,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBACtE,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;gBACzE,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAE,CAAC;gBAE5E,MAAM;YAEV,KAAK,oBAAoB;gBAErB,MAAM,GAAG,IAAI,kBAAkB,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC;gBAErG,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvD,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAE,CAAC;gBAE5E,MAAM;YAEV,KAAK,cAAc;gBAEf,MAAM,GAAG,IAAI,YAAY,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAE,CAAC;gBAExD,MAAM;YAEV,KAAK,kBAAkB;gBAEnB,MAAM,GAAG,IAAI,gBAAgB,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAE,CAAC;gBAE5D,MAAM;YAEV,KAAK,YAAY;gBAEb,MAAM,GAAG,IAAI,UAAU,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAE,CAAC;gBAEjF,MAAM;YAEV,KAAK,eAAe;gBAEhB,MAAM,GAAG,IAAI,aAAa,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;gBAElF,MAAM;YAEV,KAAK,WAAW;gBAEZ,MAAM,GAAG,IAAI,SAAS,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAE,CAAC;gBAE3G,MAAM;YAEV,KAAK,iBAAiB;gBAElB,MAAM,GAAG,IAAI,eAAe,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAE,CAAC;gBAE7E,MAAM;YAEV,KAAK,YAAY;gBAEb,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;gBAE3C,MAAM;YAEV,KAAK,aAAa;gBAEd,QAAQ,GAAG,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;gBACvC,QAAQ,GAAG,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;gBAEzC,MAAM,GAAG,IAAI,WAAW,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;gBAE/C,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACnE,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG,MAAM,CAAC,UAAU,CAAC,SAAS,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;gBACpF,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAEnE,MAAM;YAEV,KAAK,MAAM;gBAEP,QAAQ,GAAG,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;gBACxC,QAAQ,GAAG,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;gBAExC,MAAM,GAAG,IAAI,IAAI,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;gBAExC,MAAM;YAEV,KAAK,eAAe;gBAEhB,QAAQ,GAAG,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;gBACxC,QAAQ,GAAG,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;gBACxC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;gBACzB,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,AAAC;gBAC3C,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,AAAC;gBAEzC,MAAM,GAAG,IAAI,aAAa,CAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAE,CAAC;gBACxD,MAAM,CAAC,cAAc,GAAG,IAAI,wBAAwB,CAAE,IAAI,YAAY,CAAE,cAAc,CAAC,KAAK,CAAE,EAAE,EAAE,CAAE,CAAC;gBACrG,IAAK,aAAa,KAAK,SAAS,EAAG,MAAM,CAAC,aAAa,GAAG,IAAI,wBAAwB,CAAE,IAAI,YAAY,CAAE,aAAa,CAAC,KAAK,CAAE,EAAE,aAAa,CAAC,QAAQ,CAAE,CAAC;gBAE1J,MAAM;YAEV,KAAK,KAAK;gBAEN,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;gBAEnB,MAAM;YAEV,KAAK,MAAM;gBAEP,MAAM,GAAG,IAAI,IAAI,CAAE,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,EAAE,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAE,CAAC;gBAEhF,MAAM;YAEV,KAAK,UAAU;gBAEX,MAAM,GAAG,IAAI,QAAQ,CAAE,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,EAAE,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAE,CAAC;gBAEpF,MAAM;YAEV,KAAK,cAAc;gBAEf,MAAM,GAAG,IAAI,YAAY,CAAE,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,EAAE,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAE,CAAC;gBAExF,MAAM;YAEV,KAAK,YAAY,CAAC;YAClB,KAAK,QAAQ;gBAET,MAAM,GAAG,IAAI,MAAM,CAAE,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,EAAE,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAE,CAAC;gBAElF,MAAM;YAEV,KAAK,QAAQ;gBAET,MAAM,GAAG,IAAI,MAAM,CAAE,WAAW,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAE,CAAC;gBAEpD,MAAM;YAEV,KAAK,OAAO;gBAER,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;gBAErB,MAAM;YAEV,KAAK,MAAM;gBAEP,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;gBAEpB,MAAM;YAEV;gBAEI,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;SAE/B;QAED,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAExB,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEvD,IAAK,IAAI,CAAC,MAAM,KAAK,SAAS,EAAG;YAE7B,MAAM,CAAC,MAAM,CAAC,SAAS,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;YAEvC,IAAK,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAG,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC3F,IAAK,MAAM,CAAC,gBAAgB,EAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,KAAK,CAAE,CAAC;SAE9G,MAAM;YAEH,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;YAC9E,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;YAC9E,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG,MAAM,CAAC,UAAU,CAAC,SAAS,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;YACpF,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;SAExE;QAED,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACzE,IAAK,IAAI,CAAC,aAAa,KAAK,SAAS,EAAG,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAElF,IAAK,IAAI,CAAC,MAAM,EAAG;YAEf,IAAK,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,SAAS,EAAG,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAC5E,IAAK,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,SAAS,EAAG,MAAM,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YAC9F,IAAK,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,SAAS,EAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAClF,IAAK,IAAI,CAAC,MAAM,CAAC,OAAO,KAAK,SAAS,EAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,CAAC;YAChG,IAAK,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,SAAS,EAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC;SAEzG;QAED,IAAK,IAAI,CAAC,OAAO,KAAK,SAAS,EAAG,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAChE,IAAK,IAAI,CAAC,aAAa,KAAK,SAAS,EAAG,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAClF,IAAK,IAAI,CAAC,WAAW,KAAK,SAAS,EAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAC5E,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACnE,IAAK,IAAI,CAAC,MAAM,KAAK,SAAS,EAAG,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;QAElE,IAAK,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAG;YAE/B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;YAE/B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,EAAG,CAEtC,MAAM,CAAC,GAAG,CAAE,IAAI,CAAC,WAAW,CAAE,QAAQ,CAAE,IAAC,CAAE,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAE,CAAE,CAAC;SAIpG;QAED,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG;YAEjC,MAAM,gBAAgB,GAAG,IAAI,CAAC,UAAU,AAAC;YAEzC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;gBAEjD,MAAM,IAAI,GAAG,gBAAgB,CAAE,IAAC,CAAE,AAAC;gBAEnC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAE,UAAU,CAAE,IAAI,CAAE,CAAE,CAAC;aAEhD;SAEJ;QAED,IAAK,IAAI,CAAC,IAAI,KAAK,KAAK,EAAG;YAEvB,IAAK,IAAI,CAAC,UAAU,KAAK,SAAS,EAAG,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAEzE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;YAE3B,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAG,CAAG;gBAEvC,MAAM,KAAK,GAAG,MAAM,CAAE,CAAC,CAAE,AAAC;gBAC1B,MAAM,KAAK,GAAG,MAAM,CAAC,mBAAmB,CAAE,MAAM,EAAE,KAAK,CAAC,MAAM,CAAE,AAAC;gBAEjE,IAAK,KAAK,KAAK,SAAS,EAEpB,MAAM,CAAC,QAAQ,CAAE,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAE,CAAC;aAIhD;SAEJ;QAED,OAAO,MAAM,CAAC;KAEjB;IAED,aAAa,CAAE,MAAM,EAAE,SAAS,EAAG;QAE/B,IAAK,MAAM,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC,MAAM,KAAK,CAAC,EAAG,OAAO;QAEpD,MAAM,CAAC,QAAQ,CAAE,SAAW,KAAK,EAAG;YAEhC,IAAK,KAAK,CAAC,aAAa,KAAK,IAAI,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,EAAG;gBAEhE,MAAM,QAAQ,GAAG,SAAS,CAAE,KAAK,CAAC,QAAQ,CAAE,AAAC;gBAE7C,IAAK,QAAQ,KAAK,SAAS,EAEvB,OAAO,CAAC,IAAI,CAAE,kDAAkD,EAAE,KAAK,CAAC,QAAQ,CAAE,CAAC;qBAInF,KAAK,CAAC,IAAI,CAAE,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAE,CAAC;aAIhD;SAEJ,CAAE,CAAC;KAEP;IAED,gBAAgB,CAEhB,cAAc,CAAE,KAAK,EAAG;QAEpB,OAAO,CAAC,IAAI,CAAE,+EAA+E,CAAE,CAAC;QAChG,OAAO,IAAI,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC;KAExC;CAEJ;AAED,MAAM,eAAe,GAAG;IACpB,SAAS,EAAE,SAAS;IACpB,qBAAqB,EAAE,qBAAqB;IAC5C,qBAAqB,EAAE,qBAAqB;IAC5C,gCAAgC,EAAE,gCAAgC;IAClE,gCAAgC,EAAE,gCAAgC;IAClE,uBAAuB,EAAE,uBAAuB;CACnD,AAAC;AAEF,MAAM,gBAAgB,GAAG;IACrB,cAAc,EAAE,cAAc;IAC9B,mBAAmB,EAAE,mBAAmB;IACxC,sBAAsB,EAAE,sBAAsB;CACjD,AAAC;AAEF,MAAM,cAAc,GAAG;IACnB,aAAa,EAAE,aAAa;IAC5B,0BAA0B,EAAE,0BAA0B;IACtD,yBAAyB,EAAE,yBAAyB;IACpD,YAAY,EAAE,YAAY;IAC1B,yBAAyB,EAAE,yBAAyB;IACpD,wBAAwB,EAAE,wBAAwB;CACrD,AAAC;AAEF,MAAM,iBAAiB,SAAS,MAAM;IAElC,YAAa,OAAO,CAAG;QAEnB,KAAK,CAAE,OAAO,CAAE,CAAC;QAEjB,IAAK,OAAO,iBAAiB,KAAK,WAAW,EAEzC,OAAO,CAAC,IAAI,CAAE,6DAA6D,CAAE,CAAC;QAIlF,IAAK,OAAO,KAAK,KAAK,WAAW,EAE7B,OAAO,CAAC,IAAI,CAAE,iDAAiD,CAAE,CAAC;QAItE,IAAI,CAAC,OAAO,GAAG;YAAE,gBAAgB,EAAE,MAAM;SAAE,CAAC;KAE/C;IAED,UAAU,CAAE,OAAO,EAAG;QAElB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAG;QAErC,IAAK,GAAG,KAAK,SAAS,EAAG,GAAG,GAAG,EAAE,CAAC;QAElC,IAAK,IAAI,CAAC,IAAI,KAAK,SAAS,EAAG,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAErD,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAE,GAAG,CAAE,CAAC;QAErC,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAE,GAAG,CAAE,AAAC;QAEhC,IAAK,MAAM,KAAK,SAAS,EAAG;YAExB,KAAK,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;YAE/B,UAAU,CAAE,WAAY;gBAEpB,IAAK,MAAM,EAAG,MAAM,CAAE,MAAM,CAAE,CAAC;gBAE/B,KAAK,CAAC,OAAO,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC;aAEhC,EAAE,CAAC,CAAE,CAAC;YAEP,OAAO,MAAM,CAAC;SAEjB;QAED,MAAM,YAAY,GAAG,EAAE,AAAC;QACxB,YAAY,CAAC,WAAW,GAAG,AAAE,IAAI,CAAC,WAAW,KAAK,WAAW,GAAK,aAAa,GAAG,SAAS,CAAC;QAC5F,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;QAE1C,KAAK,CAAE,GAAG,EAAE,YAAY,CAAE,CAAC,IAAI,CAAE,SAAW,GAAG,EAAG;YAE9C,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;SAErB,CAAE,CAAC,IAAI,CAAE,SAAW,IAAI,EAAG;YAExB,OAAO,iBAAiB,CAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAE,KAAK,CAAC,OAAO,EAAE;gBAAE,oBAAoB,EAAE,MAAM;aAAE,CAAE,CAAE,CAAC;SAEtG,CAAE,CAAC,IAAI,CAAE,SAAW,WAAW,EAAG;YAE/B,KAAK,CAAC,GAAG,CAAE,GAAG,EAAE,WAAW,CAAE,CAAC;YAE9B,IAAK,MAAM,EAAG,MAAM,CAAE,WAAW,CAAE,CAAC;YAEpC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC;SAEhC,CAAE,CAAC,KAAK,CAAE,SAAW,CAAC,EAAG;YAEtB,IAAK,OAAO,EAAG,OAAO,CAAE,CAAC,CAAE,CAAC;YAE5B,KAAK,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;YAC/B,KAAK,CAAC,OAAO,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC;SAEhC,CAAE,CAAC;QAEJ,KAAK,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;KAElC;CAEJ;AAED,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAEvD,IAAI,QAAQ,AAAC;AAEb,MAAM,YAAY,GAAG;IAEjB,UAAU,EAAE,WAAY;QAEpB,IAAK,QAAQ,KAAK,SAAS,EAEvB,QAAQ,GAAG,IAAM,CAAA,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,kBAAkB,CAAA,EAAI,CAAC;QAI1E,OAAO,QAAQ,CAAC;KAEnB;IAED,UAAU,EAAE,SAAW,KAAK,EAAG;QAE3B,QAAQ,GAAG,KAAK,CAAC;KAEpB;CAEJ,AAAC;AAEF,MAAM,WAAW,SAAS,MAAM;IAE5B,YAAa,OAAO,CAAG;QAEnB,KAAK,CAAE,OAAO,CAAE,CAAC;KAEpB;IAED,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAG;QAErC,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,MAAM,MAAM,GAAG,IAAI,UAAU,CAAE,IAAI,CAAC,OAAO,CAAE,AAAC;QAC9C,MAAM,CAAC,eAAe,CAAE,aAAa,CAAE,CAAC;QACxC,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAC5B,MAAM,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;QAC9C,MAAM,CAAC,kBAAkB,CAAE,IAAI,CAAC,eAAe,CAAE,CAAC;QAClD,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,SAAW,MAAM,EAAG;YAElC,IAAI;gBAEA,4DAA4D;gBAC5D,uDAAuD;gBACvD,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAE,CAAC,CAAE,AAAC;gBAErC,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,EAAE,AAAC;gBAC1C,OAAO,CAAC,eAAe,CAAE,UAAU,EAAE,SAAW,WAAW,EAAG;oBAE1D,MAAM,CAAE,WAAW,CAAE,CAAC;iBAEzB,CAAE,CAAC;aAEP,CAAC,OAAQ,CAAC,EAAG;gBAEV,IAAK,OAAO,EAER,OAAO,CAAE,CAAC,CAAE,CAAC;qBAIb,OAAO,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;gBAIvB,KAAK,CAAC,OAAO,CAAC,SAAS,CAAE,GAAG,CAAE,CAAC;aAElC;SAEJ,EAAE,UAAU,EAAE,OAAO,CAAE,CAAC;KAE5B;CAEJ;AAED,MAAM,oBAAoB,SAAS,UAAU;IAEzC,YAAa,QAAQ,EAAE,WAAW,EAAE,SAAS,GAAG,CAAC,CAAG;QAEhD,KAAK,CAAE,SAAS,EAAE,SAAS,CAAE,CAAC;QAE9B,MAAM,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC,GAAG,CAAE,QAAQ,CAAE,AAAC;QAC3C,MAAM,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC,GAAG,CAAE,WAAW,CAAE,AAAC;QAE9C,MAAM,GAAG,GAAG,IAAI,OAAO,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,AAAC;QACxD,MAAM,MAAM,GAAG,IAAI,OAAO,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,AAAC;QAE3D,+EAA+E;QAC/E,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,EAAE,CAAE,AAAC;QAChC,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAE,IAAI,CAAE,AAAC;QAElC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC,cAAc,CAAE,EAAE,CAAE,CAAC;QACzE,IAAI,CAAC,EAAE,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC,cAAc,CAAE,EAAE,CAAE,CAAC;KAE5E;CAEJ;AAED,oBAAoB,CAAC,SAAS,CAAC,sBAAsB,GAAG,IAAI,CAAC;AAE7D,MAAM,iBAAiB,SAAS,UAAU;IAEtC,YAAa,KAAK,EAAE,SAAS,GAAG,CAAC,CAAG;QAEhC,KAAK,CAAE,SAAS,EAAE,SAAS,CAAE,CAAC;QAE9B,MAAM,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC,GAAG,CAAE,KAAK,CAAE,AAAC;QAExC,+EAA+E;QAC/E,IAAI,CAAC,EAAE,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC,cAAc,CAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,EAAE,CAAE,CAAE,CAAC;KAE5G;CAEJ;AAED,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAEvD,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC9C,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC7C,MAAM,iBAAiB,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAEtD,MAAM,YAAY;IAEd,aAAc;QAEV,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;QAE3B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAEhB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAEtC,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAEtC,IAAI,CAAC,MAAM,GAAG;YACV,KAAK,EAAE,IAAI;YACX,GAAG,EAAE,IAAI;YACT,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,IAAI;YACV,GAAG,EAAE,IAAI;YACT,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,IAAI;SACf,CAAC;KAEL;IAED,MAAM,CAAE,MAAM,EAAG;QAEb,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,AAAC;QAE1B,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,IACxE,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,IAC1E,KAAK,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,AAAC;QAE3F,IAAK,WAAW,EAAG;YAEf,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC3B,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;YACvB,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3C,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACzB,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;YACvB,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACzB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAE3B,wCAAwC;YACxC,qDAAqD;YAErD,iBAAiB,CAAC,IAAI,CAAE,MAAM,CAAC,gBAAgB,CAAE,CAAC;YAClD,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,AAAC;YACpC,MAAM,kBAAkB,GAAG,UAAU,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,AAAC;YACjE,MAAM,IAAI,GAAG,AAAE,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAE,OAAO,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,CAAE,GAAK,KAAK,CAAC,IAAI,AAAC;YACjF,IAAI,IAAI,EAAE,IAAI,AAAC;YAEf,oBAAoB;YAEpB,QAAQ,CAAC,QAAQ,CAAE,EAAE,CAAE,GAAG,CAAE,UAAU,CAAC;YACvC,SAAS,CAAC,QAAQ,CAAE,EAAE,CAAE,GAAG,UAAU,CAAC;YAEtC,eAAe;YAEf,IAAI,GAAG,CAAE,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,kBAAkB,CAAC;YAClD,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,kBAAkB,CAAC;YAEhD,iBAAiB,CAAC,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,GAAK,CAAA,IAAI,GAAG,IAAI,CAAA,AAAE,CAAC;YACnE,iBAAiB,CAAC,QAAQ,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,IAAI,GAAG,IAAI,CAAA,GAAO,CAAA,IAAI,GAAG,IAAI,CAAA,AAAE,CAAC;YAEpE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAE,iBAAiB,CAAE,CAAC;YAExD,gBAAgB;YAEhB,IAAI,GAAG,CAAE,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,kBAAkB,CAAC;YAClD,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,kBAAkB,CAAC;YAEhD,iBAAiB,CAAC,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,GAAK,CAAA,IAAI,GAAG,IAAI,CAAA,AAAE,CAAC;YACnE,iBAAiB,CAAC,QAAQ,CAAE,CAAC,CAAE,GAAG,AAAE,CAAA,IAAI,GAAG,IAAI,CAAA,GAAO,CAAA,IAAI,GAAG,IAAI,CAAA,AAAE,CAAC;YAEpE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAE,iBAAiB,CAAE,CAAC;SAE3D;QAED,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC,QAAQ,CAAE,QAAQ,CAAE,CAAC;QACzE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC,QAAQ,CAAE,SAAS,CAAE,CAAC;KAE7E;CAEJ;AAED,MAAM,KAAK;IAEP,YAAa,SAAS,GAAG,IAAI,CAAG;QAE5B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QAErB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KAExB;IAED,KAAK,GAAG;QAEJ,IAAI,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC;QAEvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KAEvB;IAED,IAAI,GAAG;QAEH,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KAE1B;IAED,cAAc,GAAG;QAEb,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC;KAE3B;IAED,QAAQ,GAAG;QAEP,IAAI,IAAI,GAAG,CAAC,AAAC;QAEb,IAAK,IAAI,CAAC,SAAS,IAAI,CAAE,IAAI,CAAC,OAAO,EAAG;YAEpC,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,CAAC;SAEZ;QAED,IAAK,IAAI,CAAC,OAAO,EAAG;YAEhB,MAAM,OAAO,GAAG,GAAG,EAAE,AAAC;YAEtB,IAAI,GAAG,AAAE,CAAA,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA,GAAK,IAAI,CAAC;YACzC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YAEvB,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC;SAE5B;QAED,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,SAAS,GAAG,GAAG;IAEX,OAAO,AAAE,CAAA,OAAO,WAAW,KAAK,WAAW,GAAG,IAAI,GAAG,WAAW,CAAA,CAAG,GAAG,EAAE,CAAC,CAAC,aAAa;CAE1F;AAED,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAChD,MAAM,aAAa,GAAG,aAAa,CAAC,IAAI,UAAU,EAAE,AAAC;AACrD,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC7C,MAAM,cAAc,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAEnD,MAAM,aAAa,SAAS,QAAQ;IAEhC,aAAc;QAEV,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAE5B,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,UAAU,EAAE,CAAC;QAEzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAE,CAAC;QAE9C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,UAAU;QAEV,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;KAE7B;IAED,QAAQ,GAAG;QAEP,OAAO,IAAI,CAAC,IAAI,CAAC;KAEpB;IAED,YAAY,GAAG;QAEX,IAAK,IAAI,CAAC,MAAM,KAAK,IAAI,EAAG;YAExB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAE,CAAC;YACnD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAE,CAAC;YAC9C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SAEtB;QAED,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,GAAG;QAER,OAAO,IAAI,CAAC,MAAM,CAAC;KAEtB;IAED,SAAS,CAAE,KAAK,EAAG;QAEf,IAAK,IAAI,CAAC,MAAM,KAAK,IAAI,EAAG;YAExB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAE,CAAC;SAEtD,MAEG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAE,CAAC;QAIrD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAE,CAAC;QAEhD,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,GAAG;QAEd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;KAE/B;IAED,eAAe,CAAE,KAAK,EAAG;QAErB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAE,CAAC;QAExE,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,CAAE,KAAK,EAAG;QAEvB,KAAK,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAC;QAEjC,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,AAAC;QACvC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,AAAC;QAEnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAExC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAE,WAAW,EAAE,aAAa,EAAE,QAAQ,CAAE,CAAC;QAEnE,cAAc,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE,CAAC,eAAe,CAAE,aAAa,CAAE,CAAC;QAEjE,IAAK,QAAQ,CAAC,SAAS,EAAG;YAEtB,oCAAoC;YAEpC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,AAAC;YAE1D,QAAQ,CAAC,SAAS,CAAC,uBAAuB,CAAE,WAAW,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;YACrE,QAAQ,CAAC,SAAS,CAAC,uBAAuB,CAAE,WAAW,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;YACrE,QAAQ,CAAC,SAAS,CAAC,uBAAuB,CAAE,WAAW,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;YACrE,QAAQ,CAAC,QAAQ,CAAC,uBAAuB,CAAE,cAAc,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;YACvE,QAAQ,CAAC,QAAQ,CAAC,uBAAuB,CAAE,cAAc,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;YACvE,QAAQ,CAAC,QAAQ,CAAC,uBAAuB,CAAE,cAAc,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;YACvE,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAE,EAAE,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;YACtD,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAE,EAAE,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;YACtD,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAE,EAAE,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;SAEzD,MAAM;YAEH,QAAQ,CAAC,WAAW,CAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAE,CAAC;YACpE,QAAQ,CAAC,cAAc,CAAE,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,CAAC;SAErG;KAEJ;CAEJ;AAED,MAAM,KAAK,SAAS,QAAQ;IAExB,YAAa,QAAQ,CAAG;QAEpB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QAEpB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;QAEhC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAE,QAAQ,CAAC,QAAQ,EAAE,CAAE,CAAC;QAEzC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAE1B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KAErB;IAED,SAAS,GAAG;QAER,OAAO,IAAI,CAAC,IAAI,CAAC;KAEpB;IAED,aAAa,CAAE,SAAS,EAAG;QAEvB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QACxB,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,OAAO,IAAI,CAAC;KAEf;IAED,qBAAqB,CAAE,YAAY,EAAG;QAElC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAE,YAAY,CAAE,CAAC;QACpE,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,OAAO,IAAI,CAAC;KAEf;IAED,oBAAoB,CAAE,WAAW,EAAG;QAEhC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAE,WAAW,CAAE,CAAC;QAClE,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,WAAW,EAAG;QAErB,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAE3B,IAAK,IAAI,CAAC,QAAQ,EAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAEjC,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,KAAK,GAAG,CAAC,EAAG;QAEd,IAAK,IAAI,CAAC,SAAS,KAAK,IAAI,EAAG;YAE3B,OAAO,CAAC,IAAI,CAAE,wCAAwC,CAAE,CAAC;YACzD,OAAO;SAEV;QAED,IAAK,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAG;YAErC,OAAO,CAAC,IAAI,CAAE,kDAAkD,CAAE,CAAC;YACnE,OAAO;SAEV;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC;QAEnD,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,AAAC;QACjD,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAClC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC9B,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;QAC3C,MAAM,CAAC,KAAK,CAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;QAE7E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAC9B,IAAI,CAAC,eAAe,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;QAE1C,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;KAEzB;IAED,KAAK,GAAG;QAEJ,IAAK,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAG;YAErC,OAAO,CAAC,IAAI,CAAE,kDAAkD,CAAE,CAAC;YACnE,OAAO;SAEV;QAED,IAAK,IAAI,CAAC,SAAS,KAAK,IAAI,EAAG;YAE3B,0BAA0B;YAE1B,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,CAAE,GAAG,IAAI,CAAC,YAAY,CAAC;YAEhG,IAAK,IAAI,CAAC,IAAI,KAAK,IAAI,EAEnB,+DAA+D;YAE/D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAK,CAAA,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAA,AAAE,CAAC;YAIhF,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YAE3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAE1B;QAED,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,GAAG;QAEH,IAAK,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAG;YAErC,OAAO,CAAC,IAAI,CAAE,kDAAkD,CAAE,CAAC;YACnE,OAAO;SAEV;QAED,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,GAAG;QAEN,IAAK,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAG;YAE3B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,OAAO,CAAE,CAAC,CAAE,CAAE,CAAC;YAEzC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAEjD,IAAI,CAAC,OAAO,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC,OAAO,CAAE,IAAI,CAAC,OAAO,CAAE,IAAC,CAAE,CAAE,CAAC;YAIvD,IAAI,CAAC,OAAO,CAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC,OAAO,CAAE,IAAI,CAAC,SAAS,EAAE,CAAE,CAAC;SAEvE,MAEG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,SAAS,EAAE,CAAE,CAAC;QAI5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,OAAO,IAAI,CAAC;KAEf;IAED,UAAU,GAAG;QAET,IAAK,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAG;YAE3B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAE,IAAI,CAAC,OAAO,CAAE,CAAC,CAAE,CAAE,CAAC;YAE5C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAEjD,IAAI,CAAC,OAAO,CAAE,IAAC,GAAG,CAAC,CAAE,CAAC,UAAU,CAAE,IAAI,CAAC,OAAO,CAAE,IAAC,CAAE,CAAE,CAAC;YAI1D,IAAI,CAAC,OAAO,CAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC,UAAU,CAAE,IAAI,CAAC,SAAS,EAAE,CAAE,CAAC;SAE1E,MAEG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAE,IAAI,CAAC,SAAS,EAAE,CAAE,CAAC;QAI/C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,OAAO,IAAI,CAAC;KAEf;IAED,UAAU,GAAG;QAET,OAAO,IAAI,CAAC,OAAO,CAAC;KAEvB;IAED,UAAU,CAAE,KAAK,EAAG;QAEhB,IAAK,CAAE,KAAK,EAAG,KAAK,GAAG,EAAE,CAAC;QAE1B,IAAK,IAAI,CAAC,UAAU,KAAK,IAAI,EAAG;YAE5B,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;YAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;SAElB,MAEG,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;QAIjC,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,KAAK,EAAG;QAEf,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAK,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,SAAS,EAAG,OAAO,CAAC,iCAAiC;QAEjF,IAAK,IAAI,CAAC,SAAS,KAAK,IAAI,EAExB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAE,CAAC;QAItF,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,GAAG;QAER,OAAO,IAAI,CAAC,MAAM,CAAC;KAEtB;IAED,SAAS,GAAG;QAER,OAAO,IAAI,CAAC,UAAU,EAAE,CAAE,CAAC,CAAE,CAAC;KAEjC;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,OAAO,IAAI,CAAC,UAAU,CAAE,MAAM,GAAG;YAAE,MAAM;SAAE,GAAG,EAAE,CAAE,CAAC;KAEtD;IAED,eAAe,CAAE,KAAK,EAAG;QAErB,IAAK,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAG;YAErC,OAAO,CAAC,IAAI,CAAE,kDAAkD,CAAE,CAAC;YACnE,OAAO;SAEV;QAED,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAK,IAAI,CAAC,SAAS,KAAK,IAAI,EAExB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,eAAe,CAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAE,CAAC;QAIlG,OAAO,IAAI,CAAC;KAEf;IAED,eAAe,GAAG;QAEd,OAAO,IAAI,CAAC,YAAY,CAAC;KAE5B;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KAE1B;IAED,OAAO,GAAG;QAEN,IAAK,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAG;YAErC,OAAO,CAAC,IAAI,CAAE,kDAAkD,CAAE,CAAC;YACnE,OAAO,KAAK,CAAC;SAEhB;QAED,OAAO,IAAI,CAAC,IAAI,CAAC;KAEpB;IAED,OAAO,CAAE,KAAK,EAAG;QAEb,IAAK,IAAI,CAAC,kBAAkB,KAAK,KAAK,EAAG;YAErC,OAAO,CAAC,IAAI,CAAE,kDAAkD,CAAE,CAAC;YACnE,OAAO;SAEV;QAED,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAElB,IAAK,IAAI,CAAC,SAAS,KAAK,IAAI,EAExB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAIjC,OAAO,IAAI,CAAC;KAEf;IAED,YAAY,CAAE,KAAK,EAAG;QAElB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,OAAO,IAAI,CAAC;KAEf;IAED,UAAU,CAAE,KAAK,EAAG;QAEhB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,GAAG;QAER,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;KAE/B;IAED,SAAS,CAAE,KAAK,EAAG;QAEf,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAE,CAAC;QAExE,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC9C,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,UAAU,EAAE,AAAC;AACnD,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC3C,MAAM,YAAY,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAEjD,MAAM,eAAe,SAAS,KAAK;IAE/B,YAAa,QAAQ,CAAG;QAEpB,KAAK,CAAE,QAAQ,CAAE,CAAC;QAElB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;KAEpC;IAED,UAAU,GAAG;QAET,KAAK,CAAC,UAAU,EAAE,CAAC;QAEnB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;KAEvC;IAED,SAAS,GAAG;QAER,OAAO,IAAI,CAAC,MAAM,CAAC;KAEtB;IAED,cAAc,GAAG;QAEb,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;KAElC;IAED,cAAc,CAAE,KAAK,EAAG;QAEpB,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,GAAG;QAEf,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;KAEpC;IAED,gBAAgB,CAAE,KAAK,EAAG;QAEtB,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC;QAElC,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,GAAG;QAEf,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;KAEpC;IAED,gBAAgB,CAAE,KAAK,EAAG;QAEtB,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC;QAElC,OAAO,IAAI,CAAC;KAEf;IAED,cAAc,GAAG;QAEb,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;KAElC;IAED,cAAc,CAAE,KAAK,EAAG;QAEpB,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,kBAAkB,CAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAG;QAEhE,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,cAAc,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,cAAc,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,aAAa,CAAC;QAE1C,OAAO,IAAI,CAAC;KAEf;IAED,iBAAiB,CAAE,KAAK,EAAG;QAEvB,KAAK,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAC;QAEjC,IAAK,IAAI,CAAC,kBAAkB,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAG,OAAO;QAE3E,IAAI,CAAC,WAAW,CAAC,SAAS,CAAE,SAAS,EAAE,WAAW,EAAE,MAAM,CAAE,CAAC;QAE7D,YAAY,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,eAAe,CAAE,WAAW,CAAE,CAAC;QAE3D,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,AAAC;QAE3B,IAAK,MAAM,CAAC,SAAS,EAAG;YAEpB,gDAAgD;YAEhD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,AAAC;YAEnE,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAAE,SAAS,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;YACjE,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAAE,SAAS,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;YACjE,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAAE,SAAS,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;YACjE,MAAM,CAAC,YAAY,CAAC,uBAAuB,CAAE,YAAY,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;YACvE,MAAM,CAAC,YAAY,CAAC,uBAAuB,CAAE,YAAY,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;YACvE,MAAM,CAAC,YAAY,CAAC,uBAAuB,CAAE,YAAY,CAAC,CAAC,EAAE,OAAO,CAAE,CAAC;SAE1E,MAAM;YAEH,MAAM,CAAC,WAAW,CAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAE,CAAC;YAC5D,MAAM,CAAC,cAAc,CAAE,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAE,CAAC;SAE3E;KAEJ;CAEJ;AAED,MAAM,aAAa;IAEf,YAAa,KAAK,EAAE,OAAO,GAAG,IAAI,CAAG;QAEjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;QAEhC,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,CAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAE,CAAC;QAE9D,KAAK,CAAC,SAAS,EAAE,CAAC,OAAO,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;KAE9C;IAGD,gBAAgB,GAAG;QAEf,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAEhD,OAAO,IAAI,CAAC,IAAI,CAAC;KAEpB;IAED,mBAAmB,GAAG;QAElB,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,AAAC;QAErC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,EAAG,CAElC,KAAK,IAAI,IAAI,CAAE,IAAC,CAAE,CAAC;QAIvB,OAAO,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;KAE9B;CAEJ;AAED,MAAM,aAAa;IAEf,YAAa,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAG;QAExC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,WAAW,EACX,mBAAmB,EACnB,WAAW,AAAC;QAEhB,iFAAiF;QACjF,EAAE;QACF,iDAAiD;QACjD,mCAAmC;QACnC,EAAE;QACF,qDAAqD;QACrD,mDAAmD;QACnD,UAAU;QACV,EAAE;QACF,mDAAmD;QACnD,EAAE;QACF,gDAAgD;QAChD,EAAE;QACF,0EAA0E;QAC1E,0DAA0D;QAE1D,OAAS,QAAQ;YAEb,KAAK,YAAY;gBACb,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC1B,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC;gBAC1C,WAAW,GAAG,IAAI,CAAC,8BAA8B,CAAC;gBAElD,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,CAAE,SAAS,GAAG,CAAC,CAAE,CAAC;gBAChD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,MAAM;YAEV,KAAK,QAAQ,CAAC;YACd,KAAK,MAAM;gBACP,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;gBAE3B,gEAAgE;gBAChE,iDAAiD;gBACjD,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC;gBAEnC,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC;gBAE7C,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAE,SAAS,GAAG,CAAC,CAAE,CAAC;gBACzC,MAAM;YAEV;gBACI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;gBACzB,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC;gBACzC,WAAW,GAAG,IAAI,CAAC,2BAA2B,CAAC;gBAE/C,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,CAAE,SAAS,GAAG,CAAC,CAAE,CAAC;SAEvD;QAED,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC;QACpC,IAAI,CAAC,wBAAwB,GAAG,mBAAmB,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,wBAAwB,GAAG,CAAC,CAAC;QAElC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;KAE3B;IAED,0DAA0D;IAC1D,UAAU,CAAE,SAAS,EAAE,MAAM,EAAG;QAE5B,uEAAuE;QACvE,iEAAiE;QAEjE,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EACtB,MAAM,GAAG,IAAI,CAAC,SAAS,EACvB,MAAM,GAAG,SAAS,GAAG,MAAM,GAAG,MAAM,AAAC;QAEzC,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,AAAC;QAE1C,IAAK,aAAa,KAAK,CAAC,EAAG;YAEvB,6BAA6B;YAE7B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,MAAM,EAAE,EAAG,IAAC,CAE/B,MAAM,CAAE,MAAM,GAAG,IAAC,CAAE,GAAG,MAAM,CAAE,IAAC,CAAE,CAAC;YAIvC,aAAa,GAAG,MAAM,CAAC;SAE1B,MAAM;YAEH,qCAAqC;YAErC,aAAa,IAAI,MAAM,CAAC;YACxB,MAAM,GAAG,GAAG,MAAM,GAAG,aAAa,AAAC;YACnC,IAAI,CAAC,gBAAgB,CAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,CAAE,CAAC;SAE3D;QAED,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;KAEzC;IAED,sDAAsD;IACtD,kBAAkB,CAAE,MAAM,EAAG;QAEzB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EACtB,MAAM,GAAG,IAAI,CAAC,SAAS,EACvB,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,AAAC;QAErC,IAAK,IAAI,CAAC,wBAAwB,KAAK,CAAC,EAEpC,iBAAiB;QAEjB,IAAI,CAAC,YAAY,EAAE,CAAC;QAIxB,iCAAiC;QAEjC,IAAI,CAAC,wBAAwB,CAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,CAAE,CAAC;QACnE,IAAI,CAAC,wBAAwB,IAAI,MAAM,CAAC;KAE3C;IAED,gEAAgE;IAChE,KAAK,CAAE,SAAS,EAAG;QAEf,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EACzB,MAAM,GAAG,IAAI,CAAC,MAAM,EACpB,MAAM,GAAG,SAAS,GAAG,MAAM,GAAG,MAAM,EAEpC,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAC9B,cAAc,GAAG,IAAI,CAAC,wBAAwB,EAE9C,OAAO,GAAG,IAAI,CAAC,OAAO,AAAC;QAE3B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,wBAAwB,GAAG,CAAC,CAAC;QAElC,IAAK,MAAM,GAAG,CAAC,EAAG;YAEd,uDAAuD;YAEvD,MAAM,mBAAmB,GAAG,MAAM,GAAG,IAAI,CAAC,UAAU,AAAC;YAErD,IAAI,CAAC,gBAAgB,CACjB,MAAM,EAAE,MAAM,EAAE,mBAAmB,EAAE,CAAC,GAAG,MAAM,EAAE,MAAM,CAAE,CAAC;SAEjE;QAED,IAAK,cAAc,GAAG,CAAC,EAEnB,kCAAkC;QAElC,IAAI,CAAC,wBAAwB,CAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,GAAG,MAAM,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;QAIxF,IAAM,IAAI,IAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM,GAAG,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAEpD,IAAK,MAAM,CAAE,IAAC,CAAE,KAAK,MAAM,CAAE,IAAC,GAAG,MAAM,CAAE,EAAG;YAExC,0CAA0C;YAE1C,OAAO,CAAC,QAAQ,CAAE,MAAM,EAAE,MAAM,CAAE,CAAC;YACnC,MAAM;SAET;KAIR;IAED,qEAAqE;IACrE,iBAAiB,GAAG;QAEhB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,AAAC;QAE7B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EACtB,MAAM,GAAG,IAAI,CAAC,SAAS,EAEvB,mBAAmB,GAAG,MAAM,GAAG,IAAI,CAAC,UAAU,AAAC;QAEnD,OAAO,CAAC,QAAQ,CAAE,MAAM,EAAE,mBAAmB,CAAE,CAAC;QAEhD,sEAAsE;QACtE,IAAM,IAAI,IAAC,GAAG,MAAM,EAAE,CAAC,GAAG,mBAAmB,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAExD,MAAM,CAAE,IAAC,CAAE,GAAG,MAAM,CAAE,mBAAmB,GAAK,IAAC,GAAG,MAAM,AAAE,CAAE,CAAC;QAIjE,+BAA+B;QAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,wBAAwB,GAAG,CAAC,CAAC;KAErC;IAED,0EAA0E;IAC1E,oBAAoB,GAAG;QAEnB,MAAM,mBAAmB,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,AAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAE,IAAI,CAAC,MAAM,EAAE,mBAAmB,CAAE,CAAC;KAE7D;IAED,2BAA2B,GAAG;QAE1B,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,AAAC;QACnD,MAAM,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,SAAS,AAAC;QAE7C,IAAM,IAAI,IAAC,GAAG,UAAU,EAAE,IAAC,GAAG,QAAQ,EAAE,IAAC,EAAG,CAExC,IAAI,CAAC,MAAM,CAAE,IAAC,CAAE,GAAG,CAAC,CAAC;KAI5B;IAED,8BAA8B,GAAG;QAE7B,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,MAAM,CAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAE,GAAG,CAAC,CAAC;KAE1D;IAED,yBAAyB,GAAG;QAExB,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,AAAC;QACpD,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,AAAC;QAEpD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,SAAS,EAAE,IAAC,EAAG,CAErC,IAAI,CAAC,MAAM,CAAE,WAAW,GAAG,IAAC,CAAE,GAAG,IAAI,CAAC,MAAM,CAAE,UAAU,GAAG,IAAC,CAAE,CAAC;KAItE;IAGD,gBAAgB;IAEhB,OAAO,CAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,MAAM,EAAG;QAE/C,IAAK,CAAC,IAAI,GAAG,EAET,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,MAAM,EAAE,EAAG,IAAC,CAE/B,MAAM,CAAE,SAAS,GAAG,IAAC,CAAE,GAAG,MAAM,CAAE,SAAS,GAAG,IAAC,CAAE,CAAC;KAM7D;IAED,MAAM,CAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAG;QAEtC,UAAU,CAAC,SAAS,CAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAE,CAAC;KAEtF;IAED,cAAc,CAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,MAAM,EAAG;QAEtD,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,MAAM,AAAC;QAE5C,6CAA6C;QAC7C,UAAU,CAAC,uBAAuB,CAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,CAAE,CAAC;QAE/F,mCAAmC;QACnC,UAAU,CAAC,SAAS,CAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAE,CAAC;KAEvF;IAED,KAAK,CAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,MAAM,EAAG;QAE7C,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;QAEhB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,MAAM,EAAE,EAAG,IAAC,CAAG;YAElC,MAAM,CAAC,GAAG,SAAS,GAAG,IAAC,AAAC;YAExB,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,MAAM,CAAE,SAAS,GAAG,IAAC,CAAE,GAAG,CAAC,CAAC;SAE/D;KAEJ;IAED,aAAa,CAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,MAAM,EAAG;QAErD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,MAAM,EAAE,EAAG,IAAC,CAAG;YAElC,MAAM,CAAC,GAAG,SAAS,GAAG,IAAC,AAAC;YAExB,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,SAAS,GAAG,IAAC,CAAE,GAAG,CAAC,CAAC;SAE3D;KAEJ;CAEJ;AAED,0DAA0D;AAC1D,MAAM,kBAAkB,GAAG,eAAe,AAAC;AAC3C,MAAM,WAAW,GAAG,IAAI,MAAM,CAAE,GAAG,GAAG,kBAAkB,GAAG,GAAG,EAAE,GAAG,CAAE,AAAC;AAEtE,4EAA4E;AAC5E,wEAAwE;AACxE,qEAAqE;AACrE,MAAM,SAAS,GAAG,IAAI,GAAG,kBAAkB,GAAG,GAAG,AAAC;AAClD,MAAM,cAAc,GAAG,IAAI,GAAG,kBAAkB,CAAC,OAAO,CAAE,KAAK,EAAE,EAAE,CAAE,GAAG,GAAG,AAAC;AAE5E,0EAA0E;AAC1E,kDAAkD;AAClD,MAAM,YAAY,GAAG,kBAAkB,MAAM,CAAC,OAAO,CAAE,IAAI,EAAE,SAAS,CAAE,AAAC;AAEzE,wEAAwE;AACxE,MAAM,OAAO,GAAG,WAAW,MAAM,CAAC,OAAO,CAAE,MAAM,EAAE,cAAc,CAAE,AAAC;AAEpE,gEAAgE;AAChE,yEAAyE;AACzE,MAAM,SAAS,GAAG,4BAA4B,MAAM,CAAC,OAAO,CAAE,IAAI,EAAE,SAAS,CAAE,AAAC;AAEhF,2EAA2E;AAC3E,sCAAsC;AACtC,MAAM,WAAW,GAAG,uBAAuB,MAAM,CAAC,OAAO,CAAE,IAAI,EAAE,SAAS,CAAE,AAAC;AAE7E,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAE,GACpB,GACH,YAAY,GACZ,OAAO,GACP,SAAS,GACT,WAAW,GACX,GAAG,CACR,AAAC;AAEF,MAAM,qBAAqB,GAAG;IAAE,UAAU;IAAE,WAAW;IAAE,OAAO;CAAE,AAAC;AAEnE,MAAM,SAAS;IAEX,YAAa,WAAW,EAAE,IAAI,EAAE,kBAAkB,CAAG;QAEjD,MAAM,UAAU,GAAG,kBAAkB,IAAI,eAAe,CAAC,cAAc,CAAE,IAAI,CAAE,AAAC;QAEhF,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,UAAU,CAAE,IAAI,EAAE,UAAU,CAAE,CAAC;KAE/D;IAED,QAAQ,CAAE,KAAK,EAAE,MAAM,EAAG;QAEtB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,mBAAmB;QAEhC,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EACrD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAE,eAAe,CAAE,AAAC;QAEhD,uCAAuC;QACvC,IAAK,OAAO,KAAK,SAAS,EAAG,OAAO,CAAC,QAAQ,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;KAElE;IAED,QAAQ,CAAE,KAAK,EAAE,MAAM,EAAG;QAEtB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,AAAC;QAEhC,IAAM,IAAI,IAAC,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE/E,QAAQ,CAAE,IAAC,CAAE,CAAC,QAAQ,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;KAI/C;IAED,IAAI,GAAG;QAEH,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,AAAC;QAEhC,IAAM,IAAI,IAAC,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE/E,QAAQ,CAAE,IAAC,CAAE,CAAC,IAAI,EAAE,CAAC;KAI5B;IAED,MAAM,GAAG;QAEL,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,AAAC;QAEhC,IAAM,IAAI,IAAC,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE/E,QAAQ,CAAE,IAAC,CAAE,CAAC,MAAM,EAAE,CAAC;KAI9B;CAEJ;AAED,+DAA+D;AAC/D,2DAA2D;AAC3D,8DAA8D;AAC9D,+DAA+D;AAC/D,iBAAiB;AACjB,MAAM,eAAe;IAEjB,YAAa,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAG;QAEtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,eAAe,CAAC,cAAc,CAAE,IAAI,CAAE,CAAC;QAEvE,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC,QAAQ,CAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAE,IAAI,QAAQ,CAAC;QAEvF,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,mDAAmD;QACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC;KAE1C;IAGD,OAAO,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAG;QAEpC,IAAK,CAAI,CAAA,IAAI,IAAI,IAAI,CAAC,sBAAsB,CAAA,AAAE,EAE1C,OAAO,IAAI,eAAe,CAAE,IAAI,EAAE,IAAI,EAAE,UAAU,CAAE,CAAC;aAIrD,OAAO,IAAI,eAAe,CAAC,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE,UAAU,CAAE,CAAC;KAItE;IAED;;;;;;QAMG,CACH,OAAO,gBAAgB,CAAE,IAAI,EAAG;QAE5B,OAAO,IAAI,CAAC,OAAO,QAAS,GAAG,CAAE,CAAC,OAAO,CAAE,WAAW,EAAE,EAAE,CAAE,CAAC;KAEhE;IAED,OAAO,cAAc,CAAE,SAAS,EAAG;QAE/B,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAE,SAAS,CAAE,AAAC;QAE3C,IAAK,OAAO,KAAK,IAAI,EAEjB,MAAM,IAAI,KAAK,CAAE,2CAA2C,GAAG,SAAS,CAAE,CAAC;QAI/E,MAAM,OAAO,GAAG;YACZ,2DAA2D;YAC3D,QAAQ,EAAE,OAAO,CAAE,CAAC,CAAE;YACtB,UAAU,EAAE,OAAO,CAAE,CAAC,CAAE;YACxB,WAAW,EAAE,OAAO,CAAE,CAAC,CAAE;YACzB,YAAY,EAAE,OAAO,CAAE,CAAC,CAAE;YAC1B,aAAa,EAAE,OAAO,CAAE,CAAC,CAAE;SAC9B,AAAC;QAEF,MAAM,OAAO,GAAG,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAE,GAAG,CAAE,AAAC;QAExE,IAAK,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,EAAG,EAAG;YAE5C,MAAM,UAAU,GAAG,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAE,OAAO,GAAG,CAAC,CAAE,AAAC;YAE7D,sEAAsE;YACtE,kEAAkE;YAClE,kEAAkE;YAClE,2BAA2B;YAC3B,IAAK,qBAAqB,CAAC,OAAO,CAAE,UAAU,CAAE,KAAK,EAAG,EAAG;gBAEvD,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAE,CAAC,EAAE,OAAO,CAAE,CAAC;gBAC5D,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;aAEnC;SAEJ;QAED,IAAK,OAAO,CAAC,YAAY,KAAK,IAAI,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAEnE,MAAM,IAAI,KAAK,CAAE,8DAA8D,GAAG,SAAS,CAAE,CAAC;QAIlG,OAAO,OAAO,CAAC;KAElB;IAED,OAAO,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAG;QAE9B,IAAK,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,EAAE,IAAI,QAAQ,KAAK,GAAG,IAAI,QAAQ,KAAK,EAAG,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,EAEtI,OAAO,IAAI,CAAC;QAIhB,8BAA8B;QAC9B,IAAK,IAAI,CAAC,QAAQ,EAAG;YAEjB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAE,QAAQ,CAAE,AAAC;YAErD,IAAK,IAAI,KAAK,SAAS,EAEnB,OAAO,IAAI,CAAC;SAInB;QAED,4BAA4B;QAC5B,IAAK,IAAI,CAAC,QAAQ,EAAG;YAEjB,MAAM,iBAAiB,GAAG,SAAW,QAAQ,EAAG;gBAE5C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;oBAEzC,MAAM,SAAS,GAAG,QAAQ,CAAE,IAAC,CAAE,AAAC;oBAEhC,IAAK,SAAS,CAAC,IAAI,KAAK,QAAQ,IAAI,SAAS,CAAC,IAAI,KAAK,QAAQ,EAE3D,OAAO,SAAS,CAAC;oBAIrB,MAAM,MAAM,GAAG,iBAAiB,CAAE,SAAS,CAAC,QAAQ,CAAE,AAAC;oBAEvD,IAAK,MAAM,EAAG,OAAO,MAAM,CAAC;iBAE/B;gBAED,OAAO,IAAI,CAAC;aAEf,AAAC;YAEF,MAAM,WAAW,GAAG,iBAAiB,CAAE,IAAI,CAAC,QAAQ,CAAE,AAAC;YAEvD,IAAK,WAAW,EAEZ,OAAO,WAAW,CAAC;SAI1B;QAED,OAAO,IAAI,CAAC;KAEf;IAED,kDAAkD;IAClD,qBAAqB,GAAG,EAAE;IAC1B,qBAAqB,GAAG,EAAE;IAE1B,UAAU;IAEV,gBAAgB,CAAE,MAAM,EAAE,MAAM,EAAG;QAE/B,MAAM,CAAE,MAAM,CAAE,GAAG,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;KAE7D;IAED,eAAe,CAAE,MAAM,EAAE,MAAM,EAAG;QAE9B,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,AAAC;QAErC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE7C,MAAM,CAAE,MAAM,EAAG,CAAE,GAAG,MAAM,CAAE,IAAC,CAAE,CAAC;KAIzC;IAED,sBAAsB,CAAE,MAAM,EAAE,MAAM,EAAG;QAErC,MAAM,CAAE,MAAM,CAAE,GAAG,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;KAElE;IAED,iBAAiB,CAAE,MAAM,EAAE,MAAM,EAAG;QAEhC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAE,MAAM,EAAE,MAAM,CAAE,CAAC;KAEnD;IAED,SAAS;IAET,gBAAgB,CAAE,MAAM,EAAE,MAAM,EAAG;QAE/B,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,YAAY,CAAE,GAAG,MAAM,CAAE,MAAM,CAAE,CAAC;KAE7D;IAED,+BAA+B,CAAE,MAAM,EAAE,MAAM,EAAG;QAE9C,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,YAAY,CAAE,GAAG,MAAM,CAAE,MAAM,CAAE,CAAC;QAC1D,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;KAExC;IAED,0CAA0C,CAAE,MAAM,EAAE,MAAM,EAAG;QAEzD,IAAI,CAAC,YAAY,CAAE,IAAI,CAAC,YAAY,CAAE,GAAG,MAAM,CAAE,MAAM,CAAE,CAAC;QAC1D,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,IAAI,CAAC;KAEnD;IAED,cAAc;IAEd,eAAe,CAAE,MAAM,EAAE,MAAM,EAAG;QAE9B,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,AAAC;QAEnC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE3C,IAAI,CAAE,IAAC,CAAE,GAAG,MAAM,CAAE,MAAM,EAAG,CAAE,CAAC;KAIvC;IAED,8BAA8B,CAAE,MAAM,EAAE,MAAM,EAAG;QAE7C,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,AAAC;QAEnC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE3C,IAAI,CAAE,IAAC,CAAE,GAAG,MAAM,CAAE,MAAM,EAAG,CAAE,CAAC;QAIpC,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;KAExC;IAED,yCAAyC,CAAE,MAAM,EAAE,MAAM,EAAG;QAExD,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,AAAC;QAEnC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAE3C,IAAI,CAAE,IAAC,CAAE,GAAG,MAAM,CAAE,MAAM,EAAG,CAAE,CAAC;QAIpC,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,IAAI,CAAC;KAEnD;IAED,eAAe;IAEf,sBAAsB,CAAE,MAAM,EAAE,MAAM,EAAG;QAErC,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,GAAG,MAAM,CAAE,MAAM,CAAE,CAAC;KAElE;IAED,qCAAqC,CAAE,MAAM,EAAE,MAAM,EAAG;QAEpD,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,GAAG,MAAM,CAAE,MAAM,CAAE,CAAC;QAC/D,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;KAExC;IAED,gDAAgD,CAAE,MAAM,EAAE,MAAM,EAAG;QAE/D,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAC,aAAa,CAAE,GAAG,MAAM,CAAE,MAAM,CAAE,CAAC;QAC/D,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,IAAI,CAAC;KAEnD;IAED,iBAAiB;IAEjB,mBAAmB,CAAE,MAAM,EAAE,MAAM,EAAG;QAElC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAE,MAAM,EAAE,MAAM,CAAE,CAAC;KAErD;IAED,kCAAkC,CAAE,MAAM,EAAE,MAAM,EAAG;QAEjD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAE,MAAM,EAAE,MAAM,CAAE,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;KAExC;IAED,6CAA6C,CAAE,MAAM,EAAE,MAAM,EAAG;QAE5D,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAE,MAAM,EAAE,MAAM,CAAE,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,IAAI,CAAC;KAEnD;IAED,iBAAiB,CAAE,WAAW,EAAE,MAAM,EAAG;QAErC,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,QAAQ,CAAE,WAAW,EAAE,MAAM,CAAE,CAAC;KAExC;IAED,iBAAiB,CAAE,WAAW,EAAE,MAAM,EAAG;QAErC,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,QAAQ,CAAE,WAAW,EAAE,MAAM,CAAE,CAAC;KAExC;IAED,gEAAgE;IAChE,IAAI,GAAG;QAEH,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,AAAC;QAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,AAAC;QAEnC,MAAM,UAAU,GAAG,UAAU,CAAC,UAAU,AAAC;QACzC,MAAM,YAAY,GAAG,UAAU,CAAC,YAAY,AAAC;QAC7C,IAAI,aAAa,GAAG,UAAU,CAAC,aAAa,AAAC;QAE7C,IAAK,CAAE,YAAY,EAAG;YAElB,YAAY,GAAG,eAAe,CAAC,QAAQ,CAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAE,IAAI,IAAI,CAAC,QAAQ,CAAC;YAE/F,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;SAE5B;QAED,kDAAkD;QAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAE3C,+BAA+B;QAC/B,IAAK,CAAE,YAAY,EAAG;YAElB,OAAO,CAAC,KAAK,CAAE,0DAA0D,GAAG,IAAI,CAAC,IAAI,GAAG,wBAAwB,CAAE,CAAC;YACnH,OAAO;SAEV;QAED,IAAK,UAAU,EAAG;YAEd,IAAI,WAAW,GAAG,UAAU,CAAC,WAAW,AAAC;YAEzC,8FAA8F;YAC9F,OAAS,UAAU;gBAEf,KAAK,WAAW;oBAEZ,IAAK,CAAE,YAAY,CAAC,QAAQ,EAAG;wBAE3B,OAAO,CAAC,KAAK,CAAE,mFAAmF,EAAE,IAAI,CAAE,CAAC;wBAC3G,OAAO;qBAEV;oBAED,IAAK,CAAE,YAAY,CAAC,QAAQ,CAAC,SAAS,EAAG;wBAErC,OAAO,CAAC,KAAK,CAAE,6GAA6G,EAAE,IAAI,CAAE,CAAC;wBACrI,OAAO;qBAEV;oBAED,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC;oBAE/C,MAAM;gBAEV,KAAK,OAAO;oBAER,IAAK,CAAE,YAAY,CAAC,QAAQ,EAAG;wBAE3B,OAAO,CAAC,KAAK,CAAE,gFAAgF,EAAE,IAAI,CAAE,CAAC;wBACxG,OAAO;qBAEV;oBAED,kFAAkF;oBAClF,oDAAoD;oBAEpD,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC;oBAE3C,oDAAoD;oBACpD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,YAAY,CAAC,MAAM,EAAE,IAAC,EAAG,CAE1C,IAAK,YAAY,CAAE,IAAC,CAAE,CAAC,IAAI,KAAK,WAAW,EAAG;wBAE1C,WAAW,GAAG,IAAC,CAAC;wBAChB,MAAM;qBAET;oBAIL,MAAM;gBAEV;oBAEI,IAAK,YAAY,CAAE,UAAU,CAAE,KAAK,SAAS,EAAG;wBAE5C,OAAO,CAAC,KAAK,CAAE,sEAAsE,EAAE,IAAI,CAAE,CAAC;wBAC9F,OAAO;qBAEV;oBAED,YAAY,GAAG,YAAY,CAAE,UAAU,CAAE,CAAC;aAEjD;YAGD,IAAK,WAAW,KAAK,SAAS,EAAG;gBAE7B,IAAK,YAAY,CAAE,WAAW,CAAE,KAAK,SAAS,EAAG;oBAE7C,OAAO,CAAC,KAAK,CAAE,uFAAuF,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;oBAC7H,OAAO;iBAEV;gBAED,YAAY,GAAG,YAAY,CAAE,WAAW,CAAE,CAAC;aAE9C;SAEJ;QAED,mBAAmB;QACnB,MAAM,YAAY,GAAG,YAAY,CAAE,YAAY,CAAE,AAAC;QAElD,IAAK,YAAY,KAAK,SAAS,EAAG;YAE9B,MAAM,QAAQ,GAAG,UAAU,CAAC,QAAQ,AAAC;YAErC,OAAO,CAAC,KAAK,CAAE,8DAA8D,GAAG,QAAQ,GACpF,GAAG,GAAG,YAAY,GAAG,wBAAwB,EAAE,YAAY,CAAE,CAAC;YAClE,OAAO;SAEV;QAED,8BAA8B;QAC9B,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,AAAC;QAEtC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QAEjC,IAAK,YAAY,CAAC,WAAW,KAAK,SAAS,EAEvC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;aAEtC,IAAK,YAAY,CAAC,sBAAsB,KAAK,SAAS,EAEzD,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC;QAIxD,wCAAwC;QACxC,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,AAAC;QAE1C,IAAK,aAAa,KAAK,SAAS,EAAG;YAE/B,uFAAuF;YAEvF,IAAK,YAAY,KAAK,uBAAuB,EAAG;gBAE5C,8HAA8H;gBAE9H,oDAAoD;gBACpD,IAAK,CAAE,YAAY,CAAC,QAAQ,EAAG;oBAE3B,OAAO,CAAC,KAAK,CAAE,qGAAqG,EAAE,IAAI,CAAE,CAAC;oBAC7H,OAAO;iBAEV;gBAED,IAAK,YAAY,CAAC,QAAQ,CAAC,gBAAgB,EAAG;oBAE1C,IAAK,CAAE,YAAY,CAAC,QAAQ,CAAC,eAAe,EAAG;wBAE3C,OAAO,CAAC,KAAK,CAAE,qHAAqH,EAAE,IAAI,CAAE,CAAC;wBAC7I,OAAO;qBAEV;oBAED,IAAK,YAAY,CAAC,qBAAqB,CAAE,aAAa,CAAE,KAAK,SAAS,EAElE,aAAa,GAAG,YAAY,CAAC,qBAAqB,CAAE,aAAa,CAAE,CAAC;iBAK3E,MAAM;oBAEH,OAAO,CAAC,KAAK,CAAE,mHAAmH,EAAE,IAAI,CAAE,CAAC;oBAC3I,OAAO;iBAEV;aAEJ;YAED,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;YAE5C,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC;YACrC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SAEtC,MAAM,IAAK,YAAY,CAAC,SAAS,KAAK,SAAS,IAAI,YAAY,CAAC,OAAO,KAAK,SAAS,EAAG;YAErF,8CAA8C;YAE9C,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC;YAE9C,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC;SAExC,MAAM,IAAK,KAAK,CAAC,OAAO,CAAE,YAAY,CAAE,EAAG;YAExC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;YAE3C,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC;SAExC,MAEG,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QAIrC,yBAAyB;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAE,WAAW,CAAE,CAAC;QACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gCAAgC,CAAE,WAAW,CAAE,CAAE,UAAU,CAAE,CAAC;KAEtF;IAED,MAAM,GAAG;QAEL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,uDAAuD;QACvD,4DAA4D;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC;KAE1C;CAEJ;AAED,eAAe,CAAC,SAAS,GAAG,SAAS,CAAC;AAEtC,eAAe,CAAC,SAAS,CAAC,WAAW,GAAG;IACpC,MAAM,EAAE,CAAC;IACT,WAAW,EAAE,CAAC;IACd,YAAY,EAAE,CAAC;IACf,cAAc,EAAE,CAAC;CACpB,CAAC;AAEF,eAAe,CAAC,SAAS,CAAC,UAAU,GAAG;IACnC,IAAI,EAAE,CAAC;IACP,WAAW,EAAE,CAAC;IACd,sBAAsB,EAAE,CAAC;CAC5B,CAAC;AAEF,eAAe,CAAC,SAAS,CAAC,mBAAmB,GAAG;IAE5C,eAAe,CAAC,SAAS,CAAC,gBAAgB;IAC1C,eAAe,CAAC,SAAS,CAAC,eAAe;IACzC,eAAe,CAAC,SAAS,CAAC,sBAAsB;IAChD,eAAe,CAAC,SAAS,CAAC,iBAAiB;CAE9C,CAAC;AAEF,eAAe,CAAC,SAAS,CAAC,gCAAgC,GAAG;IAEzD;QACI,SAAS;QACT,eAAe,CAAC,SAAS,CAAC,gBAAgB;QAC1C,eAAe,CAAC,SAAS,CAAC,+BAA+B;QACzD,eAAe,CAAC,SAAS,CAAC,0CAA0C;KAEvE;IAAE;QAEC,cAAc;QAEd,eAAe,CAAC,SAAS,CAAC,eAAe;QACzC,eAAe,CAAC,SAAS,CAAC,8BAA8B;QACxD,eAAe,CAAC,SAAS,CAAC,yCAAyC;KAEtE;IAAE;QAEC,eAAe;QACf,eAAe,CAAC,SAAS,CAAC,sBAAsB;QAChD,eAAe,CAAC,SAAS,CAAC,qCAAqC;QAC/D,eAAe,CAAC,SAAS,CAAC,gDAAgD;KAE7E;IAAE;QAEC,iBAAiB;QACjB,eAAe,CAAC,SAAS,CAAC,mBAAmB;QAC7C,eAAe,CAAC,SAAS,CAAC,kCAAkC;QAC5D,eAAe,CAAC,SAAS,CAAC,6CAA6C;KAE1E;CAEJ,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;IA2BG,CAEH,MAAM,oBAAoB;IAEtB,aAAc;QAEV,IAAI,CAAC,IAAI,GAAG,YAAY,EAAE,CAAC;QAE3B,6CAA6C;QAC7C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC;QAExD,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,YAAY;QACtC,0CAA0C;QAE1C,MAAM,OAAO,GAAG,EAAE,AAAC;QACnB,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,CAAC,kBAAkB;QAEjD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAEhD,OAAO,CAAE,SAAS,CAAE,IAAC,CAAE,CAAC,IAAI,CAAE,GAAG,IAAC,CAAC;QAIvC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,iBAAiB;QACnC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC,kCAAkC;QAC1D,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC,mCAAmC;QACxD,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC,CAAC,kCAAkC;QAEpE,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,IAAI,CAAC,KAAK,GAAG;YAET,OAAO,EAAE;gBACL,IAAI,KAAK,IAAG;oBAER,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;iBAEhC;gBACD,IAAI,KAAK,IAAG;oBAER,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC;iBAE7C;aACJ;YACD,IAAI,iBAAiB,IAAG;gBAEpB,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;aAEjC;SAEJ,CAAC;KAEL;IAED,GAAG,GAAG;QAEF,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,aAAa,GAAG,IAAI,CAAC,cAAc,EACnC,KAAK,GAAG,IAAI,CAAC,MAAM,EACnB,WAAW,GAAG,IAAI,CAAC,YAAY,EAC/B,QAAQ,GAAG,IAAI,CAAC,SAAS,EACzB,SAAS,GAAG,QAAQ,CAAC,MAAM,AAAC;QAEhC,IAAI,WAAW,GAAG,SAAS,EACvB,QAAQ,GAAG,OAAO,CAAC,MAAM,EACzB,cAAc,GAAG,IAAI,CAAC,eAAe,AAAC;QAE1C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;YAEnD,MAAM,MAAM,GAAG,SAAS,CAAE,IAAC,CAAE,EACzB,IAAI,GAAG,MAAM,CAAC,IAAI,AAAC;YACvB,IAAI,KAAK,GAAG,aAAa,CAAE,IAAI,CAAE,AAAC;YAElC,IAAK,KAAK,KAAK,SAAS,EAAG;gBAEvB,gDAAgD;gBAEhD,KAAK,GAAG,QAAQ,EAAG,CAAC;gBACpB,aAAa,CAAE,IAAI,CAAE,GAAG,KAAK,CAAC;gBAC9B,OAAO,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;gBAEvB,uDAAuD;gBAEvD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,CAEzC,QAAQ,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,IAAI,eAAe,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC,CAAE,EAAE,WAAW,CAAE,CAAC,CAAE,CAAE,CAAE,CAAC;aAIzF,MAAM,IAAK,KAAK,GAAG,cAAc,EAAG;gBAEjC,WAAW,GAAG,OAAO,CAAE,KAAK,CAAE,CAAC;gBAE/B,4CAA4C;gBAE5C,MAAM,gBAAgB,GAAG,EAAG,cAAc,EACtC,gBAAgB,GAAG,OAAO,CAAE,gBAAgB,CAAE,AAAC;gBAEnD,aAAa,CAAE,gBAAgB,CAAC,IAAI,CAAE,GAAG,KAAK,CAAC;gBAC/C,OAAO,CAAE,KAAK,CAAE,GAAG,gBAAgB,CAAC;gBAEpC,aAAa,CAAE,IAAI,CAAE,GAAG,gBAAgB,CAAC;gBACzC,OAAO,CAAE,gBAAgB,CAAE,GAAG,MAAM,CAAC;gBAErC,uDAAuD;gBAEvD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,CAAG;oBAE5C,MAAM,eAAe,GAAG,QAAQ,CAAE,CAAC,CAAE,EACjC,UAAU,GAAG,eAAe,CAAE,gBAAgB,CAAE,AAAC;oBAErD,IAAI,OAAO,GAAG,eAAe,CAAE,KAAK,CAAE,AAAC;oBAEvC,eAAe,CAAE,KAAK,CAAE,GAAG,UAAU,CAAC;oBAEtC,IAAK,OAAO,KAAK,SAAS,EAEtB,gDAAgD;oBAChD,+CAA+C;oBAC/C,mBAAmB;oBAEnB,OAAO,GAAG,IAAI,eAAe,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC,CAAE,EAAE,WAAW,CAAE,CAAC,CAAE,CAAE,CAAC;oBAI1E,eAAe,CAAE,gBAAgB,CAAE,GAAG,OAAO,CAAC;iBAEjD;aAEJ,MAAM,IAAK,OAAO,CAAE,KAAK,CAAE,KAAK,WAAW,EAExC,OAAO,CAAC,KAAK,CAAE,oJACwE,CAAE,CAAC;YAE7F,CAAC,oDAAoD;SAEzD,CAAC,gBAAgB;QAElB,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;KAEzC;IAED,MAAM,GAAG;QAEL,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,aAAa,GAAG,IAAI,CAAC,cAAc,EACnC,QAAQ,GAAG,IAAI,CAAC,SAAS,EACzB,SAAS,GAAG,QAAQ,CAAC,MAAM,AAAC;QAEhC,IAAI,cAAc,GAAG,IAAI,CAAC,eAAe,AAAC;QAE1C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;YAEnD,MAAM,MAAM,GAAG,SAAS,CAAE,IAAC,CAAE,EACzB,IAAI,GAAG,MAAM,CAAC,IAAI,EAClB,KAAK,GAAG,aAAa,CAAE,IAAI,CAAE,AAAC;YAElC,IAAK,KAAK,KAAK,SAAS,IAAI,KAAK,IAAI,cAAc,EAAG;gBAElD,8CAA8C;gBAE9C,MAAM,eAAe,GAAG,cAAc,EAAG,EACrC,iBAAiB,GAAG,OAAO,CAAE,eAAe,CAAE,AAAC;gBAEnD,aAAa,CAAE,iBAAiB,CAAC,IAAI,CAAE,GAAG,KAAK,CAAC;gBAChD,OAAO,CAAE,KAAK,CAAE,GAAG,iBAAiB,CAAC;gBAErC,aAAa,CAAE,IAAI,CAAE,GAAG,eAAe,CAAC;gBACxC,OAAO,CAAE,eAAe,CAAE,GAAG,MAAM,CAAC;gBAEpC,uDAAuD;gBAEvD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,CAAG;oBAE5C,MAAM,eAAe,GAAG,QAAQ,CAAE,CAAC,CAAE,EACjC,WAAW,GAAG,eAAe,CAAE,eAAe,CAAE,EAChD,OAAO,GAAG,eAAe,CAAE,KAAK,CAAE,AAAC;oBAEvC,eAAe,CAAE,KAAK,CAAE,GAAG,WAAW,CAAC;oBACvC,eAAe,CAAE,eAAe,CAAE,GAAG,OAAO,CAAC;iBAEhD;aAEJ;SAEJ,CAAC,gBAAgB;QAElB,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;KAEzC;IAED,kBAAkB;IAClB,OAAO,GAAG;QAEN,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,aAAa,GAAG,IAAI,CAAC,cAAc,EACnC,QAAQ,GAAG,IAAI,CAAC,SAAS,EACzB,SAAS,GAAG,QAAQ,CAAC,MAAM,AAAC;QAEhC,IAAI,cAAc,GAAG,IAAI,CAAC,eAAe,EACrC,QAAQ,GAAG,OAAO,CAAC,MAAM,AAAC;QAE9B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;YAEnD,MAAM,MAAM,GAAG,SAAS,CAAE,IAAC,CAAE,EACzB,IAAI,GAAG,MAAM,CAAC,IAAI,EAClB,KAAK,GAAG,aAAa,CAAE,IAAI,CAAE,AAAC;YAElC,IAAK,KAAK,KAAK,SAAS,EAAG;gBAEvB,OAAO,aAAa,CAAE,IAAI,CAAE,CAAC;gBAE7B,IAAK,KAAK,GAAG,cAAc,EAAG;oBAE1B,6CAA6C;oBAE7C,MAAM,gBAAgB,GAAG,EAAG,cAAc,EACtC,gBAAgB,GAAG,OAAO,CAAE,gBAAgB,CAAE,EAC9C,SAAS,GAAG,EAAG,QAAQ,EACvB,UAAU,GAAG,OAAO,CAAE,SAAS,CAAE,AAAC;oBAEtC,+CAA+C;oBAC/C,aAAa,CAAE,gBAAgB,CAAC,IAAI,CAAE,GAAG,KAAK,CAAC;oBAC/C,OAAO,CAAE,KAAK,CAAE,GAAG,gBAAgB,CAAC;oBAEpC,iDAAiD;oBACjD,aAAa,CAAE,UAAU,CAAC,IAAI,CAAE,GAAG,gBAAgB,CAAC;oBACpD,OAAO,CAAE,gBAAgB,CAAE,GAAG,UAAU,CAAC;oBACzC,OAAO,CAAC,GAAG,EAAE,CAAC;oBAEd,uDAAuD;oBAEvD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,CAAG;wBAE5C,MAAM,eAAe,GAAG,QAAQ,CAAE,CAAC,CAAE,EACjC,UAAU,GAAG,eAAe,CAAE,gBAAgB,CAAE,EAChD,IAAI,GAAG,eAAe,CAAE,SAAS,CAAE,AAAC;wBAExC,eAAe,CAAE,KAAK,CAAE,GAAG,UAAU,CAAC;wBACtC,eAAe,CAAE,gBAAgB,CAAE,GAAG,IAAI,CAAC;wBAC3C,eAAe,CAAC,GAAG,EAAE,CAAC;qBAEzB;iBAEJ,MAAM;oBAEH,oDAAoD;oBAEpD,MAAM,SAAS,GAAG,EAAG,QAAQ,EACzB,UAAU,GAAG,OAAO,CAAE,SAAS,CAAE,AAAC;oBAEtC,IAAK,SAAS,GAAG,CAAC,EAEd,aAAa,CAAE,UAAU,CAAC,IAAI,CAAE,GAAG,KAAK,CAAC;oBAI7C,OAAO,CAAE,KAAK,CAAE,GAAG,UAAU,CAAC;oBAC9B,OAAO,CAAC,GAAG,EAAE,CAAC;oBAEd,uDAAuD;oBAEvD,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,CAAG;wBAE5C,MAAM,eAAe,GAAG,QAAQ,CAAE,CAAC,CAAE,AAAC;wBAEtC,eAAe,CAAE,KAAK,CAAE,GAAG,eAAe,CAAE,SAAS,CAAE,CAAC;wBACxD,eAAe,CAAC,GAAG,EAAE,CAAC;qBAEzB;iBAEJ,CAAC,mBAAmB;aAExB,CAAC,qBAAqB;SAE1B,CAAC,gBAAgB;QAElB,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;KAEzC;IAED,mEAAmE;IAEnE,UAAU,CAAE,IAAI,EAAE,UAAU,EAAG;QAE3B,kEAAkE;QAClE,kDAAkD;QAElD,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,AAAC;QAClD,IAAI,KAAK,GAAG,aAAa,CAAE,IAAI,CAAE,AAAC;QAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,AAAC;QAEhC,IAAK,KAAK,KAAK,SAAS,EAAG,OAAO,QAAQ,CAAE,KAAK,CAAE,CAAC;QAEpD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EACrB,WAAW,GAAG,IAAI,CAAC,YAAY,EAC/B,OAAO,GAAG,IAAI,CAAC,QAAQ,EACvB,QAAQ,GAAG,OAAO,CAAC,MAAM,EACzB,cAAc,GAAG,IAAI,CAAC,eAAe,EACrC,eAAe,GAAG,IAAI,KAAK,CAAE,QAAQ,CAAE,AAAC;QAE5C,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;QAExB,aAAa,CAAE,IAAI,CAAE,GAAG,KAAK,CAAC;QAE9B,KAAK,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;QACnB,WAAW,CAAC,IAAI,CAAE,UAAU,CAAE,CAAC;QAC/B,QAAQ,CAAC,IAAI,CAAE,eAAe,CAAE,CAAC;QAEjC,IAAM,IAAI,IAAC,GAAG,cAAc,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;YAE9D,MAAM,MAAM,GAAG,OAAO,CAAE,IAAC,CAAE,AAAC;YAC5B,eAAe,CAAE,IAAC,CAAE,GAAG,IAAI,eAAe,CAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAE,CAAC;SAE1E;QAED,OAAO,eAAe,CAAC;KAE1B;IAED,YAAY,CAAE,IAAI,EAAG;QAEjB,gEAAgE;QAChE,yDAAyD;QAEzD,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,EAC7C,KAAK,GAAG,aAAa,CAAE,IAAI,CAAE,AAAC;QAElC,IAAK,KAAK,KAAK,SAAS,EAAG;YAEvB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EACrB,WAAW,GAAG,IAAI,CAAC,YAAY,EAC/B,QAAQ,GAAG,IAAI,CAAC,SAAS,EACzB,iBAAiB,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EACvC,YAAY,GAAG,QAAQ,CAAE,iBAAiB,CAAE,EAC5C,gBAAgB,GAAG,IAAI,CAAE,iBAAiB,CAAE,AAAC;YAEjD,aAAa,CAAE,gBAAgB,CAAE,GAAG,KAAK,CAAC;YAE1C,QAAQ,CAAE,KAAK,CAAE,GAAG,YAAY,CAAC;YACjC,QAAQ,CAAC,GAAG,EAAE,CAAC;YAEf,WAAW,CAAE,KAAK,CAAE,GAAG,WAAW,CAAE,iBAAiB,CAAE,CAAC;YACxD,WAAW,CAAC,GAAG,EAAE,CAAC;YAElB,KAAK,CAAE,KAAK,CAAE,GAAG,KAAK,CAAE,iBAAiB,CAAE,CAAC;YAC5C,KAAK,CAAC,GAAG,EAAE,CAAC;SAEf;KAEJ;CAEJ;AAED,oBAAoB,CAAC,SAAS,CAAC,sBAAsB,GAAG,IAAI,CAAC;AAE7D,MAAM,eAAe;IAEjB,YAAa,KAAK,EAAE,IAAI,EAAE,SAAS,GAAG,IAAI,EAAE,SAAS,GAAG,IAAI,CAAC,SAAS,CAAG;QAErE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EACtB,OAAO,GAAG,MAAM,CAAC,MAAM,EACvB,YAAY,GAAG,IAAI,KAAK,CAAE,OAAO,CAAE,AAAC;QAExC,MAAM,mBAAmB,GAAG;YACxB,WAAW,EAAE,mBAAmB;YAChC,SAAS,EAAE,mBAAmB;SACjC,AAAC;QAEF,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,OAAO,EAAE,EAAG,IAAC,CAAG;YAEnC,MAAM,WAAW,GAAG,MAAM,CAAE,IAAC,CAAE,CAAC,iBAAiB,CAAE,IAAI,CAAE,AAAC;YAC1D,YAAY,CAAE,IAAC,CAAE,GAAG,WAAW,CAAC;YAChC,WAAW,CAAC,QAAQ,GAAG,mBAAmB,CAAC;SAE9C;QAED,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;QAEhD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC,CAAC,qBAAqB;QAExD,+CAA+C;QAC/C,IAAI,CAAC,iBAAiB,GAAG,IAAI,KAAK,CAAE,OAAO,CAAE,CAAC;QAE9C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,yBAAyB;QAClD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC,yBAAyB;QAExD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,EAAG,CAAC;QAEtB,qDAAqD;QACrD,mDAAmD;QACnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,kCAAkC;QAClC,gEAAgE;QAChE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAEd,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAE7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,kCAAkC;QAE/D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,oCAAoC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,iCAAiC;QAEtD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,CAAA,+BAA+B;QAE9D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAA,wCAAwC;QACrE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,CAAA,gCAAgC;KAE9D;IAED,qBAAqB;IAErB,IAAI,GAAG;QAEH,IAAI,CAAC,MAAM,CAAC,eAAe,CAAE,IAAI,CAAE,CAAC;QAEpC,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,GAAG;QAEH,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAE,IAAI,CAAE,CAAC;QAEtC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;KAEvB;IAED,KAAK,GAAG;QAEJ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,eAAe;QAC9B,IAAI,CAAC,UAAU,GAAG,EAAG,CAAC,CAAA,wBAAwB;QAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAA,oBAAoB;QAE3C,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC,WAAW,EAAE,CAAC;KAE1C;IAED,SAAS,GAAG;QAER,OAAO,IAAI,CAAC,OAAO,IAAI,CAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,IACxD,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAE,IAAI,CAAE,CAAC;KAEvE;IAED,wCAAwC;IACxC,WAAW,GAAG;QAEV,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAE,IAAI,CAAE,CAAC;KAE9C;IAED,OAAO,CAAE,IAAI,EAAG;QAEZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,IAAI,EAAE,WAAW,EAAG;QAEzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,OAAO,IAAI,CAAC;KAEf;IAED,SAAS;IAET,+CAA+C;IAC/C,qEAAqE;IACrE,mEAAmE;IACnE,kBAAkB,CAAE,MAAM,EAAG;QAEzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,8CAA8C;QAC9C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,CAAC,CAAC;QAElD,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;KAE5B;IAED,oDAAoD;IACpD,kBAAkB,GAAG;QAEjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAEhC;IAED,MAAM,CAAE,QAAQ,EAAG;QAEf,OAAO,IAAI,CAAC,eAAe,CAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;KAEjD;IAED,OAAO,CAAE,QAAQ,EAAG;QAEhB,OAAO,IAAI,CAAC,eAAe,CAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;KAEjD;IAED,aAAa,CAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAG;QAE3C,aAAa,CAAC,OAAO,CAAE,QAAQ,CAAE,CAAC;QAClC,IAAI,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC;QAExB,IAAK,IAAI,EAAG;YAER,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EACtC,eAAe,GAAG,aAAa,CAAC,KAAK,CAAC,QAAQ,EAE9C,aAAa,GAAG,eAAe,GAAG,cAAc,EAChD,aAAa,GAAG,cAAc,GAAG,eAAe,AAAC;YAErD,aAAa,CAAC,IAAI,CAAE,CAAG,EAAE,aAAa,EAAE,QAAQ,CAAE,CAAC;YACnD,IAAI,CAAC,IAAI,CAAE,aAAa,EAAE,CAAG,EAAE,QAAQ,CAAE,CAAC;SAE7C;QAED,OAAO,IAAI,CAAC;KAEf;IAED,WAAW,CAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAG;QAExC,OAAO,YAAY,CAAC,aAAa,CAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAE,CAAC;KAE7D;IAED,UAAU,GAAG;QAET,MAAM,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,AAAC;QAElD,IAAK,iBAAiB,KAAK,IAAI,EAAG;YAE9B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,2BAA2B,CAAE,iBAAiB,CAAE,CAAC;SAEhE;QAED,OAAO,IAAI,CAAC;KAEf;IAED,qBAAqB;IAErB,oDAAoD;IACpD,uEAAuE;IACvE,kEAAkE;IAClE,qBAAqB,CAAE,SAAS,EAAG;QAE/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC;QAEvD,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;KAE7B;IAED,wDAAwD;IACxD,qBAAqB,GAAG;QAEpB,OAAO,IAAI,CAAC,mBAAmB,CAAC;KAEnC;IAED,WAAW,CAAE,QAAQ,EAAG;QAEpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEhD,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;KAE7B;IAED,QAAQ,CAAE,MAAM,EAAG;QAEf,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAElC,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;KAE7B;IAED,IAAI,CAAE,QAAQ,EAAG;QAEb,OAAO,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,mBAAmB,EAAE,CAAC,EAAE,QAAQ,CAAE,CAAC;KAE7D;IAED,IAAI,CAAE,cAAc,EAAE,YAAY,EAAE,QAAQ,EAAG;QAE3C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EACrB,IAAG,GAAG,KAAK,CAAC,IAAI,EAChB,SAAS,GAAG,IAAI,CAAC,SAAS,AAAC;QAE/B,IAAI,WAAW,GAAG,IAAI,CAAC,qBAAqB,AAAC;QAE7C,IAAK,WAAW,KAAK,IAAI,EAAG;YAExB,WAAW,GAAG,KAAK,CAAC,uBAAuB,EAAE,CAAC;YAC9C,IAAI,CAAC,qBAAqB,GAAG,WAAW,CAAC;SAE5C;QAED,MAAM,KAAK,GAAG,WAAW,CAAC,kBAAkB,EACxC,MAAM,GAAG,WAAW,CAAC,YAAY,AAAC;QAEtC,KAAK,CAAE,CAAC,CAAE,GAAG,IAAG,CAAC;QACjB,KAAK,CAAE,CAAC,CAAE,GAAG,IAAG,GAAG,QAAQ,CAAC;QAE5B,MAAM,CAAE,CAAC,CAAE,GAAG,cAAc,GAAG,SAAS,CAAC;QACzC,MAAM,CAAE,CAAC,CAAE,GAAG,YAAY,GAAG,SAAS,CAAC;QAEvC,OAAO,IAAI,CAAC;KAEf;IAED,WAAW,GAAG;QAEV,MAAM,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,AAAC;QAExD,IAAK,oBAAoB,KAAK,IAAI,EAAG;YAEjC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,2BAA2B,CAAE,oBAAoB,CAAE,CAAC;SAEnE;QAED,OAAO,IAAI,CAAC;KAEf;IAED,mBAAmB;IAEnB,QAAQ,GAAG;QAEP,OAAO,IAAI,CAAC,MAAM,CAAC;KAEtB;IAED,OAAO,GAAG;QAEN,OAAO,IAAI,CAAC,KAAK,CAAC;KAErB;IAED,OAAO,GAAG;QAEN,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;KAE/C;IAED,UAAU;IAEV,OAAO,CAAE,IAAI,EAAE,SAAS,EAAE,aAAa,EAAE,SAAS,EAAG;QAEjD,sBAAsB;QAEtB,IAAK,CAAE,IAAI,CAAC,OAAO,EAAG;YAElB,oDAAoD;YAEpD,IAAI,CAAC,aAAa,CAAE,IAAI,CAAE,CAAC;YAC3B,OAAO;SAEV;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,AAAC;QAElC,IAAK,SAAS,KAAK,IAAI,EAAG;YAEtB,sCAAsC;YAEtC,MAAM,WAAW,GAAG,AAAE,CAAA,IAAI,GAAG,SAAS,CAAA,GAAK,aAAa,AAAC;YACzD,IAAK,WAAW,GAAG,CAAC,IAAI,aAAa,KAAK,CAAC,EAEvC,OAAO,CAAC,4CAA4C;YAIxD,QAAQ;YAER,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,aAAa;YACrC,SAAS,GAAG,aAAa,GAAG,WAAW,CAAC;SAE3C;QAED,oCAAoC;QAEpC,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAE,IAAI,CAAE,CAAC;QAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAE,SAAS,CAAE,AAAC;QAE/C,wDAAwD;QACxD,2BAA2B;QAE3B,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAE,IAAI,CAAE,AAAC;QAE1C,IAAK,MAAM,GAAG,CAAC,EAAG;YAEd,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,AAAC;YACxC,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,AAAC;YAE9C,OAAS,IAAI,CAAC,SAAS;gBAEnB,KAAK,0BAA0B;oBAE3B,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAG,CAAC,CAAG;wBAEtD,YAAY,CAAE,CAAC,CAAE,CAAC,QAAQ,CAAE,QAAQ,CAAE,CAAC;wBACvC,cAAc,CAAE,CAAC,CAAE,CAAC,kBAAkB,CAAE,MAAM,CAAE,CAAC;qBAEpD;oBAED,MAAM;gBAEV,KAAK,wBAAwB,CAAC;gBAC9B;oBAEI,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,YAAY,CAAC,MAAM,EAAE,EAAC,KAAK,EAAC,EAAE,EAAG,EAAC,CAAG;wBAEtD,YAAY,CAAE,EAAC,CAAE,CAAC,QAAQ,CAAE,QAAQ,CAAE,CAAC;wBACvC,cAAc,CAAE,EAAC,CAAE,CAAC,UAAU,CAAE,SAAS,EAAE,MAAM,CAAE,CAAC;qBAEvD;aAER;SAEJ;KAEJ;IAED,aAAa,CAAE,IAAI,EAAG;QAElB,IAAI,MAAM,GAAG,CAAC,AAAC;QAEf,IAAK,IAAI,CAAC,OAAO,EAAG;YAEhB,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACrB,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,AAAC;YAE5C,IAAK,WAAW,KAAK,IAAI,EAAG;gBAExB,MAAM,gBAAgB,GAAG,WAAW,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAE,CAAC,CAAE,AAAC;gBAE3D,MAAM,IAAI,gBAAgB,CAAC;gBAE3B,IAAK,IAAI,GAAG,WAAW,CAAC,kBAAkB,CAAE,CAAC,CAAE,EAAG;oBAE9C,IAAI,CAAC,UAAU,EAAE,CAAC;oBAElB,IAAK,gBAAgB,KAAK,CAAC,EAEvB,qBAAqB;oBACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBAI5B;aAEJ;SAEJ;QAED,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;QAC/B,OAAO,MAAM,CAAC;KAEjB;IAED,gBAAgB,CAAE,IAAI,EAAG;QAErB,IAAI,SAAS,GAAG,CAAC,AAAC;QAElB,IAAK,CAAE,IAAI,CAAC,MAAM,EAAG;YAEjB,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAE3B,MAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,AAAC;YAE/C,IAAK,WAAW,KAAK,IAAI,EAAG;gBAExB,MAAM,gBAAgB,GAAG,WAAW,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAE,CAAC,CAAE,AAAC;gBAE3D,SAAS,IAAI,gBAAgB,CAAC;gBAE9B,IAAK,IAAI,GAAG,WAAW,CAAC,kBAAkB,CAAE,CAAC,CAAE,EAAG;oBAE9C,IAAI,CAAC,WAAW,EAAE,CAAC;oBAEnB,IAAK,SAAS,KAAK,CAAC,EAEhB,2BAA2B;oBAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;yBAInB,qCAAqC;oBACrC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;iBAIlC;aAEJ;SAEJ;QAED,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;QACrC,OAAO,SAAS,CAAC;KAEpB;IAED,WAAW,CAAE,SAAS,EAAG;QAErB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,AAAC;QACrC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,AAAC;QAEvB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,SAAS,AAAC;QACjC,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,AAAC;QAEhC,MAAM,QAAQ,GAAK,IAAI,KAAK,YAAY,AAAE,AAAC;QAE3C,IAAK,SAAS,KAAK,CAAC,EAAG;YAEnB,IAAK,SAAS,KAAK,EAAG,EAAG,OAAO,IAAI,CAAC;YAErC,OAAO,AAAE,QAAQ,IAAI,AAAE,CAAA,SAAS,GAAG,CAAC,CAAA,KAAO,CAAC,GAAK,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC;SAE3E;QAED,IAAK,IAAI,KAAK,QAAQ,EAAG;YAErB,IAAK,SAAS,KAAK,EAAG,EAAG;gBAErB,eAAe;gBAEf,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,IAAI,CAAC,WAAW,CAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAE,CAAC;aAEzC;YAED,WAAW,EAAE;gBAET,IAAK,IAAI,IAAI,QAAQ,EAEjB,IAAI,GAAG,QAAQ,CAAC;qBAEb,IAAK,IAAI,GAAG,CAAC,EAEhB,IAAI,GAAG,CAAC,CAAC;qBAEN;oBAEH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBAEjB,MAAM,WAAW,CAAC;iBAErB;gBAED,IAAK,IAAI,CAAC,iBAAiB,EAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;qBAC5C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBAE1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBAEjB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAE;oBACvB,IAAI,EAAE,UAAU;oBAAE,MAAM,EAAE,IAAI;oBAC9B,SAAS,EAAE,SAAS,GAAG,CAAC,GAAG,EAAG,GAAG,CAAC;iBACrC,CAAE,CAAC;aAEP;SAEJ,MAAM;YAEH,IAAK,SAAS,KAAK,EAAG;gBAElB,eAAe;gBAEf,IAAK,SAAS,IAAI,CAAC,EAAG;oBAElB,SAAS,GAAG,CAAC,CAAC;oBAEd,IAAI,CAAC,WAAW,CAAE,IAAI,EAAE,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE,QAAQ,CAAE,CAAC;iBAE9D,MAEG,iDAAiD;gBACjD,kDAAkD;gBAClD,2BAA2B;gBAE3B,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAE,CAAC;aAIlE;YAED,IAAK,IAAI,IAAI,QAAQ,IAAI,IAAI,GAAG,CAAC,EAAG;gBAEhC,cAAc;gBAEd,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,GAAG,QAAQ,CAAE,AAAC,EAAC,SAAS;gBAC1D,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC;gBAE7B,SAAS,IAAI,IAAI,CAAC,GAAG,CAAE,SAAS,CAAE,CAAC;gBAEnC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,GAAG,SAAS,AAAC;gBAE7C,IAAK,OAAO,IAAI,CAAC,EAAG;oBAEhB,sDAAsD;oBAEtD,IAAK,IAAI,CAAC,iBAAiB,EAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;yBAC5C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBAE1B,IAAI,GAAG,SAAS,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;oBAEpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBAEjB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAE;wBACvB,IAAI,EAAE,UAAU;wBAAE,MAAM,EAAE,IAAI;wBAC9B,SAAS,EAAE,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,EAAG;qBACrC,CAAE,CAAC;iBAEP,MAAM;oBAEH,eAAe;oBAEf,IAAK,OAAO,KAAK,CAAC,EAAG;wBAEjB,0BAA0B;wBAE1B,MAAM,OAAO,GAAG,SAAS,GAAG,CAAC,AAAC;wBAC9B,IAAI,CAAC,WAAW,CAAE,OAAO,EAAE,CAAE,OAAO,EAAE,QAAQ,CAAE,CAAC;qBAEpD,MAEG,IAAI,CAAC,WAAW,CAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;oBAI/C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;oBAE5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBAEjB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAE;wBACvB,IAAI,EAAE,MAAM;wBAAE,MAAM,EAAE,IAAI;wBAAE,SAAS,EAAE,SAAS;qBACnD,CAAE,CAAC;iBAEP;aAEJ,MAEG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAIrB,IAAK,QAAQ,IAAI,AAAE,CAAA,SAAS,GAAG,CAAC,CAAA,KAAO,CAAC,EAEpC,mCAAmC;YAEnC,OAAO,QAAQ,GAAG,IAAI,CAAC;SAI9B;QAED,OAAO,IAAI,CAAC;KAEf;IAED,WAAW,CAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAG;QAEpC,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,AAAC;QAE3C,IAAK,QAAQ,EAAG;YAEZ,QAAQ,CAAC,WAAW,GAAG,eAAe,CAAC;YACvC,QAAQ,CAAC,SAAS,GAAG,eAAe,CAAC;SAExC,MAAM;YAEH,iDAAiD;YAEjD,IAAK,OAAO,EAER,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,GAAG,eAAe,GAAG,mBAAmB,CAAC;iBAIrF,QAAQ,CAAC,WAAW,GAAG,gBAAgB,CAAC;YAI5C,IAAK,KAAK,EAEN,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,GAAG,eAAe,GAAG,mBAAmB,CAAC;iBAIjF,QAAQ,CAAC,SAAS,GAAK,gBAAgB,CAAC;SAI/C;KAEJ;IAED,eAAe,CAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAG;QAE/C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,IAAG,GAAG,KAAK,CAAC,IAAI,AAAC;QAC5C,IAAI,WAAW,GAAG,IAAI,CAAC,kBAAkB,AAAC;QAE1C,IAAK,WAAW,KAAK,IAAI,EAAG;YAExB,WAAW,GAAG,KAAK,CAAC,uBAAuB,EAAE,CAAC;YAC9C,IAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC;SAEzC;QAED,MAAM,KAAK,GAAG,WAAW,CAAC,kBAAkB,EACxC,MAAM,GAAG,WAAW,CAAC,YAAY,AAAC;QAEtC,KAAK,CAAE,CAAC,CAAE,GAAG,IAAG,CAAC;QACjB,MAAM,CAAE,CAAC,CAAE,GAAG,SAAS,CAAC;QACxB,KAAK,CAAE,CAAC,CAAE,GAAG,IAAG,GAAG,QAAQ,CAAC;QAC5B,MAAM,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,cAAc,SAAS,eAAe;IAExC,YAAa,IAAI,CAAG;QAEhB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,SAAS,GAAG,CAAG,CAAC;KAExB;IAED,WAAW,CAAE,MAAM,EAAE,eAAe,EAAG;QAEnC,MAAM,IAAI,GAAG,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,EACxC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAC5B,OAAO,GAAG,MAAM,CAAC,MAAM,EACvB,QAAQ,GAAG,MAAM,CAAC,iBAAiB,EACnC,YAAY,GAAG,MAAM,CAAC,aAAa,EACnC,QAAQ,GAAG,IAAI,CAAC,IAAI,EACpB,cAAc,GAAG,IAAI,CAAC,sBAAsB,AAAC;QAEjD,IAAI,cAAc,GAAG,cAAc,CAAE,QAAQ,CAAE,AAAC;QAEhD,IAAK,cAAc,KAAK,SAAS,EAAG;YAEhC,cAAc,GAAG,EAAE,CAAC;YACpB,cAAc,CAAE,QAAQ,CAAE,GAAG,cAAc,CAAC;SAE/C;QAED,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,OAAO,EAAE,EAAG,IAAC,CAAG;YAEnC,MAAM,KAAK,GAAG,MAAM,CAAE,IAAC,CAAE,EACrB,SAAS,GAAG,KAAK,CAAC,IAAI,AAAC;YAE3B,IAAI,OAAO,GAAG,cAAc,CAAE,SAAS,CAAE,AAAC;YAE1C,IAAK,OAAO,KAAK,SAAS,EAAG;gBAEzB,EAAG,OAAO,CAAC,cAAc,CAAC;gBAC1B,QAAQ,CAAE,IAAC,CAAE,GAAG,OAAO,CAAC;aAE3B,MAAM;gBAEH,OAAO,GAAG,QAAQ,CAAE,IAAC,CAAE,CAAC;gBAExB,IAAK,OAAO,KAAK,SAAS,EAAG;oBAEzB,8CAA8C;oBAE9C,IAAK,OAAO,CAAC,WAAW,KAAK,IAAI,EAAG;wBAEhC,EAAG,OAAO,CAAC,cAAc,CAAC;wBAC1B,IAAI,CAAC,mBAAmB,CAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAE,CAAC;qBAE5D;oBAED,SAAS;iBAEZ;gBAED,MAAM,IAAI,GAAG,eAAe,IAAI,eAAe,CAC3C,iBAAiB,CAAE,IAAC,CAAE,CAAC,OAAO,CAAC,UAAU,AAAC;gBAE9C,OAAO,GAAG,IAAI,aAAa,CACvB,eAAe,CAAC,MAAM,CAAE,IAAI,EAAE,SAAS,EAAE,IAAI,CAAE,EAC/C,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,EAAE,CAAE,CAAC;gBAEhD,EAAG,OAAO,CAAC,cAAc,CAAC;gBAC1B,IAAI,CAAC,mBAAmB,CAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAE,CAAC;gBAEzD,QAAQ,CAAE,IAAC,CAAE,GAAG,OAAO,CAAC;aAE3B;YAED,YAAY,CAAE,IAAC,CAAE,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC;SAEnD;KAEJ;IAED,eAAe,CAAE,MAAM,EAAG;QAEtB,IAAK,CAAE,IAAI,CAAC,eAAe,CAAE,MAAM,CAAE,EAAG;YAEpC,IAAK,MAAM,CAAC,WAAW,KAAK,IAAI,EAAG;gBAE/B,4DAA4D;gBAC5D,yCAAyC;gBAEzC,MAAM,QAAQ,GAAG,AAAE,CAAA,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAA,CAAG,IAAI,EACrD,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAC5B,cAAc,GAAG,IAAI,CAAC,cAAc,CAAE,QAAQ,CAAE,AAAC;gBAErD,IAAI,CAAC,WAAW,CAAE,MAAM,EACpB,cAAc,IAAI,cAAc,CAAC,YAAY,CAAE,CAAC,CAAE,CAAE,CAAC;gBAEzD,IAAI,CAAC,kBAAkB,CAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;aAEzD;YAED,MAAM,QAAQ,GAAG,MAAM,CAAC,iBAAiB,AAAC;YAE1C,8CAA8C;YAC9C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;gBAElD,MAAM,OAAO,GAAG,QAAQ,CAAE,IAAC,CAAE,AAAC;gBAE9B,IAAK,CAAA,OAAO,CAAC,QAAQ,EAAG,CAAA,KAAK,CAAC,EAAG;oBAE7B,IAAI,CAAC,YAAY,CAAE,OAAO,CAAE,CAAC;oBAC7B,OAAO,CAAC,iBAAiB,EAAE,CAAC;iBAE/B;aAEJ;YAED,IAAI,CAAC,WAAW,CAAE,MAAM,CAAE,CAAC;SAE9B;KAEJ;IAED,iBAAiB,CAAE,MAAM,EAAG;QAExB,IAAK,IAAI,CAAC,eAAe,CAAE,MAAM,CAAE,EAAG;YAElC,MAAM,QAAQ,GAAG,MAAM,CAAC,iBAAiB,AAAC;YAE1C,8CAA8C;YAC9C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;gBAElD,MAAM,OAAO,GAAG,QAAQ,CAAE,IAAC,CAAE,AAAC;gBAE9B,IAAK,EAAG,OAAO,CAAC,QAAQ,KAAK,CAAC,EAAG;oBAE7B,OAAO,CAAC,oBAAoB,EAAE,CAAC;oBAC/B,IAAI,CAAC,gBAAgB,CAAE,OAAO,CAAE,CAAC;iBAEpC;aAEJ;YAED,IAAI,CAAC,eAAe,CAAE,MAAM,CAAE,CAAC;SAElC;KAEJ;IAED,iBAAiB;IAEjB,kBAAkB,GAAG;QAEjB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,6CAA6C;QACjE,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QAEzB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,UAAU;QACV,IAAI;QACJ,+DAA+D;QAC/D,0CAA0C;QAC1C,IAAI;QAGJ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC,8CAA8C;QACnE,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC,CAAC,qCAAqC;QAGvE,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC,CAAC,qBAAqB;QACrD,IAAI,CAAC,2BAA2B,GAAG,CAAC,CAAC;QAErC,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,IAAI,CAAC,KAAK,GAAG;YAET,OAAO,EAAE;gBACL,IAAI,KAAK,IAAG;oBAER,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;iBAEhC;gBACD,IAAI,KAAK,IAAG;oBAER,OAAO,KAAK,CAAC,eAAe,CAAC;iBAEhC;aACJ;YACD,QAAQ,EAAE;gBACN,IAAI,KAAK,IAAG;oBAER,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;iBAEjC;gBACD,IAAI,KAAK,IAAG;oBAER,OAAO,KAAK,CAAC,gBAAgB,CAAC;iBAEjC;aACJ;YACD,mBAAmB,EAAE;gBACjB,IAAI,KAAK,IAAG;oBAER,OAAO,KAAK,CAAC,oBAAoB,CAAC,MAAM,CAAC;iBAE5C;gBACD,IAAI,KAAK,IAAG;oBAER,OAAO,KAAK,CAAC,2BAA2B,CAAC;iBAE5C;aACJ;SAEJ,CAAC;KAEL;IAED,gDAAgD;IAEhD,eAAe,CAAE,MAAM,EAAG;QAEtB,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,AAAC;QACjC,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;KAEzD;IAED,kBAAkB,CAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAG;QAE7C,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,aAAa,GAAG,IAAI,CAAC,cAAc,AAAC;QAExC,IAAI,cAAc,GAAG,aAAa,CAAE,QAAQ,CAAE,AAAC;QAE/C,IAAK,cAAc,KAAK,SAAS,EAAG;YAEhC,cAAc,GAAG;gBAEb,YAAY,EAAE;oBAAE,MAAM;iBAAE;gBACxB,YAAY,EAAE,EAAE;aAEnB,CAAC;YAEF,MAAM,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAE7B,aAAa,CAAE,QAAQ,CAAE,GAAG,cAAc,CAAC;SAE9C,MAAM;YAEH,MAAM,YAAY,GAAG,cAAc,CAAC,YAAY,AAAC;YAEjD,MAAM,CAAC,iBAAiB,GAAG,YAAY,CAAC,MAAM,CAAC;YAC/C,YAAY,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;SAE/B;QAED,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC;QACpC,OAAO,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAEvB,cAAc,CAAC,YAAY,CAAE,QAAQ,CAAE,GAAG,MAAM,CAAC;KAEpD;IAED,qBAAqB,CAAE,MAAM,EAAG;QAE5B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,kBAAkB,GAAG,OAAO,CAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE,EAClD,UAAU,GAAG,MAAM,CAAC,WAAW,AAAC;QAEpC,kBAAkB,CAAC,WAAW,GAAG,UAAU,CAAC;QAC5C,OAAO,CAAE,UAAU,CAAE,GAAG,kBAAkB,CAAC;QAC3C,OAAO,CAAC,GAAG,EAAE,CAAC;QAEd,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;QAG1B,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAC9B,aAAa,GAAG,IAAI,CAAC,cAAc,EACnC,cAAc,GAAG,aAAa,CAAE,QAAQ,CAAE,EAC1C,mBAAmB,GAAG,cAAc,CAAC,YAAY,EAEjD,eAAe,GACX,mBAAmB,CAAE,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAE,EAEzD,gBAAgB,GAAG,MAAM,CAAC,iBAAiB,AAAC;QAEhD,eAAe,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QACrD,mBAAmB,CAAE,gBAAgB,CAAE,GAAG,eAAe,CAAC;QAC1D,mBAAmB,CAAC,GAAG,EAAE,CAAC;QAE1B,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAGhC,MAAM,YAAY,GAAG,cAAc,CAAC,YAAY,EAC5C,QAAQ,GAAG,AAAE,CAAA,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAA,CAAG,IAAI,AAAC;QAExD,OAAO,YAAY,CAAE,QAAQ,CAAE,CAAC;QAEhC,IAAK,mBAAmB,CAAC,MAAM,KAAK,CAAC,EAEjC,OAAO,aAAa,CAAE,QAAQ,CAAE,CAAC;QAIrC,IAAI,CAAC,gCAAgC,CAAE,MAAM,CAAE,CAAC;KAEnD;IAED,gCAAgC,CAAE,MAAM,EAAG;QAEvC,MAAM,QAAQ,GAAG,MAAM,CAAC,iBAAiB,AAAC;QAE1C,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;YAElD,MAAM,OAAO,GAAG,QAAQ,CAAE,IAAC,CAAE,AAAC;YAE9B,IAAK,EAAG,OAAO,CAAC,cAAc,KAAK,CAAC,EAEhC,IAAI,CAAC,sBAAsB,CAAE,OAAO,CAAE,CAAC;SAI9C;KAEJ;IAED,WAAW,CAAE,MAAM,EAAG;QAElB,0CAA0C;QAC1C,0CAA0C;QAC1C,6BAA6B;QAC7B,4BAA4B;QAC5B,6BAA6B;QAE7B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,SAAS,GAAG,MAAM,CAAC,WAAW,EAE9B,eAAe,GAAG,IAAI,CAAC,eAAe,EAAG,EAEzC,mBAAmB,GAAG,OAAO,CAAE,eAAe,CAAE,AAAC;QAErD,MAAM,CAAC,WAAW,GAAG,eAAe,CAAC;QACrC,OAAO,CAAE,eAAe,CAAE,GAAG,MAAM,CAAC;QAEpC,mBAAmB,CAAC,WAAW,GAAG,SAAS,CAAC;QAC5C,OAAO,CAAE,SAAS,CAAE,GAAG,mBAAmB,CAAC;KAE9C;IAED,eAAe,CAAE,MAAM,EAAG;QAEtB,0CAA0C;QAC1C,0CAA0C;QAC1C,oBAAoB;QACpB,mBAAmB;QACnB,oBAAoB;QAEpB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,SAAS,GAAG,MAAM,CAAC,WAAW,EAE9B,kBAAkB,GAAG,EAAG,IAAI,CAAC,eAAe,EAE5C,gBAAgB,GAAG,OAAO,CAAE,kBAAkB,CAAE,AAAC;QAErD,MAAM,CAAC,WAAW,GAAG,kBAAkB,CAAC;QACxC,OAAO,CAAE,kBAAkB,CAAE,GAAG,MAAM,CAAC;QAEvC,gBAAgB,CAAC,WAAW,GAAG,SAAS,CAAC;QACzC,OAAO,CAAE,SAAS,CAAE,GAAG,gBAAgB,CAAC;KAE3C;IAED,8CAA8C;IAE9C,mBAAmB,CAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAG;QAEhD,MAAM,cAAc,GAAG,IAAI,CAAC,sBAAsB,EAC9C,QAAQ,GAAG,IAAI,CAAC,SAAS,AAAC;QAE9B,IAAI,aAAa,GAAG,cAAc,CAAE,QAAQ,CAAE,AAAC;QAE/C,IAAK,aAAa,KAAK,SAAS,EAAG;YAE/B,aAAa,GAAG,EAAE,CAAC;YACnB,cAAc,CAAE,QAAQ,CAAE,GAAG,aAAa,CAAC;SAE9C;QAED,aAAa,CAAE,SAAS,CAAE,GAAG,OAAO,CAAC;QAErC,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC;QACtC,QAAQ,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;KAE5B;IAED,sBAAsB,CAAE,OAAO,EAAG;QAE9B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,EAC3B,WAAW,GAAG,OAAO,CAAC,OAAO,EAC7B,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,EACpC,SAAS,GAAG,WAAW,CAAC,IAAI,EAC5B,cAAc,GAAG,IAAI,CAAC,sBAAsB,EAC5C,aAAa,GAAG,cAAc,CAAE,QAAQ,CAAE,EAE1C,mBAAmB,GAAG,QAAQ,CAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAE,EACrD,UAAU,GAAG,OAAO,CAAC,WAAW,AAAC;QAErC,mBAAmB,CAAC,WAAW,GAAG,UAAU,CAAC;QAC7C,QAAQ,CAAE,UAAU,CAAE,GAAG,mBAAmB,CAAC;QAC7C,QAAQ,CAAC,GAAG,EAAE,CAAC;QAEf,OAAO,aAAa,CAAE,SAAS,CAAE,CAAC;QAElC,IAAK,MAAM,CAAC,IAAI,CAAE,aAAa,CAAE,CAAC,MAAM,KAAK,CAAC,EAE1C,OAAO,cAAc,CAAE,QAAQ,CAAE,CAAC;KAIzC;IAED,YAAY,CAAE,OAAO,EAAG;QAEpB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,EAC3B,SAAS,GAAG,OAAO,CAAC,WAAW,EAE/B,eAAe,GAAG,IAAI,CAAC,gBAAgB,EAAG,EAE1C,oBAAoB,GAAG,QAAQ,CAAE,eAAe,CAAE,AAAC;QAEvD,OAAO,CAAC,WAAW,GAAG,eAAe,CAAC;QACtC,QAAQ,CAAE,eAAe,CAAE,GAAG,OAAO,CAAC;QAEtC,oBAAoB,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7C,QAAQ,CAAE,SAAS,CAAE,GAAG,oBAAoB,CAAC;KAEhD;IAED,gBAAgB,CAAE,OAAO,EAAG;QAExB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,EAC3B,SAAS,GAAG,OAAO,CAAC,WAAW,EAE/B,kBAAkB,GAAG,EAAG,IAAI,CAAC,gBAAgB,EAE7C,iBAAiB,GAAG,QAAQ,CAAE,kBAAkB,CAAE,AAAC;QAEvD,OAAO,CAAC,WAAW,GAAG,kBAAkB,CAAC;QACzC,QAAQ,CAAE,kBAAkB,CAAE,GAAG,OAAO,CAAC;QAEzC,iBAAiB,CAAC,WAAW,GAAG,SAAS,CAAC;QAC1C,QAAQ,CAAE,SAAS,CAAE,GAAG,iBAAiB,CAAC;KAE7C;IAGD,8DAA8D;IAE9D,uBAAuB,GAAG;QAEtB,MAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,EAC1C,eAAe,GAAG,IAAI,CAAC,2BAA2B,EAAG,AAAC;QAE1D,IAAI,WAAW,GAAG,YAAY,CAAE,eAAe,CAAE,AAAC;QAElD,IAAK,WAAW,KAAK,SAAS,EAAG;YAE7B,WAAW,GAAG,IAAI,iBAAiB,CAC/B,IAAI,YAAY,CAAE,CAAC,CAAE,EAAE,IAAI,YAAY,CAAE,CAAC,CAAE,EAC5C,CAAC,EAAE,IAAI,CAAC,gCAAgC,CAAE,CAAC;YAE/C,WAAW,CAAC,YAAY,GAAG,eAAe,CAAC;YAC3C,YAAY,CAAE,eAAe,CAAE,GAAG,WAAW,CAAC;SAEjD;QAED,OAAO,WAAW,CAAC;KAEtB;IAED,2BAA2B,CAAE,WAAW,EAAG;QAEvC,MAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,EAC1C,SAAS,GAAG,WAAW,CAAC,YAAY,EAEpC,kBAAkB,GAAG,EAAG,IAAI,CAAC,2BAA2B,EAExD,qBAAqB,GAAG,YAAY,CAAE,kBAAkB,CAAE,AAAC;QAE/D,WAAW,CAAC,YAAY,GAAG,kBAAkB,CAAC;QAC9C,YAAY,CAAE,kBAAkB,CAAE,GAAG,WAAW,CAAC;QAEjD,qBAAqB,CAAC,YAAY,GAAG,SAAS,CAAC;QAC/C,YAAY,CAAE,SAAS,CAAE,GAAG,qBAAqB,CAAC;KAErD;IAED,oEAAoE;IACpE,kEAAkE;IAClE,yDAAyD;IACzD,UAAU,CAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAG;QAExC,MAAM,IAAI,GAAG,YAAY,IAAI,IAAI,CAAC,KAAK,EACnC,QAAQ,GAAG,IAAI,CAAC,IAAI,AAAC;QAEzB,IAAI,UAAU,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,aAAa,CAAC,UAAU,CAAE,IAAI,EAAE,IAAI,CAAE,GAAG,IAAI,AAAC;QAE1F,MAAM,QAAQ,GAAG,UAAU,KAAK,IAAI,GAAG,UAAU,CAAC,IAAI,GAAG,IAAI,AAAC;QAE9D,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAE,QAAQ,CAAE,AAAC;QACvD,IAAI,eAAe,GAAG,IAAI,AAAC;QAE3B,IAAK,SAAS,KAAK,SAAS;YAExB,IAAK,UAAU,KAAK,IAAI,EAEpB,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;iBAIjC,SAAS,GAAG,wBAAwB,CAAC;SAI5C;QAED,IAAK,cAAc,KAAK,SAAS,EAAG;YAEhC,MAAM,cAAc,GAAG,cAAc,CAAC,YAAY,CAAE,QAAQ,CAAE,AAAC;YAE/D,IAAK,cAAc,KAAK,SAAS,IAAI,cAAc,CAAC,SAAS,KAAK,SAAS,EAEvE,OAAO,cAAc,CAAC;YAI1B,kDAAkD;YAClD,uCAAuC;YACvC,eAAe,GAAG,cAAc,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC;YAEnD,gDAAgD;YAChD,IAAK,UAAU,KAAK,IAAI,EACpB,UAAU,GAAG,eAAe,CAAC,KAAK,CAAC;SAE1C;QAED,+CAA+C;QAC/C,IAAK,UAAU,KAAK,IAAI,EAAG,OAAO,IAAI,CAAC;QAEvC,4CAA4C;QAC5C,MAAM,SAAS,GAAG,IAAI,eAAe,CAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,CAAE,AAAC;QAEnF,IAAI,CAAC,WAAW,CAAE,SAAS,EAAE,eAAe,CAAE,CAAC;QAE/C,kDAAkD;QAClD,IAAI,CAAC,kBAAkB,CAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QAEzD,OAAO,SAAS,CAAC;KAEpB;IAED,yBAAyB;IACzB,cAAc,CAAE,IAAI,EAAE,YAAY,EAAG;QAEjC,MAAM,IAAI,GAAG,YAAY,IAAI,IAAI,CAAC,KAAK,EACnC,QAAQ,GAAG,IAAI,CAAC,IAAI,EAEpB,UAAU,GAAG,OAAO,IAAI,KAAK,QAAQ,GACjC,aAAa,CAAC,UAAU,CAAE,IAAI,EAAE,IAAI,CAAE,GAAG,IAAI,EAEjD,QAAQ,GAAG,UAAU,GAAG,UAAU,CAAC,IAAI,GAAG,IAAI,EAE9C,cAAc,GAAG,IAAI,CAAC,cAAc,CAAE,QAAQ,CAAE,AAAC;QAErD,IAAK,cAAc,KAAK,SAAS,EAE7B,OAAO,cAAc,CAAC,YAAY,CAAE,QAAQ,CAAE,IAAI,IAAI,CAAC;QAI3D,OAAO,IAAI,CAAC;KAEf;IAED,+CAA+C;IAC/C,aAAa,GAAG;QAEZ,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,QAAQ,GAAG,IAAI,CAAC,eAAe,AAAC;QAEpC,IAAM,IAAI,IAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,IAAC,IAAI,CAAC,EAAE,EAAG,IAAC,CAEpC,OAAO,CAAE,IAAC,CAAE,CAAC,IAAI,EAAE,CAAC;QAIxB,OAAO,IAAI,CAAC;KAEf;IAED,kDAAkD;IAClD,MAAM,CAAE,SAAS,EAAG;QAEhB,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;QAE5B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,QAAQ,GAAG,IAAI,CAAC,eAAe,EAE/B,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,SAAS,EAC7B,aAAa,GAAG,IAAI,CAAC,IAAI,CAAE,SAAS,CAAE,EAEtC,SAAS,GAAG,IAAI,CAAC,UAAU,IAAI,CAAC,AAAC;QAErC,qBAAqB;QAErB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,QAAQ,EAAE,EAAG,IAAC,CAAG;YAEpC,MAAM,MAAM,GAAG,OAAO,CAAE,IAAC,CAAE,AAAC;YAE5B,MAAM,CAAC,OAAO,CAAE,IAAI,EAAE,SAAS,EAAE,aAAa,EAAE,SAAS,CAAE,CAAC;SAE/D;QAED,qBAAqB;QAErB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,EAC3B,SAAS,GAAG,IAAI,CAAC,gBAAgB,AAAC;QAEtC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,KAAK,SAAS,EAAE,EAAG,IAAC,CAElC,QAAQ,CAAE,IAAC,CAAE,CAAC,KAAK,CAAE,SAAS,CAAE,CAAC;QAIrC,OAAO,IAAI,CAAC;KAEf;IAED,yDAAyD;IACzD,OAAO,CAAE,aAAa,EAAG;QAErB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,qDAAqD;QACpE,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAC,EAAG,CAE3C,IAAI,CAAC,QAAQ,CAAE,IAAC,CAAE,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,sEAAsE;QAIvG,OAAO,IAAI,CAAC,MAAM,CAAE,aAAa,CAAE,CAAC,CAAC,uEAAuE;KAE/G;IAED,yCAAyC;IACzC,OAAO,GAAG;QAEN,OAAO,IAAI,CAAC,KAAK,CAAC;KAErB;IAED,mDAAmD;IACnD,WAAW,CAAE,IAAI,EAAG;QAEhB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EACzB,QAAQ,GAAG,IAAI,CAAC,IAAI,EACpB,aAAa,GAAG,IAAI,CAAC,cAAc,EACnC,cAAc,GAAG,aAAa,CAAE,QAAQ,CAAE,AAAC;QAE/C,IAAK,cAAc,KAAK,SAAS,EAAG;YAEhC,6DAA6D;YAC7D,6DAA6D;YAC7D,kBAAkB;YAElB,MAAM,eAAe,GAAG,cAAc,CAAC,YAAY,AAAC;YAEpD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,IAAC,KAAK,CAAC,EAAE,EAAG,IAAC,CAAG;gBAEzD,MAAM,MAAM,GAAG,eAAe,CAAE,IAAC,CAAE,AAAC;gBAEpC,IAAI,CAAC,iBAAiB,CAAE,MAAM,CAAE,CAAC;gBAEjC,MAAM,UAAU,GAAG,MAAM,CAAC,WAAW,EACjC,kBAAkB,GAAG,OAAO,CAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE,AAAC;gBAEvD,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC1B,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAEhC,kBAAkB,CAAC,WAAW,GAAG,UAAU,CAAC;gBAC5C,OAAO,CAAE,UAAU,CAAE,GAAG,kBAAkB,CAAC;gBAC3C,OAAO,CAAC,GAAG,EAAE,CAAC;gBAEd,IAAI,CAAC,gCAAgC,CAAE,MAAM,CAAE,CAAC;aAEnD;YAED,OAAO,aAAa,CAAE,QAAQ,CAAE,CAAC;SAEpC;KAEJ;IAED,iEAAiE;IACjE,WAAW,CAAE,IAAI,EAAG;QAEhB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,EACtB,aAAa,GAAG,IAAI,CAAC,cAAc,AAAC;QAExC,IAAM,MAAM,QAAQ,IAAI,aAAa,CAAG;YAEpC,MAAM,YAAY,GAAG,aAAa,CAAE,QAAQ,CAAE,CAAC,YAAY,EACvD,MAAM,GAAG,YAAY,CAAE,QAAQ,CAAE,AAAC;YAEtC,IAAK,MAAM,KAAK,SAAS,EAAG;gBAExB,IAAI,CAAC,iBAAiB,CAAE,MAAM,CAAE,CAAC;gBACjC,IAAI,CAAC,qBAAqB,CAAE,MAAM,CAAE,CAAC;aAExC;SAEJ;QAED,MAAM,cAAc,GAAG,IAAI,CAAC,sBAAsB,EAC9C,aAAa,GAAG,cAAc,CAAE,QAAQ,CAAE,AAAC;QAE/C,IAAK,aAAa,KAAK,SAAS,EAE5B,IAAM,MAAM,SAAS,IAAI,aAAa,CAAG;YAErC,MAAM,OAAO,GAAG,aAAa,CAAE,SAAS,CAAE,AAAC;YAC3C,OAAO,CAAC,oBAAoB,EAAE,CAAC;YAC/B,IAAI,CAAC,sBAAsB,CAAE,OAAO,CAAE,CAAC;SAE1C;KAIR;IAED,wCAAwC;IACxC,aAAa,CAAE,IAAI,EAAE,YAAY,EAAG;QAEhC,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAE,IAAI,EAAE,YAAY,CAAE,AAAC;QAEzD,IAAK,MAAM,KAAK,IAAI,EAAG;YAEnB,IAAI,CAAC,iBAAiB,CAAE,MAAM,CAAE,CAAC;YACjC,IAAI,CAAC,qBAAqB,CAAE,MAAM,CAAE,CAAC;SAExC;KAEJ;CAEJ;AAED,cAAc,CAAC,SAAS,CAAC,gCAAgC,GAAG,IAAI,YAAY,CAAE,CAAC,CAAE,CAAC;AAElF,MAAM,OAAO;IAET,YAAa,KAAK,CAAG;QAEjB,IAAK,OAAO,KAAK,KAAK,QAAQ,EAAG;YAE7B,OAAO,CAAC,IAAI,CAAE,oDAAoD,CAAE,CAAC;YACrE,KAAK,GAAG,SAAS,CAAE,CAAC,CAAE,CAAC;SAE1B;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KAEtB;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,OAAO,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAE,CAAC;KAE1F;CAEJ;AAED,MAAM,0BAA0B,SAAS,iBAAiB;IAEtD,YAAa,KAAK,EAAE,MAAM,EAAE,gBAAgB,GAAG,CAAC,CAAG;QAE/C,KAAK,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;QAEvB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;KAE5C;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAErB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAEhD,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,IAAI,EAAG;QAEV,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,CAAE,IAAI,CAAE,AAAC;QAE/B,EAAE,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAE5C,OAAO,EAAE,CAAC;KAEb;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAE,IAAI,CAAE,AAAC;QAElC,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;QACzC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAE9C,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,0BAA0B,CAAC,SAAS,CAAC,4BAA4B,GAAG,IAAI,CAAC;AAEzE,MAAM,iBAAiB;IAEnB,YAAa,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,CAAG;QAEtD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;KAEpB;IAED,IAAI,WAAW,CAAE,KAAK,EAAG;QAErB,IAAK,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC,OAAO,EAAG,CAAC;KAEzC;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,CAAE,IAAI,EAAE,WAAW,EAAG;QAEzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,OAAO,IAAI,CAAC;KAEf;IAED,WAAW,CAAE,QAAQ,EAAG;QAEpB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,KAAK,EAAG;QAEd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAEvD,MAAM,SAAS;IAEX,YAAa,MAAM,EAAE,SAAS,EAAE,IAAI,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAG;QAEvD,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;QACxC,6EAA6E;QAE7E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;QAE3B,IAAI,CAAC,MAAM,GAAG;YACV,IAAI,EAAE,EAAE;YACR,IAAI,EAAE;gBAAE,SAAS,EAAE,CAAC;aAAE;YACtB,GAAG,EAAE,EAAE;YACP,MAAM,EAAE;gBAAE,SAAS,EAAE,CAAC;aAAE;YACxB,MAAM,EAAE,EAAE;SACb,CAAC;KAEL;IAED,GAAG,CAAE,MAAM,EAAE,SAAS,EAAG;QAErB,6EAA6E;QAE7E,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;KAErC;IAED,aAAa,CAAE,MAAM,EAAE,MAAM,EAAG;QAE5B,IAAK,MAAM,CAAC,mBAAmB,EAAG;YAE9B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,qBAAqB,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;YAC5D,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,GAAG,CAAE,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAE,CAAC,SAAS,EAAE,CAAC;YACzG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SAExB,MAAM,IAAK,MAAM,CAAC,oBAAoB,EAAG;YAEtC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,AAAE,CAAA,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAA,GAAO,CAAA,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAA,AAAE,CAAE,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC,CAAC,gCAAgC;YAC5J,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE,CAAC,kBAAkB,CAAE,MAAM,CAAC,WAAW,CAAE,CAAC;YAC7E,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SAExB,MAEG,OAAO,CAAC,KAAK,CAAE,4CAA4C,GAAG,MAAM,CAAC,IAAI,CAAE,CAAC;KAInF;IAED,eAAe,CAAE,MAAM,EAAE,SAAS,GAAG,IAAI,EAAE,WAAU,GAAG,EAAE,EAAG;QAEzD,eAAe,CAAE,MAAM,EAAE,IAAI,EAAE,WAAU,EAAE,SAAS,CAAE,CAAC;QAEvD,WAAU,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;QAE3B,OAAO,WAAU,CAAC;KAErB;IAED,gBAAgB,CAAE,OAAO,EAAE,SAAS,GAAG,IAAI,EAAE,WAAU,GAAG,EAAE,EAAG;QAE3D,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAE5C,eAAe,CAAE,OAAO,CAAE,IAAC,CAAE,EAAE,IAAI,EAAE,WAAU,EAAE,SAAS,CAAE,CAAC;QAIjE,WAAU,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;QAE3B,OAAO,WAAU,CAAC;KAErB;CAEJ;AAED,SAAS,OAAO,CAAE,CAAC,EAAE,CAAC,EAAG;IAErB,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;CAElC;AAED,SAAS,eAAe,CAAE,MAAM,EAAE,SAAS,EAAE,YAAU,EAAE,SAAS,EAAG;IAEjE,IAAK,MAAM,CAAC,MAAM,CAAC,IAAI,CAAE,SAAS,CAAC,MAAM,CAAE,EAEvC,MAAM,CAAC,OAAO,CAAE,SAAS,EAAE,YAAU,CAAE,CAAC;IAI5C,IAAK,SAAS,KAAK,IAAI,EAAG;QAEtB,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,AAAC;QAEjC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAE7C,eAAe,CAAE,QAAQ,CAAE,IAAC,CAAE,EAAE,SAAS,EAAE,YAAU,EAAE,IAAI,CAAE,CAAC;KAIrE;CAEJ;AAED;;;;;IAKG,CAEH,MAAM,SAAS;IAEX,YAAa,MAAM,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAG;QAE1C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,cAAc;QAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,kBAAkB;QAEtC,OAAO,IAAI,CAAC;KAEf;IAED,GAAG,CAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAG;QAEtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,KAAK,EAAG;QAEV,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,4CAA4C;IAC5C,QAAQ,GAAG;QAEP,MAAM,GAAG,GAAG,QAAQ,AAAC;QACrB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,GAAG,CAAE,CAAE,CAAC;QAEhE,OAAO,IAAI,CAAC;KAEf;IAED,cAAc,CAAE,CAAC,EAAG;QAEhB,OAAO,IAAI,CAAC,sBAAsB,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;KAEvD;IAED,sBAAsB,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAE9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;QAEjD,IAAK,IAAI,CAAC,MAAM,KAAK,CAAC,EAAG;YAErB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;SAEhB,MAAM;YAEH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YAChC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAG,EAAE,CAAC,CAAE,CAAE,CAAC;SAE5D;QAED,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;CAEJ;AAED;;IAEG,CAEH,MAAM,WAAW;IAEb,YAAa,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAG;QAExC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,uDAAuD;QAC7E,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,uFAAuF;QAC3G,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,6BAA6B;QAEzC,OAAO,IAAI,CAAC;KAEf;IAED,GAAG,CAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAG;QAEpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAEX,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,KAAK,EAAG;QAEV,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QAEjB,OAAO,IAAI,CAAC;KAEf;IAED,cAAc,CAAE,CAAC,EAAG;QAEhB,OAAO,IAAI,CAAC,sBAAsB,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;KAEvD;IAED,sBAAsB,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;QAE9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;QACzC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAChC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAEX,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;CAEJ;AAED,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE9C,MAAM,IAAI;IAEN,YAAa,GAAG,GAAG,IAAI,OAAO,CAAE,QAAU,EAAE,QAAU,CAAE,EAAE,GAAG,GAAG,IAAI,OAAO,CAAE,CAAE,QAAQ,EAAE,CAAE,QAAQ,CAAE,CAAG;QAEpG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAElB;IAED,GAAG,CAAE,GAAG,EAAE,GAAG,EAAG;QAEZ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;QAErB,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,MAAM,EAAG;QAEpB,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAE7C,IAAI,CAAC,aAAa,CAAE,MAAM,CAAE,IAAC,CAAE,CAAE,CAAC;QAItC,OAAO,IAAI,CAAC;KAEf;IAED,oBAAoB,CAAE,MAAM,EAAE,IAAI,EAAG;QAEjC,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC,cAAc,CAAE,GAAG,CAAE,AAAC;QAC9D,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QACxC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;QAExC,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;IAED,IAAI,CAAE,GAAG,EAAG;QAER,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAC,GAAG,CAAE,CAAC;QACzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAC,GAAG,CAAE,CAAC;QAEzB,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,GAAG;QAER,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,QAAU,CAAC;QACrC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAE,QAAQ,CAAC;QAErC,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,GAAG;QAEN,oHAAoH;QAEpH,OAAO,AAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,AAAE,CAAC;KAErE;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,GAAG,MAAM,CAAC,UAAU,CAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC,cAAc,CAAE,GAAG,CAAE,CAAC;KAE9G;IAED,OAAO,CAAE,MAAM,EAAG;QAEd,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,GAAG,MAAM,CAAC,UAAU,CAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC;KAExF;IAED,aAAa,CAAE,KAAK,EAAG;QAEnB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QAEtB,OAAO,IAAI,CAAC;KAEf;IAED,cAAc,CAAE,MAAM,EAAG;QAErB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;QAEvB,OAAO,IAAI,CAAC;KAEf;IAED,cAAc,CAAE,MAAM,EAAG;QAErB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAE,CAAE,MAAM,CAAE,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC;QAE7B,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,KAAK,EAAG;QAEnB,OAAO,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAC/C,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;KAEnE;IAED,WAAW,CAAE,GAAG,EAAG;QAEf,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IACrD,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;KAE1D;IAED,YAAY,CAAE,KAAK,EAAE,MAAM,EAAG;QAE1B,wDAAwD;QACxD,6BAA6B;QAE7B,OAAO,MAAM,CAAC,GAAG,CACb,AAAE,CAAA,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,GAAO,CAAA,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,AAAE,EACtD,AAAE,CAAA,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,GAAO,CAAA,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,AAAE,CACzD,CAAC;KAEL;IAED,aAAa,CAAE,GAAG,EAAG;QAEjB,qDAAqD;QAErD,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IACnD,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;KAEvE;IAED,UAAU,CAAE,KAAK,EAAE,MAAM,EAAG;QAExB,OAAO,MAAM,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,KAAK,CAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC;KAE3D;IAED,eAAe,CAAE,KAAK,EAAG;QAErB,MAAM,YAAY,GAAG,SAAS,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,KAAK,CAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAE,AAAC;QACzE,OAAO,YAAY,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC,MAAM,EAAE,CAAC;KAE7C;IAED,SAAS,CAAE,GAAG,EAAG;QAEb,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,CAAC;QAExB,OAAO,IAAI,CAAC;KAEf;IAED,KAAK,CAAE,GAAG,EAAG;QAET,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,CAAC;QAExB,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,MAAM,CAAE,CAAC;QAEvB,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,GAAG,EAAG;QAEV,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,CAAE,IAAI,CAAC,GAAG,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,CAAE,IAAI,CAAC,GAAG,CAAE,CAAC;KAEnE;CAEJ;AAED,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;AAE7B,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC5C,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE9C,MAAM,KAAK;IAEP,YAAa,KAAK,GAAG,IAAI,OAAO,EAAE,EAAE,GAAG,GAAG,IAAI,OAAO,EAAE,CAAG;QAEtD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAElB;IAED,GAAG,CAAE,KAAK,EAAE,GAAG,EAAG;QAEd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC;QACzB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;QAErB,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,IAAI,EAAG;QAET,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;QAC9B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,IAAI,CAAC,GAAG,CAAE,CAAC;QAE1B,OAAO,IAAI,CAAC;KAEf;IAED,SAAS,CAAE,MAAM,EAAG;QAEhB,OAAO,MAAM,CAAC,UAAU,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC,cAAc,CAAE,GAAG,CAAE,CAAC;KAE1E;IAED,KAAK,CAAE,MAAM,EAAG;QAEZ,OAAO,MAAM,CAAC,UAAU,CAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAE,CAAC;KAEpD;IAED,UAAU,GAAG;QAET,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAE,IAAI,CAAC,GAAG,CAAE,CAAC;KAEnD;IAED,QAAQ,GAAG;QAEP,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,IAAI,CAAC,GAAG,CAAE,CAAC;KAE5C;IAED,EAAE,CAAE,CAAC,EAAE,MAAM,EAAG;QAEZ,OAAO,IAAI,CAAC,KAAK,CAAE,MAAM,CAAE,CAAC,cAAc,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;KAErE;IAED,4BAA4B,CAAE,KAAK,EAAE,WAAW,EAAG;QAE/C,OAAO,CAAC,UAAU,CAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAE,CAAC;QACxC,SAAS,CAAC,UAAU,CAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAE,CAAC;QAE7C,MAAM,SAAS,GAAG,SAAS,CAAC,GAAG,CAAE,SAAS,CAAE,AAAC;QAC7C,MAAM,eAAe,GAAG,SAAS,CAAC,GAAG,CAAE,OAAO,CAAE,AAAC;QAEjD,IAAI,CAAC,GAAG,eAAe,GAAG,SAAS,AAAC;QAEpC,IAAK,WAAW,EAEZ,CAAC,GAAG,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAIzB,OAAO,CAAC,CAAC;KAEZ;IAED,mBAAmB,CAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAG;QAE9C,MAAM,CAAC,GAAG,IAAI,CAAC,4BAA4B,CAAE,KAAK,EAAE,WAAW,CAAE,AAAC;QAElE,OAAO,IAAI,CAAC,KAAK,CAAE,MAAM,CAAE,CAAC,cAAc,CAAE,CAAC,CAAE,CAAC,GAAG,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;KAErE;IAED,YAAY,CAAE,MAAM,EAAG;QAEnB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC;QAClC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,IAAI,EAAG;QAEX,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IAAI,CAAC,KAAK,CAAE,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAE,IAAI,CAAC,GAAG,CAAE,CAAC;KAEzE;IAED,KAAK,GAAG;QAEJ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KAE9C;CAEJ;AAED,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAE9C,MAAM,eAAe,SAAS,QAAQ;IAElC,YAAa,KAAK,EAAE,KAAK,CAAG;QAExB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE/B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAE9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,MAAM,QAAQ,GAAG,IAAI,cAAc,EAAE,AAAC;QAEtC,MAAM,SAAS,GAAG;AACd,aAAC;AAAE,aAAC;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,aAAC;AACjB,aAAC;AAAE,aAAC;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,aAAC;AACjB,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAClB,aAAC;AAAE,aAAC;AAAE,aAAC;AAAG,aAAC;AAAE,aAAC;AAAE,aAAC;AACjB,aAAC;AAAE,aAAC;AAAE,aAAC;AAAG,aAAC;AAAE,cAAG;AAAE,aAAC;SACtB,AAAC;QAEF,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,EAAE,CAAC,EAAG,CAAG;YAEhD,MAAM,EAAE,GAAG,AAAE,IAAC,GAAG,CAAC,GAAK,IAAI,CAAC,EAAE,GAAG,CAAC,AAAC;YACnC,MAAM,EAAE,GAAG,AAAE,CAAC,GAAG,CAAC,GAAK,IAAI,CAAC,EAAE,GAAG,CAAC,AAAC;YAEnC,SAAS,CAAC,IAAI,CACV,IAAI,CAAC,GAAG,CAAE,EAAE,CAAE,EAAE,IAAI,CAAC,GAAG,CAAE,EAAE,CAAE,EAAE,CAAC,EACjC,IAAI,CAAC,GAAG,CAAE,EAAE,CAAE,EAAE,IAAI,CAAC,GAAG,CAAE,EAAE,CAAE,EAAE,CAAC,CACpC,CAAC;SAEL;QAED,QAAQ,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,SAAS,EAAE,CAAC,CAAE,CAAE,CAAC;QAEhF,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE;YAAE,GAAG,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,AAAC;QAE5E,IAAI,CAAC,IAAI,GAAG,IAAI,YAAY,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QACnD,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAEtB,IAAI,CAAC,MAAM,EAAE,CAAC;KAEjB;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;KAEhC;IAED,MAAM,GAAG;QAEL,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE/B,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,AAAC;QACpE,MAAM,SAAS,GAAG,UAAU,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAE,AAAC;QAE5D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,SAAS,EAAE,SAAS,EAAE,UAAU,CAAE,CAAC;QAExD,SAAS,CAAC,qBAAqB,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAE,CAAC;QAEjE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAE,SAAS,CAAE,CAAC;QAE9B,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAEzB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;aAI3C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC;KAIzD;CAEJ;AAED,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC9C,MAAM,WAAW,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAChD,MAAM,eAAe,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAGpD,MAAM,cAAc,SAAS,YAAY;IAErC,YAAa,MAAM,CAAG;QAElB,MAAM,KAAK,GAAG,WAAW,CAAE,MAAM,CAAE,AAAC;QAEpC,MAAM,QAAQ,GAAG,IAAI,cAAc,EAAE,AAAC;QAEtC,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,MAAM,MAAM,GAAG,IAAI,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,AAAC;QACpC,MAAM,MAAM,GAAG,IAAI,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,AAAC;QAEpC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,KAAK,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;YAEtC,MAAM,IAAI,GAAG,KAAK,CAAE,IAAC,CAAE,AAAC;YAExB,IAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAG;gBAErC,QAAQ,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACzB,QAAQ,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACzB,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC;gBAC5C,MAAM,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAE,CAAC;aAE/C;SAEJ;QAED,QAAQ,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC/E,QAAQ,CAAC,YAAY,CAAE,OAAO,EAAE,IAAI,sBAAsB,CAAE,MAAM,EAAE,CAAC,CAAE,CAAE,CAAC;QAE1E,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE;YAAE,YAAY,EAAE,IAAI;YAAE,SAAS,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;YAAE,WAAW,EAAE,IAAI;SAAE,CAAE,AAAC;QAE5I,KAAK,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QAE5B,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;QAC7B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;QACjC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;KAEjC;IAED,iBAAiB,CAAE,KAAK,EAAG;QAEvB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,AAAC;QAEzB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAC/B,MAAM,QAAQ,GAAG,QAAQ,CAAC,YAAY,CAAE,UAAU,CAAE,AAAC;QAErD,eAAe,CAAC,IAAI,CAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAE,CAAC,MAAM,EAAE,CAAC;QAEvD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAC,GAAG,KAAK,CAAC,MAAM,EAAE,IAAC,EAAG,CAAG;YAE7C,MAAM,IAAI,GAAG,KAAK,CAAE,IAAC,CAAE,AAAC;YAExB,IAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAG;gBAErC,WAAW,CAAC,gBAAgB,CAAE,eAAe,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;gBAClE,SAAS,CAAC,qBAAqB,CAAE,WAAW,CAAE,CAAC;gBAC/C,QAAQ,CAAC,MAAM,CAAE,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAE,CAAC;gBAE5D,WAAW,CAAC,gBAAgB,CAAE,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAE,CAAC;gBACzE,SAAS,CAAC,qBAAqB,CAAE,WAAW,CAAE,CAAC;gBAC/C,QAAQ,CAAC,MAAM,CAAE,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAE,CAAC;gBAEhE,CAAC,IAAI,CAAC,CAAC;aAEV;SAEJ;QAED,QAAQ,CAAC,YAAY,CAAE,UAAU,CAAE,CAAC,WAAW,GAAG,IAAI,CAAC;QAEvD,KAAK,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAC;KAEpC;CAEJ;AAGD,SAAS,WAAW,CAAE,MAAM,EAAG;IAE3B,MAAM,QAAQ,GAAG,EAAE,AAAC;IAEpB,IAAK,MAAM,CAAC,MAAM,KAAK,IAAI,EAEvB,QAAQ,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;IAI5B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAC,EAAG,CAE7C,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,QAAQ,EAAE,WAAW,CAAE,MAAM,CAAC,QAAQ,CAAE,IAAC,CAAE,CAAE,CAAE,CAAC;IAIzE,OAAO,QAAQ,CAAC;CAEnB;AAED,MAAM,gBAAgB,SAAS,IAAI;IAE/B,YAAa,KAAK,EAAE,UAAU,EAAE,KAAK,CAAG;QAEpC,MAAM,QAAQ,GAAG,IAAI,cAAc,CAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAE,AAAC;QACxD,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE;YAAE,SAAS,EAAE,IAAI;YAAE,GAAG,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,AAAC;QAE7F,KAAK,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QAE5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;QAE/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAE9B,IAAI,CAAC,MAAM,EAAE,CAAC;IAGd;;;;;;;;;;;;;;;;;;;;;OAqBF,EAED;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;KAE3B;IAED,MAAM,GAAG;QAEL,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAEzB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;aAItC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC;IAIjD;;;;;;;;;;;;;WAaE,EAEL;CAEJ;AAED,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC9C,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,KAAK,EAAE,AAAC;AAC1C,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,KAAK,EAAE,AAAC;AAE1C,MAAM,qBAAqB,SAAS,QAAQ;IAExC,YAAa,KAAK,EAAE,IAAI,EAAE,KAAK,CAAG;QAE9B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE/B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAE9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,MAAM,QAAQ,GAAG,IAAI,kBAAkB,CAAE,IAAI,CAAE,AAAC;QAChD,QAAQ,CAAC,OAAO,CAAE,IAAI,CAAC,EAAE,GAAG,GAAG,CAAE,CAAC;QAElC,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAiB,CAAE;YAAE,SAAS,EAAE,IAAI;YAAE,GAAG,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,CAAC;QAC5F,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;QAElE,MAAM,QAAQ,GAAG,QAAQ,CAAC,YAAY,CAAE,UAAU,CAAE,AAAC;QACrD,MAAM,MAAM,GAAG,IAAI,YAAY,CAAE,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAE,AAAC;QAEtD,QAAQ,CAAC,YAAY,CAAE,OAAO,EAAE,IAAI,eAAe,CAAE,MAAM,EAAE,CAAC,CAAE,CAAE,CAAC;QAEnE,IAAI,CAAC,GAAG,CAAE,IAAI,IAAI,CAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAE,CAAE,CAAC;QAEhD,IAAI,CAAC,MAAM,EAAE,CAAC;KAEjB;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,QAAQ,CAAE,CAAC,CAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAE,CAAC,CAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;KAEzC;IAED,MAAM,GAAG;QAEL,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAE,CAAC,CAAE,AAAC;QAEhC,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAEzB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;aAEnC;YAEH,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAE,OAAO,CAAE,AAAC;YAErD,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC;YACjC,OAAO,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAE,CAAC;YAEvC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;gBAE7C,MAAM,KAAK,GAAG,AAAE,IAAC,GAAK,CAAC,GAAG,CAAC,AAAE,GAAK,OAAO,GAAG,OAAO,AAAC;gBAEpD,MAAM,CAAC,MAAM,CAAE,IAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE,CAAC;aAEjD;YAED,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;SAE7B;QAED,IAAI,CAAC,MAAM,CAAE,SAAS,CAAC,qBAAqB,CAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAE,CAAC,MAAM,EAAE,CAAE,CAAC;KAErF;CAEJ;AAED,MAAM,UAAU,SAAS,YAAY;IAEjC,YAAa,IAAI,GAAG,EAAE,EAAE,SAAS,GAAG,EAAE,EAAE,MAAM,GAAG,OAAQ,EAAE,MAAM,GAAG,OAAQ,CAAG;QAE3E,MAAM,GAAG,IAAI,KAAK,CAAE,MAAM,CAAE,CAAC;QAC7B,MAAM,GAAG,IAAI,KAAK,CAAE,MAAM,CAAE,CAAC;QAE7B,MAAM,MAAM,GAAG,SAAS,GAAG,CAAC,AAAC;QAC7B,MAAM,IAAI,GAAG,IAAI,GAAG,SAAS,AAAC;QAC9B,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,AAAC;QAE1B,MAAM,QAAQ,GAAG,EAAE,EAAE,MAAM,GAAG,EAAE,AAAC;QAEjC,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAE,QAAQ,EAAE,IAAC,IAAI,SAAS,EAAE,IAAC,EAAG,EAAE,CAAC,IAAI,IAAI,CAAG;YAEtE,QAAQ,CAAC,IAAI,CAAE,CAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YAClD,QAAQ,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAE,CAAC;YAElD,MAAM,KAAK,GAAG,IAAC,KAAK,MAAM,GAAG,MAAM,GAAG,MAAM,AAAC;YAE7C,KAAK,CAAC,OAAO,CAAE,MAAM,EAAE,CAAC,CAAE,CAAC;YAAC,CAAC,IAAI,CAAC,CAAC;YACnC,KAAK,CAAC,OAAO,CAAE,MAAM,EAAE,CAAC,CAAE,CAAC;YAAC,CAAC,IAAI,CAAC,CAAC;YACnC,KAAK,CAAC,OAAO,CAAE,MAAM,EAAE,CAAC,CAAE,CAAC;YAAC,CAAC,IAAI,CAAC,CAAC;YACnC,KAAK,CAAC,OAAO,CAAE,MAAM,EAAE,CAAC,CAAE,CAAC;YAAC,CAAC,IAAI,CAAC,CAAC;SAEtC;QAED,MAAM,QAAQ,GAAG,IAAI,cAAc,EAAE,AAAC;QACtC,QAAQ,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC/E,QAAQ,CAAC,YAAY,CAAE,OAAO,EAAE,IAAI,sBAAsB,CAAE,MAAM,EAAE,CAAC,CAAE,CAAE,CAAC;QAE1E,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE;YAAE,YAAY,EAAE,IAAI;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,AAAC;QAEpF,KAAK,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QAE5B,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;KAE5B;CAEJ;AAED,MAAM,eAAe,SAAS,YAAY;IAEtC,YAAa,MAAM,GAAG,EAAE,EAAE,OAAO,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,EAAE,SAAS,GAAG,EAAE,EAAE,MAAM,GAAG,OAAQ,EAAE,MAAM,GAAG,OAAQ,CAAG;QAExG,MAAM,GAAG,IAAI,KAAK,CAAE,MAAM,CAAE,CAAC;QAC7B,MAAM,GAAG,IAAI,KAAK,CAAE,MAAM,CAAE,CAAC;QAE7B,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,qBAAqB;QAErB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,OAAO,EAAE,IAAC,EAAG,CAAG;YAElC,MAAM,CAAC,GAAG,AAAE,IAAC,GAAG,OAAO,GAAO,CAAA,IAAI,CAAC,EAAE,GAAG,CAAC,CAAA,AAAE,AAAC;YAE5C,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,GAAG,MAAM,AAAC;YACjC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,GAAG,MAAM,AAAC;YAEjC,QAAQ,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YACzB,QAAQ,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YAEzB,MAAM,KAAK,GAAG,AAAE,IAAC,GAAG,CAAC,GAAK,MAAM,GAAG,MAAM,AAAC;YAE1C,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE,CAAC;YACzC,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE,CAAC;SAE5C;QAED,qBAAqB;QAErB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,IAAC,IAAI,OAAO,EAAE,IAAC,EAAG,CAAG;YAElC,MAAM,KAAK,GAAG,AAAE,IAAC,GAAG,CAAC,GAAK,MAAM,GAAG,MAAM,AAAC;YAE1C,MAAM,CAAC,GAAG,MAAM,GAAK,MAAM,GAAG,OAAO,GAAG,IAAC,AAAE,AAAC;YAE5C,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAG,CAAG;gBAEnC,eAAe;gBAEf,IAAI,CAAC,GAAG,AAAE,CAAC,GAAG,SAAS,GAAO,CAAA,IAAI,CAAC,EAAE,GAAG,CAAC,CAAA,AAAE,AAAC;gBAE5C,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,GAAG,CAAC,AAAC;gBAC1B,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,GAAG,CAAC,AAAC;gBAE1B,QAAQ,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACzB,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE,CAAC;gBAEzC,gBAAgB;gBAEhB,CAAC,GAAG,AAAI,CAAA,CAAC,GAAG,CAAC,CAAA,GAAK,SAAS,GAAO,CAAA,IAAI,CAAC,EAAE,GAAG,CAAC,CAAA,AAAE,CAAC;gBAEhD,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;gBACtB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;gBAEtB,QAAQ,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACzB,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE,CAAC;aAE5C;SAEJ;QAED,MAAM,QAAQ,GAAG,IAAI,cAAc,EAAE,AAAC;QACtC,QAAQ,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC/E,QAAQ,CAAC,YAAY,CAAE,OAAO,EAAE,IAAI,sBAAsB,CAAE,MAAM,EAAE,CAAC,CAAE,CAAE,CAAC;QAE1E,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE;YAAE,YAAY,EAAE,IAAI;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,AAAC;QAEpF,KAAK,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QAE5B,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;KAEjC;CAEJ;AAED,MAAM,GAAG,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACxC,MAAM,GAAG,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AACxC,MAAM,GAAG,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAExC,MAAM,sBAAsB,SAAS,QAAQ;IAEzC,YAAa,KAAK,EAAE,IAAI,EAAE,KAAK,CAAG;QAE9B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE/B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAE9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAK,IAAI,KAAK,SAAS,EAAG,IAAI,GAAG,CAAC,CAAC;QAEnC,IAAI,QAAQ,GAAG,IAAI,cAAc,EAAE,AAAC;QACpC,QAAQ,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE;YAC3D,CAAE,IAAI;YAAE,IAAI;AAAE,aAAC;YACf,IAAI;YAAE,IAAI;AAAE,aAAC;YACb,IAAI;YAAE,CAAE,IAAI;AAAE,aAAC;YACf,CAAE,IAAI;YAAE,CAAE,IAAI;AAAE,aAAC;YACjB,CAAE,IAAI;YAAE,IAAI;AAAE,aAAC;SAClB,EAAE,CAAC,CAAE,CAAE,CAAC;QAET,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE;YAAE,GAAG,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,AAAC;QAE5E,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QACjD,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QAE5B,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;QAChC,QAAQ,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;SAAE,EAAE,CAAC,CAAE,CAAE,CAAC;QAE3F,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QACjD,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QAE5B,IAAI,CAAC,MAAM,EAAE,CAAC;KAEjB;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;KAEtC;IAED,MAAM,GAAG;QAEL,GAAG,CAAC,qBAAqB,CAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAE,CAAC;QACpD,GAAG,CAAC,qBAAqB,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAE,CAAC;QAC3D,GAAG,CAAC,UAAU,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;QAE3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAE9B,IAAK,IAAI,CAAC,KAAK,KAAK,SAAS,EAAG;YAE5B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;YACjD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;SAEpD,MAAM;YAEH,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC;YACxD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC;SAE3D;QAED,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;KAE1C;CAEJ;AAED,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC5C,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,MAAM,EAAE,AAAC;AAE3C;;;;;IAKG,CAEH,MAAM,YAAY,SAAS,YAAY;IAEnC,YAAa,MAAM,CAAG;QAElB,MAAM,QAAQ,GAAG,IAAI,cAAc,EAAE,AAAC;QACtC,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE;YAAE,KAAK,EAAE,QAAQ;YAAE,YAAY,EAAE,IAAI;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,AAAC;QAErG,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,MAAM,GAAG,EAAE,AAAC;QAElB,MAAM,QAAQ,GAAG,EAAE,AAAC;QAEpB,SAAS;QAET,MAAM,YAAY,GAAG,IAAI,KAAK,CAAE,QAAQ,CAAE,AAAC;QAC3C,MAAM,SAAS,GAAG,IAAI,KAAK,CAAE,QAAQ,CAAE,AAAC;QACxC,MAAM,OAAO,GAAG,IAAI,KAAK,CAAE,KAAQ,CAAE,AAAC;QACtC,MAAM,WAAW,GAAG,IAAI,KAAK,CAAE,QAAQ,CAAE,AAAC;QAC1C,MAAM,UAAU,GAAG,IAAI,KAAK,CAAE,OAAQ,CAAE,AAAC;QAEzC,OAAO;QAEP,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QACpC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QACpC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QACpC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QAEpC,MAAM;QAEN,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QACpC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QACpC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QACpC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QAEpC,QAAQ;QAER,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QACpC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QACpC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QACpC,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,YAAY,CAAE,CAAC;QAEpC,OAAO;QAEP,OAAO,CAAE,GAAG,EAAE,IAAI,EAAE,SAAS,CAAE,CAAC;QAChC,OAAO,CAAE,GAAG,EAAE,IAAI,EAAE,SAAS,CAAE,CAAC;QAChC,OAAO,CAAE,GAAG,EAAE,IAAI,EAAE,SAAS,CAAE,CAAC;QAChC,OAAO,CAAE,GAAG,EAAE,IAAI,EAAE,SAAS,CAAE,CAAC;QAEhC,KAAK;QAEL,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAE,CAAC;QAC/B,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAE,CAAC;QAC/B,OAAO,CAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAE,CAAC;QAE/B,SAAS;QAET,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,WAAW,CAAE,CAAC;QACjC,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,UAAU,CAAE,CAAC;QAEhC,QAAQ;QAER,OAAO,CAAE,KAAK,EAAE,KAAK,EAAE,UAAU,CAAE,CAAC;QACpC,OAAO,CAAE,KAAK,EAAE,KAAK,EAAE,UAAU,CAAE,CAAC;QAEpC,OAAO,CAAE,KAAK,EAAE,KAAK,EAAE,UAAU,CAAE,CAAC;QACpC,OAAO,CAAE,KAAK,EAAE,KAAK,EAAE,UAAU,CAAE,CAAC;QAEpC,SAAS,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAG;YAE5B,QAAQ,CAAE,CAAC,EAAE,KAAK,CAAE,CAAC;YACrB,QAAQ,CAAE,CAAC,EAAE,KAAK,CAAE,CAAC;SAExB;QAED,SAAS,QAAQ,CAAE,EAAE,EAAE,KAAK,EAAG;YAE3B,QAAQ,CAAC,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YACzB,MAAM,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE,CAAC;YAEzC,IAAK,QAAQ,CAAE,EAAE,CAAE,KAAK,SAAS,EAE7B,QAAQ,CAAE,EAAE,CAAE,GAAG,EAAE,CAAC;YAIxB,QAAQ,CAAE,EAAE,CAAE,CAAC,IAAI,CAAE,AAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAK,CAAC,CAAE,CAAC;SAEtD;QAED,QAAQ,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC/E,QAAQ,CAAC,YAAY,CAAE,OAAO,EAAE,IAAI,sBAAsB,CAAE,MAAM,EAAE,CAAC,CAAE,CAAE,CAAC;QAE1E,KAAK,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QAE5B,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;QAE3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAK,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAG,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;QAE/E,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;QACjC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAE9B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,MAAM,EAAE,CAAC;KAEjB;IAED,MAAM,GAAG;QAEL,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAE/B,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,AAAC;QAEnB,gDAAgD;QAChD,gCAAgC;QAEhC,OAAO,CAAC,uBAAuB,CAAC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAE,CAAC;QAE5E,kBAAkB;QAElB,QAAQ,CAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE,CAAC;QACxD,QAAQ,CAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEtD,OAAO;QAEP,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,EAAG,CAAE,CAAC;QAC7D,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,EAAG,CAAE,CAAC;QAC3D,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE,CAAC;QAC3D,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE,CAAC;QAEzD,MAAM;QAEN,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC3D,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACzD,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACzD,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEvD,KAAK;QAEL,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,EAAG,CAAE,CAAC;QACrE,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,EAAG,CAAE,CAAC;QACvE,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAG,CAAE,CAAC;QAE7D,QAAQ;QAER,QAAQ,CAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC1D,QAAQ,CAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QACxD,QAAQ,CAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC1D,QAAQ,CAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAExD,QAAQ,CAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE,CAAC;QAC5D,QAAQ,CAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE,CAAC;QAC1D,QAAQ,CAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,EAAG,CAAE,CAAC;QAC5D,QAAQ,CAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAE,CAAC;QAE1D,QAAQ,CAAC,YAAY,CAAE,UAAU,CAAE,CAAC,WAAW,GAAG,IAAI,CAAC;KAE1D;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;KAE3B;CAEJ;AAGD,SAAS,QAAQ,CAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG;IAE5D,OAAO,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC;IAE3C,MAAM,MAAM,GAAG,QAAQ,CAAE,KAAK,CAAE,AAAC;IAEjC,IAAK,MAAM,KAAK,SAAS,EAAG;QAExB,MAAM,QAAQ,GAAG,QAAQ,CAAC,YAAY,CAAE,UAAU,CAAE,AAAC;QAErD,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAE3C,QAAQ,CAAC,MAAM,CAAE,MAAM,CAAE,IAAC,CAAE,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAE,CAAC;KAIvE;CAEJ;AAED,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,IAAI,EAAE,AAAC;AAEtC,MAAM,SAAS,SAAS,YAAY;IAEhC,YAAa,MAAM,EAAE,KAAK,GAAG,QAAQ,CAAG;QAEpC,MAAM,OAAO,GAAG,IAAI,WAAW,CAAE;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;SAAE,CAAE,AAAC;QAC9G,MAAM,SAAS,GAAG,IAAI,YAAY,CAAE,EAAK,CAAE,AAAC;QAE5C,MAAM,QAAQ,GAAG,IAAI,cAAc,EAAE,AAAC;QACtC,QAAQ,CAAC,QAAQ,CAAE,IAAI,eAAe,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;QACvD,QAAQ,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,eAAe,CAAE,SAAS,EAAE,CAAC,CAAE,CAAE,CAAC;QAEzE,KAAK,CAAE,QAAQ,EAAE,IAAI,iBAAiB,CAAE;YAAE,KAAK,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,CAAE,CAAC;QAEhF,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QAExB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAE9B,IAAI,CAAC,MAAM,EAAE,CAAC;KAEjB;IAED,MAAM,CAAE,MAAM,EAAG;QAEb,IAAK,MAAM,KAAK,SAAS,EAErB,OAAO,CAAC,IAAI,CAAE,qDAAqD,CAAE,CAAC;QAI1E,IAAK,IAAI,CAAC,MAAM,KAAK,SAAS,EAE1B,IAAI,CAAC,aAAa,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QAItC,IAAK,IAAI,CAAC,OAAO,EAAE,EAAG,OAAO;QAE7B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,AAAC;QACrB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,AAAC;QAErB;;;;;;;;;;;;;;WAcE,CAEF,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,AAAC;QACnD,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,AAAC;QAE7B,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAC3D,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAC3D,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAC3D,KAAK,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAC7D,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAC9D,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAC9D,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAC9D,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAAC,KAAK,CAAE,EAAE,CAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAE9D,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;QAE5B,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;KAGzC;IAED,aAAa,CAAE,MAAM,EAAG;QAEpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,OAAO,IAAI,CAAC;KAEf;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAE,IAAI,EAAE,MAAM,CAAE,CAAC;QAEjD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAE5B,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,UAAU,SAAS,YAAY;IAEjC,YAAa,GAAG,EAAE,KAAK,GAAG,QAAQ,CAAG;QAEjC,MAAM,OAAO,GAAG,IAAI,WAAW,CAAE;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;SAAE,CAAE,AAAC;QAE9G,MAAM,SAAS,GAAG;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,cAAG;AAAE,aAAC;AAAE,cAAG;AAAE,cAAG;AAAE,cAAG;AAAE,cAAG;AAAE,aAAC;AAAE,cAAG;AAAE,cAAG;SAAE,AAAC;QAErH,MAAM,QAAQ,GAAG,IAAI,cAAc,EAAE,AAAC;QAEtC,QAAQ,CAAC,QAAQ,CAAE,IAAI,eAAe,CAAE,OAAO,EAAE,CAAC,CAAE,CAAE,CAAC;QAEvD,QAAQ,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,SAAS,EAAE,CAAC,CAAE,CAAE,CAAC;QAEhF,KAAK,CAAE,QAAQ,EAAE,IAAI,iBAAiB,CAAE;YAAE,KAAK,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,CAAE,CAAC;QAEhF,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEf,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;QAEzB,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;KAEzC;IAED,iBAAiB,CAAE,KAAK,EAAG;QAEvB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,AAAC;QAErB,IAAK,GAAG,CAAC,OAAO,EAAE,EAAG,OAAO;QAE5B,GAAG,CAAC,SAAS,CAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;QAE/B,GAAG,CAAC,OAAO,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;QAE1B,IAAI,CAAC,KAAK,CAAC,cAAc,CAAE,GAAG,CAAE,CAAC;QAEjC,KAAK,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAC;KAEpC;CAEJ;AAED,MAAM,WAAW,SAAS,IAAI;IAE1B,YAAa,KAAK,EAAE,IAAI,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAG;QAE3C,MAAM,KAAK,GAAG,GAAG,AAAC;QAElB,MAAM,SAAS,GAAG;AAAE,aAAC;AAAE,cAAG;AAAE,aAAC;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;SAAE,AAAC;QAE/H,MAAM,QAAQ,GAAG,IAAI,cAAc,EAAE,AAAC;QACtC,QAAQ,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,SAAS,EAAE,CAAC,CAAE,CAAE,CAAC;QAChF,QAAQ,CAAC,qBAAqB,EAAE,CAAC;QAEjC,KAAK,CAAE,QAAQ,EAAE,IAAI,iBAAiB,CAAE;YAAE,KAAK,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,CAAE,CAAC;QAEhF,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;QAE1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,MAAM,UAAU,GAAG;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,cAAG;AAAE,aAAC;AAAE,aAAC;AAAE,cAAG;AAAE,aAAC;SAAE,AAAC;QAExF,MAAM,SAAS,GAAG,IAAI,cAAc,EAAE,AAAC;QACvC,SAAS,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,UAAU,EAAE,CAAC,CAAE,CAAE,CAAC;QAClF,SAAS,CAAC,qBAAqB,EAAE,CAAC;QAElC,IAAI,CAAC,GAAG,CAAE,IAAI,IAAI,CAAE,SAAS,EAAE,IAAI,iBAAiB,CAAE;YAAE,KAAK,EAAE,KAAK;YAAE,OAAO,EAAE,GAAG;YAAE,WAAW,EAAE,IAAI;YAAE,UAAU,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,CAAE,CAAE,CAAC;KAEvJ;IAED,iBAAiB,CAAE,KAAK,EAAG;QAEvB,IAAI,KAAK,GAAG,CAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,AAAC;QAElC,IAAK,IAAI,CAAC,GAAG,CAAE,KAAK,CAAE,GAAG,UAAI,EAAG,KAAK,GAAG,UAAI,CAAC,CAAC,uBAAuB;QAErE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,KAAK,CAAE,CAAC;QAE1D,IAAI,CAAC,QAAQ,CAAE,CAAC,CAAE,CAAC,QAAQ,CAAC,IAAI,GAAG,AAAE,KAAK,GAAG,CAAC,GAAK,QAAQ,GAAG,SAAS,CAAC,CAAC,qEAAqE;QAE9I,IAAI,CAAC,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,CAAC;QAEjC,KAAK,CAAC,iBAAiB,CAAE,KAAK,CAAE,CAAC;KAEpC;CAEJ;AAED,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,OAAO,EAAE,AAAC;AAC1C,IAAI,aAAa,EAAE,aAAa,AAAC;AAEjC,MAAM,WAAW,SAAS,QAAQ;IAE9B,kCAAkC;IAElC,YAAa,GAAG,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,MAAM,GAAG,IAAI,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,EAAE,UAAU,GAAG,MAAM,GAAG,GAAG,EAAE,SAAS,GAAG,UAAU,GAAG,GAAG,CAAG;QAEhK,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;QAE1B,IAAK,aAAa,KAAK,SAAS,EAAG;YAE/B,aAAa,GAAG,IAAI,cAAc,EAAE,CAAC;YACrC,aAAa,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;AAAE,iBAAC;aAAE,EAAE,CAAC,CAAE,CAAE,CAAC;YAEhG,aAAa,GAAG,IAAI,gBAAgB,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YACxD,aAAa,CAAC,SAAS,CAAE,CAAC,EAAE,IAAK,EAAE,CAAC,CAAE,CAAC;SAE1C;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAE7B,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAE,aAAa,EAAE,IAAI,iBAAiB,CAAE;YAAE,KAAK,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,CAAE,CAAC;QACpG,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAEtB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAE,aAAa,EAAE,IAAI,iBAAiB,CAAE;YAAE,KAAK,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,CAAE,CAAC;QACpG,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QAEtB,IAAI,CAAC,YAAY,CAAE,GAAG,CAAE,CAAC;QACzB,IAAI,CAAC,SAAS,CAAE,MAAM,EAAE,UAAU,EAAE,SAAS,CAAE,CAAC;KAEnD;IAED,YAAY,CAAE,GAAG,EAAG;QAEhB,kCAAkC;QAElC,IAAK,GAAG,CAAC,CAAC,GAAG,OAAO,EAEhB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;aAE/B,IAAK,GAAG,CAAC,CAAC,GAAG,QAAS,EAEzB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;aAE/B;YAEH,KAAK,CAAC,GAAG,CAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE,GAAG,CAAC,CAAC,CAAE,CAAC,SAAS,EAAE,CAAC;YAE3C,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAE,GAAG,CAAC,CAAC,CAAE,AAAC;YAEnC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAE,KAAK,EAAE,OAAO,CAAE,CAAC;SAEtD;KAEJ;IAED,SAAS,CAAE,MAAM,EAAE,UAAU,GAAG,MAAM,GAAG,GAAG,EAAE,SAAS,GAAG,UAAU,GAAG,GAAG,EAAG;QAEzE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAE,MAAM,EAAE,MAAM,GAAG,UAAU,CAAE,EAAE,CAAC,CAAE,CAAC,CAAC,aAAa;QACnF,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QAEzB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,SAAS,EAAE,UAAU,EAAE,SAAS,CAAE,CAAC;QACxD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KAE5B;IAED,QAAQ,CAAE,KAAK,EAAG;QAEd,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC;KAEzC;IAED,IAAI,CAAE,MAAM,EAAG;QAEX,KAAK,CAAC,IAAI,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;QAE5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,MAAM,CAAC,IAAI,CAAE,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,MAAM,CAAC,IAAI,CAAE,CAAC;QAE9B,OAAO,IAAI,CAAC;KAEf;CAEJ;AAED,MAAM,UAAU,SAAS,YAAY;IAEjC,YAAa,IAAI,GAAG,CAAC,CAAG;QAEpB,MAAM,QAAQ,GAAG;AACb,aAAC;AAAE,aAAC;AAAE,aAAC;YAAE,IAAI;AAAE,aAAC;AAAE,aAAC;AACnB,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;YAAE,IAAI;AAAE,aAAC;AACnB,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;YAAE,IAAI;SACtB,AAAC;QAEF,MAAM,MAAM,GAAG;AACX,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,eAAG;AAAE,aAAC;AAClB,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,eAAG;AAAE,aAAC;AAAE,aAAC;AAClB,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,aAAC;AAAE,eAAG;AAAE,aAAC;SACrB,AAAC;QAEF,MAAM,QAAQ,GAAG,IAAI,cAAc,EAAE,AAAC;QACtC,QAAQ,CAAC,YAAY,CAAE,UAAU,EAAE,IAAI,sBAAsB,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAE,CAAC;QAC/E,QAAQ,CAAC,YAAY,CAAE,OAAO,EAAE,IAAI,sBAAsB,CAAE,MAAM,EAAE,CAAC,CAAE,CAAE,CAAC;QAE1E,MAAM,QAAQ,GAAG,IAAI,iBAAiB,CAAE;YAAE,YAAY,EAAE,IAAI;YAAE,UAAU,EAAE,KAAK;SAAE,CAAE,AAAC;QAEpF,KAAK,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QAE5B,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;KAE5B;IAED,SAAS,CAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAG;QAE5C,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,AAAC;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,AAAC;QAEnD,KAAK,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;QACxB,KAAK,CAAC,OAAO,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;QAC1B,KAAK,CAAC,OAAO,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;QAE1B,KAAK,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;QACxB,KAAK,CAAC,OAAO,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;QAC1B,KAAK,CAAC,OAAO,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;QAE1B,KAAK,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC;QACxB,KAAK,CAAC,OAAO,CAAE,KAAK,EAAE,EAAE,CAAE,CAAC;QAC3B,KAAK,CAAC,OAAO,CAAE,KAAK,EAAE,EAAE,CAAE,CAAC;QAE3B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;QAElD,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,GAAG;QAEN,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;KAE3B;CAEJ;AAED,MAAM,SAAS;IAEX,aAAc;QAEV,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QAExB,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QAEzB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KAE3B;IAED,MAAM,CAAE,CAAC,EAAE,CAAC,EAAG;QAEX,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,MAAM,CAAE,CAAC,EAAE,CAAC,EAAG;QAEX,IAAI,CAAC,WAAW,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAEhC,OAAO,IAAI,CAAC;KAEf;IAED,gBAAgB,CAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAG;QAEnC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAExD,OAAO,IAAI,CAAC;KAEf;IAED,aAAa,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAG;QAEhD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAErE,OAAO,IAAI,CAAC;KAEf;IAED,UAAU,CAAE,GAAG,EAAG;QAEd,IAAI,CAAC,WAAW,CAAC,UAAU,CAAE,GAAG,CAAE,CAAC;QAEnC,OAAO,IAAI,CAAC;KAEf;IAED,QAAQ,CAAE,KAAK,EAAE,OAAO,EAAG;QAEvB,SAAS,eAAe,CAAE,UAAU,EAAG;YAEnC,MAAM,MAAM,GAAG,EAAE,AAAC;YAElB,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,IAAC,GAAG,CAAC,EAAE,IAAC,EAAG,CAAG;gBAElD,MAAM,OAAO,GAAG,UAAU,CAAE,IAAC,CAAE,AAAC;gBAEhC,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,AAAC;gBAC7B,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;gBAEjC,MAAM,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC;aAE3B;YAED,OAAO,MAAM,CAAC;SAEjB;QAED,SAAS,oBAAoB,CAAE,IAAI,EAAE,SAAS,EAAG;YAE7C,MAAM,OAAO,GAAG,SAAS,CAAC,MAAM,AAAC;YAEjC,qDAAqD;YACrD,4EAA4E;YAC5E,uDAAuD;YACvD,uEAAuE;YACvE,IAAI,MAAM,GAAG,KAAK,AAAC;YACnB,IAAM,IAAI,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,CAAC,EAAG,CAAG;gBAEtD,IAAI,SAAS,GAAG,SAAS,CAAE,CAAC,CAAE,AAAC;gBAC/B,IAAI,UAAU,GAAG,SAAS,CAAE,CAAC,CAAE,AAAC;gBAEhC,IAAI,MAAM,GAAG,UAAU,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,AAAC;gBACxC,IAAI,MAAM,GAAG,UAAU,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,AAAC;gBAExC,IAAK,IAAI,CAAC,GAAG,CAAE,MAAM,CAAE,GAAG,MAAM,CAAC,OAAO,EAAG;oBAEvC,eAAe;oBACf,IAAK,MAAM,GAAG,CAAC,EAAG;wBAEd,SAAS,GAAG,SAAS,CAAE,CAAC,CAAE,CAAC;wBAAC,MAAM,GAAG,CAAE,MAAM,CAAC;wBAC9C,UAAU,GAAG,SAAS,CAAE,CAAC,CAAE,CAAC;wBAAC,MAAM,GAAG,CAAE,MAAM,CAAC;qBAElD;oBAED,IAAK,AAAE,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,IAAQ,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,AAAE,EAAK,SAAS;oBAExE,IAAK,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,EAAG;wBAE1B,IAAK,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,EAAI,OAAO,IAAI,CAAC,CAAE,uBAAuB;oBACpE,oEAAoE;qBAEvE,MAAM;wBAEH,MAAM,QAAQ,GAAG,MAAM,GAAK,CAAA,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAA,GAAK,MAAM,GAAK,CAAA,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAA,AAAE,AAAC;wBACvF,IAAK,QAAQ,KAAK,CAAC,EAAM,OAAO,IAAI,CAAC,CAAE,uBAAuB;wBAC9D,IAAK,QAAQ,GAAG,CAAC,EAAO,SAAS;wBACjC,MAAM,GAAG,CAAE,MAAM,CAAC,CAAE,iCAAiC;qBAExD;iBAEJ,MAAM;oBAEH,wBAAwB;oBACxB,IAAK,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,EAAK,SAAS,CAAG,WAAW;oBACvD,gDAAgD;oBAChD,IAAK,AAAI,UAAU,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAQ,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,IACrD,AAAE,SAAS,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAQ,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,AAAE,AAAE,EAAI,OAAO,IAAI,CAAC,CAAC,2BAA2B;gBAC5G,YAAY;iBAEf;aAEJ;YAED,OAAO,MAAM,CAAC;SAEjB;QAED,MAAM,WAAW,GAAG,UAAU,CAAC,WAAW,AAAC;QAE3C,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAC;QAC/B,IAAK,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAG,OAAO,EAAE,CAAC;QAEvC,IAAK,OAAO,KAAK,IAAI,EAAG,OAAO,eAAe,CAAE,QAAQ,CAAE,CAAC;QAG3D,IAAI,KAAK,EAAE,QAAO,EAAE,SAAQ,AAAC;QAC7B,MAAM,OAAM,GAAG,EAAE,AAAC;QAElB,IAAK,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAG;YAEzB,QAAO,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC;YACxB,SAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;YACvB,SAAQ,CAAC,MAAM,GAAG,QAAO,CAAC,MAAM,CAAC;YACjC,OAAM,CAAC,IAAI,CAAE,SAAQ,CAAE,CAAC;YACxB,OAAO,OAAM,CAAC;SAEjB;QAED,IAAI,UAAU,GAAG,CAAE,WAAW,CAAE,QAAQ,CAAE,CAAC,CAAE,CAAC,SAAS,EAAE,CAAE,AAAC;QAC5D,UAAU,GAAG,KAAK,GAAG,CAAE,UAAU,GAAG,UAAU,CAAC;QAE/C,0CAA0C;QAE1C,MAAM,gBAAgB,GAAG,EAAE,AAAC;QAC5B,MAAM,SAAS,GAAG,EAAE,AAAC;QACrB,IAAI,aAAa,GAAG,EAAE,AAAC;QACvB,IAAI,OAAO,GAAG,CAAC,AAAC;QAChB,IAAI,SAAS,AAAC;QAEd,SAAS,CAAE,OAAO,CAAE,GAAG,SAAS,CAAC;QACjC,aAAa,CAAE,OAAO,CAAE,GAAG,EAAE,CAAC;QAE9B,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAC,GAAG,EAAC,EAAE,IAAC,EAAG,CAAG;YAEhD,QAAO,GAAG,QAAQ,CAAE,IAAC,CAAE,CAAC;YACxB,SAAS,GAAG,QAAO,CAAC,SAAS,EAAE,CAAC;YAChC,KAAK,GAAG,WAAW,CAAE,SAAS,CAAE,CAAC;YACjC,KAAK,GAAG,KAAK,GAAG,CAAE,KAAK,GAAG,KAAK,CAAC;YAEhC,IAAK,KAAK,EAAG;gBAET,IAAK,AAAE,CAAE,UAAU,IAAQ,SAAS,CAAE,OAAO,CAAE,AAAE,EAAG,OAAO,EAAG,CAAC;gBAE/D,SAAS,CAAE,OAAO,CAAE,GAAG;oBAAE,CAAC,EAAE,IAAI,KAAK,EAAE;oBAAE,CAAC,EAAE,SAAS;iBAAE,CAAC;gBACxD,SAAS,CAAE,OAAO,CAAE,CAAC,CAAC,CAAC,MAAM,GAAG,QAAO,CAAC,MAAM,CAAC;gBAE/C,IAAK,UAAU,EAAG,OAAO,EAAG,CAAC;gBAC7B,aAAa,CAAE,OAAO,CAAE,GAAG,EAAE,CAAC;YAE9B,uBAAuB;aAE1B,MAEG,aAAa,CAAE,OAAO,CAAE,CAAC,IAAI,CAAE;gBAAE,CAAC,EAAE,QAAO;gBAAE,CAAC,EAAE,SAAS,CAAE,CAAC,CAAE;aAAE,CAAE,CAAC;SAM1E;QAED,4DAA4D;QAC5D,IAAK,CAAE,SAAS,CAAE,CAAC,CAAE,EAAG,OAAO,eAAe,CAAE,QAAQ,CAAE,CAAC;QAG3D,IAAK,SAAS,CAAC,MAAM,GAAG,CAAC,EAAG;YAExB,IAAI,SAAS,GAAG,KAAK,AAAC;YACtB,IAAI,QAAQ,GAAG,CAAC,AAAC;YAEjB,IAAM,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,EAAG,CAE7D,gBAAgB,CAAE,IAAI,CAAE,GAAG,EAAE,CAAC;YAIlC,IAAM,IAAI,KAAI,GAAG,CAAC,EAAE,KAAI,GAAG,SAAS,CAAC,MAAM,EAAE,KAAI,GAAG,KAAI,EAAE,KAAI,EAAG,CAAG;gBAEhE,MAAM,GAAG,GAAG,aAAa,CAAE,KAAI,CAAE,AAAC;gBAElC,IAAM,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,MAAM,EAAE,IAAI,EAAG,CAAG;oBAE7C,MAAM,EAAE,GAAG,GAAG,CAAE,IAAI,CAAE,AAAC;oBACvB,IAAI,eAAe,GAAG,IAAI,AAAC;oBAE3B,IAAM,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,KAAK,EAAG,CAEnD,IAAK,oBAAoB,CAAE,EAAE,CAAC,CAAC,EAAE,SAAS,CAAE,KAAK,CAAE,CAAC,CAAC,CAAE,EAAG;wBAEtD,IAAK,KAAI,KAAK,KAAK,EAAG,QAAQ,EAAG,CAAC;wBAElC,IAAK,eAAe,EAAG;4BAEnB,eAAe,GAAG,KAAK,CAAC;4BACxB,gBAAgB,CAAE,KAAK,CAAE,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;yBAExC,MAEG,SAAS,GAAG,IAAI,CAAC;qBAIxB;oBAIL,IAAK,eAAe,EAEhB,gBAAgB,CAAE,KAAI,CAAE,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;iBAI3C;aAEJ;YAED,IAAK,QAAQ,GAAG,CAAC,IAAI,SAAS,KAAK,KAAK,EAEpC,aAAa,GAAG,gBAAgB,CAAC;SAIxC;QAED,IAAI,QAAQ,AAAC;QAEb,IAAM,IAAI,IAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,IAAC,GAAG,EAAE,EAAE,IAAC,EAAG,CAAG;YAEnD,SAAQ,GAAG,SAAS,CAAE,IAAC,CAAE,CAAC,CAAC,CAAC;YAC5B,OAAM,CAAC,IAAI,CAAE,SAAQ,CAAE,CAAC;YACxB,QAAQ,GAAG,aAAa,CAAE,IAAC,CAAE,CAAC;YAE9B,IAAM,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,CAE/C,SAAQ,CAAC,KAAK,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC;SAI9C;QAED,+BAA+B;QAE/B,OAAO,OAAM,CAAC;KAEjB;CAEJ;AAED,0FAA0F;AAE1F,MAAM,SAAS;IAEX,qBAAqB;IAErB,OAAO,WAAW,CAAE,GAAG,EAAG;QAEtB,IAAK,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,KAAK,EAAG,OAAO,CAAC,IAAI,CAAE,oDAAoD,CAAE,CAAC;QAEpG,GAAG,GAAG,KAAK,CAAE,GAAG,EAAE,MAAO,EAAE,KAAK,CAAE,CAAC;QAEnC,UAAU,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;QACtB,MAAM,CAAC,GAAG,WAAW,CAAE,CAAC,CAAE,AAAC;QAC3B,MAAM,CAAC,GAAG,AAAE,CAAC,IAAI,EAAE,GAAK,GAAK,AAAC;QAC9B,OAAO,UAAU,CAAE,CAAC,CAAE,GAAK,CAAA,AAAE,CAAA,CAAC,GAAG,OAAU,CAAA,IAAM,WAAW,CAAE,CAAC,CAAE,CAAA,AAAE,CAAC;KAEvE;IAED,qBAAqB;IAErB,OAAO,aAAa,CAAE,GAAG,EAAG;QAExB,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE,AAAC;QACpB,WAAW,CAAE,CAAC,CAAE,GAAG,cAAc,CAAE,YAAY,CAAE,CAAC,CAAE,GAAK,CAAA,GAAG,GAAG,IAAK,CAAA,AAAE,CAAE,GAAG,cAAc,CAAE,CAAC,CAAE,CAAC;QAC/F,OAAO,UAAU,CAAE,CAAC,CAAE,CAAC;KAE1B;CAEJ;AAED,6BAA6B;AAE7B,MAAM,OAAO,GAAG,IAAI,WAAW,CAAE,CAAC,CAAE,AAAC;AACrC,MAAM,UAAU,GAAG,IAAI,YAAY,CAAE,OAAO,CAAE,AAAC;AAC/C,MAAM,WAAW,GAAG,IAAI,WAAW,CAAE,OAAO,CAAE,AAAC;AAE/C,MAAM,UAAU,GAAG,IAAI,WAAW,CAAE,GAAG,CAAE,AAAC;AAC1C,MAAM,WAAW,GAAG,IAAI,WAAW,CAAE,GAAG,CAAE,AAAC;AAE3C,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,GAAG,EAAE,EAAG,EAAC,CAAG;IAE7B,MAAM,CAAC,GAAG,EAAC,GAAG,GAAG,AAAC;IAElB,4BAA4B;IAE5B,IAAK,CAAC,GAAG,GAAI,EAAG;QAEZ,UAAU,CAAE,EAAC,CAAE,GAAG,CAAM,CAAC;QACzB,UAAU,CAAE,EAAC,GAAG,GAAK,CAAE,GAAG,KAAM,CAAC;QACjC,WAAW,CAAE,EAAC,CAAE,GAAG,EAAE,CAAC;QACtB,WAAW,CAAE,EAAC,GAAG,GAAK,CAAE,GAAG,EAAE,CAAC;IAE9B,wBAAwB;KAE3B,MAAM,IAAK,CAAC,GAAG,GAAI,EAAG;QAEnB,UAAU,CAAE,EAAC,CAAE,GAAG,IAAM,IAAM,CAAE,CAAC,GAAG,EAAE,AAAE,CAAC;QACzC,UAAU,CAAE,EAAC,GAAG,GAAK,CAAE,GAAG,AAAE,IAAM,IAAM,CAAE,CAAC,GAAG,EAAE,GAAO,KAAM,CAAC;QAC9D,WAAW,CAAE,EAAC,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAC;QAC3B,WAAW,CAAE,EAAC,GAAG,GAAK,CAAE,GAAG,CAAE,CAAC,GAAG,CAAC,CAAC;IAEnC,gBAAgB;KAEnB,MAAM,IAAK,CAAC,IAAI,EAAE,EAAG;QAElB,UAAU,CAAE,EAAC,CAAE,GAAG,AAAE,CAAC,GAAG,EAAE,IAAM,EAAE,CAAC;QACnC,UAAU,CAAE,EAAC,GAAG,GAAK,CAAE,GAAG,AAAI,CAAC,GAAG,EAAE,IAAM,EAAE,GAAK,KAAM,CAAC;QACxD,WAAW,CAAE,EAAC,CAAE,GAAG,EAAE,CAAC;QACtB,WAAW,CAAE,EAAC,GAAG,GAAK,CAAE,GAAG,EAAE,CAAC;IAE9B,qCAAqC;KAExC,MAAM,IAAK,CAAC,GAAG,GAAG,EAAG;QAElB,UAAU,CAAE,EAAC,CAAE,GAAG,KAAM,CAAC;QACzB,UAAU,CAAE,EAAC,GAAG,GAAK,CAAE,GAAG,KAAM,CAAC;QACjC,WAAW,CAAE,EAAC,CAAE,GAAG,EAAE,CAAC;QACtB,WAAW,CAAE,EAAC,GAAG,GAAK,CAAE,GAAG,EAAE,CAAC;IAE9B,kCAAkC;KAErC,MAAM;QAEH,UAAU,CAAE,EAAC,CAAE,GAAG,KAAM,CAAC;QACzB,UAAU,CAAE,EAAC,GAAG,GAAK,CAAE,GAAG,KAAM,CAAC;QACjC,WAAW,CAAE,EAAC,CAAE,GAAG,EAAE,CAAC;QACtB,WAAW,CAAE,EAAC,GAAG,GAAK,CAAE,GAAG,EAAE,CAAC;KAEjC;CAEJ;AAED,6BAA6B;AAE7B,MAAM,cAAc,GAAG,IAAI,WAAW,CAAE,IAAI,CAAE,AAAC;AAC/C,MAAM,cAAc,GAAG,IAAI,WAAW,CAAE,EAAE,CAAE,AAAC;AAC7C,MAAM,YAAY,GAAG,IAAI,WAAW,CAAE,EAAE,CAAE,AAAC;AAE3C,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,IAAI,EAAE,EAAG,EAAC,CAAG;IAE9B,IAAI,CAAC,GAAG,EAAC,IAAI,EAAE,AAAC,EAAC,yBAAyB;IAC1C,IAAI,CAAC,GAAG,CAAC,AAAC,EAAC,gBAAgB;IAE3B,aAAa;IACb,MAAQ,AAAE,CAAA,CAAC,GAAG,OAAU,CAAA,KAAO,CAAC,CAAG;QAE/B,CAAC,KAAK,CAAC,CAAC;QACR,CAAC,IAAI,OAAU,CAAC,CAAC,qBAAqB;KAEzC;IAED,CAAC,IAAI,QAAY,CAAC,CAAC,sBAAsB;IACzC,CAAC,IAAI,SAAU,CAAC,CAAC,cAAc;IAE/B,cAAc,CAAE,EAAC,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC;CAE/B;AAED,IAAM,IAAI,EAAC,GAAG,IAAI,EAAE,EAAC,GAAG,IAAI,EAAE,EAAG,EAAC,CAE9B,cAAc,CAAE,EAAC,CAAE,GAAG,SAAU,GAAK,CAAA,AAAE,EAAC,GAAG,IAAI,IAAM,EAAE,CAAA,AAAE,CAAC;AAI9D,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,EAAE,EAAE,EAAG,EAAC,CAEzB,cAAc,CAAE,EAAC,CAAE,GAAG,EAAC,IAAI,EAAE,CAAC;AAIlC,cAAc,CAAE,EAAE,CAAE,GAAG,UAAU,CAAC;AAClC,cAAc,CAAE,EAAE,CAAE,GAAG,UAAU,CAAC;AAClC,IAAM,IAAI,EAAC,GAAG,EAAE,EAAE,EAAC,GAAG,EAAE,EAAE,EAAG,EAAC,CAE1B,cAAc,CAAE,EAAC,CAAE,GAAG,UAAU,GAAK,CAAA,AAAE,EAAC,GAAG,EAAE,IAAM,EAAE,CAAA,AAAE,CAAC;AAI5D,cAAc,CAAE,EAAE,CAAE,GAAG,UAAU,CAAC;AAElC,IAAM,IAAI,EAAC,GAAG,CAAC,EAAE,EAAC,GAAG,EAAE,EAAE,EAAG,EAAC,CAEzB,IAAK,EAAC,KAAK,EAAE,EAET,YAAY,CAAE,EAAC,CAAE,GAAG,IAAI,CAAC;AAMjC,MAAM,SAAS,GAAG,CAAC,AAAC;AACpB,MAAM,UAAU,GAAG,CAAC,AAAC;AACrB,MAAM,QAAQ,GAAG,CAAC,AAAC;AACnB,MAAM,UAAU,GAAG,CAAC,AAAC;AACrB,MAAM,YAAY,GAAG,CAAC,AAAC;AAEvB,SAAS,gBAAgB,CAAE,SAAS,EAAG;IAEnC,OAAO,CAAC,IAAI,CAAE,gEAAgE,CAAE,CAAC;IACjF,OAAO,SAAS,CAAC;CAEpB;AAED,SAAS,aAAa,CAAE,SAAS,GAAG,EAAE,EAAG;IAErC,OAAO,CAAC,IAAI,CAAE,6DAA6D,CAAE,CAAC;IAC9E,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC;IACjC,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;IAChC,SAAS,CAAC,KAAK,GAAG,WAAY;QAE1B,OAAO,SAAS,CAAC,KAAK,EAAE,CAAC;KAE5B,CAAC;IAEF,OAAO,SAAS,CAAC;CAEpB;AAED,MAAM,UAAU,SAAS,MAAM;IAE3B,YAAa,QAAQ,EAAE,QAAQ,CAAG;QAE9B,OAAO,CAAC,IAAI,CAAE,oDAAoD,CAAE,CAAC;QACrE,KAAK,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;KAE/B;CAEJ;AAED,MAAM,QAAQ,SAAS,MAAM;IAEzB,YAAa,QAAQ,CAAG;QAEpB,OAAO,CAAC,IAAI,CAAE,kDAAkD,CAAE,CAAC;QACnE,KAAK,CAAE,QAAQ,CAAE,CAAC;KAErB;CAEJ;AAED,MAAM,cAAc,SAAS,MAAM;IAE/B,YAAa,QAAQ,EAAE,QAAQ,CAAG;QAE9B,OAAO,CAAC,IAAI,CAAE,wDAAwD,CAAE,CAAC;QACzE,KAAK,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;KAE/B;CAEJ;AAED,MAAM,kBAAkB,SAAS,cAAc;IAE3C,YAAa,UAAU,CAAG;QAEtB,OAAO,CAAC,IAAI,CAAE,oEAAoE,CAAE,CAAC;QACrF,KAAK,CAAE,UAAU,CAAE,CAAC;KAEvB;CAEJ;AAED,MAAM,qBAAqB,SAAS,cAAc;IAE9C,YAAa,UAAU,CAAG;QAEtB,OAAO,CAAC,IAAI,CAAE,uEAAuE,CAAE,CAAC;QACxF,KAAK,CAAE,UAAU,CAAE,CAAC;KAEvB;CAEJ;AAED,MAAM,sBAAsB,SAAS,cAAc;IAE/C,YAAa,UAAU,CAAG;QAEtB,OAAO,CAAC,IAAI,CAAE,wEAAwE,CAAE,CAAC;QACzF,KAAK,CAAE,UAAU,CAAE,CAAC;KAEvB;CAEJ;AAED,MAAM,MAAM,SAAS,OAAO;IAExB,YAAa,CAAC,EAAE,CAAC,EAAE,CAAC,CAAG;QAEnB,OAAO,CAAC,IAAI,CAAE,2DAA2D,CAAE,CAAC;QAC5E,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;KAEpB;CAEJ;AAED,EAAE;AAEF,MAAM,sBAAsB,SAAS,eAAe;IAEhD,YAAa,KAAK,EAAE,QAAQ,CAAG;QAE3B,OAAO,CAAC,IAAI,CAAE,4HAA4H,CAAE,CAAC;QAC7I,KAAK,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAE,gBAAgB,CAAE,CAAC;KAErC;CAEJ;AAED,MAAM,aAAa,SAAS,mBAAmB;IAE3C,YAAa,KAAK,EAAE,QAAQ,CAAG;QAE3B,OAAO,CAAC,IAAI,CAAE,oFAAoF,CAAE,CAAC;QACrG,KAAK,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;KAE5B;CAEJ;AAED,MAAM,cAAc,SAAS,oBAAoB;IAE7C,YAAa,KAAK,EAAE,QAAQ,CAAG;QAE3B,OAAO,CAAC,IAAI,CAAE,sFAAsF,CAAE,CAAC;QACvG,KAAK,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;KAE5B;CAEJ;AAED,MAAM,qBAAqB,SAAS,2BAA2B;IAE3D,YAAa,KAAK,EAAE,QAAQ,CAAG;QAE3B,OAAO,CAAC,IAAI,CAAE,oGAAoG,CAAE,CAAC;QACrH,KAAK,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;KAE5B;CAEJ;AAED,MAAM,cAAc,SAAS,oBAAoB;IAE7C,YAAa,KAAK,EAAE,QAAQ,CAAG;QAE3B,OAAO,CAAC,IAAI,CAAE,sFAAsF,CAAE,CAAC;QACvG,KAAK,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;KAE5B;CAEJ;AAED,MAAM,eAAe,SAAS,qBAAqB;IAE/C,YAAa,KAAK,EAAE,QAAQ,CAAG;QAE3B,OAAO,CAAC,IAAI,CAAE,wFAAwF,CAAE,CAAC;QACzG,KAAK,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;KAE5B;CAEJ;AAED,MAAM,cAAc,SAAS,oBAAoB;IAE7C,YAAa,KAAK,EAAE,QAAQ,CAAG;QAE3B,OAAO,CAAC,IAAI,CAAE,sFAAsF,CAAE,CAAC;QACvG,KAAK,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;KAE5B;CAEJ;AAED,MAAM,eAAe,SAAS,qBAAqB;IAE/C,YAAa,KAAK,EAAE,QAAQ,CAAG;QAE3B,OAAO,CAAC,IAAI,CAAE,wFAAwF,CAAE,CAAC;QACzG,KAAK,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;KAE5B;CAEJ;AAED,MAAM,gBAAgB,SAAS,sBAAsB;IAEjD,YAAa,KAAK,EAAE,QAAQ,CAAG;QAE3B,OAAO,CAAC,IAAI,CAAE,0FAA0F,CAAE,CAAC;QAC3G,KAAK,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;KAE5B;CAEJ;AAED,MAAM,gBAAgB,SAAS,sBAAsB;IAEjD,YAAa,KAAK,EAAE,QAAQ,CAAG;QAE3B,OAAO,CAAC,IAAI,CAAE,0FAA0F,CAAE,CAAC;QAC3G,KAAK,CAAE,KAAK,EAAE,QAAQ,CAAE,CAAC;KAE5B;CAEJ;AAED,EAAE;AAEF,KAAK,CAAC,MAAM,GAAG,SAAW,SAAS,EAAE,QAAQ,EAAG;IAE5C,OAAO,CAAC,GAAG,CAAE,0CAA0C,CAAE,CAAC;IAE1D,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAE,KAAK,CAAC,SAAS,CAAE,CAAC;IACvD,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC;IAC5C,SAAS,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAExC,OAAO,SAAS,CAAC;CAEpB,CAAC;AAEF,EAAE;AAEF,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,SAAW,MAAM,EAAG;IAE5C,OAAO,CAAC,IAAI,CAAE,iEAAiE,CAAE,CAAC;IAClF,OAAO,IAAI,CAAC,aAAa,CAAE,MAAM,CAAE,CAAC;CAEvC,CAAC;AAEF,EAAE;AAEF,MAAM,UAAU,SAAS,UAAU;IAE/B,YAAa,IAAI,CAAG;QAEhB,OAAO,CAAC,IAAI,CAAE,wDAAwD,CAAE,CAAC;QACzE,KAAK,CAAE,IAAI,CAAE,CAAC;KAEjB;CAEJ;AAED,MAAM,iBAAiB,SAAS,SAAS;IAErC,YAAa,MAAM,EAAE,KAAK,CAAG;QAEzB,OAAO,CAAC,IAAI,CAAE,kFAAkF,CAAE,CAAC;QACnG,KAAK,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;KAE1B;CAEJ;AAED,MAAM,WAAW,SAAS,YAAY;IAElC,YAAa,MAAM,EAAE,GAAG,CAAG;QAEvB,OAAO,CAAC,IAAI,CAAE,sEAAsE,CAAE,CAAC;QACvF,KAAK,CAAE,IAAI,aAAa,CAAE,MAAM,CAAC,QAAQ,CAAE,EAAE,IAAI,iBAAiB,CAAE;YAAE,KAAK,EAAE,GAAG,KAAK,SAAS,GAAG,GAAG,GAAG,QAAQ;SAAE,CAAE,CAAE,CAAC;KAEzH;CAEJ;AAED,UAAU,CAAC,SAAS,CAAC,SAAS,GAAG,WAAY;IAEzC,OAAO,CAAC,KAAK,CAAE,0FAA0F,CAAE,CAAC;CAE/G,CAAC;AAEF,cAAc,CAAC,SAAS,CAAC,MAAM,GAAG,WAAY;IAE1C,OAAO,CAAC,KAAK,CAAE,8DAA8D,CAAE,CAAC;CAEnF,CAAC;AAEF,MAAM,eAAe,SAAS,YAAY;IAEtC,YAAa,MAAM,EAAE,GAAG,CAAG;QAEvB,OAAO,CAAC,IAAI,CAAE,8EAA8E,CAAE,CAAC;QAC/F,KAAK,CAAE,IAAI,iBAAiB,CAAE,MAAM,CAAC,QAAQ,CAAE,EAAE,IAAI,iBAAiB,CAAE;YAAE,KAAK,EAAE,GAAG,KAAK,SAAS,GAAG,GAAG,GAAG,QAAQ;SAAE,CAAE,CAAE,CAAC;KAE7H;CAEJ;AAED,EAAE;AAEF,MAAM,CAAC,SAAS,CAAC,cAAc,GAAG,SAAW,GAAG,EAAG;IAE/C,OAAO,CAAC,IAAI,CAAE,sGAAsG,CAAE,CAAC;IACvH,OAAO,WAAW,CAAC,cAAc,CAAE,GAAG,CAAE,CAAC;CAE5C,CAAC;AAEF,MAAM,CAAC,QAAQ,GAAG;IAEd,GAAG,EAAE,WAAiC;QAElC,OAAO,CAAC,KAAK,CAAE,yFAAyF,CAAE,CAAC;KAE9G;IAED,GAAG,EAAE,WAAwB;QAEzB,OAAO,CAAC,KAAK,CAAE,yFAAyF,CAAE,CAAC;KAE9G;CAEJ,CAAC;AAEF,MAAM,SAAS,SAAS,UAAU;IAE9B,YAAa,OAAO,CAAG;QAEnB,OAAO,CAAC,IAAI,CAAE,uDAAuD,CAAE,CAAC;QACxE,KAAK,CAAE,OAAO,CAAE,CAAC;KAEpB;CAEJ;AAED,MAAM,mBAAmB,SAAS,iBAAiB;IAE/C,YAAa,OAAO,CAAG;QAEnB,OAAO,CAAC,IAAI,CAAE,wEAAwE,CAAE,CAAC;QACzF,KAAK,CAAE,OAAO,CAAE,CAAC;KAEpB;CAEJ;AAED,EAAE;AAEF,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,SAAW,cAAc,EAAG;IAEhD,OAAO,CAAC,IAAI,CAAE,yDAAyD,CAAE,CAAC;IAC1E,OAAO,IAAI,CAAC,SAAS,CAAE,cAAc,CAAE,CAAC;CAE3C,CAAC;AAEF,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,WAAY;IAE/B,OAAO,CAAC,IAAI,CAAE,sDAAsD,CAAE,CAAC;IACvE,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;CAEzB,CAAC;AAEF,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,SAAW,GAAG,EAAG;IAEhD,OAAO,CAAC,IAAI,CAAE,wEAAwE,CAAE,CAAC;IACzF,OAAO,IAAI,CAAC,aAAa,CAAE,GAAG,CAAE,CAAC;CAEpC,CAAC;AAEF,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAW,cAAc,EAAG;IAE9C,OAAO,CAAC,IAAI,CAAE,qDAAqD,CAAE,CAAC;IACtE,OAAO,IAAI,CAAC,OAAO,CAAE,cAAc,CAAE,CAAC;CAEzC,CAAC;AAEF,EAAE;AAEF,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,SAAW,cAAc,EAAG;IAEhD,OAAO,CAAC,IAAI,CAAE,yDAAyD,CAAE,CAAC;IAC1E,OAAO,IAAI,CAAC,SAAS,CAAE,cAAc,CAAE,CAAC;CAE3C,CAAC;AAEF,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,WAAY;IAE/B,OAAO,CAAC,IAAI,CAAE,sDAAsD,CAAE,CAAC;IACvE,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;CAEzB,CAAC;AAEF,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,SAAW,GAAG,EAAG;IAEhD,OAAO,CAAC,IAAI,CAAE,wEAAwE,CAAE,CAAC;IACzF,OAAO,IAAI,CAAC,aAAa,CAAE,GAAG,CAAE,CAAC;CAEpC,CAAC;AAEF,IAAI,CAAC,SAAS,CAAC,oBAAoB,GAAG,SAAW,MAAM,EAAG;IAEtD,OAAO,CAAC,IAAI,CAAE,8EAA8E,CAAE,CAAC;IAC/F,OAAO,IAAI,CAAC,gBAAgB,CAAE,MAAM,CAAE,CAAC;CAE1C,CAAC;AAEF,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAW,cAAc,EAAG;IAE9C,OAAO,CAAC,IAAI,CAAE,qDAAqD,CAAE,CAAC;IACtE,OAAO,IAAI,CAAC,OAAO,CAAE,cAAc,CAAE,CAAC;CAEzC,CAAC;AAEF,EAAE;AAEF,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,WAAY;IAEpC,OAAO,CAAC,KAAK,CAAE,gFAAgF,CAAE,CAAC;CAErG,CAAC;AAGF,EAAE;AAEF,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,WAAY;IAEjC,OAAO,CAAC,IAAI,CAAE,wDAAwD,CAAE,CAAC;IACzE,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;CAEzB,CAAC;AAEF,EAAE;AAEF,OAAO,CAAC,SAAS,CAAC,aAAa,GAAG,SAAW,CAAC,EAAG;IAE7C,OAAO,CAAC,IAAI,CAAE,iFAAiF,CAAE,CAAC;IAClG,OAAO,IAAI,CAAC,uBAAuB,CAAE,CAAC,CAAE,CAAC;CAE5C,CAAC;AAEF,EAAE;AAEF,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,SAAW,cAAc,EAAG;IAEjD,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;IAC3E,OAAO,IAAI,CAAC,SAAS,CAAE,cAAc,CAAE,CAAC;CAE3C,CAAC;AAEF,EAAE;AAEF,OAAO,CAAC,SAAS,CAAC,oBAAoB,GAAG,SAAW,KAAK,EAAE,MAAM,EAAG;IAEhE,OAAO,CAAC,IAAI,CAAE,qFAAqF,CAAE,CAAC;IACtG,OAAO,IAAI,CAAC,OAAO,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;CAExC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,SAAW,MAAM,EAAG;IAEpD,OAAO,CAAC,IAAI,CAAE,gGAAgG,CAAE,CAAC;IACjH,OAAO,MAAM,CAAC,YAAY,CAAE,IAAI,CAAE,CAAC;CAEtC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,oBAAoB,GAAG,WAAqB;IAE1D,OAAO,CAAC,KAAK,CAAE,0DAA0D,CAAE,CAAC;CAE/E,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,sBAAsB,GAAG,SAAW,SAAS,EAAG;IAE9D,OAAO,CAAC,IAAI,CAAE,0GAA0G,CAAE,CAAC;IAC3H,OAAO,SAAS,CAAC,YAAY,CAAE,IAAI,CAAE,CAAC;CAEzC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,mBAAmB,GAAG,WAAyC;IAE7E,OAAO,CAAC,KAAK,CAAE,yDAAyD,CAAE,CAAC;CAE9E,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,UAAU,GAAG,SAAW,MAAM,EAAG;IAE/C,OAAO,CAAC,IAAI,CAAE,gGAAgG,CAAE,CAAC;IACjH,OAAO,IAAI,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC,MAAM,EAAE,CAAC;CAEvC,CAAC;AAEF,EAAE;AAEF,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,SAAW,CAAC,EAAG;IAE/C,OAAO,CAAC,IAAI,CAAE,wEAAwE,CAAE,CAAC;IACzF,OAAO,IAAI,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC;CAEjC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,oBAAoB,GAAG,SAAW,KAAK,EAAE,MAAM,EAAG;IAEhE,OAAO,CAAC,IAAI,CAAE,qFAAqF,CAAE,CAAC;IACtG,OAAO,IAAI,CAAC,OAAO,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;CAExC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,WAAW,GAAG,WAAY;IAExC,OAAO,CAAC,IAAI,CAAE,sGAAsG,CAAE,CAAC;IACvH,OAAO,IAAI,OAAO,EAAE,CAAC,mBAAmB,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC;CAEvD,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,yBAAyB,GAAG,SAAW,CAAC,EAAG;IAEzD,OAAO,CAAC,IAAI,CAAE,gGAAgG,CAAE,CAAC;IACjH,OAAO,IAAI,CAAC,0BAA0B,CAAE,CAAC,CAAE,CAAC;CAE/C,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,WAAY;IAE5C,OAAO,CAAC,IAAI,CAAE,qDAAqD,CAAE,CAAC;CAEzE,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,SAAW,MAAM,EAAG;IAEpD,OAAO,CAAC,IAAI,CAAE,gGAAgG,CAAE,CAAC;IACjH,OAAO,MAAM,CAAC,YAAY,CAAE,IAAI,CAAE,CAAC;CAEtC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,SAAW,MAAM,EAAG;IAEpD,OAAO,CAAC,IAAI,CAAE,gGAAgG,CAAE,CAAC;IACjH,OAAO,MAAM,CAAC,YAAY,CAAE,IAAI,CAAE,CAAC;CAEtC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,oBAAoB,GAAG,WAAqB;IAE1D,OAAO,CAAC,KAAK,CAAE,0DAA0D,CAAE,CAAC;CAE/E,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,UAAU,GAAG,SAAW,CAAC,EAAG;IAE1C,OAAO,CAAC,IAAI,CAAE,kGAAkG,CAAE,CAAC;IACnH,CAAC,CAAC,kBAAkB,CAAE,IAAI,CAAE,CAAC;CAEhC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,WAAW,GAAG,SAAW,MAAM,EAAG;IAEhD,OAAO,CAAC,IAAI,CAAE,4FAA4F,CAAE,CAAC;IAC7G,OAAO,MAAM,CAAC,YAAY,CAAE,IAAI,CAAE,CAAC;CAEtC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,WAAY;IAEtC,OAAO,CAAC,KAAK,CAAE,+CAA+C,CAAE,CAAC;CAEpE,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,WAAY;IAEpC,OAAO,CAAC,KAAK,CAAE,6CAA6C,CAAE,CAAC;CAElE,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,WAAY;IAEpC,OAAO,CAAC,KAAK,CAAE,6CAA6C,CAAE,CAAC;CAElE,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,WAAY;IAEpC,OAAO,CAAC,KAAK,CAAE,6CAA6C,CAAE,CAAC;CAElE,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,YAAY,GAAG,WAAY;IAEzC,OAAO,CAAC,KAAK,CAAE,kDAAkD,CAAE,CAAC;CAEvE,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,sBAAsB,GAAG,SAAW,SAAS,EAAG;IAE9D,OAAO,CAAC,IAAI,CAAE,0GAA0G,CAAE,CAAC;IAC3H,OAAO,SAAS,CAAC,YAAY,CAAE,IAAI,CAAE,CAAC;CAEzC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,mBAAmB,GAAG,WAAyC;IAE7E,OAAO,CAAC,KAAK,CAAE,yDAAyD,CAAE,CAAC;CAE9E,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,WAAW,GAAG,SAAW,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAG;IAE7E,OAAO,CAAC,IAAI,CAAE,sHAAsH,CAAE,CAAC;IACvI,OAAO,IAAI,CAAC,eAAe,CAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAE,CAAC;CAEtE,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,UAAU,GAAG,SAAW,MAAM,EAAG;IAE/C,OAAO,CAAC,IAAI,CAAE,gGAAgG,CAAE,CAAC;IACjH,OAAO,IAAI,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC,MAAM,EAAE,CAAC;CAEvC,CAAC;AAEF,EAAE;AAEF,KAAK,CAAC,SAAS,CAAC,kBAAkB,GAAG,SAAW,IAAI,EAAG;IAEnD,OAAO,CAAC,IAAI,CAAE,2EAA2E,CAAE,CAAC;IAC5F,OAAO,IAAI,CAAC,cAAc,CAAE,IAAI,CAAE,CAAC;CAEtC,CAAC;AAEF,EAAE;AAEF,UAAU,CAAC,SAAS,CAAC,eAAe,GAAG,SAAW,MAAM,EAAG;IAEvD,OAAO,CAAC,IAAI,CAAE,iHAAiH,CAAE,CAAC;IAClI,OAAO,MAAM,CAAC,eAAe,CAAE,IAAI,CAAE,CAAC;CAEzC,CAAC;AAEF,UAAU,CAAC,SAAS,CAAC,OAAO,GAAG,WAAa;IAExC,OAAO,CAAC,IAAI,CAAE,4DAA4D,CAAE,CAAC;IAC7E,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;CAExB,CAAC;AAEF,EAAE;AAEF,GAAG,CAAC,SAAS,CAAC,iBAAiB,GAAG,SAAW,GAAG,EAAG;IAE/C,OAAO,CAAC,IAAI,CAAE,uEAAuE,CAAE,CAAC;IACxF,OAAO,IAAI,CAAC,aAAa,CAAE,GAAG,CAAE,CAAC;CAEpC,CAAC;AAEF,GAAG,CAAC,SAAS,CAAC,mBAAmB,GAAG,SAAW,KAAK,EAAG;IAEnD,OAAO,CAAC,IAAI,CAAE,2EAA2E,CAAE,CAAC;IAC5F,OAAO,IAAI,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC;CAExC,CAAC;AAEF,GAAG,CAAC,SAAS,CAAC,oBAAoB,GAAG,SAAW,MAAM,EAAG;IAErD,OAAO,CAAC,IAAI,CAAE,6EAA6E,CAAE,CAAC;IAC9F,OAAO,IAAI,CAAC,gBAAgB,CAAE,MAAM,CAAE,CAAC;CAE1C,CAAC;AAEF,EAAE;AAEF,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,WAAY;IAElC,OAAO,CAAC,IAAI,CAAE,yDAAyD,CAAE,CAAC;IAC1E,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;CAEzB,CAAC;AAEF,QAAQ,CAAC,SAAS,CAAC,kBAAkB,GAAG,SAAW,KAAK,EAAE,MAAM,EAAG;IAE/D,OAAO,CAAC,IAAI,CAAE,4EAA4E,CAAE,CAAC;IAC7F,OAAO,IAAI,CAAC,YAAY,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;CAE7C,CAAC;AAEF,QAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAW,MAAM,EAAG;IAE9C,OAAO,CAAC,IAAI,CAAE,iEAAiE,CAAE,CAAC;IAClF,OAAO,IAAI,CAAC,WAAW,CAAE,MAAM,CAAE,CAAC;CAErC,CAAC;AAEF,QAAQ,CAAC,eAAe,GAAG,SAAW,MAAM,EAAG;IAE3C,OAAO,CAAC,IAAI,CAAE,6DAA6D,CAAE,CAAC;IAC9E,OAAO,IAAI,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC;CAEnC,CAAC;AAEF,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,SAAW,MAAM,EAAG;IAE3C,OAAO,CAAC,IAAI,CAAE,2DAA2D,CAAE,CAAC;IAC5E,OAAO,IAAI,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;CAElC,CAAC;AAEF,QAAQ,CAAC,kBAAkB,GAAG,SAAW,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAG;IAE9D,OAAO,CAAC,IAAI,CAAE,4EAA4E,CAAE,CAAC;IAC7F,OAAO,QAAQ,CAAC,YAAY,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;CAE1D,CAAC;AAEF,QAAQ,CAAC,MAAM,GAAG,SAAW,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAG;IAE3C,OAAO,CAAC,IAAI,CAAE,6DAA6D,CAAE,CAAC;IAC9E,OAAO,QAAQ,CAAC,SAAS,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;CAEhD,CAAC;AAEF,EAAE;AAEF,KAAK,CAAC,SAAS,CAAC,gBAAgB,GAAG,SAAW,SAAS,EAAG;IAEtD,OAAO,CAAC,IAAI,CAAE,kFAAkF,CAAE,CAAC;IACnG,OAAO,IAAI,CAAC,aAAa,CAAE,SAAS,CAAE,CAAC;CAE1C,CAAC;AAEF,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,SAAW,OAAO,EAAG;IAE3C,OAAO,CAAC,IAAI,CAAE,0EAA0E,CAAE,CAAC;IAC3F,OAAO,IAAI,eAAe,CAAE,IAAI,EAAE,OAAO,CAAE,CAAC;CAE/C,CAAC;AAEF,KAAK,CAAC,SAAS,CAAC,YAAY,GAAG,SAAW,OAAO,EAAG;IAEhD,OAAO,CAAC,IAAI,CAAE,6EAA6E,CAAE,CAAC;IAC9F,OAAO,IAAI,aAAa,CAAE,IAAI,EAAE,OAAO,CAAE,CAAC;CAE7C,CAAC;AAEF,EAAE;AAEF,OAAO,CAAC,SAAS,CAAC,aAAa,GAAG,SAAW,SAAS,EAAE,KAAK,EAAE,MAAM,EAAG;IAEpE,OAAO,CAAC,IAAI,CAAE,6EAA6E,CAAE,CAAC;IAC9F,OAAO,IAAI,CAAC,mBAAmB,CAAE,SAAS,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;CAE/D,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,mBAAmB,GAAG,SAAW,CAAC,EAAG;IAEnD,OAAO,CAAC,IAAI,CAAE,mFAAmF,CAAE,CAAC;IACpG,OAAO,IAAI,CAAC,mBAAmB,CAAE,CAAC,CAAE,CAAC;CAExC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,WAAY;IAE5C,OAAO,CAAC,IAAI,CAAE,2EAA2E,CAAE,CAAC;IAC5F,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;CAEjC,CAAC;AAEF,EAAE;AAEF,OAAO,CAAC,SAAS,CAAC,0BAA0B,GAAG,WAAY;IAEvD,OAAO,CAAC,KAAK,CAAE,2GAA2G,CAAE,CAAC;CAEhI,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,sBAAsB,GAAG,WAAY;IAEnD,OAAO,CAAC,KAAK,CAAE,mGAAmG,CAAE,CAAC;CAExH,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,qBAAqB,GAAG,SAAW,CAAC,EAAG;IAErD,OAAO,CAAC,IAAI,CAAE,uFAAuF,CAAE,CAAC;IACxG,OAAO,IAAI,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;CAE1C,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,kBAAkB,GAAG,SAAW,CAAC,EAAG;IAElD,OAAO,CAAC,IAAI,CAAE,iFAAiF,CAAE,CAAC;IAClG,OAAO,IAAI,CAAC,kBAAkB,CAAE,CAAC,CAAE,CAAC;CAEvC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,mBAAmB,GAAG,SAAW,KAAK,EAAE,MAAM,EAAG;IAE/D,OAAO,CAAC,IAAI,CAAE,mFAAmF,CAAE,CAAC;IACpG,OAAO,IAAI,CAAC,mBAAmB,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;CAEpD,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,SAAW,CAAC,EAAG;IAE/C,OAAO,CAAC,IAAI,CAAE,qFAAqF,CAAE,CAAC;IACtG,OAAO,IAAI,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC;CAEjC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,aAAa,GAAG,SAAW,SAAS,EAAE,KAAK,EAAE,MAAM,EAAG;IAEpE,OAAO,CAAC,IAAI,CAAE,6EAA6E,CAAE,CAAC;IAC9F,OAAO,IAAI,CAAC,mBAAmB,CAAE,SAAS,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;CAE/D,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,mBAAmB,GAAG,SAAW,CAAC,EAAG;IAEnD,OAAO,CAAC,IAAI,CAAE,mFAAmF,CAAE,CAAC;IACpG,OAAO,IAAI,CAAC,mBAAmB,CAAE,CAAC,CAAE,CAAC;CAExC,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,WAAY;IAE5C,OAAO,CAAC,IAAI,CAAE,2EAA2E,CAAE,CAAC;IAC5F,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;CAEjC,CAAC;AAEF,EAAE;AAEF,OAAO,CAAC,SAAS,CAAC,aAAa,GAAG,SAAW,SAAS,EAAE,KAAK,EAAE,MAAM,EAAG;IAEpE,OAAO,CAAC,IAAI,CAAE,6EAA6E,CAAE,CAAC;IAC9F,OAAO,IAAI,CAAC,mBAAmB,CAAE,SAAS,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;CAE/D,CAAC;AAEF,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,WAAY;IAE5C,OAAO,CAAC,IAAI,CAAE,2EAA2E,CAAE,CAAC;IAC5F,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;CAEjC,CAAC;AAEF,EAAE;AAEF,QAAQ,CAAC,SAAS,CAAC,cAAc,GAAG,SAAW,IAAI,EAAG;IAElD,OAAO,CAAC,IAAI,CAAE,2EAA2E,CAAE,CAAC;IAC5F,OAAO,IAAI,CAAC,eAAe,CAAE,IAAI,CAAE,CAAC;CAEvC,CAAC;AAEF,QAAQ,CAAC,SAAS,CAAC,WAAW,GAAG,WAAY;IAEzC,OAAO,CAAC,IAAI,CAAE,2EAA2E,CAAE,CAAC;CAE/F,CAAC;AAEF,QAAQ,CAAC,SAAS,CAAC,SAAS,GAAG,SAAW,QAAQ,EAAE,IAAI,EAAG;IAEvD,OAAO,CAAC,IAAI,CAAE,gGAAgG,CAAE,CAAC;IACjH,OAAO,IAAI,CAAC,eAAe,CAAE,IAAI,EAAE,QAAQ,CAAE,CAAC;CAEjD,CAAC;AAEF,QAAQ,CAAC,SAAS,CAAC,gBAAgB,GAAG,WAAY;IAE9C,OAAO,CAAC,KAAK,CAAE,gHAAgH,CAAE,CAAC;CAErI,CAAC;AAEF,QAAQ,CAAC,SAAS,CAAC,WAAW,GAAG,SAAW,MAAM,EAAG;IAEjD,OAAO,CAAC,IAAI,CAAE,qEAAqE,CAAE,CAAC;IACtF,OAAO,IAAI,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC;CAEtC,CAAC;AAEF,MAAM,CAAC,gBAAgB,CAAE,QAAQ,CAAC,SAAS,EAAE;IAEzC,UAAU,EAAE;QACR,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,qDAAqD,CAAE,CAAC;YACtE,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;SAE9B;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,qDAAqD,CAAE,CAAC;YACtE,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;SAE/B;KACJ;IACD,aAAa,EAAE;QACX,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,+FAA+F,CAAE,CAAC;SAEnH;QACD,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,+FAA+F,CAAE,CAAC;SAEnH;KACJ;CAEJ,CAAE,CAAC;AAEJ,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,WAAY;IAErC,OAAO,CAAC,KAAK,CAAE,2LAA2L,CAAE,CAAC;CAEhN,CAAC;AAEF,MAAM,CAAC,gBAAgB,CAAE,IAAI,CAAC,SAAS,EAAE;IAErC,QAAQ,EAAE;QACN,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,KAAK,CAAE,kGAAkG,CAAE,CAAC;YACpH,OAAO,iBAAiB,CAAC;SAE5B;QACD,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,KAAK,CAAE,sLAAsL,CAAE,CAAC;SAE3M;KACJ;CAEJ,CAAE,CAAC;AAEJ,WAAW,CAAC,SAAS,CAAC,SAAS,GAAG,WAAY;IAE1C,OAAO,CAAC,KAAK,CAAE,kDAAkD,CAAE,CAAC;CAEvE,CAAC;AAEF,EAAE;AAEF,iBAAiB,CAAC,SAAS,CAAC,OAAO,GAAG,SAAW,WAAW,EAAE,SAAS,EAAG;IAEtE,OAAO,CAAC,IAAI,CAAE,6GACwD,CAAE,CAAC;IAEzE,IAAK,SAAS,KAAK,SAAS,EAAG,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC1D,IAAI,CAAC,cAAc,CAAE,WAAW,CAAE,CAAC;CAEtC,CAAC;AAEF,EAAE;AAEF,MAAM,CAAC,gBAAgB,CAAE,KAAK,CAAC,SAAS,EAAE;IACtC,UAAU,EAAE;QACR,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,4CAA4C,CAAE,CAAC;SAEhE;KACJ;IACD,eAAe,EAAE;QACb,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;YAC3E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC;SAElC;KACJ;IACD,gBAAgB,EAAE;QACd,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,4DAA4D,CAAE,CAAC;YAC7E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC;SAEnC;KACJ;IACD,iBAAiB,EAAE;QACf,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,8DAA8D,CAAE,CAAC;YAC/E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;SAEpC;KACJ;IACD,eAAe,EAAE;QACb,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;YAC3E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC;SAElC;KACJ;IACD,kBAAkB,EAAE;QAChB,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,gEAAgE,CAAE,CAAC;YACjF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;SAErC;KACJ;IACD,gBAAgB,EAAE;QACd,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,4DAA4D,CAAE,CAAC;YAC7E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC;SAEnC;KACJ;IACD,eAAe,EAAE;QACb,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;YAC3E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC;SAElC;KACJ;IACD,mBAAmB,EAAE;QACjB,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,gHAAgH,CAAE,CAAC;SAEpI;KACJ;IACD,UAAU,EAAE;QACR,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,+CAA+C,CAAE,CAAC;YAChE,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC;SAE5B;KACJ;IACD,cAAc,EAAE;QACZ,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,gDAAgD,CAAE,CAAC;SAEpE;KACJ;IACD,cAAc,EAAE;QACZ,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,4DAA4D,CAAE,CAAC;YAC7E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;SAErC;KACJ;IACD,eAAe,EAAE;QACb,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,8DAA8D,CAAE,CAAC;YAC/E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;SAEtC;KACJ;CACJ,CAAE,CAAC;AAEJ,EAAE;AAEF,MAAM,CAAC,gBAAgB,CAAE,eAAe,CAAC,SAAS,EAAE;IAEhD,MAAM,EAAE;QACJ,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,yEAAyE,CAAE,CAAC;YAC1F,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SAE5B;KACJ;IACD,OAAO,EAAE;QACL,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,0EAA0E,CAAE,CAAC;YAC3F,OAAO,IAAI,CAAC,KAAK,KAAK,gBAAgB,CAAC;SAE1C;QACD,GAAG,EAAE,WAAyB;YAE1B,OAAO,CAAC,IAAI,CAAE,0EAA0E,CAAE,CAAC;YAC3F,IAAI,CAAC,QAAQ,CAAE,gBAAgB,CAAE,CAAC;SAErC;KACJ;CAEJ,CAAE,CAAC;AAEJ,eAAe,CAAC,SAAS,CAAC,UAAU,GAAG,SAAW,KAAK,EAAG;IAEtD,OAAO,CAAC,IAAI,CAAE,oFAAoF,CAAE,CAAC;IACrG,IAAI,CAAC,QAAQ,CAAE,KAAK,KAAK,IAAI,GAAG,gBAAgB,GAAG,eAAe,CAAE,CAAC;IACrE,OAAO,IAAI,CAAC;CAEf,CAAC;AAEF,eAAe,CAAC,SAAS,CAAC,gBAAgB,GAAG,WAA2B;IAEpE,OAAO,CAAC,KAAK,CAAE,8DAA8D,CAAE,CAAC;CAEnF,EAED,eAAe,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAyB;IAE1D,OAAO,CAAC,KAAK,CAAE,yHAAyH,CAAE,CAAC;CAE9I,CAAC;AAEF,EAAE;AAEF,cAAc,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAW,KAAK,EAAG;IAEnD,OAAO,CAAC,IAAI,CAAE,oEAAoE,CAAE,CAAC;IACrF,IAAI,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;CAE1B,CAAC;AAEF,cAAc,CAAC,SAAS,CAAC,YAAY,GAAG,SAAW,IAAI,EAAE,SAAS,EAAG;IAEjE,OAAO,CAAC,IAAI,CAAE,4EAA4E,CAAE,CAAC;IAE7F,IAAK,CAAI,CAAA,SAAS,IAAI,SAAS,CAAC,iBAAiB,CAAA,AAAE,IAAI,CAAI,CAAA,SAAS,IAAI,SAAS,CAAC,4BAA4B,CAAA,AAAE,EAAG;QAE/G,OAAO,CAAC,IAAI,CAAE,wEAAwE,CAAE,CAAC;QAEzF,OAAO,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,IAAI,eAAe,CAAE,SAAS,CAAE,CAAC,CAAE,EAAE,SAAS,CAAE,CAAC,CAAE,CAAE,CAAE,CAAC;KAE3F;IAED,IAAK,IAAI,KAAK,OAAO,EAAG;QAEpB,OAAO,CAAC,IAAI,CAAE,yEAAyE,CAAE,CAAC;QAC1F,IAAI,CAAC,QAAQ,CAAE,SAAS,CAAE,CAAC;QAE3B,OAAO,IAAI,CAAC;KAEf;IAED,OAAO,IAAI,CAAC,YAAY,CAAE,IAAI,EAAE,SAAS,CAAE,CAAC;CAE/C,CAAC;AAEF,cAAc,CAAC,SAAS,CAAC,WAAW,GAAG,SAAW,KAAK,EAAE,KAAK,EAAE,WAAW,EAAG;IAE1E,IAAK,WAAW,KAAK,SAAS,EAE1B,OAAO,CAAC,IAAI,CAAE,sEAAsE,CAAE,CAAC;IAI3F,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;IAC3E,IAAI,CAAC,QAAQ,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC;CAEjC,CAAC;AAEF,cAAc,CAAC,SAAS,CAAC,cAAc,GAAG,WAAY;IAElD,OAAO,CAAC,IAAI,CAAE,gEAAgE,CAAE,CAAC;IACjF,IAAI,CAAC,WAAW,EAAE,CAAC;CAEtB,CAAC;AAEF,cAAc,CAAC,SAAS,CAAC,cAAc,GAAG,WAAY;IAElD,OAAO,CAAC,IAAI,CAAE,2DAA2D,CAAE,CAAC;CAE/E,CAAC;AAEF,cAAc,CAAC,SAAS,CAAC,eAAe,GAAG,SAAW,IAAI,EAAG;IAEzD,OAAO,CAAC,IAAI,CAAE,kFAAkF,CAAE,CAAC;IAEnG,OAAO,IAAI,CAAC,eAAe,CAAE,IAAI,CAAE,CAAC;CAEvC,CAAC;AAEF,cAAc,CAAC,SAAS,CAAC,WAAW,GAAG,SAAW,MAAM,EAAG;IAEvD,OAAO,CAAC,IAAI,CAAE,2EAA2E,CAAE,CAAC;IAC5F,OAAO,IAAI,CAAC,YAAY,CAAE,MAAM,CAAE,CAAC;CAEtC,CAAC;AAEF,MAAM,CAAC,gBAAgB,CAAE,cAAc,CAAC,SAAS,EAAE;IAE/C,SAAS,EAAE;QACP,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,KAAK,CAAE,+DAA+D,CAAE,CAAC;YACjF,OAAO,IAAI,CAAC,MAAM,CAAC;SAEtB;KACJ;IACD,OAAO,EAAE;QACL,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,6DAA6D,CAAE,CAAC;YAC9E,OAAO,IAAI,CAAC,MAAM,CAAC;SAEtB;KACJ;CAEJ,CAAE,CAAC;AAEJ,iBAAiB,CAAC,SAAS,CAAC,UAAU,GAAG,SAAW,KAAK,EAAG;IAExD,OAAO,CAAC,IAAI,CAAE,sFAAsF,CAAE,CAAC;IACvG,IAAI,CAAC,QAAQ,CAAE,KAAK,KAAK,IAAI,GAAG,gBAAgB,GAAG,eAAe,CAAE,CAAC;IACrE,OAAO,IAAI,CAAC;CAEf,CAAC;AAEF,iBAAiB,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAyB;IAE5D,OAAO,CAAC,KAAK,CAAE,2HAA2H,CAAE,CAAC;CAEhJ,CAAC;AAEF,EAAE;AAEF,eAAe,CAAC,SAAS,CAAC,SAAS,GAAG,WAAY;IAE9C,OAAO,CAAC,KAAK,CAAE,uDAAuD,CAAE,CAAC;CAE5E,CAAC;AAEF,eAAe,CAAC,SAAS,CAAC,YAAY,GAAG,WAAY;IAEjD,OAAO,CAAC,KAAK,CAAE,0DAA0D,CAAE,CAAC;CAE/E,CAAC;AAEF,eAAe,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAY;IAE7C,OAAO,CAAC,KAAK,CAAE,sDAAsD,CAAE,CAAC;CAE3E,CAAC;AAEF,EAAE;AAEF,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,WAAY;IAElC,OAAO,CAAC,KAAK,CAAE,2CAA2C,CAAE,CAAC;CAEhE,CAAC;AAEF,EAAE;AAEF,OAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAY;IAErC,OAAO,CAAC,IAAI,CAAE,mFAAmF,CAAE,CAAC;IACpG,OAAO,IAAI,CAAC;CAEf,CAAC;AAEF,EAAE;AAEF,MAAM,CAAC,gBAAgB,CAAE,QAAQ,CAAC,SAAS,EAAE;IAEzC,UAAU,EAAE;QACR,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,+CAA+C,CAAE,CAAC;SAEnE;QACD,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,+CAA+C,CAAE,CAAC;SAEnE;KACJ;IAED,QAAQ,EAAE;QACN,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,6CAA6C,CAAE,CAAC;SAEjE;QACD,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,6CAA6C,CAAE,CAAC;SAEjE;KACJ;IAED,OAAO,EAAE;QACL,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,4CAA4C,CAAE,CAAC;YAC7D,OAAO,IAAI,KAAK,EAAE,CAAC;SAEtB;KACJ;IAED,OAAO,EAAE;QACL,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,KAAK,CAAE,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,oEAAoE,CAAE,CAAC;SAEhH;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,oEAAoE,CAAE,CAAC;YAC5G,IAAI,CAAC,WAAW,GAAK,KAAK,KAAK,WAAW,AAAE,CAAC;SAEhD;KACJ;IAED,WAAW,EAAE;QACT,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,gEAAgE,CAAE,CAAC;YACxG,OAAO,IAAI,CAAC,eAAe,CAAC;SAE/B;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,gEAAgE,CAAE,CAAC;YACxG,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAEhC;KACJ;IAED,cAAc,EAAE;QACZ,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,qCAAqC,CAAE,CAAC;SAEhF;QACD,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,qCAAqC,CAAE,CAAC;SAEhF;KACJ;CAEJ,CAAE,CAAC;AAEJ,MAAM,CAAC,gBAAgB,CAAE,cAAc,CAAC,SAAS,EAAE;IAE/C,WAAW,EAAE;QACT,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,+EAA+E,CAAE,CAAC;YAChG,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;SAEtC;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,gFAAgF,CAAE,CAAC;YACjG,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC;SAEvC;KACJ;CAEJ,CAAE,CAAC;AAEJ,EAAE;AAEF,aAAa,CAAC,SAAS,CAAC,WAAW,GAAG,SAAW,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAG;IAEnF,OAAO,CAAC,IAAI,CAAE,uGAAuG,CAAE,CAAC;IACxH,IAAI,CAAC,eAAe,CAAE,YAAY,CAAE,CAAC;IACrC,IAAI,CAAC,KAAK,CAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAE,CAAC;CAEvC,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,OAAO,GAAG,SAAW,QAAQ,EAAG;IAEpD,OAAO,CAAC,IAAI,CAAE,6DAA6D,CAAE,CAAC;IAC9E,IAAI,CAAC,gBAAgB,CAAE,QAAQ,CAAE,CAAC;CAErC,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,sBAAsB,GAAG,WAAY;IAEzD,OAAO,CAAC,IAAI,CAAE,2EAA2E,CAAE,CAAC;IAC5F,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;CAEjC,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,gBAAgB,GAAG,WAAY;IAEnD,OAAO,CAAC,IAAI,CAAE,mFAAmF,CAAE,CAAC;IACpG,OAAO,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;CAE/C,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,YAAY,GAAG,WAAY;IAE/C,OAAO,CAAC,IAAI,CAAE,sEAAsE,CAAE,CAAC;IACvF,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;CAEtC,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,YAAY,GAAG,WAAY;IAE/C,OAAO,CAAC,IAAI,CAAE,6DAA6D,CAAE,CAAC;IAC9E,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;CAE7B,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,qBAAqB,GAAG,WAAY;IAExD,OAAO,CAAC,IAAI,CAAE,gGAAgG,CAAE,CAAC;IACjH,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,mBAAmB,CAAE,CAAC;CAErD,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,yBAAyB,GAAG,WAAY;IAE5D,OAAO,CAAC,IAAI,CAAE,yGAAyG,CAAE,CAAC;IAC1H,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,wBAAwB,CAAE,CAAC;CAE1D,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,2BAA2B,GAAG,WAAY;IAE9D,OAAO,CAAC,IAAI,CAAE,6GAA6G,CAAE,CAAC;IAC9H,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,0BAA0B,CAAE,CAAC;CAE5D,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,6BAA6B,GAAG,WAAY;IAEhE,OAAO,CAAC,IAAI,CAAE,oHAAoH,CAAE,CAAC;IACrI,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,+BAA+B,CAAE,CAAC;CAEjE,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,8BAA8B,GAAG,WAAY;IAEjE,OAAO,CAAC,IAAI,CAAE,sHAAsH,CAAE,CAAC;IACvI,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,gCAAgC,CAAE,CAAC;CAElE,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,mBAAmB,GAAG,WAAY;IAEtD,OAAO,CAAC,IAAI,CAAE,6FAA6F,CAAE,CAAC;IAC9G,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,kBAAkB,CAAE,CAAC;CAEpD,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,sBAAsB,GAAG,WAAY;IAEzD,OAAO,CAAC,IAAI,CAAE,qFAAqF,CAAE,CAAC;IACtG,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC;CAE3C,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,uBAAuB,GAAG,WAAY;IAE1D,OAAO,CAAC,IAAI,CAAE,uGAAuG,CAAE,CAAC;IACxH,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,wBAAwB,CAAE,CAAC;CAE1D,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,iBAAiB,GAAG,SAAW,OAAO,EAAG;IAE7D,OAAO,CAAC,IAAI,CAAE,qEAAqE,CAAE,CAAC;IACtF,IAAI,CAAC,cAAc,CAAE,OAAO,CAAE,CAAC;CAElC,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,YAAY,GAAG,WAAY;IAE/C,OAAO,CAAC,IAAI,CAAE,wDAAwD,CAAE,CAAC;CAE5E,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,YAAY,GAAG,WAAY;IAE/C,OAAO,CAAC,IAAI,CAAE,wDAAwD,CAAE,CAAC;CAE5E,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,aAAa,GAAG,WAAY;IAEhD,OAAO,CAAC,IAAI,CAAE,yDAAyD,CAAE,CAAC;CAE7E,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,eAAe,GAAG,WAAY;IAElD,OAAO,CAAC,IAAI,CAAE,2DAA2D,CAAE,CAAC;CAE/E,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,cAAc,GAAG,WAAY;IAEjD,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;CAE9E,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,gBAAgB,GAAG,WAAY;IAEnD,OAAO,CAAC,IAAI,CAAE,4DAA4D,CAAE,CAAC;CAEhF,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,UAAU,GAAG,WAAY;IAE7C,OAAO,CAAC,IAAI,CAAE,sDAAsD,CAAE,CAAC;CAE1E,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,YAAY,GAAG,WAAY;IAE/C,OAAO,CAAC,IAAI,CAAE,wDAAwD,CAAE,CAAC;CAE5E,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,cAAc,GAAG,WAAY;IAEjD,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;CAE9E,CAAC;AAEF,aAAa,CAAC,SAAS,CAAC,oBAAoB,GAAG,WAAY;IAEvD,OAAO,CAAC,IAAI,CAAE,8EAA8E,CAAE,CAAC;IAC/F,OAAO,IAAI,CAAC,oBAAoB,EAAE,CAAC;CAEtC,CAAC;AAEF,MAAM,CAAC,gBAAgB,CAAE,aAAa,CAAC,SAAS,EAAE;IAE9C,gBAAgB,EAAE;QACd,GAAG,EAAE,WAAY;YAEb,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;SAEjC;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,mEAAmE,CAAE,CAAC;YACpF,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;SAElC;KACJ;IACD,aAAa,EAAE;QACX,GAAG,EAAE,WAAY;YAEb,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAE9B;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,6DAA6D,CAAE,CAAC;YAC9E,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC;SAE/B;KACJ;IACD,iBAAiB,EAAE;QACf,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,4FAA4F,CAAE,CAAC;YAC7G,OAAO,SAAS,CAAC;SAEpB;QACD,GAAG,EAAE,WAAyB;YAE1B,OAAO,CAAC,IAAI,CAAE,4FAA4F,CAAE,CAAC;SAEhH;KACJ;IACD,OAAO,EAAE;QACL,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,4EAA4E,CAAE,CAAC;YAC7F,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;SAE5B;KACJ;IACD,EAAE,EAAE;QACA,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,kDAAkD,CAAE,CAAC;YACnE,OAAO,IAAI,CAAC,EAAE,CAAC;SAElB;KACJ;IACD,UAAU,EAAE;QACR,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,gHAAgH,CAAE,CAAC;YACjI,OAAO,KAAK,CAAC;SAEhB;QACD,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,gHAAgH,CAAE,CAAC;SAEpI;KACJ;IACD,WAAW,EAAE;QACT,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,+FAA+F,CAAE,CAAC;YAChH,OAAO,KAAK,CAAC;SAEhB;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,+FAA+F,CAAE,CAAC;YAChH,IAAI,CAAC,cAAc,GAAG,AAAE,KAAK,KAAK,IAAI,GAAK,YAAY,GAAG,cAAc,CAAC;SAE5E;KACJ;IACD,qBAAqB,EAAE;QACnB,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,+DAA+D,CAAE,CAAC;YAChF,OAAO,CAAG,CAAC;SAEd;QACD,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,+DAA+D,CAAE,CAAC;SAEnF;KACJ;IACD,WAAW,EAAE;QACT,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,qDAAqD,CAAE,CAAC;YACtE,OAAO,CAAC,CAAC;SAEZ;QACD,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,qDAAqD,CAAE,CAAC;SAEzE;KACJ;CACJ,CAAE,CAAC;AAEJ,MAAM,CAAC,gBAAgB,CAAE,cAAc,CAAC,SAAS,EAAE;IAE/C,QAAQ,EAAE;QACN,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,6FAA6F,CAAE,CAAC;YAC9G,OAAO,SAAS,CAAC;SAEpB;QACD,GAAG,EAAE,WAA4B;YAE7B,OAAO,CAAC,IAAI,CAAE,6FAA6F,CAAE,CAAC;SAEjH;KACJ;IACD,kBAAkB,EAAE;QAChB,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,uGAAuG,CAAE,CAAC;YACxH,OAAO,SAAS,CAAC;SAEpB;QACD,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,uGAAuG,CAAE,CAAC;SAE3H;KACJ;IACD,iBAAiB,EAAE;QACf,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,sGAAsG,CAAE,CAAC;YACvH,OAAO,SAAS,CAAC;SAEpB;QACD,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,sGAAsG,CAAE,CAAC;SAE1H;KACJ;CAEJ,CAAE,CAAC;AAEJ,MAAM,qBAAqB,SAAS,qBAAqB;IAErD,YAAa,KAAK,EAAE,MAAM,EAAE,OAAO,CAAG;QAElC,OAAO,CAAC,IAAI,CAAE,sGAAsG,CAAE,CAAC;QACvH,KAAK,CAAE,KAAK,EAAE,OAAO,CAAE,CAAC;KAE3B;CAEJ;AAED,EAAE;AAEF,MAAM,CAAC,gBAAgB,CAAE,iBAAiB,CAAC,SAAS,EAAE;IAElD,KAAK,EAAE;QACH,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,wDAAwD,CAAE,CAAC;YACzE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;SAE7B;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,wDAAwD,CAAE,CAAC;YACzE,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;SAE9B;KACJ;IACD,KAAK,EAAE;QACH,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,wDAAwD,CAAE,CAAC;YACzE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;SAE7B;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,wDAAwD,CAAE,CAAC;YACzE,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;SAE9B;KACJ;IACD,SAAS,EAAE;QACP,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,gEAAgE,CAAE,CAAC;YACjF,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;SAEjC;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,gEAAgE,CAAE,CAAC;YACjF,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;SAElC;KACJ;IACD,SAAS,EAAE;QACP,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,gEAAgE,CAAE,CAAC;YACjF,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;SAEjC;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,gEAAgE,CAAE,CAAC;YACjF,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;SAElC;KACJ;IACD,UAAU,EAAE;QACR,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,kEAAkE,CAAE,CAAC;YACnF,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;SAElC;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,kEAAkE,CAAE,CAAC;YACnF,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,KAAK,CAAC;SAEnC;KACJ;IACD,MAAM,EAAE;QACJ,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;YAC3E,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SAE9B;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;YAC3E,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;SAE/B;KACJ;IACD,MAAM,EAAE;QACJ,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;YAC3E,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SAE9B;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;YAC3E,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;SAE/B;KACJ;IACD,MAAM,EAAE;QACJ,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;YAC3E,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SAE9B;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;YAC3E,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;SAE/B;KACJ;IACD,IAAI,EAAE;QACF,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,sDAAsD,CAAE,CAAC;YACvE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;SAE5B;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,sDAAsD,CAAE,CAAC;YACvE,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;SAE7B;KACJ;IACD,eAAe,EAAE;QACb,GAAG,EAAE,WAAY;YAEb,OAAO,CAAC,IAAI,CAAE,4EAA4E,CAAE,CAAC;YAC7F,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;SAEvC;QACD,GAAG,EAAE,SAAW,KAAK,EAAG;YAEpB,OAAO,CAAC,IAAI,CAAE,4EAA4E,CAAE,CAAC;YAC7F,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;SAExC;KACJ;CAEJ,CAAE,CAAC;AAEJ,EAAE;AAEF,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,SAAW,IAAI,EAAG;IAErC,OAAO,CAAC,IAAI,CAAE,wEAAwE,CAAE,CAAC;IACzF,MAAM,KAAK,GAAG,IAAI,AAAC;IACnB,MAAM,WAAW,GAAG,IAAI,WAAW,EAAE,AAAC;IACtC,WAAW,CAAC,IAAI,CAAE,IAAI,EAAE,SAAW,MAAM,EAAG;QAExC,KAAK,CAAC,SAAS,CAAE,MAAM,CAAE,CAAC;KAE7B,CAAE,CAAC;IACJ,OAAO,IAAI,CAAC;CAEf,CAAC;AAGF,aAAa,CAAC,SAAS,CAAC,OAAO,GAAG,WAAY;IAE1C,OAAO,CAAC,IAAI,CAAE,6DAA6D,CAAE,CAAC;IAC9E,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;CAElC,CAAC;AAEF,EAAE;AAEF,UAAU,CAAC,SAAS,CAAC,aAAa,GAAG,SAAW,QAAQ,EAAE,KAAK,EAAG;IAE9D,OAAO,CAAC,IAAI,CAAE,sDAAsD,CAAE,CAAC;IACvE,OAAO,IAAI,CAAC,MAAM,CAAE,QAAQ,EAAE,KAAK,CAAE,CAAC;CAEzC,CAAC;AAEF,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,SAAW,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAG;IAEtE,OAAO,CAAC,IAAI,CAAE,0DAA0D,CAAE,CAAC;IAC3E,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAE,CAAC;CAErE,CAAC;AAEF,UAAU,CAAC,WAAW,GAAG,SAAS,CAAC;AAEnC,UAAU,CAAC,WAAW,GAAG,SAAW,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAG;IAEhE,OAAO,CAAC,IAAI,CAAE,sFAAsF,CAAE,CAAC;IAEvG,MAAM,MAAM,GAAG,IAAI,aAAa,EAAE,AAAC;IACnC,MAAM,CAAC,cAAc,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAE1C,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAE,AAAC;IAE/D,IAAK,OAAO,EAAG,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;IAEzC,OAAO,OAAO,CAAC;CAElB,CAAC;AAEF,UAAU,CAAC,eAAe,GAAG,SAAW,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAG;IAErE,OAAO,CAAC,IAAI,CAAE,8FAA8F,CAAE,CAAC;IAE/G,MAAM,MAAM,GAAG,IAAI,iBAAiB,EAAE,AAAC;IACvC,MAAM,CAAC,cAAc,CAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAE1C,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAE,AAAC;IAEhE,IAAK,OAAO,EAAG,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;IAEzC,OAAO,OAAO,CAAC;CAElB,CAAC;AAEF,UAAU,CAAC,qBAAqB,GAAG,WAAY;IAE3C,OAAO,CAAC,KAAK,CAAE,uFAAuF,CAAE,CAAC;CAE5G,CAAC;AAEF,UAAU,CAAC,yBAAyB,GAAG,WAAY;IAE/C,OAAO,CAAC,KAAK,CAAE,2FAA2F,CAAE,CAAC;CAEhH,CAAC;AAEF,EAAE;AAEF,SAAS,cAAc,GAAG;IAEtB,OAAO,CAAC,KAAK,CAAE,uCAAuC,CAAE,CAAC;CAE5D;AAED,EAAE;AAEF,SAAS,UAAU,GAAG;IAElB,OAAO,CAAC,KAAK,CAAE,oCAAoC,CAAE,CAAC;CAEzD;AAED,EAAE;AAEF,MAAM,UAAU,GAAG;IAEf,yBAAyB,EAAE,WAAuC;QAE9D,OAAO,CAAC,KAAK,CAAE,sEAAsE,CAAE,CAAC;KAE3F;IAED,MAAM,EAAE,WAAwC;QAE5C,OAAO,CAAC,KAAK,CAAE,sEAAsE,CAAE,CAAC;KAE3F;IAED,MAAM,EAAE,WAAwC;QAE5C,OAAO,CAAC,KAAK,CAAE,sEAAsE,CAAE,CAAC;KAE3F;CAEJ,AAAC;AAEF,EAAE;AAEF,SAAS,SAAS,GAAG;IAEjB,OAAO,CAAC,KAAK,CAAE,sEAAsE,CAAE,CAAC;CAE3F;AAED,EAAE;AAEF,MAAM,kBAAkB,SAAS,cAAc;IAE3C,aAAc;QAEV,OAAO,CAAC,KAAK,CAAE,2FAA2F,CAAE,CAAC;QAC7G,KAAK,EAAE,CAAC;KAEX;CAEJ;AAED,MAAM,YAAY,SAAS,cAAc;IAErC,aAAc;QAEV,OAAO,CAAC,KAAK,CAAE,+EAA+E,CAAE,CAAC;QACjG,KAAK,EAAE,CAAC;KAEX;CAEJ;AAED,SAAS,UAAU,GAAG;IAElB,OAAO,CAAC,KAAK,CAAE,wEAAwE,CAAE,CAAC;CAE7F;AAED,SAAS,IAAI,GAAG;IAEZ,OAAO,CAAC,KAAK,CAAE,kEAAkE,CAAE,CAAC;CAEvF;AAED,SAAS,qBAAqB,GAAG;IAE7B,OAAO,CAAC,KAAK,CAAE,+CAA+C,CAAE,CAAC;CAEpE;AAED,MAAM,4BAA4B,SAAS,iBAAiB;IAExD,YAAa,KAAK,EAAE,MAAM,EAAE,OAAO,CAAG;QAElC,OAAO,CAAC,KAAK,CAAE,sJAAsJ,CAAE,CAAC;QACxK,KAAK,CAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAE,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;KAEpB;CAEJ;AAED,MAAM,kBAAkB,SAAS,gBAAgB;IAE7C,YAAa,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAG;QAEtC,OAAO,CAAC,IAAI,CAAE,gEAAgE,CAAE,CAAC;QACjF,KAAK,CAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAE,CAAC;KAEvC;CAEJ;AAED,MAAM,aAAa,SAAS,aAAa;IAErC,YAAa,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAG;QAEtC,OAAO,CAAC,IAAI,CAAE,wDAAwD,CAAE,CAAC;QACzE,KAAK,CAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAE,CAAC;KAEvC;CAEJ;AAED,IAAK,OAAO,kBAAkB,KAAK,WAAW,EAE1C,kBAAkB,CAAC,aAAa,CAAE,IAAI,WAAW,CAAE,UAAU,EAAE;IAAE,MAAM,EAAE;QACrE,QAAQ,EAAE,QAAQ;KACrB;CAAE,CAAE,CAAE,CAAC;AAIZ,IAAK,OAAO,MAAM,KAAK,WAAW;IAE9B,IAAK,MAAM,CAAC,SAAS,EAEjB,OAAO,CAAC,IAAI,CAAE,yDAAyD,CAAE,CAAC;SAI1E,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC;CAInC;;;ACt7iDF;;AA0kCA,mDAAS,aAAa;CAAgB;AAAtC,iDAAwB,WAAW;CAAG;AA1kCtC,iDAQ2B;AAE3B,2EAA2E;AAC3E,uFAAuF;AACvF,EAAE;AACF,iDAAiD;AACjD,6EAA6E;AAC7E,mGAAmG;AAEnG,MAAM,YAAY,GAAG;IAAE,IAAI,EAAE,QAAQ;CAAE,AAAC;AACxC,MAAM,WAAW,GAAG;IAAE,IAAI,EAAE,OAAO;CAAE,AAAC;AACtC,MAAM,SAAS,GAAG;IAAE,IAAI,EAAE,KAAK;CAAE,AAAC;AAElC,MAAM,aAAa,SAAS,8BAAe;IACvC,YAAY,MAAM,EAAE,WAAU,CAAE;QAC5B,KAAK,EAAE,CAAC;QAER,IAAI,WAAU,KAAK,SAAS,EACxB,OAAO,CAAC,IAAI,CACR,0EAA0E,CAC7E,CAAC;QACN,IAAI,WAAU,KAAK,QAAQ,EACvB,OAAO,CAAC,KAAK,CACT,0HAA0H,CAC7H,CAAC;QAEN,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,WAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,uBAAuB;QAEnE,uCAAuC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,sEAAsE;QACtE,IAAI,CAAC,MAAM,GAAG,IAAI,sBAAO,EAAE,CAAC;QAE5B,8DAA8D;QAC9D,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAE5B,8DAA8D;QAC9D,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QAExB,4DAA4D;QAC5D,iCAAiC;QACjC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,UAAU;QAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU;QAExC,8DAA8D;QAC9D,0GAA0G;QAC1G,IAAI,CAAC,eAAe,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU;QAC5C,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC,UAAU;QAE3C,0CAA0C;QAC1C,gFAAgF;QAChF,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,gGAAgG;QAChG,kCAAkC;QAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,CAAG,CAAC;QAErB,mCAAmC;QACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,CAAG,CAAC;QAEvB,kCAAkC;QAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,CAAG,CAAC;QACpB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,CAAC,8DAA8D;QAC9F,IAAI,CAAC,WAAW,GAAG,CAAG,CAAC,CAAC,kCAAkC;QAE1D,wDAAwD;QACxD,oFAAoF;QACpF,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,CAAG,CAAC,CAAC,sCAAsC;QAElE,sBAAsB;QACtB,IAAI,CAAC,IAAI,GAAG;YACR,IAAI,EAAE,WAAW;YACjB,EAAE,EAAE,SAAS;YACb,KAAK,EAAE,YAAY;YACnB,MAAM,EAAE,WAAW;SACtB,CAAC;QAEF,gBAAgB;QAChB,IAAI,CAAC,YAAY,GAAG;YAChB,IAAI,EAAE,oBAAK,CAAC,MAAM;YAClB,MAAM,EAAE,oBAAK,CAAC,KAAK;YACnB,KAAK,EAAE,oBAAK,CAAC,GAAG;SACnB,CAAC;QAEF,gBAAgB;QAChB,IAAI,CAAC,OAAO,GAAG;YAAE,GAAG,EAAE,oBAAK,CAAC,MAAM;YAAE,GAAG,EAAE,oBAAK,CAAC,SAAS;SAAE,CAAC;QAE3D,YAAY;QACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QAC9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAE9B,wCAAwC;QACxC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QAEjC,EAAE;QACF,iBAAiB;QACjB,EAAE;QAEF,IAAI,CAAC,aAAa,GAAG,WAAY;YAC7B,OAAO,SAAS,CAAC,GAAG,CAAC;SACxB,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG,WAAY;YACjC,OAAO,SAAS,CAAC,KAAK,CAAC;SAC1B,CAAC;QAEF,IAAI,CAAC,WAAW,GAAG,WAAY;YAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACvD,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG,SAAU,UAAU,EAAE;YAC3C,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;YAClD,IAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC;SAC1C,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,WAAY;YACzB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACjC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC5C,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;SACnC,CAAC;QAEF,IAAI,CAAC,KAAK,GAAG,WAAY;YACrB,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACjC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC5C,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;YAEhC,KAAK,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;YACtC,KAAK,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;YAElC,KAAK,CAAC,MAAM,EAAE,CAAC;YAEf,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;SACtB,CAAC;QAEF,sFAAsF;QACtF,IAAI,CAAC,MAAM,GAAG,AAAC,WAAY;YACvB,MAAM,MAAM,GAAG,IAAI,sBAAO,EAAE,AAAC;YAE7B,iCAAiC;YACjC,MAAM,IAAI,GAAG,IAAI,yBAAU,EAAE,CAAC,kBAAkB,CAC5C,MAAM,CAAC,EAAE,EACT,IAAI,sBAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACvB,AAAC;YACF,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,AAAC;YAE1C,MAAM,YAAY,GAAG,IAAI,sBAAO,EAAE,AAAC;YACnC,MAAM,cAAc,GAAG,IAAI,yBAAU,EAAE,AAAC;YAExC,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,AAAC;YAE1B,OAAO,SAAS,MAAM,GAAG;gBACrB,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,AAAC;gBAEvC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAExC,wCAAwC;gBACxC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAE7B,kCAAkC;gBAClC,SAAS,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gBAEjC,IAAI,KAAK,CAAC,UAAU,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,EACxC,UAAU,CAAC,oBAAoB,EAAE,CAAC,CAAC;gBAGvC,IAAI,KAAK,CAAC,aAAa,EAAE;oBACrB,SAAS,CAAC,KAAK,IACX,cAAc,CAAC,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC;oBAC/C,SAAS,CAAC,GAAG,IAAI,cAAc,CAAC,GAAG,GAAG,KAAK,CAAC,aAAa,CAAC;iBAC7D,MAAM;oBACH,SAAS,CAAC,KAAK,IAAI,cAAc,CAAC,KAAK,CAAC;oBACxC,SAAS,CAAC,GAAG,IAAI,cAAc,CAAC,GAAG,CAAC;iBACvC;gBAED,8CAA8C;gBAE9C,IAAI,GAAG,GAAG,KAAK,CAAC,eAAe,AAAC;gBAChC,IAAI,GAAG,GAAG,KAAK,CAAC,eAAe,AAAC;gBAEhC,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;oBAChC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,KAAK,CAAC;yBAC5B,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,KAAK,CAAC;oBAErC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,KAAK,CAAC;yBAC5B,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,KAAK,CAAC;oBAErC,IAAI,GAAG,IAAI,GAAG,EACV,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CACtB,GAAG,EACH,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,KAAK,CAAC,CACjC,CAAC;yBAEF,SAAS,CAAC,KAAK,GACX,SAAS,CAAC,KAAK,GAAG,AAAC,CAAA,GAAG,GAAG,GAAG,CAAA,GAAI,CAAC,GAC3B,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,KAAK,CAAC,GAC9B,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;iBAEhD;gBAED,4CAA4C;gBAC5C,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CACpB,KAAK,CAAC,aAAa,EACnB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa,EAAE,SAAS,CAAC,GAAG,CAAC,CAC/C,CAAC;gBAEF,SAAS,CAAC,QAAQ,EAAE,CAAC;gBAErB,SAAS,CAAC,MAAM,IAAI,KAAK,CAAC;gBAE1B,+CAA+C;gBAC/C,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CACvB,KAAK,CAAC,WAAW,EACjB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,SAAS,CAAC,MAAM,CAAC,CAChD,CAAC;gBAEF,iCAAiC;gBAEjC,IAAI,KAAK,CAAC,aAAa,KAAK,IAAI,EAC5B,KAAK,CAAC,MAAM,CAAC,eAAe,CACxB,SAAS,EACT,KAAK,CAAC,aAAa,CACtB,CAAC;qBAEF,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBAGhC,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBAEnC,uDAAuD;gBACvD,MAAM,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;gBAEpC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAExC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAElC,IAAI,KAAK,CAAC,aAAa,KAAK,IAAI,EAAE;oBAC9B,cAAc,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC;oBAChD,cAAc,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC;oBAE9C,SAAS,CAAC,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;iBACrD,MAAM;oBACH,cAAc,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAE5B,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC1B;gBAED,KAAK,GAAG,CAAC,CAAC;gBAEV,uBAAuB;gBACvB,+DAA+D;gBAC/D,yDAAyD;gBAEzD,IACI,WAAW,IACX,YAAY,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,GACjD,GAAG,IACP,CAAC,GAAI,CAAA,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA,GAAI,GAAG,EAC7D;oBACE,KAAK,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;oBAElC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACzC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBAC7C,WAAW,GAAG,KAAK,CAAC;oBAEpB,OAAO,IAAI,CAAC;iBACf;gBAED,OAAO,KAAK,CAAC;aAChB,CAAC;SACL,EAAG,CAAC;QAEL,IAAI,CAAC,OAAO,GAAG,WAAY;YACvB,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAEnE,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YACnE,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAChC,eAAe,EACf,eAAe,CAClB,CAAC;YACF,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;YAE5D,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YACnE,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;YAE/D,IAAI,KAAK,CAAC,oBAAoB,KAAK,IAAI,EACnC,KAAK,CAAC,oBAAoB,CAAC,mBAAmB,CAC1C,SAAS,EACT,SAAS,CACZ,CAAC;QAGN,2EAA2E;SAC9E,CAAC;QAEF,EAAE;QACF,YAAY;QACZ,EAAE;QAEF,MAAM,KAAK,GAAG,IAAI,AAAC;QAEnB,MAAM,KAAK,GAAG;YACV,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,CAAC;YACR,GAAG,EAAE,CAAC;YACN,YAAY,EAAE,CAAC;YACf,SAAS,EAAE,CAAC;YACZ,eAAe,EAAE,CAAC;YAClB,kBAAkB,EAAE,CAAC;SACxB,AAAC;QAEF,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,AAAC;QAEvB,MAAM,GAAG,GAAG,QAAQ,AAAC;QAErB,4CAA4C;QAC5C,MAAM,SAAS,GAAG,IAAI,wBAAS,EAAE,AAAC;QAClC,MAAM,cAAc,GAAG,IAAI,wBAAS,EAAE,AAAC;QAEvC,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,MAAM,SAAS,GAAG,IAAI,sBAAO,EAAE,AAAC;QAChC,IAAI,WAAW,GAAG,KAAK,AAAC;QAExB,MAAM,WAAW,GAAG,IAAI,sBAAO,EAAE,AAAC;QAClC,MAAM,SAAS,GAAG,IAAI,sBAAO,EAAE,AAAC;QAChC,MAAM,WAAW,GAAG,IAAI,sBAAO,EAAE,AAAC;QAElC,MAAM,QAAQ,GAAG,IAAI,sBAAO,EAAE,AAAC;QAC/B,MAAM,MAAM,GAAG,IAAI,sBAAO,EAAE,AAAC;QAC7B,MAAM,QAAQ,GAAG,IAAI,sBAAO,EAAE,AAAC;QAE/B,MAAM,UAAU,GAAG,IAAI,sBAAO,EAAE,AAAC;QACjC,MAAM,QAAQ,GAAG,IAAI,sBAAO,EAAE,AAAC;QAC/B,MAAM,UAAU,GAAG,IAAI,sBAAO,EAAE,AAAC;QAEjC,MAAM,QAAQ,GAAG,EAAE,AAAC;QACpB,MAAM,gBAAgB,GAAG,EAAE,AAAC;QAE5B,SAAS,oBAAoB,GAAG;YAC5B,OAAO,AAAE,CAAC,GAAG,IAAI,CAAC,EAAE,GAAI,EAAE,GAAG,EAAE,GAAI,KAAK,CAAC,eAAe,CAAC;SAC5D;QAED,SAAS,YAAY,GAAG;YACpB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;SAC1C;QAED,SAAS,UAAU,CAAC,KAAK,EAAE;YACvB,cAAc,CAAC,KAAK,IAAI,KAAK,CAAC;SACjC;QAED,SAAS,QAAQ,CAAC,KAAK,EAAE;YACrB,cAAc,CAAC,GAAG,IAAI,KAAK,CAAC;SAC/B;QAED,MAAM,OAAO,GAAG,AAAC,WAAY;YACzB,MAAM,CAAC,GAAG,IAAI,sBAAO,EAAE,AAAC;YAExB,OAAO,SAAS,OAAO,CAAC,QAAQ,EAAE,YAAY,EAAE;gBAC5C,CAAC,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,+BAA+B;gBACvE,CAAC,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAE5B,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACpB,CAAC;SACL,EAAG,AAAC;QAEL,MAAM,KAAK,GAAG,AAAC,WAAY;YACvB,MAAM,CAAC,GAAG,IAAI,sBAAO,EAAE,AAAC;YAExB,OAAO,SAAS,KAAK,CAAC,QAAQ,EAAE,YAAY,EAAE;gBAC1C,IAAI,KAAK,CAAC,kBAAkB,KAAK,IAAI,EACjC,CAAC,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;qBACpC;oBACH,CAAC,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;oBACvC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACtC;gBAED,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBAE3B,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACpB,CAAC;SACL,EAAG,AAAC;QAEL,+DAA+D;QAC/D,MAAM,GAAG,GAAG,AAAC,WAAY;YACrB,MAAM,MAAM,GAAG,IAAI,sBAAO,EAAE,AAAC;YAE7B,OAAO,SAAS,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE;gBAChC,MAAM,OAAO,GAAG,KAAK,CAAC,UAAU,AAAC;gBAEjC,IAAI,KAAK,CAAC,MAAM,CAAC,mBAAmB,EAAE;oBAClC,cAAc;oBACd,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,AAAC;oBACvC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBACxC,IAAI,cAAc,GAAG,MAAM,CAAC,MAAM,EAAE,AAAC;oBAErC,6CAA6C;oBAC7C,cAAc,IAAI,IAAI,CAAC,GAAG,CACtB,AAAE,KAAK,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,GAAI,IAAI,CAAC,EAAE,GAAI,GAAK,CAC7C,CAAC;oBAEF,uEAAuE;oBACvE,OAAO,CACH,AAAC,CAAC,GAAG,MAAM,GAAG,cAAc,GAAI,OAAO,CAAC,YAAY,EACpD,KAAK,CAAC,MAAM,CAAC,MAAM,CACtB,CAAC;oBACF,KAAK,CACD,AAAC,CAAC,GAAG,MAAM,GAAG,cAAc,GAAI,OAAO,CAAC,YAAY,EACpD,KAAK,CAAC,MAAM,CAAC,MAAM,CACtB,CAAC;iBACL,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,oBAAoB,EAAE;oBAC1C,eAAe;oBACf,OAAO,CACH,AAAC,MAAM,GAAI,CAAA,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAA,GAC7C,KAAK,CAAC,MAAM,CAAC,IAAI,GACjB,OAAO,CAAC,WAAW,EACvB,KAAK,CAAC,MAAM,CAAC,MAAM,CACtB,CAAC;oBACF,KAAK,CACD,AAAC,MAAM,GAAI,CAAA,KAAK,CAAC,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAA,GAC7C,KAAK,CAAC,MAAM,CAAC,IAAI,GACjB,OAAO,CAAC,YAAY,EACxB,KAAK,CAAC,MAAM,CAAC,MAAM,CACtB,CAAC;iBACL,MAAM;oBACH,8CAA8C;oBAC9C,OAAO,CAAC,IAAI,CACR,8EAA8E,CACjF,CAAC;oBACF,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;iBAC3B;aACJ,CAAC;SACL,EAAG,AAAC;QAEL,SAAS,QAAQ,CAAC,UAAU,EAAE;YAC1B,IAAI,KAAK,CAAC,MAAM,CAAC,mBAAmB,EAChC,KAAK,IAAI,UAAU,CAAC;iBACjB,IAAI,KAAK,CAAC,MAAM,CAAC,oBAAoB,EAAE;gBAC1C,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CACxB,KAAK,CAAC,OAAO,EACb,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,CAC1D,CAAC;gBACF,KAAK,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC;aACtB,MAAM;gBACH,OAAO,CAAC,IAAI,CACR,qFAAqF,CACxF,CAAC;gBACF,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;aAC5B;SACJ;QAED,SAAS,OAAO,CAAC,UAAU,EAAE;YACzB,IAAI,KAAK,CAAC,MAAM,CAAC,mBAAmB,EAChC,KAAK,IAAI,UAAU,CAAC;iBACjB,IAAI,KAAK,CAAC,MAAM,CAAC,oBAAoB,EAAE;gBAC1C,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CACxB,KAAK,CAAC,OAAO,EACb,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,CAC1D,CAAC;gBACF,KAAK,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;gBACtC,WAAW,GAAG,IAAI,CAAC;aACtB,MAAM;gBACH,OAAO,CAAC,IAAI,CACR,qFAAqF,CACxF,CAAC;gBACF,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;aAC5B;SACJ;QAED,EAAE;QACF,4CAA4C;QAC5C,EAAE;QAEF,SAAS,qBAAqB,CAAC,KAAK,EAAE;YAClC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SACjD;QAED,SAAS,oBAAoB,CAAC,KAAK,EAAE;YACjC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAChD;QAED,SAAS,kBAAkB,CAAC,KAAK,EAAE;YAC/B,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC9C;QAED,SAAS,qBAAqB,CAAC,KAAK,EAAE;YAClC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YAE5C,WAAW,CACN,UAAU,CAAC,SAAS,EAAE,WAAW,CAAC,CAClC,cAAc,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAEvC,MAAM,OAAO,GAAG,KAAK,CAAC,UAAU,AAAC;YAEjC,UAAU,CAAC,AAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,CAAC,GAAI,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,cAAc;YAEhF,QAAQ,CAAC,AAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,CAAC,GAAI,OAAO,CAAC,YAAY,CAAC,CAAC;YAE/D,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAE5B,KAAK,CAAC,MAAM,EAAE,CAAC;SAClB;QAED,SAAS,oBAAoB,CAAC,KAAK,EAAE;YACjC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YAE3C,UAAU,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YAE5C,IAAI,UAAU,CAAC,CAAC,GAAG,CAAC,EAChB,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;iBACtB,IAAI,UAAU,CAAC,CAAC,GAAG,CAAC,EACvB,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC;YAG5B,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE1B,KAAK,CAAC,MAAM,EAAE,CAAC;SAClB;QAED,SAAS,kBAAkB,CAAC,KAAK,EAAE;YAC/B,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YAEzC,QAAQ,CACH,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,CAC5B,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAEpC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;YAE5B,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEtB,KAAK,CAAC,MAAM,EAAE,CAAC;SAClB;QAED,SAAS,gBAAgB,CAAC,KAAK,EAAE;YAC7B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAChB,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC;iBACrB,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EACvB,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;YAG7B,KAAK,CAAC,MAAM,EAAE,CAAC;SAClB;QAED,SAAS,aAAa,CAAC,KAAK,EAAE;YAC1B,IAAI,WAAW,GAAG,KAAK,AAAC;YAExB,OAAQ,KAAK,CAAC,IAAI;gBACd,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE;oBACd,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;oBAC1B,WAAW,GAAG,IAAI,CAAC;oBACnB,MAAM;gBAEV,KAAK,KAAK,CAAC,IAAI,CAAC,MAAM;oBAClB,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;oBAC3B,WAAW,GAAG,IAAI,CAAC;oBACnB,MAAM;gBAEV,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI;oBAChB,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;oBAC1B,WAAW,GAAG,IAAI,CAAC;oBACnB,MAAM;gBAEV,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK;oBACjB,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;oBAC3B,WAAW,GAAG,IAAI,CAAC;oBACnB,MAAM;aACb;YAED,IAAI,WAAW,EAAE;gBACb,oDAAoD;gBACpD,KAAK,CAAC,cAAc,EAAE,CAAC;gBAEvB,KAAK,CAAC,MAAM,EAAE,CAAC;aAClB;SACJ;QAED,SAAS,sBAAsB,GAAG;YAC9B,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EACrB,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;iBACnD;gBACH,MAAM,CAAC,GAAG,GAAG,GAAI,CAAA,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAA,AAAC,AAAC;gBACxD,MAAM,CAAC,GAAG,GAAG,GAAI,CAAA,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAA,AAAC,AAAC;gBAExD,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACzB;SACJ;QAED,SAAS,mBAAmB,GAAG;YAC3B,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EACrB,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;iBAChD;gBACH,MAAM,CAAC,GAAG,GAAG,GAAI,CAAA,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAA,AAAC,AAAC;gBACxD,MAAM,CAAC,GAAG,GAAG,GAAI,CAAA,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAA,AAAC,AAAC;gBAExD,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACtB;SACJ;QAED,SAAS,qBAAqB,GAAG;YAC7B,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,AAAC;YACjD,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,AAAC;YAEjD,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,AAAC;YAE9C,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;SAC/B;QAED,SAAS,wBAAwB,GAAG;YAChC,IAAI,KAAK,CAAC,UAAU,EAAE,qBAAqB,EAAE,CAAC;YAE9C,IAAI,KAAK,CAAC,SAAS,EAAE,mBAAmB,EAAE,CAAC;SAC9C;QAED,SAAS,2BAA2B,GAAG;YACnC,IAAI,KAAK,CAAC,UAAU,EAAE,qBAAqB,EAAE,CAAC;YAE9C,IAAI,KAAK,CAAC,YAAY,EAAE,sBAAsB,EAAE,CAAC;SACpD;QAED,SAAS,qBAAqB,CAAC,KAAK,EAAE;YAClC,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EACpB,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;iBACrC;gBACH,MAAM,QAAQ,GAAG,wBAAwB,CAAC,KAAK,CAAC,AAAC;gBAEjD,MAAM,CAAC,GAAG,GAAG,GAAI,CAAA,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAA,AAAC,AAAC;gBAC3C,MAAM,CAAC,GAAG,GAAG,GAAI,CAAA,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAA,AAAC,AAAC;gBAE3C,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACvB;YAED,WAAW,CACN,UAAU,CAAC,SAAS,EAAE,WAAW,CAAC,CAClC,cAAc,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAEvC,MAAM,OAAO,GAAG,KAAK,CAAC,UAAU,AAAC;YAEjC,UAAU,CAAC,AAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,CAAC,GAAI,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,cAAc;YAEhF,QAAQ,CAAC,AAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,CAAC,GAAI,OAAO,CAAC,YAAY,CAAC,CAAC;YAE/D,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC/B;QAED,SAAS,kBAAkB,CAAC,KAAK,EAAE;YAC/B,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EACrB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;iBAClC;gBACH,MAAM,QAAQ,GAAG,wBAAwB,CAAC,KAAK,CAAC,AAAC;gBAEjD,MAAM,CAAC,GAAG,GAAG,GAAI,CAAA,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAA,AAAC,AAAC;gBAC3C,MAAM,CAAC,GAAG,GAAG,GAAI,CAAA,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAA,AAAC,AAAC;gBAE3C,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACpB;YAED,QAAQ,CACH,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,CAC5B,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAEpC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;YAE5B,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzB;QAED,SAAS,oBAAoB,CAAC,KAAK,EAAE;YACjC,MAAM,QAAQ,GAAG,wBAAwB,CAAC,KAAK,CAAC,AAAC;YAEjD,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,AAAC;YACpC,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,AAAC;YAEpC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,AAAC;YAE9C,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;YAE1B,UAAU,CAAC,GAAG,CACV,CAAC,EACD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,CACvD,CAAC;YAEF,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAEvB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC7B;QAED,SAAS,uBAAuB,CAAC,KAAK,EAAE;YACpC,IAAI,KAAK,CAAC,UAAU,EAAE,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAElD,IAAI,KAAK,CAAC,SAAS,EAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;SAClD;QAED,SAAS,0BAA0B,CAAC,KAAK,EAAE;YACvC,IAAI,KAAK,CAAC,UAAU,EAAE,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAElD,IAAI,KAAK,CAAC,YAAY,EAAE,qBAAqB,CAAC,KAAK,CAAC,CAAC;SACxD;QAED,EAAE;QACF,0DAA0D;QAC1D,EAAE;QAEF,SAAS,aAAa,CAAC,KAAK,EAAE;YAC1B,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE,OAAO;YAEpC,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvB,KAAK,CAAC,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBAEpD,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;gBAChE,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;aAC/D;YAED,EAAE;YAEF,UAAU,CAAC,KAAK,CAAC,CAAC;YAElB,IAAI,KAAK,CAAC,WAAW,KAAK,OAAO,EAC7B,YAAY,CAAC,KAAK,CAAC,CAAC;iBAEpB,WAAW,CAAC,KAAK,CAAC,CAAC;SAE1B;QAED,SAAS,aAAa,CAAC,KAAK,EAAE;YAC1B,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE,OAAO;YAEpC,IAAI,KAAK,CAAC,WAAW,KAAK,OAAO,EAC7B,WAAW,CAAC,KAAK,CAAC,CAAC;iBAEnB,WAAW,CAAC,KAAK,CAAC,CAAC;SAE1B;QAED,SAAS,WAAW,CAAC,KAAK,EAAE;YACxB,aAAa,CAAC,KAAK,CAAC,CAAC;YAErB,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvB,KAAK,CAAC,UAAU,CAAC,qBAAqB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBAExD,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAChC,aAAa,EACb,aAAa,CAChB,CAAC;gBACF,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;aAClE;YAED,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAE/B,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;SACtB;QAED,SAAS,eAAe,CAAC,KAAK,EAAE;YAC5B,aAAa,CAAC,KAAK,CAAC,CAAC;SACxB;QAED,SAAS,WAAW,CAAC,KAAK,EAAE;YACxB,IAAI,WAAW,AAAC;YAEhB,OAAQ,KAAK,CAAC,MAAM;gBAChB,KAAK,CAAC;oBACF,WAAW,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC;oBACtC,MAAM;gBAEV,KAAK,CAAC;oBACF,WAAW,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC;oBACxC,MAAM;gBAEV,KAAK,CAAC;oBACF,WAAW,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC;oBACvC,MAAM;gBAEV;oBACI,WAAW,GAAG,EAAE,CAAC;aACxB;YAED,OAAQ,WAAW;gBACf,KAAK,oBAAK,CAAC,KAAK;oBACZ,IAAI,KAAK,CAAC,UAAU,KAAK,KAAK,EAAE,OAAO;oBAEvC,oBAAoB,CAAC,KAAK,CAAC,CAAC;oBAE5B,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;oBAEpB,MAAM;gBAEV,KAAK,oBAAK,CAAC,MAAM;oBACb,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ,EAAE;wBAClD,IAAI,KAAK,CAAC,SAAS,KAAK,KAAK,EAAE,OAAO;wBAEtC,kBAAkB,CAAC,KAAK,CAAC,CAAC;wBAE1B,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;qBACrB,MAAM;wBACH,IAAI,KAAK,CAAC,YAAY,KAAK,KAAK,EAAE,OAAO;wBAEzC,qBAAqB,CAAC,KAAK,CAAC,CAAC;wBAE7B,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;qBACxB;oBAED,MAAM;gBAEV,KAAK,oBAAK,CAAC,GAAG;oBACV,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ,EAAE;wBAClD,IAAI,KAAK,CAAC,YAAY,KAAK,KAAK,EAAE,OAAO;wBAEzC,qBAAqB,CAAC,KAAK,CAAC,CAAC;wBAE7B,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;qBACxB,MAAM;wBACH,IAAI,KAAK,CAAC,SAAS,KAAK,KAAK,EAAE,OAAO;wBAEtC,kBAAkB,CAAC,KAAK,CAAC,CAAC;wBAE1B,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;qBACrB;oBAED,MAAM;gBAEV;oBACI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;aAC1B;YAED,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,EACpB,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;SAExC;QAED,SAAS,WAAW,CAAC,KAAK,EAAE;YACxB,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE,OAAO;YAEpC,OAAQ,KAAK;gBACT,KAAK,KAAK,CAAC,MAAM;oBACb,IAAI,KAAK,CAAC,YAAY,KAAK,KAAK,EAAE,OAAO;oBAEzC,qBAAqB,CAAC,KAAK,CAAC,CAAC;oBAE7B,MAAM;gBAEV,KAAK,KAAK,CAAC,KAAK;oBACZ,IAAI,KAAK,CAAC,UAAU,KAAK,KAAK,EAAE,OAAO;oBAEvC,oBAAoB,CAAC,KAAK,CAAC,CAAC;oBAE5B,MAAM;gBAEV,KAAK,KAAK,CAAC,GAAG;oBACV,IAAI,KAAK,CAAC,SAAS,KAAK,KAAK,EAAE,OAAO;oBAEtC,kBAAkB,CAAC,KAAK,CAAC,CAAC;oBAE1B,MAAM;aACb;SACJ;QAED,SAAS,YAAY,CAAC,KAAK,EAAE;YACzB,IACI,KAAK,CAAC,OAAO,KAAK,KAAK,IACvB,KAAK,CAAC,UAAU,KAAK,KAAK,IAC1B,KAAK,KAAK,KAAK,CAAC,IAAI,EAEpB,OAAO;YAEX,KAAK,CAAC,cAAc,EAAE,CAAC;YAEvB,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YAEjC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAExB,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;SAClC;QAED,SAAS,SAAS,CAAC,KAAK,EAAE;YACtB,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,IAAI,KAAK,CAAC,SAAS,KAAK,KAAK,EAAE,OAAO;YAEjE,aAAa,CAAC,KAAK,CAAC,CAAC;SACxB;QAED,SAAS,YAAY,CAAC,KAAK,EAAE;YACzB,YAAY,CAAC,KAAK,CAAC,CAAC;YAEpB,OAAQ,QAAQ,CAAC,MAAM;gBACnB,KAAK,CAAC;oBACF,OAAQ,KAAK,CAAC,OAAO,CAAC,GAAG;wBACrB,KAAK,oBAAK,CAAC,MAAM;4BACb,IAAI,KAAK,CAAC,YAAY,KAAK,KAAK,EAAE,OAAO;4BAEzC,sBAAsB,EAAE,CAAC;4BAEzB,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC;4BAE3B,MAAM;wBAEV,KAAK,oBAAK,CAAC,GAAG;4BACV,IAAI,KAAK,CAAC,SAAS,KAAK,KAAK,EAAE,OAAO;4BAEtC,mBAAmB,EAAE,CAAC;4BAEtB,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC;4BAExB,MAAM;wBAEV;4BACI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;qBAC1B;oBAED,MAAM;gBAEV,KAAK,CAAC;oBACF,OAAQ,KAAK,CAAC,OAAO,CAAC,GAAG;wBACrB,KAAK,oBAAK,CAAC,SAAS;4BAChB,IACI,KAAK,CAAC,UAAU,KAAK,KAAK,IAC1B,KAAK,CAAC,SAAS,KAAK,KAAK,EAEzB,OAAO;4BAEX,wBAAwB,EAAE,CAAC;4BAE3B,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC;4BAE9B,MAAM;wBAEV,KAAK,oBAAK,CAAC,YAAY;4BACnB,IACI,KAAK,CAAC,UAAU,KAAK,KAAK,IAC1B,KAAK,CAAC,YAAY,KAAK,KAAK,EAE5B,OAAO;4BAEX,2BAA2B,EAAE,CAAC;4BAE9B,KAAK,GAAG,KAAK,CAAC,kBAAkB,CAAC;4BAEjC,MAAM;wBAEV;4BACI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;qBAC1B;oBAED,MAAM;gBAEV;oBACI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;aAC1B;YAED,IAAI,KAAK,KAAK,KAAK,CAAC,IAAI,EACpB,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;SAExC;QAED,SAAS,WAAW,CAAC,KAAK,EAAE;YACxB,YAAY,CAAC,KAAK,CAAC,CAAC;YAEpB,OAAQ,KAAK;gBACT,KAAK,KAAK,CAAC,YAAY;oBACnB,IAAI,KAAK,CAAC,YAAY,KAAK,KAAK,EAAE,OAAO;oBAEzC,qBAAqB,CAAC,KAAK,CAAC,CAAC;oBAE7B,KAAK,CAAC,MAAM,EAAE,CAAC;oBAEf,MAAM;gBAEV,KAAK,KAAK,CAAC,SAAS;oBAChB,IAAI,KAAK,CAAC,SAAS,KAAK,KAAK,EAAE,OAAO;oBAEtC,kBAAkB,CAAC,KAAK,CAAC,CAAC;oBAE1B,KAAK,CAAC,MAAM,EAAE,CAAC;oBAEf,MAAM;gBAEV,KAAK,KAAK,CAAC,eAAe;oBACtB,IAAI,KAAK,CAAC,UAAU,KAAK,KAAK,IAAI,KAAK,CAAC,SAAS,KAAK,KAAK,EACvD,OAAO;oBAEX,uBAAuB,CAAC,KAAK,CAAC,CAAC;oBAE/B,KAAK,CAAC,MAAM,EAAE,CAAC;oBAEf,MAAM;gBAEV,KAAK,KAAK,CAAC,kBAAkB;oBACzB,IACI,KAAK,CAAC,UAAU,KAAK,KAAK,IAC1B,KAAK,CAAC,YAAY,KAAK,KAAK,EAE5B,OAAO;oBAEX,0BAA0B,CAAC,KAAK,CAAC,CAAC;oBAElC,KAAK,CAAC,MAAM,EAAE,CAAC;oBAEf,MAAM;gBAEV;oBACI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;aAC1B;SACJ;QAED,SAAS,aAAa,CAAC,KAAK,EAAE;YAC1B,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE,OAAO;YAEpC,KAAK,CAAC,cAAc,EAAE,CAAC;SAC1B;QAED,SAAS,UAAU,CAAC,KAAK,EAAE;YACvB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAED,SAAS,aAAa,CAAC,KAAK,EAAE;YAC1B,OAAO,gBAAgB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAEzC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,CACpC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,EAAE;gBAC1C,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACtB,OAAO;aACV;SAER;QAED,SAAS,YAAY,CAAC,KAAK,EAAE;YACzB,IAAI,QAAQ,GAAG,gBAAgB,CAAC,KAAK,CAAC,SAAS,CAAC,AAAC;YAEjD,IAAI,QAAQ,KAAK,SAAS,EAAE;gBACxB,QAAQ,GAAG,IAAI,sBAAO,EAAE,CAAC;gBACzB,gBAAgB,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC;aAChD;YAED,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;SAC1C;QAED,SAAS,wBAAwB,CAAC,KAAK,EAAE;YACrC,MAAM,OAAO,GACT,KAAK,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,GACnC,QAAQ,CAAC,CAAC,CAAC,GACX,QAAQ,CAAC,CAAC,CAAC,AAAC;YAEtB,OAAO,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC9C;QAED,EAAE;QAEF,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;QAEhE,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;QAChE,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;QACpE,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY,EAAE;YACrD,OAAO,EAAE,KAAK;SACjB,CAAC,CAAC;QAEH,2BAA2B;QAE3B,IAAI,CAAC,MAAM,EAAE,CAAC;KACjB;CACJ;AAED,2EAA2E;AAC3E,uFAAuF;AACvF,uEAAuE;AACvE,EAAE;AACF,wFAAwF;AACxF,6EAA6E;AAC7E,8DAA8D;AAE9D,MAAM,WAAW,SAAS,aAAa;IACnC,YAAY,MAAM,EAAE,UAAU,CAAE;QAC5B,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAE1B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,CAAC,oDAAoD;QAErF,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,oBAAK,CAAC,GAAG,CAAC;QACnC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,oBAAK,CAAC,MAAM,CAAC;QAEvC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,oBAAK,CAAC,GAAG,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,oBAAK,CAAC,YAAY,CAAC;KACzC;CACJ","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-64148c6647900336.js","js/threejs.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/@parcel/runtime-js/lib/runtime-422b0b8837895bf6.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","js/threejs/three.interaction.js","js/threejs/three.module.js","js/threejs/OrbitControls.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"34315215db5c7f49\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import * as THREE from \"./threejs/three.module.js\";\nimport { OrbitControls } from \"./threejs/OrbitControls.js\";\nimport { Interaction } from \"./threejs/three.interaction.js\";\nimport earthImage from \"../img/blue-world.png\";\n\n// Canvas\nconst canvas = document.querySelector(\"canvas.webgl\");\n\n// Scene\nconst scene = new THREE.Scene();\nscene.background = null;\n\n// Object\nconst globe = new THREE.SphereBufferGeometry(0.015, 64, 64);\nconst bigCircle = new THREE.CircleGeometry(0.001, 32);\nconst smallCircle = new THREE.CircleGeometry(0.0002, 32);\nglobe.rotateY(5.2);\nglobe.rotateX(0.2);\n\n// Materials\nconst texture = new THREE.TextureLoader().load(earthImage);\nconst material = new THREE.MeshPhongMaterial({\n    map: texture,\n    transparent: true,\n});\nlet blueMaterial = new THREE.MeshBasicMaterial({ color: 0x01cbe1 });\nconst greenMaterial = new THREE.MeshBasicMaterial({ color: 0xc7e44f });\n\n// Mesh\nconst sphere = new THREE.Mesh(globe, material);\nconst atlanticPatch = new THREE.Mesh(bigCircle, blueMaterial);\nconst otherPatch = new THREE.Mesh(bigCircle, blueMaterial);\nconst riverItem = new THREE.Mesh(smallCircle, greenMaterial);\n\natlanticPatch.position.set(-0.003, 0.005, 0.015);\notherPatch.position.set(0.003, -0.01, 0.012);\nriverItem.position.set(0.008, 0, 0.013);\n\nsphere.add(atlanticPatch);\nsphere.add(otherPatch);\nsphere.add(riverItem);\n\nscene.add(sphere);\n\n// Lights\nconst light = new THREE.AmbientLight(0xffffff, 1.3);\nscene.add(light);\n\n/**\n * Sizes\n */\nconst sizes = {\n    width: window.innerHeight,\n    height: window.innerHeight,\n};\n\n/**\n * Camera\n */\nconst camera = new THREE.PerspectiveCamera(\n    1,\n    sizes.width / sizes.height,\n    0.1,\n    100\n);\ncamera.position.x = 0;\ncamera.position.y = 0;\ncamera.position.z = 2;\nscene.add(camera);\n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n    canvas: canvas,\n    alpha: true,\n});\nrenderer.setSize(sizes.width, sizes.height);\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\nrenderer.setClearColor(0xffffff, 0);\n\n/**\n * Controls\n */\nconst controls = new OrbitControls(camera, renderer.domElement);\ncontrols.enableZoom = false;\ncontrols.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\ncontrols.rotateSpeed = 0.4;\ncontrols.update();\n\ncanvas.style.width = \"100%\";\ncanvas.style.height = \"auto\";\n\n//Interaction\nconst interaction = new THREE.Interaction(renderer, scene, camera);\natlanticPatch.cursor = \"pointer\";\natlanticPatch.on(\"click\", function (ev) {\n    // const body = document.querySelector(\"body\");\n    // body.classList.add(\"atlantic\");\n    atlanticPatch.material.color.set(0xc7e44f);\n});\n\n/**\n * Animate\n */\nconst tick = () => {\n    // Render\n    renderer.render(scene, camera);\n\n    // Call tick again on the next frame\n    window.requestAnimationFrame(tick);\n\n    //Update controls\n    controls.update();\n\n    atlanticPatch.lookAt(camera.position);\n    otherPatch.lookAt(camera.position);\n    riverItem.lookAt(camera.position);\n};\n\ntick();\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","module.exports = require('./helpers/bundle-url').getBundleURL('4tORd') + \"blue-world.1605d5f5.png\" + \"?\" + Date.now();","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","import * as THREE from \"./three.module.js\";\n(function (t, o) {\n    \"use strict\";\n    function i(t) {\n        return Object.prototype.toString.call(t);\n    }\n    const r = {\n        isFunction: (function () {\n            const e = i(function () {});\n            return function (t) {\n                return i(t) === e;\n            };\n        })(),\n        isUndefined(t) {\n            return void 0 === t;\n        },\n    };\n    (o.EventDispatcher.prototype.on = function (t, e) {\n        if (r.isFunction(e))\n            return (\n                this instanceof o.Object3D && (this.interactive = !0),\n                this.addEventListener(t, e),\n                this\n            );\n    }),\n        (o.EventDispatcher.prototype.off = function (t, e) {\n            return this.removeEventListener(t, e), this;\n        }),\n        (o.EventDispatcher.prototype.once = function (e, i) {\n            if (r.isFunction(i)) {\n                const n = (t) => {\n                    i(t), this.off(e, n);\n                };\n                return this.on(e, n), this;\n            }\n        }),\n        (o.EventDispatcher.prototype.emit = function (t, ...e) {\n            if (\n                void 0 !== this._listeners &&\n                !r.isUndefined(this._listeners[t])\n            ) {\n                const i = this._listeners[t] || [],\n                    n = i.slice(0);\n                for (let t = 0; t < n.length; t++) n[t].apply(this, e);\n                return this;\n            }\n        }),\n        (o.Object3D.prototype.interactive = !1),\n        (o.Object3D.prototype.interactiveChildren = !0),\n        (o.Object3D.prototype.started = !1),\n        Object.defineProperty(o.Object3D.prototype, \"trackedPointers\", {\n            get() {\n                return (\n                    this._trackedPointers || (this._trackedPointers = {}),\n                    this._trackedPointers\n                );\n            },\n        }),\n        (o.Object3D.prototype.raycastTest = function (t) {\n            var e = [];\n            return this.raycast(t, e), 0 < e.length && e[0];\n        });\n    class s {\n        constructor() {\n            (this.global = new o.Vector2()),\n                (this.target = null),\n                (this.originalEvent = null),\n                (this.identifier = null),\n                (this.isPrimary = !1),\n                (this.button = 0),\n                (this.buttons = 0),\n                (this.width = 0),\n                (this.height = 0),\n                (this.tiltX = 0),\n                (this.tiltY = 0),\n                (this.pointerType = null),\n                (this.pressure = 0),\n                (this.rotationAngle = 0),\n                (this.twist = 0),\n                (this.tangentialPressure = 0);\n        }\n        get pointerId() {\n            return this.identifier;\n        }\n        _copyEvent(t) {\n            t.isPrimary && (this.isPrimary = !0),\n                (this.button = t.button),\n                (this.buttons = t.buttons),\n                (this.width = t.width),\n                (this.height = t.height),\n                (this.tiltX = t.tiltX),\n                (this.tiltY = t.tiltY),\n                (this.pointerType = t.pointerType),\n                (this.pressure = t.pressure),\n                (this.rotationAngle = t.rotationAngle),\n                (this.twist = t.twist || 0),\n                (this.tangentialPressure = t.tangentialPressure || 0);\n        }\n        _reset() {\n            this.isPrimary = !1;\n        }\n    }\n    class a {\n        constructor() {\n            (this.stopped = !1),\n                (this.target = null),\n                (this.currentTarget = null),\n                (this.type = null),\n                (this.data = null),\n                (this.intersects = []);\n        }\n        stopPropagation() {\n            this.stopped = !0;\n        }\n        _reset() {\n            (this.stopped = !1),\n                (this.currentTarget = null),\n                (this.target = null),\n                (this.intersects = []);\n        }\n    }\n    class h {\n        constructor(t) {\n            (this._pointerId = t), (this._flags = h.FLAGS.NONE);\n        }\n        _doSet(t, e) {\n            this._flags = e ? this._flags | t : this._flags & ~t;\n        }\n        get pointerId() {\n            return this._pointerId;\n        }\n        get flags() {\n            return this._flags;\n        }\n        set flags(t) {\n            this._flags = t;\n        }\n        get none() {\n            return this._flags === this.constructor.FLAGS.NONE;\n        }\n        get over() {\n            return 0 != (this._flags & this.constructor.FLAGS.OVER);\n        }\n        set over(t) {\n            this._doSet(this.constructor.FLAGS.OVER, t);\n        }\n        get rightDown() {\n            return 0 != (this._flags & this.constructor.FLAGS.RIGHT_DOWN);\n        }\n        set rightDown(t) {\n            this._doSet(this.constructor.FLAGS.RIGHT_DOWN, t);\n        }\n        get leftDown() {\n            return 0 != (this._flags & this.constructor.FLAGS.LEFT_DOWN);\n        }\n        set leftDown(t) {\n            this._doSet(this.constructor.FLAGS.LEFT_DOWN, t);\n        }\n    }\n    h.FLAGS = Object.freeze({ NONE: 0, OVER: 1, LEFT_DOWN: 2, RIGHT_DOWN: 4 });\n    const c = \"MOUSE\",\n        n = { target: null, data: { global: null } };\n    class e extends o.EventDispatcher {\n        constructor(t, e, i, n) {\n            super(),\n                (n = n || {}),\n                (this.renderer = t),\n                (this.scene = e),\n                (this.camera = i),\n                (this.autoPreventDefault = n.autoPreventDefault || !1),\n                (this.interactionFrequency = n.interactionFrequency || 10),\n                (this.mouse = new s()),\n                (this.mouse.identifier = c),\n                this.mouse.global.set(-999999),\n                (this.activeInteractionData = {}),\n                (this.activeInteractionData[c] = this.mouse),\n                (this.interactionDataPool = []),\n                (this.eventData = new a()),\n                (this.interactionDOMElement = null),\n                (this.moveWhenInside = !0),\n                (this.eventsAdded = !1),\n                (this.mouseOverRenderer = !1),\n                (this.supportsTouchEvents = \"ontouchstart\" in window),\n                (this.supportsPointerEvents = !!window.PointerEvent),\n                (this.onClick = this.onClick.bind(this)),\n                (this.processClick = this.processClick.bind(this)),\n                (this.onPointerUp = this.onPointerUp.bind(this)),\n                (this.processPointerUp = this.processPointerUp.bind(this)),\n                (this.onPointerCancel = this.onPointerCancel.bind(this)),\n                (this.processPointerCancel =\n                    this.processPointerCancel.bind(this)),\n                (this.onPointerDown = this.onPointerDown.bind(this)),\n                (this.processPointerDown = this.processPointerDown.bind(this)),\n                (this.onPointerMove = this.onPointerMove.bind(this)),\n                (this.processPointerMove = this.processPointerMove.bind(this)),\n                (this.onPointerOut = this.onPointerOut.bind(this)),\n                (this.processPointerOverOut =\n                    this.processPointerOverOut.bind(this)),\n                (this.onPointerOver = this.onPointerOver.bind(this)),\n                (this.cursorStyles = {\n                    default: \"inherit\",\n                    pointer: \"pointer\",\n                }),\n                (this.currentCursorMode = null),\n                (this.cursor = null),\n                (this.raycaster = new o.Raycaster()),\n                (this._deltaTime = 0),\n                this.setTargetElement(this.renderer.domElement);\n        }\n        hitTest(t, e) {\n            return (\n                (n.target = null),\n                (n.data.global = t),\n                (e = e || this.scene),\n                this.processInteractive(n, e, null, !0),\n                n.target\n            );\n        }\n        setTargetElement(t) {\n            this.removeEvents(),\n                (this.interactionDOMElement = t),\n                this.addEvents();\n        }\n        addEvents() {\n            this.interactionDOMElement &&\n                !this.eventsAdded &&\n                (this.emit(\"addevents\"),\n                this.interactionDOMElement.addEventListener(\n                    \"click\",\n                    this.onClick,\n                    !0\n                ),\n                window.navigator.msPointerEnabled\n                    ? ((this.interactionDOMElement.style[\n                          \"-ms-content-zooming\"\n                      ] = \"none\"),\n                      (this.interactionDOMElement.style[\"-ms-touch-action\"] =\n                          \"none\"))\n                    : this.supportsPointerEvents &&\n                      (this.interactionDOMElement.style[\"touch-action\"] =\n                          \"none\"),\n                this.supportsPointerEvents\n                    ? (window.document.addEventListener(\n                          \"pointermove\",\n                          this.onPointerMove,\n                          !0\n                      ),\n                      this.interactionDOMElement.addEventListener(\n                          \"pointerdown\",\n                          this.onPointerDown,\n                          !0\n                      ),\n                      this.interactionDOMElement.addEventListener(\n                          \"pointerleave\",\n                          this.onPointerOut,\n                          !0\n                      ),\n                      this.interactionDOMElement.addEventListener(\n                          \"pointerover\",\n                          this.onPointerOver,\n                          !0\n                      ),\n                      window.addEventListener(\n                          \"pointercancel\",\n                          this.onPointerCancel,\n                          !0\n                      ),\n                      window.addEventListener(\n                          \"pointerup\",\n                          this.onPointerUp,\n                          !0\n                      ))\n                    : (window.document.addEventListener(\n                          \"mousemove\",\n                          this.onPointerMove,\n                          !0\n                      ),\n                      this.interactionDOMElement.addEventListener(\n                          \"mousedown\",\n                          this.onPointerDown,\n                          !0\n                      ),\n                      this.interactionDOMElement.addEventListener(\n                          \"mouseout\",\n                          this.onPointerOut,\n                          !0\n                      ),\n                      this.interactionDOMElement.addEventListener(\n                          \"mouseover\",\n                          this.onPointerOver,\n                          !0\n                      ),\n                      window.addEventListener(\"mouseup\", this.onPointerUp, !0)),\n                this.supportsTouchEvents &&\n                    (this.interactionDOMElement.addEventListener(\n                        \"touchstart\",\n                        this.onPointerDown,\n                        !0\n                    ),\n                    this.interactionDOMElement.addEventListener(\n                        \"touchcancel\",\n                        this.onPointerCancel,\n                        !0\n                    ),\n                    this.interactionDOMElement.addEventListener(\n                        \"touchend\",\n                        this.onPointerUp,\n                        !0\n                    ),\n                    this.interactionDOMElement.addEventListener(\n                        \"touchmove\",\n                        this.onPointerMove,\n                        !0\n                    )),\n                (this.eventsAdded = !0));\n        }\n        removeEvents() {\n            this.interactionDOMElement &&\n                (this.emit(\"removeevents\"),\n                this.interactionDOMElement.removeEventListener(\n                    \"click\",\n                    this.onClick,\n                    !0\n                ),\n                window.navigator.msPointerEnabled\n                    ? ((this.interactionDOMElement.style[\n                          \"-ms-content-zooming\"\n                      ] = \"\"),\n                      (this.interactionDOMElement.style[\"-ms-touch-action\"] =\n                          \"\"))\n                    : this.supportsPointerEvents &&\n                      (this.interactionDOMElement.style[\"touch-action\"] = \"\"),\n                this.supportsPointerEvents\n                    ? (window.document.removeEventListener(\n                          \"pointermove\",\n                          this.onPointerMove,\n                          !0\n                      ),\n                      this.interactionDOMElement.removeEventListener(\n                          \"pointerdown\",\n                          this.onPointerDown,\n                          !0\n                      ),\n                      this.interactionDOMElement.removeEventListener(\n                          \"pointerleave\",\n                          this.onPointerOut,\n                          !0\n                      ),\n                      this.interactionDOMElement.removeEventListener(\n                          \"pointerover\",\n                          this.onPointerOver,\n                          !0\n                      ),\n                      window.removeEventListener(\n                          \"pointercancel\",\n                          this.onPointerCancel,\n                          !0\n                      ),\n                      window.removeEventListener(\n                          \"pointerup\",\n                          this.onPointerUp,\n                          !0\n                      ))\n                    : (window.document.removeEventListener(\n                          \"mousemove\",\n                          this.onPointerMove,\n                          !0\n                      ),\n                      this.interactionDOMElement.removeEventListener(\n                          \"mousedown\",\n                          this.onPointerDown,\n                          !0\n                      ),\n                      this.interactionDOMElement.removeEventListener(\n                          \"mouseout\",\n                          this.onPointerOut,\n                          !0\n                      ),\n                      this.interactionDOMElement.removeEventListener(\n                          \"mouseover\",\n                          this.onPointerOver,\n                          !0\n                      ),\n                      window.removeEventListener(\n                          \"mouseup\",\n                          this.onPointerUp,\n                          !0\n                      )),\n                this.supportsTouchEvents &&\n                    (this.interactionDOMElement.removeEventListener(\n                        \"touchstart\",\n                        this.onPointerDown,\n                        !0\n                    ),\n                    this.interactionDOMElement.removeEventListener(\n                        \"touchcancel\",\n                        this.onPointerCancel,\n                        !0\n                    ),\n                    this.interactionDOMElement.removeEventListener(\n                        \"touchend\",\n                        this.onPointerUp,\n                        !0\n                    ),\n                    this.interactionDOMElement.removeEventListener(\n                        \"touchmove\",\n                        this.onPointerMove,\n                        !0\n                    )),\n                (this.interactionDOMElement = null),\n                (this.eventsAdded = !1));\n        }\n        update({ snippet: t }) {\n            if (\n                ((this._deltaTime += t),\n                !(this._deltaTime < this.interactionFrequency) &&\n                    ((this._deltaTime = 0), this.interactionDOMElement))\n            )\n                if (this.didMove) this.didMove = !1;\n                else {\n                    this.cursor = null;\n                    for (const i in this.activeInteractionData) {\n                        var e;\n                        !this.activeInteractionData.hasOwnProperty(i) ||\n                            ((e = this.activeInteractionData[i])\n                                .originalEvent &&\n                                \"touch\" !== e.pointerType &&\n                                ((e = this.configureInteractionEventForDOMEvent(\n                                    this.eventData,\n                                    e.originalEvent,\n                                    e\n                                )),\n                                this.processInteractive(\n                                    e,\n                                    this.scene,\n                                    this.processPointerOverOut,\n                                    !0\n                                )));\n                    }\n                    this.setCursorMode(this.cursor);\n                }\n        }\n        setCursorMode(t) {\n            if (this.currentCursorMode !== (t = t || \"default\")) {\n                this.currentCursorMode = t;\n                const e = this.cursorStyles[t];\n                if (e)\n                    switch (typeof e) {\n                        case \"string\":\n                            this.interactionDOMElement.style.cursor = e;\n                            break;\n                        case \"function\":\n                            e(t);\n                            break;\n                        case \"object\":\n                            Object.assign(this.interactionDOMElement.style, e);\n                    }\n                else\n                    \"string\" != typeof t ||\n                        Object.prototype.hasOwnProperty.call(\n                            this.cursorStyles,\n                            t\n                        ) ||\n                        (this.interactionDOMElement.style.cursor = t);\n            }\n        }\n        triggerEvent(t, e, i) {\n            i.stopped ||\n                ((i.currentTarget = t),\n                (i.type = e),\n                t.emit(e, i),\n                t[e] && t[e](i));\n        }\n        processInteractive(e, t, i, n, o) {\n            if (!t || !t.visible) return !1;\n            let r = !1,\n                s = (o = t.interactive || o);\n            if (t.interactiveChildren && t.children) {\n                var a = t.children;\n                for (let t = a.length - 1; 0 <= t; t--) {\n                    var h = a[t],\n                        c = this.processInteractive(e, h, i, n, s);\n                    c &&\n                        h.parent &&\n                        ((s = !1), c && (e.target && (n = !1), (r = !0)));\n                }\n            }\n            return (\n                o &&\n                    (n &&\n                        !e.target &&\n                        e.intersects[0] &&\n                        e.intersects[0].object === t &&\n                        (r = !0),\n                    t.interactive &&\n                        (r && !e.target && (e.data.target = e.target = t),\n                        i && i(e, t, !!r))),\n                r\n            );\n        }\n        onClick(t) {\n            if (\"click\" === t.type) {\n                var e = this.normalizeToPointerData(t);\n                this.autoPreventDefault &&\n                    e[0].isNormalized &&\n                    t.preventDefault();\n                var i = this.getInteractionDataForPointerId(e[0]);\n                const n = this.configureInteractionEventForDOMEvent(\n                    this.eventData,\n                    e[0],\n                    i\n                );\n                (n.data.originalEvent = t),\n                    this.processInteractive(\n                        n,\n                        this.scene,\n                        this.processClick,\n                        !0\n                    ),\n                    this.emit(\"click\", n);\n            }\n        }\n        processClick(t, e, i) {\n            i && this.triggerEvent(e, \"click\", t);\n        }\n        onPointerDown(e) {\n            if (!this.supportsTouchEvents || \"touch\" !== e.pointerType) {\n                var i = this.normalizeToPointerData(e);\n                this.autoPreventDefault &&\n                    i[0].isNormalized &&\n                    e.preventDefault();\n                var n = i.length;\n                for (let t = 0; t < n; t++) {\n                    var o = i[t],\n                        r = this.getInteractionDataForPointerId(o);\n                    const s = this.configureInteractionEventForDOMEvent(\n                        this.eventData,\n                        o,\n                        r\n                    );\n                    (s.data.originalEvent = e),\n                        this.processInteractive(\n                            s,\n                            this.scene,\n                            this.processPointerDown,\n                            !0\n                        ),\n                        this.emit(\"pointerdown\", s),\n                        \"touch\" === o.pointerType\n                            ? this.emit(\"touchstart\", s)\n                            : (\"mouse\" !== o.pointerType &&\n                                  \"pen\" !== o.pointerType) ||\n                              ((o = 2 === o.button),\n                              this.emit(\n                                  o ? \"rightdown\" : \"mousedown\",\n                                  this.eventData\n                              ));\n                }\n            }\n        }\n        processPointerDown(t, e, i) {\n            var n = t.data,\n                o = t.data.identifier;\n            i &&\n                (e.trackedPointers[o] || (e.trackedPointers[o] = new h(o)),\n                this.triggerEvent(e, \"pointerdown\", t),\n                \"touch\" === n.pointerType\n                    ? ((e.started = !0), this.triggerEvent(e, \"touchstart\", t))\n                    : (\"mouse\" !== n.pointerType && \"pen\" !== n.pointerType) ||\n                      ((n = 2 === n.button)\n                          ? (e.trackedPointers[o].rightDown = !0)\n                          : (e.trackedPointers[o].leftDown = !0),\n                      this.triggerEvent(e, n ? \"rightdown\" : \"mousedown\", t)));\n        }\n        onPointerComplete(e, i, n) {\n            var o = this.normalizeToPointerData(e),\n                r = o.length,\n                s = e.target !== this.interactionDOMElement ? \"outside\" : \"\";\n            for (let t = 0; t < r; t++) {\n                var a,\n                    h = o[t],\n                    c = this.getInteractionDataForPointerId(h);\n                const l = this.configureInteractionEventForDOMEvent(\n                    this.eventData,\n                    h,\n                    c\n                );\n                (l.data.originalEvent = e),\n                    this.processInteractive(l, this.scene, n, i || !s),\n                    this.emit(i ? \"pointercancel\" : `pointerup${s}`, l),\n                    \"mouse\" === h.pointerType || \"pen\" === h.pointerType\n                        ? ((a = 2 === h.button),\n                          this.emit(a ? `rightup${s}` : `mouseup${s}`, l))\n                        : \"touch\" === h.pointerType &&\n                          (this.emit(i ? \"touchcancel\" : `touchend${s}`, l),\n                          this.releaseInteractionDataForPointerId(\n                              h.pointerId,\n                              c\n                          ));\n            }\n        }\n        onPointerCancel(t) {\n            (this.supportsTouchEvents && \"touch\" === t.pointerType) ||\n                this.onPointerComplete(t, !0, this.processPointerCancel);\n        }\n        processPointerCancel(t, e) {\n            var i = t.data,\n                n = t.data.identifier;\n            void 0 !== e.trackedPointers[n] &&\n                (delete e.trackedPointers[n],\n                this.triggerEvent(e, \"pointercancel\", t),\n                \"touch\" === i.pointerType &&\n                    this.triggerEvent(e, \"touchcancel\", t));\n        }\n        onPointerUp(t) {\n            (this.supportsTouchEvents && \"touch\" === t.pointerType) ||\n                this.onPointerComplete(t, !1, this.processPointerUp);\n        }\n        processPointerUp(t, e, i) {\n            var n = t.data,\n                o = t.data.identifier;\n            const r = e.trackedPointers[o];\n            var s,\n                a = \"touch\" === n.pointerType;\n            (\"mouse\" !== n.pointerType && \"pen\" !== n.pointerType) ||\n                ((s = 2 === n.button),\n                (n = h.FLAGS),\n                (n = s ? n.RIGHT_DOWN : n.LEFT_DOWN),\n                (n = void 0 !== r && r.flags & n),\n                i\n                    ? (this.triggerEvent(e, s ? \"rightup\" : \"mouseup\", t),\n                      n &&\n                          this.triggerEvent(\n                              e,\n                              s ? \"rightclick\" : \"leftclick\",\n                              t\n                          ))\n                    : n &&\n                      this.triggerEvent(\n                          e,\n                          s ? \"rightupoutside\" : \"mouseupoutside\",\n                          t\n                      ),\n                r && (s ? (r.rightDown = !1) : (r.leftDown = !1))),\n                a &&\n                    e.started &&\n                    ((e.started = !1), this.triggerEvent(e, \"touchend\", t)),\n                i\n                    ? (this.triggerEvent(e, \"pointerup\", t),\n                      r &&\n                          (this.triggerEvent(e, \"pointertap\", t),\n                          a && (this.triggerEvent(e, \"tap\", t), (r.over = !1))))\n                    : r &&\n                      (this.triggerEvent(e, \"pointerupoutside\", t),\n                      a && this.triggerEvent(e, \"touchendoutside\", t)),\n                r && r.none && delete e.trackedPointers[o];\n        }\n        onPointerMove(e) {\n            if (!this.supportsTouchEvents || \"touch\" !== e.pointerType) {\n                var i = this.normalizeToPointerData(e);\n                \"mouse\" === i[0].pointerType &&\n                    ((this.didMove = !0), (this.cursor = null));\n                var n = i.length;\n                for (let t = 0; t < n; t++) {\n                    var o = i[t],\n                        r = this.getInteractionDataForPointerId(o);\n                    const s = this.configureInteractionEventForDOMEvent(\n                        this.eventData,\n                        o,\n                        r\n                    );\n                    s.data.originalEvent = e;\n                    r = \"touch\" !== o.pointerType || this.moveWhenInside;\n                    this.processInteractive(\n                        s,\n                        this.scene,\n                        this.processPointerMove,\n                        r\n                    ),\n                        this.emit(\"pointermove\", s),\n                        \"touch\" === o.pointerType && this.emit(\"touchmove\", s),\n                        (\"mouse\" !== o.pointerType &&\n                            \"pen\" !== o.pointerType) ||\n                            this.emit(\"mousemove\", s);\n                }\n                \"mouse\" === i[0].pointerType && this.setCursorMode(this.cursor);\n            }\n        }\n        processPointerMove(t, e, i) {\n            var n = t.data,\n                o = \"touch\" === n.pointerType,\n                n = \"mouse\" === n.pointerType || \"pen\" === n.pointerType;\n            n && this.processPointerOverOut(t, e, i),\n                o && e.started && this.triggerEvent(e, \"touchmove\", t),\n                (this.moveWhenInside && !i) ||\n                    (this.triggerEvent(e, \"pointermove\", t),\n                    n && this.triggerEvent(e, \"mousemove\", t));\n        }\n        onPointerOut(t) {\n            if (!this.supportsTouchEvents || \"touch\" !== t.pointerType) {\n                var e = this.normalizeToPointerData(t)[0];\n                \"mouse\" === e.pointerType &&\n                    ((this.mouseOverRenderer = !1), this.setCursorMode(null));\n                t = this.getInteractionDataForPointerId(e);\n                const i = this.configureInteractionEventForDOMEvent(\n                    this.eventData,\n                    e,\n                    t\n                );\n                (i.data.originalEvent = e),\n                    this.processInteractive(\n                        i,\n                        this.scene,\n                        this.processPointerOverOut,\n                        !1\n                    ),\n                    this.emit(\"pointerout\", i),\n                    \"mouse\" === e.pointerType || \"pen\" === e.pointerType\n                        ? this.emit(\"mouseout\", i)\n                        : this.releaseInteractionDataForPointerId(t.identifier);\n            }\n        }\n        processPointerOverOut(t, e, i) {\n            var n = t.data,\n                o = t.data.identifier,\n                n = \"mouse\" === n.pointerType || \"pen\" === n.pointerType;\n            let r = e.trackedPointers[o];\n            i && !r && (r = e.trackedPointers[o] = new h(o)),\n                void 0 !== r &&\n                    (i && this.mouseOverRenderer\n                        ? (r.over ||\n                              ((r.over = !0),\n                              this.triggerEvent(e, \"pointerover\", t),\n                              n && this.triggerEvent(e, \"mouseover\", t)),\n                          n && null === this.cursor && (this.cursor = e.cursor))\n                        : r.over &&\n                          ((r.over = !1),\n                          this.triggerEvent(e, \"pointerout\", this.eventData),\n                          n && this.triggerEvent(e, \"mouseout\", t),\n                          r.none && delete e.trackedPointers[o]));\n        }\n        onPointerOver(t) {\n            var e = this.normalizeToPointerData(t)[0],\n                t = this.getInteractionDataForPointerId(e);\n            const i = this.configureInteractionEventForDOMEvent(\n                this.eventData,\n                e,\n                t\n            );\n            \"mouse\" === (i.data.originalEvent = e).pointerType &&\n                (this.mouseOverRenderer = !0),\n                this.emit(\"pointerover\", i),\n                (\"mouse\" !== e.pointerType && \"pen\" !== e.pointerType) ||\n                    this.emit(\"mouseover\", i);\n        }\n        getInteractionDataForPointerId(t) {\n            var e = t.pointerId;\n            let i;\n            return (\n                e === c || \"mouse\" === t.pointerType\n                    ? (i = this.mouse)\n                    : this.activeInteractionData[e]\n                    ? (i = this.activeInteractionData[e])\n                    : ((i = this.interactionDataPool.pop() || new s()),\n                      (i.identifier = e),\n                      (this.activeInteractionData[e] = i)),\n                i._copyEvent(t),\n                i\n            );\n        }\n        releaseInteractionDataForPointerId(t) {\n            const e = this.activeInteractionData[t];\n            e &&\n                (delete this.activeInteractionData[t],\n                e._reset(),\n                this.interactionDataPool.push(e));\n        }\n        mapPositionToPoint(t, e, i) {\n            let n;\n            (n = this.interactionDOMElement.parentElement\n                ? this.interactionDOMElement.getBoundingClientRect()\n                : { x: 0, y: 0, left: 0, top: 0, width: 0, height: 0 }),\n                (t.x = ((e - n.left) / n.width) * 2 - 1),\n                (t.y = 2 * -((i - n.top) / n.height) + 1);\n        }\n        configureInteractionEventForDOMEvent(t, e, i) {\n            return (\n                (t.data = i),\n                this.mapPositionToPoint(i.global, e.clientX, e.clientY),\n                this.raycaster.setFromCamera(i.global, this.camera),\n                \"touch\" === e.pointerType &&\n                    ((e.globalX = i.global.x), (e.globalY = i.global.y)),\n                (i.originalEvent = e),\n                t._reset(),\n                (t.intersects = this.raycaster.intersectObjects(\n                    this.scene.children,\n                    !0\n                )),\n                t\n            );\n        }\n        normalizeToPointerData(i) {\n            const n = [];\n            if (this.supportsTouchEvents && i instanceof TouchEvent)\n                for (let t = 0, e = i.changedTouches.length; t < e; t++) {\n                    const o = i.changedTouches[t];\n                    void 0 === o.button &&\n                        (o.button = i.touches.length ? 1 : 0),\n                        void 0 === o.buttons &&\n                            (o.buttons = i.touches.length ? 1 : 0),\n                        void 0 === o.isPrimary &&\n                            (o.isPrimary =\n                                1 === i.touches.length &&\n                                \"touchstart\" === i.type),\n                        void 0 === o.width && (o.width = o.radiusX || 1),\n                        void 0 === o.height && (o.height = o.radiusY || 1),\n                        void 0 === o.tiltX && (o.tiltX = 0),\n                        void 0 === o.tiltY && (o.tiltY = 0),\n                        void 0 === o.pointerType && (o.pointerType = \"touch\"),\n                        void 0 === o.pointerId &&\n                            (o.pointerId = o.identifier || 0),\n                        void 0 === o.pressure && (o.pressure = o.force || 0.5),\n                        (o.twist = 0),\n                        void (o.tangentialPressure = 0) === o.layerX &&\n                            (o.layerX = o.offsetX = o.clientX),\n                        void 0 === o.layerY &&\n                            (o.layerY = o.offsetY = o.clientY),\n                        (o.isNormalized = !0),\n                        n.push(o);\n                }\n            else\n                !(i instanceof MouseEvent) ||\n                    (this.supportsPointerEvents &&\n                        i instanceof window.PointerEvent) ||\n                    (void 0 === i.isPrimary && (i.isPrimary = !0),\n                    void 0 === i.width && (i.width = 1),\n                    void 0 === i.height && (i.height = 1),\n                    void 0 === i.tiltX && (i.tiltX = 0),\n                    void 0 === i.tiltY && (i.tiltY = 0),\n                    void 0 === i.pointerType && (i.pointerType = \"mouse\"),\n                    void 0 === i.pointerId && (i.pointerId = c),\n                    void 0 === i.pressure && (i.pressure = 0.5),\n                    (i.twist = 0),\n                    (i.tangentialPressure = 0),\n                    (i.isNormalized = !0)),\n                    n.push(i);\n            return n;\n        }\n        destroy() {\n            this.removeEvents(),\n                this.removeAllListeners(),\n                (this.renderer = null),\n                (this.mouse = null),\n                (this.eventData = null),\n                (this.interactionDOMElement = null),\n                (this.onPointerDown = null),\n                (this.processPointerDown = null),\n                (this.onPointerUp = null),\n                (this.processPointerUp = null),\n                (this.onPointerCancel = null),\n                (this.processPointerCancel = null),\n                (this.onPointerMove = null),\n                (this.processPointerMove = null),\n                (this.onPointerOut = null),\n                (this.processPointerOverOut = null),\n                (this.onPointerOver = null),\n                (this._tempPoint = null);\n        }\n    }\n    const l = \"MOUSE\",\n        u = { target: null, data: { global: null } };\n    class p extends o.EventDispatcher {\n        constructor(t, e) {\n            super(),\n                (e = e || {}),\n                (this.renderer = t),\n                (this.layer = null),\n                (this.autoPreventDefault = e.autoPreventDefault || !1),\n                (this.interactionFrequency = e.interactionFrequency || 10),\n                (this.mouse = new s()),\n                (this.mouse.identifier = l),\n                this.mouse.global.set(-999999),\n                (this.activeInteractionData = {}),\n                (this.activeInteractionData[l] = this.mouse),\n                (this.interactionDataPool = []),\n                (this.eventData = new a()),\n                (this.interactionDOMElement = null),\n                (this.moveWhenInside = !0),\n                (this.eventsAdded = !1),\n                (this.mouseOverRenderer = !1),\n                (this.supportsTouchEvents = \"ontouchstart\" in window),\n                (this.supportsPointerEvents = !!window.PointerEvent),\n                (this.onClick = this.onClick.bind(this)),\n                (this.processClick = this.processClick.bind(this)),\n                (this.onPointerUp = this.onPointerUp.bind(this)),\n                (this.processPointerUp = this.processPointerUp.bind(this)),\n                (this.onPointerCancel = this.onPointerCancel.bind(this)),\n                (this.processPointerCancel =\n                    this.processPointerCancel.bind(this)),\n                (this.onPointerDown = this.onPointerDown.bind(this)),\n                (this.processPointerDown = this.processPointerDown.bind(this)),\n                (this.onPointerMove = this.onPointerMove.bind(this)),\n                (this.processPointerMove = this.processPointerMove.bind(this)),\n                (this.onPointerOut = this.onPointerOut.bind(this)),\n                (this.processPointerOverOut =\n                    this.processPointerOverOut.bind(this)),\n                (this.onPointerOver = this.onPointerOver.bind(this)),\n                (this.cursorStyles = {\n                    default: \"inherit\",\n                    pointer: \"pointer\",\n                }),\n                (this.currentCursorMode = null),\n                (this.cursor = null),\n                (this.raycaster = new o.Raycaster()),\n                (this._deltaTime = 0),\n                this.setTargetElement(this.renderer.domElement);\n        }\n        isAble() {\n            return this.layer && this.layer.interactive;\n        }\n        setLayer(t) {\n            this.layer = t;\n        }\n        hitTest(t, e) {\n            return this.isAble()\n                ? ((u.target = null),\n                  (u.data.global = t),\n                  (e = e || this.layer.scene),\n                  this.processInteractive(u, e, null, !0),\n                  u.target)\n                : null;\n        }\n        setTargetElement(t) {\n            this.removeEvents(),\n                (this.interactionDOMElement = t),\n                this.addEvents();\n        }\n        addEvents() {\n            this.interactionDOMElement &&\n                !this.eventsAdded &&\n                (this.emit(\"addevents\"),\n                this.interactionDOMElement.addEventListener(\n                    \"click\",\n                    this.onClick,\n                    !0\n                ),\n                window.navigator.msPointerEnabled\n                    ? ((this.interactionDOMElement.style[\n                          \"-ms-content-zooming\"\n                      ] = \"none\"),\n                      (this.interactionDOMElement.style[\"-ms-touch-action\"] =\n                          \"none\"))\n                    : this.supportsPointerEvents &&\n                      (this.interactionDOMElement.style[\"touch-action\"] =\n                          \"none\"),\n                this.supportsPointerEvents\n                    ? (window.document.addEventListener(\n                          \"pointermove\",\n                          this.onPointerMove,\n                          !0\n                      ),\n                      this.interactionDOMElement.addEventListener(\n                          \"pointerdown\",\n                          this.onPointerDown,\n                          !0\n                      ),\n                      this.interactionDOMElement.addEventListener(\n                          \"pointerleave\",\n                          this.onPointerOut,\n                          !0\n                      ),\n                      this.interactionDOMElement.addEventListener(\n                          \"pointerover\",\n                          this.onPointerOver,\n                          !0\n                      ),\n                      window.addEventListener(\n                          \"pointercancel\",\n                          this.onPointerCancel,\n                          !0\n                      ),\n                      window.addEventListener(\n                          \"pointerup\",\n                          this.onPointerUp,\n                          !0\n                      ))\n                    : (window.document.addEventListener(\n                          \"mousemove\",\n                          this.onPointerMove,\n                          !0\n                      ),\n                      this.interactionDOMElement.addEventListener(\n                          \"mousedown\",\n                          this.onPointerDown,\n                          !0\n                      ),\n                      this.interactionDOMElement.addEventListener(\n                          \"mouseout\",\n                          this.onPointerOut,\n                          !0\n                      ),\n                      this.interactionDOMElement.addEventListener(\n                          \"mouseover\",\n                          this.onPointerOver,\n                          !0\n                      ),\n                      window.addEventListener(\"mouseup\", this.onPointerUp, !0)),\n                this.supportsTouchEvents &&\n                    (this.interactionDOMElement.addEventListener(\n                        \"touchstart\",\n                        this.onPointerDown,\n                        !0\n                    ),\n                    this.interactionDOMElement.addEventListener(\n                        \"touchcancel\",\n                        this.onPointerCancel,\n                        !0\n                    ),\n                    this.interactionDOMElement.addEventListener(\n                        \"touchend\",\n                        this.onPointerUp,\n                        !0\n                    ),\n                    this.interactionDOMElement.addEventListener(\n                        \"touchmove\",\n                        this.onPointerMove,\n                        !0\n                    )),\n                (this.eventsAdded = !0));\n        }\n        removeEvents() {\n            this.interactionDOMElement &&\n                (this.emit(\"removeevents\"),\n                this.interactionDOMElement.removeEventListener(\n                    \"click\",\n                    this.onClick,\n                    !0\n                ),\n                window.navigator.msPointerEnabled\n                    ? ((this.interactionDOMElement.style[\n                          \"-ms-content-zooming\"\n                      ] = \"\"),\n                      (this.interactionDOMElement.style[\"-ms-touch-action\"] =\n                          \"\"))\n                    : this.supportsPointerEvents &&\n                      (this.interactionDOMElement.style[\"touch-action\"] = \"\"),\n                this.supportsPointerEvents\n                    ? (window.document.removeEventListener(\n                          \"pointermove\",\n                          this.onPointerMove,\n                          !0\n                      ),\n                      this.interactionDOMElement.removeEventListener(\n                          \"pointerdown\",\n                          this.onPointerDown,\n                          !0\n                      ),\n                      this.interactionDOMElement.removeEventListener(\n                          \"pointerleave\",\n                          this.onPointerOut,\n                          !0\n                      ),\n                      this.interactionDOMElement.removeEventListener(\n                          \"pointerover\",\n                          this.onPointerOver,\n                          !0\n                      ),\n                      window.removeEventListener(\n                          \"pointercancel\",\n                          this.onPointerCancel,\n                          !0\n                      ),\n                      window.removeEventListener(\n                          \"pointerup\",\n                          this.onPointerUp,\n                          !0\n                      ))\n                    : (window.document.removeEventListener(\n                          \"mousemove\",\n                          this.onPointerMove,\n                          !0\n                      ),\n                      this.interactionDOMElement.removeEventListener(\n                          \"mousedown\",\n                          this.onPointerDown,\n                          !0\n                      ),\n                      this.interactionDOMElement.removeEventListener(\n                          \"mouseout\",\n                          this.onPointerOut,\n                          !0\n                      ),\n                      this.interactionDOMElement.removeEventListener(\n                          \"mouseover\",\n                          this.onPointerOver,\n                          !0\n                      ),\n                      window.removeEventListener(\n                          \"mouseup\",\n                          this.onPointerUp,\n                          !0\n                      )),\n                this.supportsTouchEvents &&\n                    (this.interactionDOMElement.removeEventListener(\n                        \"touchstart\",\n                        this.onPointerDown,\n                        !0\n                    ),\n                    this.interactionDOMElement.removeEventListener(\n                        \"touchcancel\",\n                        this.onPointerCancel,\n                        !0\n                    ),\n                    this.interactionDOMElement.removeEventListener(\n                        \"touchend\",\n                        this.onPointerUp,\n                        !0\n                    ),\n                    this.interactionDOMElement.removeEventListener(\n                        \"touchmove\",\n                        this.onPointerMove,\n                        !0\n                    )),\n                (this.interactionDOMElement = null),\n                (this.eventsAdded = !1));\n        }\n        update({ snippet: t }) {\n            if (\n                this.isAble() &&\n                ((this._deltaTime += t),\n                !(this._deltaTime < this.interactionFrequency) &&\n                    ((this._deltaTime = 0), this.interactionDOMElement))\n            )\n                if (this.didMove) this.didMove = !1;\n                else {\n                    this.cursor = null;\n                    for (const i in this.activeInteractionData) {\n                        var e;\n                        !this.activeInteractionData.hasOwnProperty(i) ||\n                            ((e = this.activeInteractionData[i])\n                                .originalEvent &&\n                                \"touch\" !== e.pointerType &&\n                                ((e = this.configureInteractionEventForDOMEvent(\n                                    this.eventData,\n                                    e.originalEvent,\n                                    e\n                                )),\n                                this.processInteractive(\n                                    e,\n                                    this.layer.scene,\n                                    this.processPointerOverOut,\n                                    !0\n                                )));\n                    }\n                    this.setCursorMode(this.cursor);\n                }\n        }\n        setCursorMode(t) {\n            if (this.currentCursorMode !== (t = t || \"default\")) {\n                this.currentCursorMode = t;\n                const e = this.cursorStyles[t];\n                if (e)\n                    switch (typeof e) {\n                        case \"string\":\n                            this.interactionDOMElement.style.cursor = e;\n                            break;\n                        case \"function\":\n                            e(t);\n                            break;\n                        case \"object\":\n                            Object.assign(this.interactionDOMElement.style, e);\n                    }\n                else\n                    \"string\" != typeof t ||\n                        Object.prototype.hasOwnProperty.call(\n                            this.cursorStyles,\n                            t\n                        ) ||\n                        (this.interactionDOMElement.style.cursor = t);\n            }\n        }\n        triggerEvent(t, e, i) {\n            i.stopped ||\n                ((i.currentTarget = t),\n                (i.type = e),\n                t.emit(e, i),\n                t[e] && t[e](i));\n        }\n        processInteractive(e, t, i, n, o) {\n            if (!t || !t.visible) return !1;\n            let r = !1,\n                s = (o = t.interactive || o);\n            if (t.interactiveChildren && t.children) {\n                var a = t.children;\n                for (let t = a.length - 1; 0 <= t; t--) {\n                    var h = a[t],\n                        c = this.processInteractive(e, h, i, n, s);\n                    c &&\n                        h.parent &&\n                        ((s = !1), c && (e.target && (n = !1), (r = !0)));\n                }\n            }\n            return (\n                o &&\n                    (n &&\n                        !e.target &&\n                        e.intersects[0] &&\n                        e.intersects[0].object === t &&\n                        (r = !0),\n                    t.interactive &&\n                        (r && !e.target && (e.data.target = e.target = t),\n                        i && i(e, t, !!r))),\n                r\n            );\n        }\n        onClick(t) {\n            if (this.isAble() && \"click\" === t.type) {\n                var e = this.normalizeToPointerData(t);\n                this.autoPreventDefault &&\n                    e[0].isNormalized &&\n                    t.preventDefault();\n                var i = this.getInteractionDataForPointerId(e[0]);\n                const n = this.configureInteractionEventForDOMEvent(\n                    this.eventData,\n                    e[0],\n                    i\n                );\n                (n.data.originalEvent = t),\n                    this.processInteractive(\n                        n,\n                        this.layer.scene,\n                        this.processClick,\n                        !0\n                    ),\n                    this.emit(\"click\", n);\n            }\n        }\n        processClick(t, e, i) {\n            i && this.triggerEvent(e, \"click\", t);\n        }\n        onPointerDown(e) {\n            if (\n                this.isAble() &&\n                (!this.supportsTouchEvents || \"touch\" !== e.pointerType)\n            ) {\n                var i = this.normalizeToPointerData(e);\n                this.autoPreventDefault &&\n                    i[0].isNormalized &&\n                    e.preventDefault();\n                var n = i.length;\n                for (let t = 0; t < n; t++) {\n                    var o = i[t],\n                        r = this.getInteractionDataForPointerId(o);\n                    const s = this.configureInteractionEventForDOMEvent(\n                        this.eventData,\n                        o,\n                        r\n                    );\n                    (s.data.originalEvent = e),\n                        this.processInteractive(\n                            s,\n                            this.layer.scene,\n                            this.processPointerDown,\n                            !0\n                        ),\n                        this.emit(\"pointerdown\", s),\n                        \"touch\" === o.pointerType\n                            ? this.emit(\"touchstart\", s)\n                            : (\"mouse\" !== o.pointerType &&\n                                  \"pen\" !== o.pointerType) ||\n                              ((o = 2 === o.button),\n                              this.emit(\n                                  o ? \"rightdown\" : \"mousedown\",\n                                  this.eventData\n                              ));\n                }\n            }\n        }\n        processPointerDown(t, e, i) {\n            var n = t.data,\n                o = t.data.identifier;\n            i &&\n                (e.trackedPointers[o] || (e.trackedPointers[o] = new h(o)),\n                this.triggerEvent(e, \"pointerdown\", t),\n                \"touch\" === n.pointerType\n                    ? ((e.started = !0), this.triggerEvent(e, \"touchstart\", t))\n                    : (\"mouse\" !== n.pointerType && \"pen\" !== n.pointerType) ||\n                      ((n = 2 === n.button)\n                          ? (e.trackedPointers[o].rightDown = !0)\n                          : (e.trackedPointers[o].leftDown = !0),\n                      this.triggerEvent(e, n ? \"rightdown\" : \"mousedown\", t)));\n        }\n        onPointerComplete(e, i, n) {\n            var o = this.normalizeToPointerData(e),\n                r = o.length,\n                s = e.target !== this.interactionDOMElement ? \"outside\" : \"\";\n            for (let t = 0; t < r; t++) {\n                var a,\n                    h = o[t],\n                    c = this.getInteractionDataForPointerId(h);\n                const l = this.configureInteractionEventForDOMEvent(\n                    this.eventData,\n                    h,\n                    c\n                );\n                (l.data.originalEvent = e),\n                    this.processInteractive(l, this.layer.scene, n, i || !s),\n                    this.emit(i ? \"pointercancel\" : `pointerup${s}`, l),\n                    \"mouse\" === h.pointerType || \"pen\" === h.pointerType\n                        ? ((a = 2 === h.button),\n                          this.emit(a ? `rightup${s}` : `mouseup${s}`, l))\n                        : \"touch\" === h.pointerType &&\n                          (this.emit(i ? \"touchcancel\" : `touchend${s}`, l),\n                          this.releaseInteractionDataForPointerId(\n                              h.pointerId,\n                              c\n                          ));\n            }\n        }\n        onPointerCancel(t) {\n            this.isAble() &&\n                ((this.supportsTouchEvents && \"touch\" === t.pointerType) ||\n                    this.onPointerComplete(t, !0, this.processPointerCancel));\n        }\n        processPointerCancel(t, e) {\n            var i = t.data,\n                n = t.data.identifier;\n            void 0 !== e.trackedPointers[n] &&\n                (delete e.trackedPointers[n],\n                this.triggerEvent(e, \"pointercancel\", t),\n                \"touch\" === i.pointerType &&\n                    this.triggerEvent(e, \"touchcancel\", t));\n        }\n        onPointerUp(t) {\n            this.isAble() &&\n                ((this.supportsTouchEvents && \"touch\" === t.pointerType) ||\n                    this.onPointerComplete(t, !1, this.processPointerUp));\n        }\n        processPointerUp(t, e, i) {\n            var n = t.data,\n                o = t.data.identifier;\n            const r = e.trackedPointers[o];\n            var s,\n                a = \"touch\" === n.pointerType;\n            (\"mouse\" !== n.pointerType && \"pen\" !== n.pointerType) ||\n                ((s = 2 === n.button),\n                (n = h.FLAGS),\n                (n = s ? n.RIGHT_DOWN : n.LEFT_DOWN),\n                (n = void 0 !== r && r.flags & n),\n                i\n                    ? (this.triggerEvent(e, s ? \"rightup\" : \"mouseup\", t),\n                      n &&\n                          this.triggerEvent(\n                              e,\n                              s ? \"rightclick\" : \"leftclick\",\n                              t\n                          ))\n                    : n &&\n                      this.triggerEvent(\n                          e,\n                          s ? \"rightupoutside\" : \"mouseupoutside\",\n                          t\n                      ),\n                r && (s ? (r.rightDown = !1) : (r.leftDown = !1))),\n                a &&\n                    e.started &&\n                    ((e.started = !1), this.triggerEvent(e, \"touchend\", t)),\n                i\n                    ? (this.triggerEvent(e, \"pointerup\", t),\n                      r &&\n                          (this.triggerEvent(e, \"pointertap\", t),\n                          a && (this.triggerEvent(e, \"tap\", t), (r.over = !1))))\n                    : r &&\n                      (this.triggerEvent(e, \"pointerupoutside\", t),\n                      a && this.triggerEvent(e, \"touchendoutside\", t)),\n                r && r.none && delete e.trackedPointers[o];\n        }\n        onPointerMove(e) {\n            if (\n                this.isAble() &&\n                (!this.supportsTouchEvents || \"touch\" !== e.pointerType)\n            ) {\n                var i = this.normalizeToPointerData(e);\n                \"mouse\" === i[0].pointerType &&\n                    ((this.didMove = !0), (this.cursor = null));\n                var n = i.length;\n                for (let t = 0; t < n; t++) {\n                    var o = i[t],\n                        r = this.getInteractionDataForPointerId(o);\n                    const s = this.configureInteractionEventForDOMEvent(\n                        this.eventData,\n                        o,\n                        r\n                    );\n                    s.data.originalEvent = e;\n                    r = \"touch\" !== o.pointerType || this.moveWhenInside;\n                    this.processInteractive(\n                        s,\n                        this.layer.scene,\n                        this.processPointerMove,\n                        r\n                    ),\n                        this.emit(\"pointermove\", s),\n                        \"touch\" === o.pointerType && this.emit(\"touchmove\", s),\n                        (\"mouse\" !== o.pointerType &&\n                            \"pen\" !== o.pointerType) ||\n                            this.emit(\"mousemove\", s);\n                }\n                \"mouse\" === i[0].pointerType && this.setCursorMode(this.cursor);\n            }\n        }\n        processPointerMove(t, e, i) {\n            var n = t.data,\n                o = \"touch\" === n.pointerType,\n                n = \"mouse\" === n.pointerType || \"pen\" === n.pointerType;\n            n && this.processPointerOverOut(t, e, i),\n                o && e.started && this.triggerEvent(e, \"touchmove\", t),\n                (this.moveWhenInside && !i) ||\n                    (this.triggerEvent(e, \"pointermove\", t),\n                    n && this.triggerEvent(e, \"mousemove\", t));\n        }\n        onPointerOut(t) {\n            if (\n                this.isAble() &&\n                (!this.supportsTouchEvents || \"touch\" !== t.pointerType)\n            ) {\n                var e = this.normalizeToPointerData(t)[0];\n                \"mouse\" === e.pointerType &&\n                    ((this.mouseOverRenderer = !1), this.setCursorMode(null));\n                t = this.getInteractionDataForPointerId(e);\n                const i = this.configureInteractionEventForDOMEvent(\n                    this.eventData,\n                    e,\n                    t\n                );\n                (i.data.originalEvent = e),\n                    this.processInteractive(\n                        i,\n                        this.layer.scene,\n                        this.processPointerOverOut,\n                        !1\n                    ),\n                    this.emit(\"pointerout\", i),\n                    \"mouse\" === e.pointerType || \"pen\" === e.pointerType\n                        ? this.emit(\"mouseout\", i)\n                        : this.releaseInteractionDataForPointerId(t.identifier);\n            }\n        }\n        processPointerOverOut(t, e, i) {\n            var n = t.data,\n                o = t.data.identifier,\n                n = \"mouse\" === n.pointerType || \"pen\" === n.pointerType;\n            let r = e.trackedPointers[o];\n            i && !r && (r = e.trackedPointers[o] = new h(o)),\n                void 0 !== r &&\n                    (i && this.mouseOverRenderer\n                        ? (r.over ||\n                              ((r.over = !0),\n                              this.triggerEvent(e, \"pointerover\", t),\n                              n && this.triggerEvent(e, \"mouseover\", t)),\n                          n && null === this.cursor && (this.cursor = e.cursor))\n                        : r.over &&\n                          ((r.over = !1),\n                          this.triggerEvent(e, \"pointerout\", this.eventData),\n                          n && this.triggerEvent(e, \"mouseout\", t),\n                          r.none && delete e.trackedPointers[o]));\n        }\n        onPointerOver(t) {\n            if (this.isAble()) {\n                var e = this.normalizeToPointerData(t)[0],\n                    t = this.getInteractionDataForPointerId(e);\n                const i = this.configureInteractionEventForDOMEvent(\n                    this.eventData,\n                    e,\n                    t\n                );\n                \"mouse\" === (i.data.originalEvent = e).pointerType &&\n                    (this.mouseOverRenderer = !0),\n                    this.emit(\"pointerover\", i),\n                    (\"mouse\" !== e.pointerType && \"pen\" !== e.pointerType) ||\n                        this.emit(\"mouseover\", i);\n            }\n        }\n        getInteractionDataForPointerId(t) {\n            var e = t.pointerId;\n            let i;\n            return (\n                e === l || \"mouse\" === t.pointerType\n                    ? (i = this.mouse)\n                    : this.activeInteractionData[e]\n                    ? (i = this.activeInteractionData[e])\n                    : ((i = this.interactionDataPool.pop() || new s()),\n                      (i.identifier = e),\n                      (this.activeInteractionData[e] = i)),\n                i._copyEvent(t),\n                i\n            );\n        }\n        releaseInteractionDataForPointerId(t) {\n            const e = this.activeInteractionData[t];\n            e &&\n                (delete this.activeInteractionData[t],\n                e._reset(),\n                this.interactionDataPool.push(e));\n        }\n        mapPositionToPoint(t, e, i) {\n            let n;\n            (n = this.interactionDOMElement.parentElement\n                ? this.interactionDOMElement.getBoundingClientRect()\n                : { x: 0, y: 0, left: 0, top: 0, width: 0, height: 0 }),\n                (t.x = ((e - n.left) / n.width) * 2 - 1),\n                (t.y = 2 * -((i - n.top) / n.height) + 1);\n        }\n        configureInteractionEventForDOMEvent(t, e, i) {\n            return (\n                (t.data = i),\n                this.mapPositionToPoint(i.global, e.clientX, e.clientY),\n                this.layer &&\n                    this.layer.interactive &&\n                    this.raycaster.setFromCamera(i.global, this.layer.camera),\n                \"touch\" === e.pointerType &&\n                    ((e.globalX = i.global.x), (e.globalY = i.global.y)),\n                (i.originalEvent = e),\n                t._reset(),\n                (t.intersects = this.raycaster.intersectObjects(\n                    this.scene.children,\n                    !0\n                )),\n                t\n            );\n        }\n        normalizeToPointerData(i) {\n            const n = [];\n            if (this.supportsTouchEvents && i instanceof TouchEvent)\n                for (let t = 0, e = i.changedTouches.length; t < e; t++) {\n                    const o = i.changedTouches[t];\n                    void 0 === o.button &&\n                        (o.button = i.touches.length ? 1 : 0),\n                        void 0 === o.buttons &&\n                            (o.buttons = i.touches.length ? 1 : 0),\n                        void 0 === o.isPrimary &&\n                            (o.isPrimary =\n                                1 === i.touches.length &&\n                                \"touchstart\" === i.type),\n                        void 0 === o.width && (o.width = o.radiusX || 1),\n                        void 0 === o.height && (o.height = o.radiusY || 1),\n                        void 0 === o.tiltX && (o.tiltX = 0),\n                        void 0 === o.tiltY && (o.tiltY = 0),\n                        void 0 === o.pointerType && (o.pointerType = \"touch\"),\n                        void 0 === o.pointerId &&\n                            (o.pointerId = o.identifier || 0),\n                        void 0 === o.pressure && (o.pressure = o.force || 0.5),\n                        (o.twist = 0),\n                        void (o.tangentialPressure = 0) === o.layerX &&\n                            (o.layerX = o.offsetX = o.clientX),\n                        void 0 === o.layerY &&\n                            (o.layerY = o.offsetY = o.clientY),\n                        (o.isNormalized = !0),\n                        n.push(o);\n                }\n            else\n                !(i instanceof MouseEvent) ||\n                    (this.supportsPointerEvents &&\n                        i instanceof window.PointerEvent) ||\n                    (void 0 === i.isPrimary && (i.isPrimary = !0),\n                    void 0 === i.width && (i.width = 1),\n                    void 0 === i.height && (i.height = 1),\n                    void 0 === i.tiltX && (i.tiltX = 0),\n                    void 0 === i.tiltY && (i.tiltY = 0),\n                    void 0 === i.pointerType && (i.pointerType = \"mouse\"),\n                    void 0 === i.pointerId && (i.pointerId = l),\n                    void 0 === i.pressure && (i.pressure = 0.5),\n                    (i.twist = 0),\n                    (i.tangentialPressure = 0),\n                    (i.isNormalized = !0)),\n                    n.push(i);\n            return n;\n        }\n        destroy() {\n            this.removeEvents(),\n                this.removeAllListeners(),\n                (this.renderer = null),\n                (this.mouse = null),\n                (this.eventData = null),\n                (this.interactionDOMElement = null),\n                (this.onPointerDown = null),\n                (this.processPointerDown = null),\n                (this.onPointerUp = null),\n                (this.processPointerUp = null),\n                (this.onPointerCancel = null),\n                (this.processPointerCancel = null),\n                (this.onPointerMove = null),\n                (this.processPointerMove = null),\n                (this.onPointerOut = null),\n                (this.processPointerOverOut = null),\n                (this.onPointerOver = null),\n                (this._tempPoint = null);\n        }\n    }\n    !(function () {\n        let o = 0;\n        var e = [\"ms\", \"moz\", \"webkit\", \"o\"];\n        for (let t = 0; t < e.length && !window.requestAnimationFrame; ++t)\n            (window.requestAnimationFrame =\n                window[e[t] + \"RequestAnimationFrame\"]),\n                (window.cancelAnimationFrame =\n                    window[e[t] + \"CancelAnimationFrame\"] ||\n                    window[e[t] + \"CancelRequestAnimationFrame\"]);\n        window.requestAnimationFrame ||\n            (window.requestAnimationFrame = function (t) {\n                let e = new Date().getTime(),\n                    i = Math.max(0, 16 - (e - o));\n                var n = window.setTimeout(function () {\n                    t(e + i);\n                }, i);\n                return (o = e + i), n;\n            }),\n            window.cancelAnimationFrame ||\n                (window.cancelAnimationFrame = function (t) {\n                    clearTimeout(t);\n                }),\n            (window.RAF = window.requestAnimationFrame),\n            (window.CAF = window.cancelAnimationFrame);\n    })();\n    class v extends o.EventDispatcher {\n        constructor() {\n            super(),\n                (this.timer = null),\n                (this.started = !1),\n                (this.pt = 0),\n                (this.snippet = 0),\n                this.start();\n        }\n        start() {\n            if (!this.started) {\n                const t = () => {\n                    this.timeline(),\n                        this.emit(\"tick\", { snippet: this.snippet }),\n                        (this.timer = RAF(t));\n                };\n                t();\n            }\n        }\n        stop() {\n            CAF(this.timer), (this.started = !1);\n        }\n        timeline() {\n            (this.snippet = Date.now() - this.pt),\n                (0 === this.pt || 200 < this.snippet) &&\n                    ((this.pt = Date.now()),\n                    (this.snippet = Date.now() - this.pt)),\n                (this.pt += this.snippet);\n        }\n    }\n\n    return (\n        (THREE.InteractionManager = e),\n        (THREE.InteractionLayer = p),\n        (THREE.Interaction = class extends e {\n            constructor(t, e, i, n) {\n                super(t, e, i, (n = Object.assign({ autoAttach: !1 }, n))),\n                    (this.ticker = new v()),\n                    (this.update = this.update.bind(this)),\n                    this.on(\"addevents\", () => {\n                        this.ticker.on(\"tick\", this.update);\n                    }),\n                    this.on(\"removeevents\", () => {\n                        this.ticker.off(\"tick\", this.update);\n                    }),\n                    this.setTargetElement(this.renderer.domElement);\n            }\n        }),\n        t\n    );\n})({}, THREE);\n","/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\n const REVISION = '139';\n const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\n const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\n const CullFaceNone = 0;\n const CullFaceBack = 1;\n const CullFaceFront = 2;\n const CullFaceFrontBack = 3;\n const BasicShadowMap = 0;\n const PCFShadowMap = 1;\n const PCFSoftShadowMap = 2;\n const VSMShadowMap = 3;\n const FrontSide = 0;\n const BackSide = 1;\n const DoubleSide = 2;\n const FlatShading = 1;\n const SmoothShading = 2;\n const NoBlending = 0;\n const NormalBlending = 1;\n const AdditiveBlending = 2;\n const SubtractiveBlending = 3;\n const MultiplyBlending = 4;\n const CustomBlending = 5;\n const AddEquation = 100;\n const SubtractEquation = 101;\n const ReverseSubtractEquation = 102;\n const MinEquation = 103;\n const MaxEquation = 104;\n const ZeroFactor = 200;\n const OneFactor = 201;\n const SrcColorFactor = 202;\n const OneMinusSrcColorFactor = 203;\n const SrcAlphaFactor = 204;\n const OneMinusSrcAlphaFactor = 205;\n const DstAlphaFactor = 206;\n const OneMinusDstAlphaFactor = 207;\n const DstColorFactor = 208;\n const OneMinusDstColorFactor = 209;\n const SrcAlphaSaturateFactor = 210;\n const NeverDepth = 0;\n const AlwaysDepth = 1;\n const LessDepth = 2;\n const LessEqualDepth = 3;\n const EqualDepth = 4;\n const GreaterEqualDepth = 5;\n const GreaterDepth = 6;\n const NotEqualDepth = 7;\n const MultiplyOperation = 0;\n const MixOperation = 1;\n const AddOperation = 2;\n const NoToneMapping = 0;\n const LinearToneMapping = 1;\n const ReinhardToneMapping = 2;\n const CineonToneMapping = 3;\n const ACESFilmicToneMapping = 4;\n const CustomToneMapping = 5;\n \n const UVMapping = 300;\n const CubeReflectionMapping = 301;\n const CubeRefractionMapping = 302;\n const EquirectangularReflectionMapping = 303;\n const EquirectangularRefractionMapping = 304;\n const CubeUVReflectionMapping = 306;\n const RepeatWrapping = 1000;\n const ClampToEdgeWrapping = 1001;\n const MirroredRepeatWrapping = 1002;\n const NearestFilter = 1003;\n const NearestMipmapNearestFilter = 1004;\n const NearestMipMapNearestFilter = 1004;\n const NearestMipmapLinearFilter = 1005;\n const NearestMipMapLinearFilter = 1005;\n const LinearFilter = 1006;\n const LinearMipmapNearestFilter = 1007;\n const LinearMipMapNearestFilter = 1007;\n const LinearMipmapLinearFilter = 1008;\n const LinearMipMapLinearFilter = 1008;\n const UnsignedByteType = 1009;\n const ByteType = 1010;\n const ShortType = 1011;\n const UnsignedShortType = 1012;\n const IntType = 1013;\n const UnsignedIntType = 1014;\n const FloatType = 1015;\n const HalfFloatType = 1016;\n const UnsignedShort4444Type = 1017;\n const UnsignedShort5551Type = 1018;\n const UnsignedInt248Type = 1020;\n const AlphaFormat = 1021;\n const RGBFormat = 1022;\n const RGBAFormat = 1023;\n const LuminanceFormat = 1024;\n const LuminanceAlphaFormat = 1025;\n const DepthFormat = 1026;\n const DepthStencilFormat = 1027;\n const RedFormat = 1028;\n const RedIntegerFormat = 1029;\n const RGFormat = 1030;\n const RGIntegerFormat = 1031;\n const RGBAIntegerFormat = 1033;\n \n const RGB_S3TC_DXT1_Format = 33776;\n const RGBA_S3TC_DXT1_Format = 33777;\n const RGBA_S3TC_DXT3_Format = 33778;\n const RGBA_S3TC_DXT5_Format = 33779;\n const RGB_PVRTC_4BPPV1_Format = 35840;\n const RGB_PVRTC_2BPPV1_Format = 35841;\n const RGBA_PVRTC_4BPPV1_Format = 35842;\n const RGBA_PVRTC_2BPPV1_Format = 35843;\n const RGB_ETC1_Format = 36196;\n const RGB_ETC2_Format = 37492;\n const RGBA_ETC2_EAC_Format = 37496;\n const RGBA_ASTC_4x4_Format = 37808;\n const RGBA_ASTC_5x4_Format = 37809;\n const RGBA_ASTC_5x5_Format = 37810;\n const RGBA_ASTC_6x5_Format = 37811;\n const RGBA_ASTC_6x6_Format = 37812;\n const RGBA_ASTC_8x5_Format = 37813;\n const RGBA_ASTC_8x6_Format = 37814;\n const RGBA_ASTC_8x8_Format = 37815;\n const RGBA_ASTC_10x5_Format = 37816;\n const RGBA_ASTC_10x6_Format = 37817;\n const RGBA_ASTC_10x8_Format = 37818;\n const RGBA_ASTC_10x10_Format = 37819;\n const RGBA_ASTC_12x10_Format = 37820;\n const RGBA_ASTC_12x12_Format = 37821;\n const RGBA_BPTC_Format = 36492;\n const LoopOnce = 2200;\n const LoopRepeat = 2201;\n const LoopPingPong = 2202;\n const InterpolateDiscrete = 2300;\n const InterpolateLinear = 2301;\n const InterpolateSmooth = 2302;\n const ZeroCurvatureEnding = 2400;\n const ZeroSlopeEnding = 2401;\n const WrapAroundEnding = 2402;\n const NormalAnimationBlendMode = 2500;\n const AdditiveAnimationBlendMode = 2501;\n const TrianglesDrawMode = 0;\n const TriangleStripDrawMode = 1;\n const TriangleFanDrawMode = 2;\n const LinearEncoding = 3000;\n const sRGBEncoding = 3001;\n const BasicDepthPacking = 3200;\n const RGBADepthPacking = 3201;\n const TangentSpaceNormalMap = 0;\n const ObjectSpaceNormalMap = 1;\n \n // Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\n const NoColorSpace = '';\n const SRGBColorSpace = 'srgb';\n const LinearSRGBColorSpace = 'srgb-linear';\n \n const ZeroStencilOp = 0;\n const KeepStencilOp = 7680;\n const ReplaceStencilOp = 7681;\n const IncrementStencilOp = 7682;\n const DecrementStencilOp = 7683;\n const IncrementWrapStencilOp = 34055;\n const DecrementWrapStencilOp = 34056;\n const InvertStencilOp = 5386;\n \n const NeverStencilFunc = 512;\n const LessStencilFunc = 513;\n const EqualStencilFunc = 514;\n const LessEqualStencilFunc = 515;\n const GreaterStencilFunc = 516;\n const NotEqualStencilFunc = 517;\n const GreaterEqualStencilFunc = 518;\n const AlwaysStencilFunc = 519;\n \n const StaticDrawUsage = 35044;\n const DynamicDrawUsage = 35048;\n const StreamDrawUsage = 35040;\n const StaticReadUsage = 35045;\n const DynamicReadUsage = 35049;\n const StreamReadUsage = 35041;\n const StaticCopyUsage = 35046;\n const DynamicCopyUsage = 35050;\n const StreamCopyUsage = 35042;\n \n const GLSL1 = '100';\n const GLSL3 = '300 es';\n \n const _SRGBAFormat = 1035; // fallback for WebGL 1\n \n /**\n  * https://github.com/mrdoob/eventdispatcher.js/\n  */\n \n class EventDispatcher {\n \n     addEventListener( type, listener ) {\n \n         if ( this._listeners === undefined ) this._listeners = {};\n \n         const listeners = this._listeners;\n \n         if ( listeners[ type ] === undefined ) {\n \n             listeners[ type ] = [];\n \n         }\n \n         if ( listeners[ type ].indexOf( listener ) === - 1 ) {\n \n             listeners[ type ].push( listener );\n \n         }\n \n     }\n \n     hasEventListener( type, listener ) {\n \n         if ( this._listeners === undefined ) return false;\n \n         const listeners = this._listeners;\n \n         return listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n \n     }\n \n     removeEventListener( type, listener ) {\n \n         if ( this._listeners === undefined ) return;\n \n         const listeners = this._listeners;\n         const listenerArray = listeners[ type ];\n \n         if ( listenerArray !== undefined ) {\n \n             const index = listenerArray.indexOf( listener );\n \n             if ( index !== - 1 ) {\n \n                 listenerArray.splice( index, 1 );\n \n             }\n \n         }\n \n     }\n \n     dispatchEvent( event ) {\n \n         if ( this._listeners === undefined ) return;\n \n         const listeners = this._listeners;\n         const listenerArray = listeners[ event.type ];\n \n         if ( listenerArray !== undefined ) {\n \n             event.target = this;\n \n             // Make a copy, in case listeners are removed while iterating.\n             const array = listenerArray.slice( 0 );\n \n             for ( let i = 0, l = array.length; i < l; i ++ ) {\n \n                 array[ i ].call( this, event );\n \n             }\n \n             event.target = null;\n \n         }\n \n     }\n \n }\n \n const _lut = [];\n \n for ( let i = 0; i < 256; i ++ ) {\n \n     _lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n \n }\n \n let _seed = 1234567;\n \n \n const DEG2RAD = Math.PI / 180;\n const RAD2DEG = 180 / Math.PI;\n \n // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n function generateUUID() {\n \n     const d0 = Math.random() * 0xffffffff | 0;\n     const d1 = Math.random() * 0xffffffff | 0;\n     const d2 = Math.random() * 0xffffffff | 0;\n     const d3 = Math.random() * 0xffffffff | 0;\n     const uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n             _lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n             _lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n             _lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n \n     // .toLowerCase() here flattens concatenated strings to save heap memory space.\n     return uuid.toLowerCase();\n \n }\n \n function clamp( value, min, max ) {\n \n     return Math.max( min, Math.min( max, value ) );\n \n }\n \n // compute euclidean modulo of m % n\n // https://en.wikipedia.org/wiki/Modulo_operation\n function euclideanModulo( n, m ) {\n \n     return ( ( n % m ) + m ) % m;\n \n }\n \n // Linear mapping from range <a1, a2> to range <b1, b2>\n function mapLinear( x, a1, a2, b1, b2 ) {\n \n     return b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n \n }\n \n // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\n function inverseLerp( x, y, value ) {\n \n     if ( x !== y ) {\n \n         return ( value - x ) / ( y - x );\n \n     } else {\n \n         return 0;\n \n     }\n \n }\n \n // https://en.wikipedia.org/wiki/Linear_interpolation\n function lerp( x, y, t ) {\n \n     return ( 1 - t ) * x + t * y;\n \n }\n \n // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n function damp( x, y, lambda, dt ) {\n \n     return lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n \n }\n \n // https://www.desmos.com/calculator/vcsjnyz7x4\n function pingpong( x, length = 1 ) {\n \n     return length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n \n }\n \n // http://en.wikipedia.org/wiki/Smoothstep\n function smoothstep( x, min, max ) {\n \n     if ( x <= min ) return 0;\n     if ( x >= max ) return 1;\n \n     x = ( x - min ) / ( max - min );\n \n     return x * x * ( 3 - 2 * x );\n \n }\n \n function smootherstep( x, min, max ) {\n \n     if ( x <= min ) return 0;\n     if ( x >= max ) return 1;\n \n     x = ( x - min ) / ( max - min );\n \n     return x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n \n }\n \n // Random integer from <low, high> interval\n function randInt( low, high ) {\n \n     return low + Math.floor( Math.random() * ( high - low + 1 ) );\n \n }\n \n // Random float from <low, high> interval\n function randFloat( low, high ) {\n \n     return low + Math.random() * ( high - low );\n \n }\n \n // Random float from <-range/2, range/2> interval\n function randFloatSpread( range ) {\n \n     return range * ( 0.5 - Math.random() );\n \n }\n \n // Deterministic pseudo-random float in the interval [ 0, 1 ]\n function seededRandom( s ) {\n \n     if ( s !== undefined ) _seed = s;\n \n     // Mulberry32 generator\n \n     let t = _seed += 0x6D2B79F5;\n \n     t = Math.imul( t ^ t >>> 15, t | 1 );\n \n     t ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n \n     return ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n \n }\n \n function degToRad( degrees ) {\n \n     return degrees * DEG2RAD;\n \n }\n \n function radToDeg( radians ) {\n \n     return radians * RAD2DEG;\n \n }\n \n function isPowerOfTwo( value ) {\n \n     return ( value & ( value - 1 ) ) === 0 && value !== 0;\n \n }\n \n function ceilPowerOfTwo( value ) {\n \n     return Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n \n }\n \n function floorPowerOfTwo( value ) {\n \n     return Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n \n }\n \n function setQuaternionFromProperEuler( q, a, b, c, order ) {\n \n     // Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n \n     // rotations are applied to the axes in the order specified by 'order'\n     // rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n     // angles are in radians\n \n     const cos = Math.cos;\n     const sin = Math.sin;\n \n     const c2 = cos( b / 2 );\n     const s2 = sin( b / 2 );\n \n     const c13 = cos( ( a + c ) / 2 );\n     const s13 = sin( ( a + c ) / 2 );\n \n     const c1_3 = cos( ( a - c ) / 2 );\n     const s1_3 = sin( ( a - c ) / 2 );\n \n     const c3_1 = cos( ( c - a ) / 2 );\n     const s3_1 = sin( ( c - a ) / 2 );\n \n     switch ( order ) {\n \n         case 'XYX':\n             q.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n             break;\n \n         case 'YZY':\n             q.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n             break;\n \n         case 'ZXZ':\n             q.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n             break;\n \n         case 'XZX':\n             q.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n             break;\n \n         case 'YXY':\n             q.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n             break;\n \n         case 'ZYZ':\n             q.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n             break;\n \n         default:\n             console.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n \n     }\n \n }\n \n function denormalize$1( value, array ) {\n \n     switch ( array.constructor ) {\n \n         case Float32Array:\n \n             return value;\n \n         case Uint16Array:\n \n             return value / 65535.0;\n \n         case Uint8Array:\n \n             return value / 255.0;\n \n         case Int16Array:\n \n             return Math.max( value / 32767.0, - 1.0 );\n \n         case Int8Array:\n \n             return Math.max( value / 127.0, - 1.0 );\n \n         default:\n \n             throw new Error( 'Invalid component type.' );\n \n     }\n \n }\n \n function normalize( value, array ) {\n \n     switch ( array.constructor ) {\n \n         case Float32Array:\n \n             return value;\n \n         case Uint16Array:\n \n             return Math.round( value * 65535.0 );\n \n         case Uint8Array:\n \n             return Math.round( value * 255.0 );\n \n         case Int16Array:\n \n             return Math.round( value * 32767.0 );\n \n         case Int8Array:\n \n             return Math.round( value * 127.0 );\n \n         default:\n \n             throw new Error( 'Invalid component type.' );\n \n     }\n \n }\n \n var MathUtils = /*#__PURE__*/Object.freeze({\n     __proto__: null,\n     DEG2RAD: DEG2RAD,\n     RAD2DEG: RAD2DEG,\n     generateUUID: generateUUID,\n     clamp: clamp,\n     euclideanModulo: euclideanModulo,\n     mapLinear: mapLinear,\n     inverseLerp: inverseLerp,\n     lerp: lerp,\n     damp: damp,\n     pingpong: pingpong,\n     smoothstep: smoothstep,\n     smootherstep: smootherstep,\n     randInt: randInt,\n     randFloat: randFloat,\n     randFloatSpread: randFloatSpread,\n     seededRandom: seededRandom,\n     degToRad: degToRad,\n     radToDeg: radToDeg,\n     isPowerOfTwo: isPowerOfTwo,\n     ceilPowerOfTwo: ceilPowerOfTwo,\n     floorPowerOfTwo: floorPowerOfTwo,\n     setQuaternionFromProperEuler: setQuaternionFromProperEuler,\n     normalize: normalize,\n     denormalize: denormalize$1\n });\n \n class Vector2 {\n \n     constructor( x = 0, y = 0 ) {\n \n         this.x = x;\n         this.y = y;\n \n     }\n \n     get width() {\n \n         return this.x;\n \n     }\n \n     set width( value ) {\n \n         this.x = value;\n \n     }\n \n     get height() {\n \n         return this.y;\n \n     }\n \n     set height( value ) {\n \n         this.y = value;\n \n     }\n \n     set( x, y ) {\n \n         this.x = x;\n         this.y = y;\n \n         return this;\n \n     }\n \n     setScalar( scalar ) {\n \n         this.x = scalar;\n         this.y = scalar;\n \n         return this;\n \n     }\n \n     setX( x ) {\n \n         this.x = x;\n \n         return this;\n \n     }\n \n     setY( y ) {\n \n         this.y = y;\n \n         return this;\n \n     }\n \n     setComponent( index, value ) {\n \n         switch ( index ) {\n \n             case 0: this.x = value; break;\n             case 1: this.y = value; break;\n             default: throw new Error( 'index is out of range: ' + index );\n \n         }\n \n         return this;\n \n     }\n \n     getComponent( index ) {\n \n         switch ( index ) {\n \n             case 0: return this.x;\n             case 1: return this.y;\n             default: throw new Error( 'index is out of range: ' + index );\n \n         }\n \n     }\n \n     clone() {\n \n         return new this.constructor( this.x, this.y );\n \n     }\n \n     copy( v ) {\n \n         this.x = v.x;\n         this.y = v.y;\n \n         return this;\n \n     }\n \n     add( v, w ) {\n \n         if ( w !== undefined ) {\n \n             console.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n             return this.addVectors( v, w );\n \n         }\n \n         this.x += v.x;\n         this.y += v.y;\n \n         return this;\n \n     }\n \n     addScalar( s ) {\n \n         this.x += s;\n         this.y += s;\n \n         return this;\n \n     }\n \n     addVectors( a, b ) {\n \n         this.x = a.x + b.x;\n         this.y = a.y + b.y;\n \n         return this;\n \n     }\n \n     addScaledVector( v, s ) {\n \n         this.x += v.x * s;\n         this.y += v.y * s;\n \n         return this;\n \n     }\n \n     sub( v, w ) {\n \n         if ( w !== undefined ) {\n \n             console.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n             return this.subVectors( v, w );\n \n         }\n \n         this.x -= v.x;\n         this.y -= v.y;\n \n         return this;\n \n     }\n \n     subScalar( s ) {\n \n         this.x -= s;\n         this.y -= s;\n \n         return this;\n \n     }\n \n     subVectors( a, b ) {\n \n         this.x = a.x - b.x;\n         this.y = a.y - b.y;\n \n         return this;\n \n     }\n \n     multiply( v ) {\n \n         this.x *= v.x;\n         this.y *= v.y;\n \n         return this;\n \n     }\n \n     multiplyScalar( scalar ) {\n \n         this.x *= scalar;\n         this.y *= scalar;\n \n         return this;\n \n     }\n \n     divide( v ) {\n \n         this.x /= v.x;\n         this.y /= v.y;\n \n         return this;\n \n     }\n \n     divideScalar( scalar ) {\n \n         return this.multiplyScalar( 1 / scalar );\n \n     }\n \n     applyMatrix3( m ) {\n \n         const x = this.x, y = this.y;\n         const e = m.elements;\n \n         this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n         this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n \n         return this;\n \n     }\n \n     min( v ) {\n \n         this.x = Math.min( this.x, v.x );\n         this.y = Math.min( this.y, v.y );\n \n         return this;\n \n     }\n \n     max( v ) {\n \n         this.x = Math.max( this.x, v.x );\n         this.y = Math.max( this.y, v.y );\n \n         return this;\n \n     }\n \n     clamp( min, max ) {\n \n         // assumes min < max, componentwise\n \n         this.x = Math.max( min.x, Math.min( max.x, this.x ) );\n         this.y = Math.max( min.y, Math.min( max.y, this.y ) );\n \n         return this;\n \n     }\n \n     clampScalar( minVal, maxVal ) {\n \n         this.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n         this.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n \n         return this;\n \n     }\n \n     clampLength( min, max ) {\n \n         const length = this.length();\n \n         return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n \n     }\n \n     floor() {\n \n         this.x = Math.floor( this.x );\n         this.y = Math.floor( this.y );\n \n         return this;\n \n     }\n \n     ceil() {\n \n         this.x = Math.ceil( this.x );\n         this.y = Math.ceil( this.y );\n \n         return this;\n \n     }\n \n     round() {\n \n         this.x = Math.round( this.x );\n         this.y = Math.round( this.y );\n \n         return this;\n \n     }\n \n     roundToZero() {\n \n         this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n         this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n \n         return this;\n \n     }\n \n     negate() {\n \n         this.x = - this.x;\n         this.y = - this.y;\n \n         return this;\n \n     }\n \n     dot( v ) {\n \n         return this.x * v.x + this.y * v.y;\n \n     }\n \n     cross( v ) {\n \n         return this.x * v.y - this.y * v.x;\n \n     }\n \n     lengthSq() {\n \n         return this.x * this.x + this.y * this.y;\n \n     }\n \n     length() {\n \n         return Math.sqrt( this.x * this.x + this.y * this.y );\n \n     }\n \n     manhattanLength() {\n \n         return Math.abs( this.x ) + Math.abs( this.y );\n \n     }\n \n     normalize() {\n \n         return this.divideScalar( this.length() || 1 );\n \n     }\n \n     angle() {\n \n         // computes the angle in radians with respect to the positive x-axis\n \n         const angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n \n         return angle;\n \n     }\n \n     distanceTo( v ) {\n \n         return Math.sqrt( this.distanceToSquared( v ) );\n \n     }\n \n     distanceToSquared( v ) {\n \n         const dx = this.x - v.x, dy = this.y - v.y;\n         return dx * dx + dy * dy;\n \n     }\n \n     manhattanDistanceTo( v ) {\n \n         return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n \n     }\n \n     setLength( length ) {\n \n         return this.normalize().multiplyScalar( length );\n \n     }\n \n     lerp( v, alpha ) {\n \n         this.x += ( v.x - this.x ) * alpha;\n         this.y += ( v.y - this.y ) * alpha;\n \n         return this;\n \n     }\n \n     lerpVectors( v1, v2, alpha ) {\n \n         this.x = v1.x + ( v2.x - v1.x ) * alpha;\n         this.y = v1.y + ( v2.y - v1.y ) * alpha;\n \n         return this;\n \n     }\n \n     equals( v ) {\n \n         return ( ( v.x === this.x ) && ( v.y === this.y ) );\n \n     }\n \n     fromArray( array, offset = 0 ) {\n \n         this.x = array[ offset ];\n         this.y = array[ offset + 1 ];\n \n         return this;\n \n     }\n \n     toArray( array = [], offset = 0 ) {\n \n         array[ offset ] = this.x;\n         array[ offset + 1 ] = this.y;\n \n         return array;\n \n     }\n \n     fromBufferAttribute( attribute, index, offset ) {\n \n         if ( offset !== undefined ) {\n \n             console.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n \n         }\n \n         this.x = attribute.getX( index );\n         this.y = attribute.getY( index );\n \n         return this;\n \n     }\n \n     rotateAround( center, angle ) {\n \n         const c = Math.cos( angle ), s = Math.sin( angle );\n \n         const x = this.x - center.x;\n         const y = this.y - center.y;\n \n         this.x = x * c - y * s + center.x;\n         this.y = x * s + y * c + center.y;\n \n         return this;\n \n     }\n \n     random() {\n \n         this.x = Math.random();\n         this.y = Math.random();\n \n         return this;\n \n     }\n \n     *[ Symbol.iterator ]() {\n \n         yield this.x;\n         yield this.y;\n \n     }\n \n }\n \n Vector2.prototype.isVector2 = true;\n \n class Matrix3 {\n \n     constructor() {\n \n         this.elements = [\n \n             1, 0, 0,\n             0, 1, 0,\n             0, 0, 1\n \n         ];\n \n         if ( arguments.length > 0 ) {\n \n             console.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n \n         }\n \n     }\n \n     set( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n \n         const te = this.elements;\n \n         te[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n         te[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n         te[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n \n         return this;\n \n     }\n \n     identity() {\n \n         this.set(\n \n             1, 0, 0,\n             0, 1, 0,\n             0, 0, 1\n \n         );\n \n         return this;\n \n     }\n \n     copy( m ) {\n \n         const te = this.elements;\n         const me = m.elements;\n \n         te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n         te[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n         te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n \n         return this;\n \n     }\n \n     extractBasis( xAxis, yAxis, zAxis ) {\n \n         xAxis.setFromMatrix3Column( this, 0 );\n         yAxis.setFromMatrix3Column( this, 1 );\n         zAxis.setFromMatrix3Column( this, 2 );\n \n         return this;\n \n     }\n \n     setFromMatrix4( m ) {\n \n         const me = m.elements;\n \n         this.set(\n \n             me[ 0 ], me[ 4 ], me[ 8 ],\n             me[ 1 ], me[ 5 ], me[ 9 ],\n             me[ 2 ], me[ 6 ], me[ 10 ]\n \n         );\n \n         return this;\n \n     }\n \n     multiply( m ) {\n \n         return this.multiplyMatrices( this, m );\n \n     }\n \n     premultiply( m ) {\n \n         return this.multiplyMatrices( m, this );\n \n     }\n \n     multiplyMatrices( a, b ) {\n \n         const ae = a.elements;\n         const be = b.elements;\n         const te = this.elements;\n \n         const a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n         const a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n         const a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n \n         const b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n         const b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n         const b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n \n         te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n         te[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n         te[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n \n         te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n         te[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n         te[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n \n         te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n         te[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n         te[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n \n         return this;\n \n     }\n \n     multiplyScalar( s ) {\n \n         const te = this.elements;\n \n         te[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n         te[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n         te[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n \n         return this;\n \n     }\n \n     determinant() {\n \n         const te = this.elements;\n \n         const a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n             d = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n             g = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n \n         return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n \n     }\n \n     invert() {\n \n         const te = this.elements,\n \n             n11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n             n12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n             n13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n \n             t11 = n33 * n22 - n32 * n23,\n             t12 = n32 * n13 - n33 * n12,\n             t13 = n23 * n12 - n22 * n13,\n \n             det = n11 * t11 + n21 * t12 + n31 * t13;\n \n         if ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n \n         const detInv = 1 / det;\n \n         te[ 0 ] = t11 * detInv;\n         te[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n         te[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n \n         te[ 3 ] = t12 * detInv;\n         te[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n         te[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n \n         te[ 6 ] = t13 * detInv;\n         te[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n         te[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n \n         return this;\n \n     }\n \n     transpose() {\n \n         let tmp;\n         const m = this.elements;\n \n         tmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n         tmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n         tmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n \n         return this;\n \n     }\n \n     getNormalMatrix( matrix4 ) {\n \n         return this.setFromMatrix4( matrix4 ).invert().transpose();\n \n     }\n \n     transposeIntoArray( r ) {\n \n         const m = this.elements;\n \n         r[ 0 ] = m[ 0 ];\n         r[ 1 ] = m[ 3 ];\n         r[ 2 ] = m[ 6 ];\n         r[ 3 ] = m[ 1 ];\n         r[ 4 ] = m[ 4 ];\n         r[ 5 ] = m[ 7 ];\n         r[ 6 ] = m[ 2 ];\n         r[ 7 ] = m[ 5 ];\n         r[ 8 ] = m[ 8 ];\n \n         return this;\n \n     }\n \n     setUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n \n         const c = Math.cos( rotation );\n         const s = Math.sin( rotation );\n \n         this.set(\n             sx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n             - sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n             0, 0, 1\n         );\n \n         return this;\n \n     }\n \n     scale( sx, sy ) {\n \n         const te = this.elements;\n \n         te[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n         te[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n \n         return this;\n \n     }\n \n     rotate( theta ) {\n \n         const c = Math.cos( theta );\n         const s = Math.sin( theta );\n \n         const te = this.elements;\n \n         const a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n         const a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n \n         te[ 0 ] = c * a11 + s * a21;\n         te[ 3 ] = c * a12 + s * a22;\n         te[ 6 ] = c * a13 + s * a23;\n \n         te[ 1 ] = - s * a11 + c * a21;\n         te[ 4 ] = - s * a12 + c * a22;\n         te[ 7 ] = - s * a13 + c * a23;\n \n         return this;\n \n     }\n \n     translate( tx, ty ) {\n \n         const te = this.elements;\n \n         te[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n         te[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n \n         return this;\n \n     }\n \n     equals( matrix ) {\n \n         const te = this.elements;\n         const me = matrix.elements;\n \n         for ( let i = 0; i < 9; i ++ ) {\n \n             if ( te[ i ] !== me[ i ] ) return false;\n \n         }\n \n         return true;\n \n     }\n \n     fromArray( array, offset = 0 ) {\n \n         for ( let i = 0; i < 9; i ++ ) {\n \n             this.elements[ i ] = array[ i + offset ];\n \n         }\n \n         return this;\n \n     }\n \n     toArray( array = [], offset = 0 ) {\n \n         const te = this.elements;\n \n         array[ offset ] = te[ 0 ];\n         array[ offset + 1 ] = te[ 1 ];\n         array[ offset + 2 ] = te[ 2 ];\n \n         array[ offset + 3 ] = te[ 3 ];\n         array[ offset + 4 ] = te[ 4 ];\n         array[ offset + 5 ] = te[ 5 ];\n \n         array[ offset + 6 ] = te[ 6 ];\n         array[ offset + 7 ] = te[ 7 ];\n         array[ offset + 8 ] = te[ 8 ];\n \n         return array;\n \n     }\n \n     clone() {\n \n         return new this.constructor().fromArray( this.elements );\n \n     }\n \n }\n \n Matrix3.prototype.isMatrix3 = true;\n \n function arrayNeedsUint32( array ) {\n \n     // assumes larger values usually on last\n \n     for ( let i = array.length - 1; i >= 0; -- i ) {\n \n         if ( array[ i ] > 65535 ) return true;\n \n     }\n \n     return false;\n \n }\n \n const TYPED_ARRAYS = {\n     Int8Array: Int8Array,\n     Uint8Array: Uint8Array,\n     Uint8ClampedArray: Uint8ClampedArray,\n     Int16Array: Int16Array,\n     Uint16Array: Uint16Array,\n     Int32Array: Int32Array,\n     Uint32Array: Uint32Array,\n     Float32Array: Float32Array,\n     Float64Array: Float64Array\n };\n \n function getTypedArray( type, buffer ) {\n \n     return new TYPED_ARRAYS[ type ]( buffer );\n \n }\n \n function createElementNS( name ) {\n \n     return document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n \n }\n \n function SRGBToLinear( c ) {\n \n     return ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n \n }\n \n function LinearToSRGB( c ) {\n \n     return ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n \n }\n \n // JavaScript RGB-to-RGB transforms, defined as\n // FN[InputColorSpace][OutputColorSpace] callback functions.\n const FN = {\n     [ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\n     [ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\n };\n \n const ColorManagement = {\n \n     legacyMode: true,\n \n     get workingColorSpace() {\n \n         return LinearSRGBColorSpace;\n \n     },\n \n     set workingColorSpace( colorSpace ) {\n \n         console.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n \n     },\n \n     convert: function ( color, sourceColorSpace, targetColorSpace ) {\n \n         if ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n \n             return color;\n \n         }\n \n         if ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\n \n             const fn = FN[ sourceColorSpace ][ targetColorSpace ];\n \n             color.r = fn( color.r );\n             color.g = fn( color.g );\n             color.b = fn( color.b );\n \n             return color;\n \n         }\n \n         throw new Error( 'Unsupported color space conversion.' );\n \n     },\n \n     fromWorkingColorSpace: function ( color, targetColorSpace ) {\n \n         return this.convert( color, this.workingColorSpace, targetColorSpace );\n \n     },\n \n     toWorkingColorSpace: function ( color, sourceColorSpace ) {\n \n         return this.convert( color, sourceColorSpace, this.workingColorSpace );\n \n     },\n \n };\n \n const _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n     'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n     'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n     'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n     'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n     'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n     'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n     'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n     'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n     'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n     'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n     'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n     'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n     'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n     'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n     'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n     'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n     'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n     'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n     'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n     'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n     'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n     'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n     'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n \n const _rgb = { r: 0, g: 0, b: 0 };\n const _hslA = { h: 0, s: 0, l: 0 };\n const _hslB = { h: 0, s: 0, l: 0 };\n \n function hue2rgb( p, q, t ) {\n \n     if ( t < 0 ) t += 1;\n     if ( t > 1 ) t -= 1;\n     if ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n     if ( t < 1 / 2 ) return q;\n     if ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n     return p;\n \n }\n \n function toComponents( source, target ) {\n \n     target.r = source.r;\n     target.g = source.g;\n     target.b = source.b;\n \n     return target;\n \n }\n \n class Color {\n \n     constructor( r, g, b ) {\n \n         if ( g === undefined && b === undefined ) {\n \n             // r is THREE.Color, hex or string\n             return this.set( r );\n \n         }\n \n         return this.setRGB( r, g, b );\n \n     }\n \n     set( value ) {\n \n         if ( value && value.isColor ) {\n \n             this.copy( value );\n \n         } else if ( typeof value === 'number' ) {\n \n             this.setHex( value );\n \n         } else if ( typeof value === 'string' ) {\n \n             this.setStyle( value );\n \n         }\n \n         return this;\n \n     }\n \n     setScalar( scalar ) {\n \n         this.r = scalar;\n         this.g = scalar;\n         this.b = scalar;\n \n         return this;\n \n     }\n \n     setHex( hex, colorSpace = SRGBColorSpace ) {\n \n         hex = Math.floor( hex );\n \n         this.r = ( hex >> 16 & 255 ) / 255;\n         this.g = ( hex >> 8 & 255 ) / 255;\n         this.b = ( hex & 255 ) / 255;\n \n         ColorManagement.toWorkingColorSpace( this, colorSpace );\n \n         return this;\n \n     }\n \n     setRGB( r, g, b, colorSpace = LinearSRGBColorSpace ) {\n \n         this.r = r;\n         this.g = g;\n         this.b = b;\n \n         ColorManagement.toWorkingColorSpace( this, colorSpace );\n \n         return this;\n \n     }\n \n     setHSL( h, s, l, colorSpace = LinearSRGBColorSpace ) {\n \n         // h,s,l ranges are in 0.0 - 1.0\n         h = euclideanModulo( h, 1 );\n         s = clamp( s, 0, 1 );\n         l = clamp( l, 0, 1 );\n \n         if ( s === 0 ) {\n \n             this.r = this.g = this.b = l;\n \n         } else {\n \n             const p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n             const q = ( 2 * l ) - p;\n \n             this.r = hue2rgb( q, p, h + 1 / 3 );\n             this.g = hue2rgb( q, p, h );\n             this.b = hue2rgb( q, p, h - 1 / 3 );\n \n         }\n \n         ColorManagement.toWorkingColorSpace( this, colorSpace );\n \n         return this;\n \n     }\n \n     setStyle( style, colorSpace = SRGBColorSpace ) {\n \n         function handleAlpha( string ) {\n \n             if ( string === undefined ) return;\n \n             if ( parseFloat( string ) < 1 ) {\n \n                 console.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n \n             }\n \n         }\n \n \n         let m;\n \n         if ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n \n             // rgb / hsl\n \n             let color;\n             const name = m[ 1 ];\n             const components = m[ 2 ];\n \n             switch ( name ) {\n \n                 case 'rgb':\n                 case 'rgba':\n \n                     if ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n \n                         // rgb(255,0,0) rgba(255,0,0,0.5)\n                         this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n                         this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n                         this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n \n                         ColorManagement.toWorkingColorSpace( this, colorSpace );\n \n                         handleAlpha( color[ 4 ] );\n \n                         return this;\n \n                     }\n \n                     if ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n \n                         // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n                         this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n                         this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n                         this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n \n                         ColorManagement.toWorkingColorSpace( this, colorSpace );\n \n                         handleAlpha( color[ 4 ] );\n \n                         return this;\n \n                     }\n \n                     break;\n \n                 case 'hsl':\n                 case 'hsla':\n \n                     if ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n \n                         // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n                         const h = parseFloat( color[ 1 ] ) / 360;\n                         const s = parseInt( color[ 2 ], 10 ) / 100;\n                         const l = parseInt( color[ 3 ], 10 ) / 100;\n \n                         handleAlpha( color[ 4 ] );\n \n                         return this.setHSL( h, s, l, colorSpace );\n \n                     }\n \n                     break;\n \n             }\n \n         } else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n \n             // hex color\n \n             const hex = m[ 1 ];\n             const size = hex.length;\n \n             if ( size === 3 ) {\n \n                 // #ff0\n                 this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n                 this.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n                 this.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n \n                 ColorManagement.toWorkingColorSpace( this, colorSpace );\n \n                 return this;\n \n             } else if ( size === 6 ) {\n \n                 // #ff0000\n                 this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n                 this.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n                 this.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n \n                 ColorManagement.toWorkingColorSpace( this, colorSpace );\n \n                 return this;\n \n             }\n \n         }\n \n         if ( style && style.length > 0 ) {\n \n             return this.setColorName( style, colorSpace );\n \n         }\n \n         return this;\n \n     }\n \n     setColorName( style, colorSpace = SRGBColorSpace ) {\n \n         // color keywords\n         const hex = _colorKeywords[ style.toLowerCase() ];\n \n         if ( hex !== undefined ) {\n \n             // red\n             this.setHex( hex, colorSpace );\n \n         } else {\n \n             // unknown color\n             console.warn( 'THREE.Color: Unknown color ' + style );\n \n         }\n \n         return this;\n \n     }\n \n     clone() {\n \n         return new this.constructor( this.r, this.g, this.b );\n \n     }\n \n     copy( color ) {\n \n         this.r = color.r;\n         this.g = color.g;\n         this.b = color.b;\n \n         return this;\n \n     }\n \n     copySRGBToLinear( color ) {\n \n         this.r = SRGBToLinear( color.r );\n         this.g = SRGBToLinear( color.g );\n         this.b = SRGBToLinear( color.b );\n \n         return this;\n \n     }\n \n     copyLinearToSRGB( color ) {\n \n         this.r = LinearToSRGB( color.r );\n         this.g = LinearToSRGB( color.g );\n         this.b = LinearToSRGB( color.b );\n \n         return this;\n \n     }\n \n     convertSRGBToLinear() {\n \n         this.copySRGBToLinear( this );\n \n         return this;\n \n     }\n \n     convertLinearToSRGB() {\n \n         this.copyLinearToSRGB( this );\n \n         return this;\n \n     }\n \n     getHex( colorSpace = SRGBColorSpace ) {\n \n         ColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n \n         return clamp( _rgb.r * 255, 0, 255 ) << 16 ^ clamp( _rgb.g * 255, 0, 255 ) << 8 ^ clamp( _rgb.b * 255, 0, 255 ) << 0;\n \n     }\n \n     getHexString( colorSpace = SRGBColorSpace ) {\n \n         return ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n \n     }\n \n     getHSL( target, colorSpace = LinearSRGBColorSpace ) {\n \n         // h,s,l ranges are in 0.0 - 1.0\n \n         ColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n \n         const r = _rgb.r, g = _rgb.g, b = _rgb.b;\n \n         const max = Math.max( r, g, b );\n         const min = Math.min( r, g, b );\n \n         let hue, saturation;\n         const lightness = ( min + max ) / 2.0;\n \n         if ( min === max ) {\n \n             hue = 0;\n             saturation = 0;\n \n         } else {\n \n             const delta = max - min;\n \n             saturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n \n             switch ( max ) {\n \n                 case r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n                 case g: hue = ( b - r ) / delta + 2; break;\n                 case b: hue = ( r - g ) / delta + 4; break;\n \n             }\n \n             hue /= 6;\n \n         }\n \n         target.h = hue;\n         target.s = saturation;\n         target.l = lightness;\n \n         return target;\n \n     }\n \n     getRGB( target, colorSpace = LinearSRGBColorSpace ) {\n \n         ColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n \n         target.r = _rgb.r;\n         target.g = _rgb.g;\n         target.b = _rgb.b;\n \n         return target;\n \n     }\n \n     getStyle( colorSpace = SRGBColorSpace ) {\n \n         ColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n \n         if ( colorSpace !== SRGBColorSpace ) {\n \n             // Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n             return `color(${ colorSpace } ${ _rgb.r } ${ _rgb.g } ${ _rgb.b })`;\n \n         }\n \n         return `rgb(${( _rgb.r * 255 ) | 0},${( _rgb.g * 255 ) | 0},${( _rgb.b * 255 ) | 0})`;\n \n     }\n \n     offsetHSL( h, s, l ) {\n \n         this.getHSL( _hslA );\n \n         _hslA.h += h; _hslA.s += s; _hslA.l += l;\n \n         this.setHSL( _hslA.h, _hslA.s, _hslA.l );\n \n         return this;\n \n     }\n \n     add( color ) {\n \n         this.r += color.r;\n         this.g += color.g;\n         this.b += color.b;\n \n         return this;\n \n     }\n \n     addColors( color1, color2 ) {\n \n         this.r = color1.r + color2.r;\n         this.g = color1.g + color2.g;\n         this.b = color1.b + color2.b;\n \n         return this;\n \n     }\n \n     addScalar( s ) {\n \n         this.r += s;\n         this.g += s;\n         this.b += s;\n \n         return this;\n \n     }\n \n     sub( color ) {\n \n         this.r = Math.max( 0, this.r - color.r );\n         this.g = Math.max( 0, this.g - color.g );\n         this.b = Math.max( 0, this.b - color.b );\n \n         return this;\n \n     }\n \n     multiply( color ) {\n \n         this.r *= color.r;\n         this.g *= color.g;\n         this.b *= color.b;\n \n         return this;\n \n     }\n \n     multiplyScalar( s ) {\n \n         this.r *= s;\n         this.g *= s;\n         this.b *= s;\n \n         return this;\n \n     }\n \n     lerp( color, alpha ) {\n \n         this.r += ( color.r - this.r ) * alpha;\n         this.g += ( color.g - this.g ) * alpha;\n         this.b += ( color.b - this.b ) * alpha;\n \n         return this;\n \n     }\n \n     lerpColors( color1, color2, alpha ) {\n \n         this.r = color1.r + ( color2.r - color1.r ) * alpha;\n         this.g = color1.g + ( color2.g - color1.g ) * alpha;\n         this.b = color1.b + ( color2.b - color1.b ) * alpha;\n \n         return this;\n \n     }\n \n     lerpHSL( color, alpha ) {\n \n         this.getHSL( _hslA );\n         color.getHSL( _hslB );\n \n         const h = lerp( _hslA.h, _hslB.h, alpha );\n         const s = lerp( _hslA.s, _hslB.s, alpha );\n         const l = lerp( _hslA.l, _hslB.l, alpha );\n \n         this.setHSL( h, s, l );\n \n         return this;\n \n     }\n \n     equals( c ) {\n \n         return ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n \n     }\n \n     fromArray( array, offset = 0 ) {\n \n         this.r = array[ offset ];\n         this.g = array[ offset + 1 ];\n         this.b = array[ offset + 2 ];\n \n         return this;\n \n     }\n \n     toArray( array = [], offset = 0 ) {\n \n         array[ offset ] = this.r;\n         array[ offset + 1 ] = this.g;\n         array[ offset + 2 ] = this.b;\n \n         return array;\n \n     }\n \n     fromBufferAttribute( attribute, index ) {\n \n         this.r = attribute.getX( index );\n         this.g = attribute.getY( index );\n         this.b = attribute.getZ( index );\n \n         if ( attribute.normalized === true ) {\n \n             // assuming Uint8Array\n \n             this.r /= 255;\n             this.g /= 255;\n             this.b /= 255;\n \n         }\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         return this.getHex();\n \n     }\n \n }\n \n Color.NAMES = _colorKeywords;\n \n Color.prototype.isColor = true;\n Color.prototype.r = 1;\n Color.prototype.g = 1;\n Color.prototype.b = 1;\n \n let _canvas;\n \n class ImageUtils {\n \n     static getDataURL( image ) {\n \n         if ( /^data:/i.test( image.src ) ) {\n \n             return image.src;\n \n         }\n \n         if ( typeof HTMLCanvasElement == 'undefined' ) {\n \n             return image.src;\n \n         }\n \n         let canvas;\n \n         if ( image instanceof HTMLCanvasElement ) {\n \n             canvas = image;\n \n         } else {\n \n             if ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n \n             _canvas.width = image.width;\n             _canvas.height = image.height;\n \n             const context = _canvas.getContext( '2d' );\n \n             if ( image instanceof ImageData ) {\n \n                 context.putImageData( image, 0, 0 );\n \n             } else {\n \n                 context.drawImage( image, 0, 0, image.width, image.height );\n \n             }\n \n             canvas = _canvas;\n \n         }\n \n         if ( canvas.width > 2048 || canvas.height > 2048 ) {\n \n             console.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n \n             return canvas.toDataURL( 'image/jpeg', 0.6 );\n \n         } else {\n \n             return canvas.toDataURL( 'image/png' );\n \n         }\n \n     }\n \n     static sRGBToLinear( image ) {\n \n         if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n             ( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n             ( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n \n             const canvas = createElementNS( 'canvas' );\n \n             canvas.width = image.width;\n             canvas.height = image.height;\n \n             const context = canvas.getContext( '2d' );\n             context.drawImage( image, 0, 0, image.width, image.height );\n \n             const imageData = context.getImageData( 0, 0, image.width, image.height );\n             const data = imageData.data;\n \n             for ( let i = 0; i < data.length; i ++ ) {\n \n                 data[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n \n             }\n \n             context.putImageData( imageData, 0, 0 );\n \n             return canvas;\n \n         } else if ( image.data ) {\n \n             const data = image.data.slice( 0 );\n \n             for ( let i = 0; i < data.length; i ++ ) {\n \n                 if ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n \n                     data[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n \n                 } else {\n \n                     // assuming float\n \n                     data[ i ] = SRGBToLinear( data[ i ] );\n \n                 }\n \n             }\n \n             return {\n                 data: data,\n                 width: image.width,\n                 height: image.height\n             };\n \n         } else {\n \n             console.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n             return image;\n \n         }\n \n     }\n \n }\n \n class Source {\n \n     constructor( data = null ) {\n \n         this.uuid = generateUUID();\n \n         this.data = data;\n \n         this.version = 0;\n \n     }\n \n     set needsUpdate( value ) {\n \n         if ( value === true ) this.version ++;\n \n     }\n \n     toJSON( meta ) {\n \n         const isRootObject = ( meta === undefined || typeof meta === 'string' );\n \n         if ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n \n             return meta.images[ this.uuid ];\n \n         }\n \n         const output = {\n             uuid: this.uuid,\n             url: ''\n         };\n \n         const data = this.data;\n \n         if ( data !== null ) {\n \n             let url;\n \n             if ( Array.isArray( data ) ) {\n \n                 // cube texture\n \n                 url = [];\n \n                 for ( let i = 0, l = data.length; i < l; i ++ ) {\n \n                     if ( data[ i ].isDataTexture ) {\n \n                         url.push( serializeImage( data[ i ].image ) );\n \n                     } else {\n \n                         url.push( serializeImage( data[ i ] ) );\n \n                     }\n \n                 }\n \n             } else {\n \n                 // texture\n \n                 url = serializeImage( data );\n \n             }\n \n             output.url = url;\n \n         }\n \n         if ( ! isRootObject ) {\n \n             meta.images[ this.uuid ] = output;\n \n         }\n \n         return output;\n \n     }\n \n }\n \n function serializeImage( image ) {\n \n     if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n         ( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n         ( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n \n         // default images\n \n         return ImageUtils.getDataURL( image );\n \n     } else {\n \n         if ( image.data ) {\n \n             // images of DataTexture\n \n             return {\n                 data: Array.prototype.slice.call( image.data ),\n                 width: image.width,\n                 height: image.height,\n                 type: image.data.constructor.name\n             };\n \n         } else {\n \n             console.warn( 'THREE.Texture: Unable to serialize Texture.' );\n             return {};\n \n         }\n \n     }\n \n }\n \n Source.prototype.isSource = true;\n \n let textureId = 0;\n \n class Texture extends EventDispatcher {\n \n     constructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n \n         super();\n \n         Object.defineProperty( this, 'id', { value: textureId ++ } );\n \n         this.uuid = generateUUID();\n \n         this.name = '';\n \n         this.source = new Source( image );\n         this.mipmaps = [];\n \n         this.mapping = mapping;\n \n         this.wrapS = wrapS;\n         this.wrapT = wrapT;\n \n         this.magFilter = magFilter;\n         this.minFilter = minFilter;\n \n         this.anisotropy = anisotropy;\n \n         this.format = format;\n         this.internalFormat = null;\n         this.type = type;\n \n         this.offset = new Vector2( 0, 0 );\n         this.repeat = new Vector2( 1, 1 );\n         this.center = new Vector2( 0, 0 );\n         this.rotation = 0;\n \n         this.matrixAutoUpdate = true;\n         this.matrix = new Matrix3();\n \n         this.generateMipmaps = true;\n         this.premultiplyAlpha = false;\n         this.flipY = true;\n         this.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n \n         // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n         //\n         // Also changing the encoding after already used by a Material will not automatically make the Material\n         // update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n         this.encoding = encoding;\n \n         this.userData = {};\n \n         this.version = 0;\n         this.onUpdate = null;\n \n         this.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n         this.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n \n     }\n \n     get image() {\n \n         return this.source.data;\n \n     }\n \n     set image( value ) {\n \n         this.source.data = value;\n \n     }\n \n     updateMatrix() {\n \n         this.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n     copy( source ) {\n \n         this.name = source.name;\n \n         this.source = source.source;\n         this.mipmaps = source.mipmaps.slice( 0 );\n \n         this.mapping = source.mapping;\n \n         this.wrapS = source.wrapS;\n         this.wrapT = source.wrapT;\n \n         this.magFilter = source.magFilter;\n         this.minFilter = source.minFilter;\n \n         this.anisotropy = source.anisotropy;\n \n         this.format = source.format;\n         this.internalFormat = source.internalFormat;\n         this.type = source.type;\n \n         this.offset.copy( source.offset );\n         this.repeat.copy( source.repeat );\n         this.center.copy( source.center );\n         this.rotation = source.rotation;\n \n         this.matrixAutoUpdate = source.matrixAutoUpdate;\n         this.matrix.copy( source.matrix );\n \n         this.generateMipmaps = source.generateMipmaps;\n         this.premultiplyAlpha = source.premultiplyAlpha;\n         this.flipY = source.flipY;\n         this.unpackAlignment = source.unpackAlignment;\n         this.encoding = source.encoding;\n \n         this.userData = JSON.parse( JSON.stringify( source.userData ) );\n \n         this.needsUpdate = true;\n \n         return this;\n \n     }\n \n     toJSON( meta ) {\n \n         const isRootObject = ( meta === undefined || typeof meta === 'string' );\n \n         if ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n \n             return meta.textures[ this.uuid ];\n \n         }\n \n         const output = {\n \n             metadata: {\n                 version: 4.5,\n                 type: 'Texture',\n                 generator: 'Texture.toJSON'\n             },\n \n             uuid: this.uuid,\n             name: this.name,\n \n             image: this.source.toJSON( meta ).uuid,\n \n             mapping: this.mapping,\n \n             repeat: [ this.repeat.x, this.repeat.y ],\n             offset: [ this.offset.x, this.offset.y ],\n             center: [ this.center.x, this.center.y ],\n             rotation: this.rotation,\n \n             wrap: [ this.wrapS, this.wrapT ],\n \n             format: this.format,\n             type: this.type,\n             encoding: this.encoding,\n \n             minFilter: this.minFilter,\n             magFilter: this.magFilter,\n             anisotropy: this.anisotropy,\n \n             flipY: this.flipY,\n \n             premultiplyAlpha: this.premultiplyAlpha,\n             unpackAlignment: this.unpackAlignment\n \n         };\n \n         if ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n \n         if ( ! isRootObject ) {\n \n             meta.textures[ this.uuid ] = output;\n \n         }\n \n         return output;\n \n     }\n \n     dispose() {\n \n         this.dispatchEvent( { type: 'dispose' } );\n \n     }\n \n     transformUv( uv ) {\n \n         if ( this.mapping !== UVMapping ) return uv;\n \n         uv.applyMatrix3( this.matrix );\n \n         if ( uv.x < 0 || uv.x > 1 ) {\n \n             switch ( this.wrapS ) {\n \n                 case RepeatWrapping:\n \n                     uv.x = uv.x - Math.floor( uv.x );\n                     break;\n \n                 case ClampToEdgeWrapping:\n \n                     uv.x = uv.x < 0 ? 0 : 1;\n                     break;\n \n                 case MirroredRepeatWrapping:\n \n                     if ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n \n                         uv.x = Math.ceil( uv.x ) - uv.x;\n \n                     } else {\n \n                         uv.x = uv.x - Math.floor( uv.x );\n \n                     }\n \n                     break;\n \n             }\n \n         }\n \n         if ( uv.y < 0 || uv.y > 1 ) {\n \n             switch ( this.wrapT ) {\n \n                 case RepeatWrapping:\n \n                     uv.y = uv.y - Math.floor( uv.y );\n                     break;\n \n                 case ClampToEdgeWrapping:\n \n                     uv.y = uv.y < 0 ? 0 : 1;\n                     break;\n \n                 case MirroredRepeatWrapping:\n \n                     if ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n \n                         uv.y = Math.ceil( uv.y ) - uv.y;\n \n                     } else {\n \n                         uv.y = uv.y - Math.floor( uv.y );\n \n                     }\n \n                     break;\n \n             }\n \n         }\n \n         if ( this.flipY ) {\n \n             uv.y = 1 - uv.y;\n \n         }\n \n         return uv;\n \n     }\n \n     set needsUpdate( value ) {\n \n         if ( value === true ) {\n \n             this.version ++;\n             this.source.needsUpdate = true;\n \n         }\n \n     }\n \n }\n \n Texture.DEFAULT_IMAGE = null;\n Texture.DEFAULT_MAPPING = UVMapping;\n \n Texture.prototype.isTexture = true;\n \n class Vector4 {\n \n     constructor( x = 0, y = 0, z = 0, w = 1 ) {\n \n         this.x = x;\n         this.y = y;\n         this.z = z;\n         this.w = w;\n \n     }\n \n     get width() {\n \n         return this.z;\n \n     }\n \n     set width( value ) {\n \n         this.z = value;\n \n     }\n \n     get height() {\n \n         return this.w;\n \n     }\n \n     set height( value ) {\n \n         this.w = value;\n \n     }\n \n     set( x, y, z, w ) {\n \n         this.x = x;\n         this.y = y;\n         this.z = z;\n         this.w = w;\n \n         return this;\n \n     }\n \n     setScalar( scalar ) {\n \n         this.x = scalar;\n         this.y = scalar;\n         this.z = scalar;\n         this.w = scalar;\n \n         return this;\n \n     }\n \n     setX( x ) {\n \n         this.x = x;\n \n         return this;\n \n     }\n \n     setY( y ) {\n \n         this.y = y;\n \n         return this;\n \n     }\n \n     setZ( z ) {\n \n         this.z = z;\n \n         return this;\n \n     }\n \n     setW( w ) {\n \n         this.w = w;\n \n         return this;\n \n     }\n \n     setComponent( index, value ) {\n \n         switch ( index ) {\n \n             case 0: this.x = value; break;\n             case 1: this.y = value; break;\n             case 2: this.z = value; break;\n             case 3: this.w = value; break;\n             default: throw new Error( 'index is out of range: ' + index );\n \n         }\n \n         return this;\n \n     }\n \n     getComponent( index ) {\n \n         switch ( index ) {\n \n             case 0: return this.x;\n             case 1: return this.y;\n             case 2: return this.z;\n             case 3: return this.w;\n             default: throw new Error( 'index is out of range: ' + index );\n \n         }\n \n     }\n \n     clone() {\n \n         return new this.constructor( this.x, this.y, this.z, this.w );\n \n     }\n \n     copy( v ) {\n \n         this.x = v.x;\n         this.y = v.y;\n         this.z = v.z;\n         this.w = ( v.w !== undefined ) ? v.w : 1;\n \n         return this;\n \n     }\n \n     add( v, w ) {\n \n         if ( w !== undefined ) {\n \n             console.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n             return this.addVectors( v, w );\n \n         }\n \n         this.x += v.x;\n         this.y += v.y;\n         this.z += v.z;\n         this.w += v.w;\n \n         return this;\n \n     }\n \n     addScalar( s ) {\n \n         this.x += s;\n         this.y += s;\n         this.z += s;\n         this.w += s;\n \n         return this;\n \n     }\n \n     addVectors( a, b ) {\n \n         this.x = a.x + b.x;\n         this.y = a.y + b.y;\n         this.z = a.z + b.z;\n         this.w = a.w + b.w;\n \n         return this;\n \n     }\n \n     addScaledVector( v, s ) {\n \n         this.x += v.x * s;\n         this.y += v.y * s;\n         this.z += v.z * s;\n         this.w += v.w * s;\n \n         return this;\n \n     }\n \n     sub( v, w ) {\n \n         if ( w !== undefined ) {\n \n             console.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n             return this.subVectors( v, w );\n \n         }\n \n         this.x -= v.x;\n         this.y -= v.y;\n         this.z -= v.z;\n         this.w -= v.w;\n \n         return this;\n \n     }\n \n     subScalar( s ) {\n \n         this.x -= s;\n         this.y -= s;\n         this.z -= s;\n         this.w -= s;\n \n         return this;\n \n     }\n \n     subVectors( a, b ) {\n \n         this.x = a.x - b.x;\n         this.y = a.y - b.y;\n         this.z = a.z - b.z;\n         this.w = a.w - b.w;\n \n         return this;\n \n     }\n \n     multiply( v ) {\n \n         this.x *= v.x;\n         this.y *= v.y;\n         this.z *= v.z;\n         this.w *= v.w;\n \n         return this;\n \n     }\n \n     multiplyScalar( scalar ) {\n \n         this.x *= scalar;\n         this.y *= scalar;\n         this.z *= scalar;\n         this.w *= scalar;\n \n         return this;\n \n     }\n \n     applyMatrix4( m ) {\n \n         const x = this.x, y = this.y, z = this.z, w = this.w;\n         const e = m.elements;\n \n         this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n         this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n         this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n         this.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n \n         return this;\n \n     }\n \n     divideScalar( scalar ) {\n \n         return this.multiplyScalar( 1 / scalar );\n \n     }\n \n     setAxisAngleFromQuaternion( q ) {\n \n         // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n \n         // q is assumed to be normalized\n \n         this.w = 2 * Math.acos( q.w );\n \n         const s = Math.sqrt( 1 - q.w * q.w );\n \n         if ( s < 0.0001 ) {\n \n             this.x = 1;\n             this.y = 0;\n             this.z = 0;\n \n         } else {\n \n             this.x = q.x / s;\n             this.y = q.y / s;\n             this.z = q.z / s;\n \n         }\n \n         return this;\n \n     }\n \n     setAxisAngleFromRotationMatrix( m ) {\n \n         // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n \n         // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n \n         let angle, x, y, z; // variables for result\n         const epsilon = 0.01,\t\t// margin to allow for rounding errors\n             epsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n \n             te = m.elements,\n \n             m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n             m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n             m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n \n         if ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n              ( Math.abs( m13 - m31 ) < epsilon ) &&\n              ( Math.abs( m23 - m32 ) < epsilon ) ) {\n \n             // singularity found\n             // first check for identity matrix which must have +1 for all terms\n             // in leading diagonal and zero in other terms\n \n             if ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n                  ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n                  ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n                  ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n \n                 // this singularity is identity matrix so angle = 0\n \n                 this.set( 1, 0, 0, 0 );\n \n                 return this; // zero angle, arbitrary axis\n \n             }\n \n             // otherwise this singularity is angle = 180\n \n             angle = Math.PI;\n \n             const xx = ( m11 + 1 ) / 2;\n             const yy = ( m22 + 1 ) / 2;\n             const zz = ( m33 + 1 ) / 2;\n             const xy = ( m12 + m21 ) / 4;\n             const xz = ( m13 + m31 ) / 4;\n             const yz = ( m23 + m32 ) / 4;\n \n             if ( ( xx > yy ) && ( xx > zz ) ) {\n \n                 // m11 is the largest diagonal term\n \n                 if ( xx < epsilon ) {\n \n                     x = 0;\n                     y = 0.707106781;\n                     z = 0.707106781;\n \n                 } else {\n \n                     x = Math.sqrt( xx );\n                     y = xy / x;\n                     z = xz / x;\n \n                 }\n \n             } else if ( yy > zz ) {\n \n                 // m22 is the largest diagonal term\n \n                 if ( yy < epsilon ) {\n \n                     x = 0.707106781;\n                     y = 0;\n                     z = 0.707106781;\n \n                 } else {\n \n                     y = Math.sqrt( yy );\n                     x = xy / y;\n                     z = yz / y;\n \n                 }\n \n             } else {\n \n                 // m33 is the largest diagonal term so base result on this\n \n                 if ( zz < epsilon ) {\n \n                     x = 0.707106781;\n                     y = 0.707106781;\n                     z = 0;\n \n                 } else {\n \n                     z = Math.sqrt( zz );\n                     x = xz / z;\n                     y = yz / z;\n \n                 }\n \n             }\n \n             this.set( x, y, z, angle );\n \n             return this; // return 180 deg rotation\n \n         }\n \n         // as we have reached here there are no singularities so we can handle normally\n \n         let s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n             ( m13 - m31 ) * ( m13 - m31 ) +\n             ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n \n         if ( Math.abs( s ) < 0.001 ) s = 1;\n \n         // prevent divide by zero, should not happen if matrix is orthogonal and should be\n         // caught by singularity test above, but I've left it in just in case\n \n         this.x = ( m32 - m23 ) / s;\n         this.y = ( m13 - m31 ) / s;\n         this.z = ( m21 - m12 ) / s;\n         this.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n \n         return this;\n \n     }\n \n     min( v ) {\n \n         this.x = Math.min( this.x, v.x );\n         this.y = Math.min( this.y, v.y );\n         this.z = Math.min( this.z, v.z );\n         this.w = Math.min( this.w, v.w );\n \n         return this;\n \n     }\n \n     max( v ) {\n \n         this.x = Math.max( this.x, v.x );\n         this.y = Math.max( this.y, v.y );\n         this.z = Math.max( this.z, v.z );\n         this.w = Math.max( this.w, v.w );\n \n         return this;\n \n     }\n \n     clamp( min, max ) {\n \n         // assumes min < max, componentwise\n \n         this.x = Math.max( min.x, Math.min( max.x, this.x ) );\n         this.y = Math.max( min.y, Math.min( max.y, this.y ) );\n         this.z = Math.max( min.z, Math.min( max.z, this.z ) );\n         this.w = Math.max( min.w, Math.min( max.w, this.w ) );\n \n         return this;\n \n     }\n \n     clampScalar( minVal, maxVal ) {\n \n         this.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n         this.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n         this.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n         this.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n \n         return this;\n \n     }\n \n     clampLength( min, max ) {\n \n         const length = this.length();\n \n         return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n \n     }\n \n     floor() {\n \n         this.x = Math.floor( this.x );\n         this.y = Math.floor( this.y );\n         this.z = Math.floor( this.z );\n         this.w = Math.floor( this.w );\n \n         return this;\n \n     }\n \n     ceil() {\n \n         this.x = Math.ceil( this.x );\n         this.y = Math.ceil( this.y );\n         this.z = Math.ceil( this.z );\n         this.w = Math.ceil( this.w );\n \n         return this;\n \n     }\n \n     round() {\n \n         this.x = Math.round( this.x );\n         this.y = Math.round( this.y );\n         this.z = Math.round( this.z );\n         this.w = Math.round( this.w );\n \n         return this;\n \n     }\n \n     roundToZero() {\n \n         this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n         this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n         this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n         this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n \n         return this;\n \n     }\n \n     negate() {\n \n         this.x = - this.x;\n         this.y = - this.y;\n         this.z = - this.z;\n         this.w = - this.w;\n \n         return this;\n \n     }\n \n     dot( v ) {\n \n         return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n \n     }\n \n     lengthSq() {\n \n         return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n \n     }\n \n     length() {\n \n         return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n \n     }\n \n     manhattanLength() {\n \n         return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n \n     }\n \n     normalize() {\n \n         return this.divideScalar( this.length() || 1 );\n \n     }\n \n     setLength( length ) {\n \n         return this.normalize().multiplyScalar( length );\n \n     }\n \n     lerp( v, alpha ) {\n \n         this.x += ( v.x - this.x ) * alpha;\n         this.y += ( v.y - this.y ) * alpha;\n         this.z += ( v.z - this.z ) * alpha;\n         this.w += ( v.w - this.w ) * alpha;\n \n         return this;\n \n     }\n \n     lerpVectors( v1, v2, alpha ) {\n \n         this.x = v1.x + ( v2.x - v1.x ) * alpha;\n         this.y = v1.y + ( v2.y - v1.y ) * alpha;\n         this.z = v1.z + ( v2.z - v1.z ) * alpha;\n         this.w = v1.w + ( v2.w - v1.w ) * alpha;\n \n         return this;\n \n     }\n \n     equals( v ) {\n \n         return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n \n     }\n \n     fromArray( array, offset = 0 ) {\n \n         this.x = array[ offset ];\n         this.y = array[ offset + 1 ];\n         this.z = array[ offset + 2 ];\n         this.w = array[ offset + 3 ];\n \n         return this;\n \n     }\n \n     toArray( array = [], offset = 0 ) {\n \n         array[ offset ] = this.x;\n         array[ offset + 1 ] = this.y;\n         array[ offset + 2 ] = this.z;\n         array[ offset + 3 ] = this.w;\n \n         return array;\n \n     }\n \n     fromBufferAttribute( attribute, index, offset ) {\n \n         if ( offset !== undefined ) {\n \n             console.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n \n         }\n \n         this.x = attribute.getX( index );\n         this.y = attribute.getY( index );\n         this.z = attribute.getZ( index );\n         this.w = attribute.getW( index );\n \n         return this;\n \n     }\n \n     random() {\n \n         this.x = Math.random();\n         this.y = Math.random();\n         this.z = Math.random();\n         this.w = Math.random();\n \n         return this;\n \n     }\n \n     *[ Symbol.iterator ]() {\n \n         yield this.x;\n         yield this.y;\n         yield this.z;\n         yield this.w;\n \n     }\n \n }\n \n Vector4.prototype.isVector4 = true;\n \n /*\n  In options, we can specify:\n  * Texture parameters for an auto-generated target texture\n  * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n */\n class WebGLRenderTarget extends EventDispatcher {\n \n     constructor( width, height, options = {} ) {\n \n         super();\n \n         this.width = width;\n         this.height = height;\n         this.depth = 1;\n \n         this.scissor = new Vector4( 0, 0, width, height );\n         this.scissorTest = false;\n \n         this.viewport = new Vector4( 0, 0, width, height );\n \n         const image = { width: width, height: height, depth: 1 };\n \n         this.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n         this.texture.isRenderTargetTexture = true;\n \n         this.texture.flipY = false;\n         this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n         this.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n         this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n \n         this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n         this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n \n         this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n \n         this.samples = options.samples !== undefined ? options.samples : 0;\n \n     }\n \n     setSize( width, height, depth = 1 ) {\n \n         if ( this.width !== width || this.height !== height || this.depth !== depth ) {\n \n             this.width = width;\n             this.height = height;\n             this.depth = depth;\n \n             this.texture.image.width = width;\n             this.texture.image.height = height;\n             this.texture.image.depth = depth;\n \n             this.dispose();\n \n         }\n \n         this.viewport.set( 0, 0, width, height );\n         this.scissor.set( 0, 0, width, height );\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n     copy( source ) {\n \n         this.width = source.width;\n         this.height = source.height;\n         this.depth = source.depth;\n \n         this.viewport.copy( source.viewport );\n \n         this.texture = source.texture.clone();\n         this.texture.isRenderTargetTexture = true;\n \n         // ensure image object is not shared, see #20328\n \n         this.texture.image = Object.assign( {}, source.texture.image );\n \n         this.depthBuffer = source.depthBuffer;\n         this.stencilBuffer = source.stencilBuffer;\n \n         if ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n \n         this.samples = source.samples;\n \n         return this;\n \n     }\n \n     dispose() {\n \n         this.dispatchEvent( { type: 'dispose' } );\n \n     }\n \n }\n \n WebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n \n class DataArrayTexture extends Texture {\n \n     constructor( data = null, width = 1, height = 1, depth = 1 ) {\n \n         super( null );\n \n         this.image = { data, width, height, depth };\n \n         this.magFilter = NearestFilter;\n         this.minFilter = NearestFilter;\n \n         this.wrapR = ClampToEdgeWrapping;\n \n         this.generateMipmaps = false;\n         this.flipY = false;\n         this.unpackAlignment = 1;\n \n     }\n \n }\n \n DataArrayTexture.prototype.isDataArrayTexture = true;\n \n class WebGLArrayRenderTarget extends WebGLRenderTarget {\n \n     constructor( width, height, depth ) {\n \n         super( width, height );\n \n         this.depth = depth;\n \n         this.texture = new DataArrayTexture( null, width, height, depth );\n \n         this.texture.isRenderTargetTexture = true;\n \n     }\n \n }\n \n WebGLArrayRenderTarget.prototype.isWebGLArrayRenderTarget = true;\n \n class Data3DTexture extends Texture {\n \n     constructor( data = null, width = 1, height = 1, depth = 1 ) {\n \n         // We're going to add .setXXX() methods for setting properties later.\n         // Users can still set in DataTexture3D directly.\n         //\n         //\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n         // \ttexture.anisotropy = 16;\n         //\n         // See #14839\n \n         super( null );\n \n         this.image = { data, width, height, depth };\n \n         this.magFilter = NearestFilter;\n         this.minFilter = NearestFilter;\n \n         this.wrapR = ClampToEdgeWrapping;\n \n         this.generateMipmaps = false;\n         this.flipY = false;\n         this.unpackAlignment = 1;\n \n     }\n \n }\n \n Data3DTexture.prototype.isData3DTexture = true;\n \n class WebGL3DRenderTarget extends WebGLRenderTarget {\n \n     constructor( width, height, depth ) {\n \n         super( width, height );\n \n         this.depth = depth;\n \n         this.texture = new Data3DTexture( null, width, height, depth );\n \n         this.texture.isRenderTargetTexture = true;\n \n     }\n \n }\n \n WebGL3DRenderTarget.prototype.isWebGL3DRenderTarget = true;\n \n class WebGLMultipleRenderTargets extends WebGLRenderTarget {\n \n     constructor( width, height, count, options = {} ) {\n \n         super( width, height, options );\n \n         const texture = this.texture;\n \n         this.texture = [];\n \n         for ( let i = 0; i < count; i ++ ) {\n \n             this.texture[ i ] = texture.clone();\n             this.texture[ i ].isRenderTargetTexture = true;\n \n         }\n \n     }\n \n     setSize( width, height, depth = 1 ) {\n \n         if ( this.width !== width || this.height !== height || this.depth !== depth ) {\n \n             this.width = width;\n             this.height = height;\n             this.depth = depth;\n \n             for ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n \n                 this.texture[ i ].image.width = width;\n                 this.texture[ i ].image.height = height;\n                 this.texture[ i ].image.depth = depth;\n \n             }\n \n             this.dispose();\n \n         }\n \n         this.viewport.set( 0, 0, width, height );\n         this.scissor.set( 0, 0, width, height );\n \n         return this;\n \n     }\n \n     copy( source ) {\n \n         this.dispose();\n \n         this.width = source.width;\n         this.height = source.height;\n         this.depth = source.depth;\n \n         this.viewport.set( 0, 0, this.width, this.height );\n         this.scissor.set( 0, 0, this.width, this.height );\n \n         this.depthBuffer = source.depthBuffer;\n         this.stencilBuffer = source.stencilBuffer;\n         this.depthTexture = source.depthTexture;\n \n         this.texture.length = 0;\n \n         for ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n \n             this.texture[ i ] = source.texture[ i ].clone();\n \n         }\n \n         return this;\n \n     }\n \n }\n \n WebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n \n class Quaternion {\n \n     constructor( x = 0, y = 0, z = 0, w = 1 ) {\n \n         this._x = x;\n         this._y = y;\n         this._z = z;\n         this._w = w;\n \n     }\n \n     static slerp( qa, qb, qm, t ) {\n \n         console.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n         return qm.slerpQuaternions( qa, qb, t );\n \n     }\n \n     static slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n \n         // fuzz-free, array-based Quaternion SLERP operation\n \n         let x0 = src0[ srcOffset0 + 0 ],\n             y0 = src0[ srcOffset0 + 1 ],\n             z0 = src0[ srcOffset0 + 2 ],\n             w0 = src0[ srcOffset0 + 3 ];\n \n         const x1 = src1[ srcOffset1 + 0 ],\n             y1 = src1[ srcOffset1 + 1 ],\n             z1 = src1[ srcOffset1 + 2 ],\n             w1 = src1[ srcOffset1 + 3 ];\n \n         if ( t === 0 ) {\n \n             dst[ dstOffset + 0 ] = x0;\n             dst[ dstOffset + 1 ] = y0;\n             dst[ dstOffset + 2 ] = z0;\n             dst[ dstOffset + 3 ] = w0;\n             return;\n \n         }\n \n         if ( t === 1 ) {\n \n             dst[ dstOffset + 0 ] = x1;\n             dst[ dstOffset + 1 ] = y1;\n             dst[ dstOffset + 2 ] = z1;\n             dst[ dstOffset + 3 ] = w1;\n             return;\n \n         }\n \n         if ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n \n             let s = 1 - t;\n             const cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n                 dir = ( cos >= 0 ? 1 : - 1 ),\n                 sqrSin = 1 - cos * cos;\n \n             // Skip the Slerp for tiny steps to avoid numeric problems:\n             if ( sqrSin > Number.EPSILON ) {\n \n                 const sin = Math.sqrt( sqrSin ),\n                     len = Math.atan2( sin, cos * dir );\n \n                 s = Math.sin( s * len ) / sin;\n                 t = Math.sin( t * len ) / sin;\n \n             }\n \n             const tDir = t * dir;\n \n             x0 = x0 * s + x1 * tDir;\n             y0 = y0 * s + y1 * tDir;\n             z0 = z0 * s + z1 * tDir;\n             w0 = w0 * s + w1 * tDir;\n \n             // Normalize in case we just did a lerp:\n             if ( s === 1 - t ) {\n \n                 const f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n \n                 x0 *= f;\n                 y0 *= f;\n                 z0 *= f;\n                 w0 *= f;\n \n             }\n \n         }\n \n         dst[ dstOffset ] = x0;\n         dst[ dstOffset + 1 ] = y0;\n         dst[ dstOffset + 2 ] = z0;\n         dst[ dstOffset + 3 ] = w0;\n \n     }\n \n     static multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n \n         const x0 = src0[ srcOffset0 ];\n         const y0 = src0[ srcOffset0 + 1 ];\n         const z0 = src0[ srcOffset0 + 2 ];\n         const w0 = src0[ srcOffset0 + 3 ];\n \n         const x1 = src1[ srcOffset1 ];\n         const y1 = src1[ srcOffset1 + 1 ];\n         const z1 = src1[ srcOffset1 + 2 ];\n         const w1 = src1[ srcOffset1 + 3 ];\n \n         dst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n         dst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n         dst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n         dst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n \n         return dst;\n \n     }\n \n     get x() {\n \n         return this._x;\n \n     }\n \n     set x( value ) {\n \n         this._x = value;\n         this._onChangeCallback();\n \n     }\n \n     get y() {\n \n         return this._y;\n \n     }\n \n     set y( value ) {\n \n         this._y = value;\n         this._onChangeCallback();\n \n     }\n \n     get z() {\n \n         return this._z;\n \n     }\n \n     set z( value ) {\n \n         this._z = value;\n         this._onChangeCallback();\n \n     }\n \n     get w() {\n \n         return this._w;\n \n     }\n \n     set w( value ) {\n \n         this._w = value;\n         this._onChangeCallback();\n \n     }\n \n     set( x, y, z, w ) {\n \n         this._x = x;\n         this._y = y;\n         this._z = z;\n         this._w = w;\n \n         this._onChangeCallback();\n \n         return this;\n \n     }\n \n     clone() {\n \n         return new this.constructor( this._x, this._y, this._z, this._w );\n \n     }\n \n     copy( quaternion ) {\n \n         this._x = quaternion.x;\n         this._y = quaternion.y;\n         this._z = quaternion.z;\n         this._w = quaternion.w;\n \n         this._onChangeCallback();\n \n         return this;\n \n     }\n \n     setFromEuler( euler, update ) {\n \n         if ( ! ( euler && euler.isEuler ) ) {\n \n             throw new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n \n         }\n \n         const x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n \n         // http://www.mathworks.com/matlabcentral/fileexchange/\n         // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n         //\tcontent/SpinCalc.m\n \n         const cos = Math.cos;\n         const sin = Math.sin;\n \n         const c1 = cos( x / 2 );\n         const c2 = cos( y / 2 );\n         const c3 = cos( z / 2 );\n \n         const s1 = sin( x / 2 );\n         const s2 = sin( y / 2 );\n         const s3 = sin( z / 2 );\n \n         switch ( order ) {\n \n             case 'XYZ':\n                 this._x = s1 * c2 * c3 + c1 * s2 * s3;\n                 this._y = c1 * s2 * c3 - s1 * c2 * s3;\n                 this._z = c1 * c2 * s3 + s1 * s2 * c3;\n                 this._w = c1 * c2 * c3 - s1 * s2 * s3;\n                 break;\n \n             case 'YXZ':\n                 this._x = s1 * c2 * c3 + c1 * s2 * s3;\n                 this._y = c1 * s2 * c3 - s1 * c2 * s3;\n                 this._z = c1 * c2 * s3 - s1 * s2 * c3;\n                 this._w = c1 * c2 * c3 + s1 * s2 * s3;\n                 break;\n \n             case 'ZXY':\n                 this._x = s1 * c2 * c3 - c1 * s2 * s3;\n                 this._y = c1 * s2 * c3 + s1 * c2 * s3;\n                 this._z = c1 * c2 * s3 + s1 * s2 * c3;\n                 this._w = c1 * c2 * c3 - s1 * s2 * s3;\n                 break;\n \n             case 'ZYX':\n                 this._x = s1 * c2 * c3 - c1 * s2 * s3;\n                 this._y = c1 * s2 * c3 + s1 * c2 * s3;\n                 this._z = c1 * c2 * s3 - s1 * s2 * c3;\n                 this._w = c1 * c2 * c3 + s1 * s2 * s3;\n                 break;\n \n             case 'YZX':\n                 this._x = s1 * c2 * c3 + c1 * s2 * s3;\n                 this._y = c1 * s2 * c3 + s1 * c2 * s3;\n                 this._z = c1 * c2 * s3 - s1 * s2 * c3;\n                 this._w = c1 * c2 * c3 - s1 * s2 * s3;\n                 break;\n \n             case 'XZY':\n                 this._x = s1 * c2 * c3 - c1 * s2 * s3;\n                 this._y = c1 * s2 * c3 - s1 * c2 * s3;\n                 this._z = c1 * c2 * s3 + s1 * s2 * c3;\n                 this._w = c1 * c2 * c3 + s1 * s2 * s3;\n                 break;\n \n             default:\n                 console.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n \n         }\n \n         if ( update !== false ) this._onChangeCallback();\n \n         return this;\n \n     }\n \n     setFromAxisAngle( axis, angle ) {\n \n         // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n \n         // assumes axis is normalized\n \n         const halfAngle = angle / 2, s = Math.sin( halfAngle );\n \n         this._x = axis.x * s;\n         this._y = axis.y * s;\n         this._z = axis.z * s;\n         this._w = Math.cos( halfAngle );\n \n         this._onChangeCallback();\n \n         return this;\n \n     }\n \n     setFromRotationMatrix( m ) {\n \n         // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n \n         // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n \n         const te = m.elements,\n \n             m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n             m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n             m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n \n             trace = m11 + m22 + m33;\n \n         if ( trace > 0 ) {\n \n             const s = 0.5 / Math.sqrt( trace + 1.0 );\n \n             this._w = 0.25 / s;\n             this._x = ( m32 - m23 ) * s;\n             this._y = ( m13 - m31 ) * s;\n             this._z = ( m21 - m12 ) * s;\n \n         } else if ( m11 > m22 && m11 > m33 ) {\n \n             const s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n \n             this._w = ( m32 - m23 ) / s;\n             this._x = 0.25 * s;\n             this._y = ( m12 + m21 ) / s;\n             this._z = ( m13 + m31 ) / s;\n \n         } else if ( m22 > m33 ) {\n \n             const s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n \n             this._w = ( m13 - m31 ) / s;\n             this._x = ( m12 + m21 ) / s;\n             this._y = 0.25 * s;\n             this._z = ( m23 + m32 ) / s;\n \n         } else {\n \n             const s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n \n             this._w = ( m21 - m12 ) / s;\n             this._x = ( m13 + m31 ) / s;\n             this._y = ( m23 + m32 ) / s;\n             this._z = 0.25 * s;\n \n         }\n \n         this._onChangeCallback();\n \n         return this;\n \n     }\n \n     setFromUnitVectors( vFrom, vTo ) {\n \n         // assumes direction vectors vFrom and vTo are normalized\n \n         let r = vFrom.dot( vTo ) + 1;\n \n         if ( r < Number.EPSILON ) {\n \n             // vFrom and vTo point in opposite directions\n \n             r = 0;\n \n             if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n \n                 this._x = - vFrom.y;\n                 this._y = vFrom.x;\n                 this._z = 0;\n                 this._w = r;\n \n             } else {\n \n                 this._x = 0;\n                 this._y = - vFrom.z;\n                 this._z = vFrom.y;\n                 this._w = r;\n \n             }\n \n         } else {\n \n             // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n \n             this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n             this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n             this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n             this._w = r;\n \n         }\n \n         return this.normalize();\n \n     }\n \n     angleTo( q ) {\n \n         return 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n \n     }\n \n     rotateTowards( q, step ) {\n \n         const angle = this.angleTo( q );\n \n         if ( angle === 0 ) return this;\n \n         const t = Math.min( 1, step / angle );\n \n         this.slerp( q, t );\n \n         return this;\n \n     }\n \n     identity() {\n \n         return this.set( 0, 0, 0, 1 );\n \n     }\n \n     invert() {\n \n         // quaternion is assumed to have unit length\n \n         return this.conjugate();\n \n     }\n \n     conjugate() {\n \n         this._x *= - 1;\n         this._y *= - 1;\n         this._z *= - 1;\n \n         this._onChangeCallback();\n \n         return this;\n \n     }\n \n     dot( v ) {\n \n         return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n \n     }\n \n     lengthSq() {\n \n         return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n \n     }\n \n     length() {\n \n         return Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n \n     }\n \n     normalize() {\n \n         let l = this.length();\n \n         if ( l === 0 ) {\n \n             this._x = 0;\n             this._y = 0;\n             this._z = 0;\n             this._w = 1;\n \n         } else {\n \n             l = 1 / l;\n \n             this._x = this._x * l;\n             this._y = this._y * l;\n             this._z = this._z * l;\n             this._w = this._w * l;\n \n         }\n \n         this._onChangeCallback();\n \n         return this;\n \n     }\n \n     multiply( q, p ) {\n \n         if ( p !== undefined ) {\n \n             console.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n             return this.multiplyQuaternions( q, p );\n \n         }\n \n         return this.multiplyQuaternions( this, q );\n \n     }\n \n     premultiply( q ) {\n \n         return this.multiplyQuaternions( q, this );\n \n     }\n \n     multiplyQuaternions( a, b ) {\n \n         // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n \n         const qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n         const qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n \n         this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n         this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n         this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n         this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n \n         this._onChangeCallback();\n \n         return this;\n \n     }\n \n     slerp( qb, t ) {\n \n         if ( t === 0 ) return this;\n         if ( t === 1 ) return this.copy( qb );\n \n         const x = this._x, y = this._y, z = this._z, w = this._w;\n \n         // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n \n         let cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n \n         if ( cosHalfTheta < 0 ) {\n \n             this._w = - qb._w;\n             this._x = - qb._x;\n             this._y = - qb._y;\n             this._z = - qb._z;\n \n             cosHalfTheta = - cosHalfTheta;\n \n         } else {\n \n             this.copy( qb );\n \n         }\n \n         if ( cosHalfTheta >= 1.0 ) {\n \n             this._w = w;\n             this._x = x;\n             this._y = y;\n             this._z = z;\n \n             return this;\n \n         }\n \n         const sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n \n         if ( sqrSinHalfTheta <= Number.EPSILON ) {\n \n             const s = 1 - t;\n             this._w = s * w + t * this._w;\n             this._x = s * x + t * this._x;\n             this._y = s * y + t * this._y;\n             this._z = s * z + t * this._z;\n \n             this.normalize();\n             this._onChangeCallback();\n \n             return this;\n \n         }\n \n         const sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n         const halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n         const ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n             ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n \n         this._w = ( w * ratioA + this._w * ratioB );\n         this._x = ( x * ratioA + this._x * ratioB );\n         this._y = ( y * ratioA + this._y * ratioB );\n         this._z = ( z * ratioA + this._z * ratioB );\n \n         this._onChangeCallback();\n \n         return this;\n \n     }\n \n     slerpQuaternions( qa, qb, t ) {\n \n         return this.copy( qa ).slerp( qb, t );\n \n     }\n \n     random() {\n \n         // Derived from http://planning.cs.uiuc.edu/node198.html\n         // Note, this source uses w, x, y, z ordering,\n         // so we swap the order below.\n \n         const u1 = Math.random();\n         const sqrt1u1 = Math.sqrt( 1 - u1 );\n         const sqrtu1 = Math.sqrt( u1 );\n \n         const u2 = 2 * Math.PI * Math.random();\n \n         const u3 = 2 * Math.PI * Math.random();\n \n         return this.set(\n             sqrt1u1 * Math.cos( u2 ),\n             sqrtu1 * Math.sin( u3 ),\n             sqrtu1 * Math.cos( u3 ),\n             sqrt1u1 * Math.sin( u2 ),\n         );\n \n     }\n \n     equals( quaternion ) {\n \n         return ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n \n     }\n \n     fromArray( array, offset = 0 ) {\n \n         this._x = array[ offset ];\n         this._y = array[ offset + 1 ];\n         this._z = array[ offset + 2 ];\n         this._w = array[ offset + 3 ];\n \n         this._onChangeCallback();\n \n         return this;\n \n     }\n \n     toArray( array = [], offset = 0 ) {\n \n         array[ offset ] = this._x;\n         array[ offset + 1 ] = this._y;\n         array[ offset + 2 ] = this._z;\n         array[ offset + 3 ] = this._w;\n \n         return array;\n \n     }\n \n     fromBufferAttribute( attribute, index ) {\n \n         this._x = attribute.getX( index );\n         this._y = attribute.getY( index );\n         this._z = attribute.getZ( index );\n         this._w = attribute.getW( index );\n \n         return this;\n \n     }\n \n     _onChange( callback ) {\n \n         this._onChangeCallback = callback;\n \n         return this;\n \n     }\n \n     _onChangeCallback() {}\n \n }\n \n Quaternion.prototype.isQuaternion = true;\n \n class Vector3 {\n \n     constructor( x = 0, y = 0, z = 0 ) {\n \n         this.x = x;\n         this.y = y;\n         this.z = z;\n \n     }\n \n     set( x, y, z ) {\n \n         if ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n \n         this.x = x;\n         this.y = y;\n         this.z = z;\n \n         return this;\n \n     }\n \n     setScalar( scalar ) {\n \n         this.x = scalar;\n         this.y = scalar;\n         this.z = scalar;\n \n         return this;\n \n     }\n \n     setX( x ) {\n \n         this.x = x;\n \n         return this;\n \n     }\n \n     setY( y ) {\n \n         this.y = y;\n \n         return this;\n \n     }\n \n     setZ( z ) {\n \n         this.z = z;\n \n         return this;\n \n     }\n \n     setComponent( index, value ) {\n \n         switch ( index ) {\n \n             case 0: this.x = value; break;\n             case 1: this.y = value; break;\n             case 2: this.z = value; break;\n             default: throw new Error( 'index is out of range: ' + index );\n \n         }\n \n         return this;\n \n     }\n \n     getComponent( index ) {\n \n         switch ( index ) {\n \n             case 0: return this.x;\n             case 1: return this.y;\n             case 2: return this.z;\n             default: throw new Error( 'index is out of range: ' + index );\n \n         }\n \n     }\n \n     clone() {\n \n         return new this.constructor( this.x, this.y, this.z );\n \n     }\n \n     copy( v ) {\n \n         this.x = v.x;\n         this.y = v.y;\n         this.z = v.z;\n \n         return this;\n \n     }\n \n     add( v, w ) {\n \n         if ( w !== undefined ) {\n \n             console.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n             return this.addVectors( v, w );\n \n         }\n \n         this.x += v.x;\n         this.y += v.y;\n         this.z += v.z;\n \n         return this;\n \n     }\n \n     addScalar( s ) {\n \n         this.x += s;\n         this.y += s;\n         this.z += s;\n \n         return this;\n \n     }\n \n     addVectors( a, b ) {\n \n         this.x = a.x + b.x;\n         this.y = a.y + b.y;\n         this.z = a.z + b.z;\n \n         return this;\n \n     }\n \n     addScaledVector( v, s ) {\n \n         this.x += v.x * s;\n         this.y += v.y * s;\n         this.z += v.z * s;\n \n         return this;\n \n     }\n \n     sub( v, w ) {\n \n         if ( w !== undefined ) {\n \n             console.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n             return this.subVectors( v, w );\n \n         }\n \n         this.x -= v.x;\n         this.y -= v.y;\n         this.z -= v.z;\n \n         return this;\n \n     }\n \n     subScalar( s ) {\n \n         this.x -= s;\n         this.y -= s;\n         this.z -= s;\n \n         return this;\n \n     }\n \n     subVectors( a, b ) {\n \n         this.x = a.x - b.x;\n         this.y = a.y - b.y;\n         this.z = a.z - b.z;\n \n         return this;\n \n     }\n \n     multiply( v, w ) {\n \n         if ( w !== undefined ) {\n \n             console.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n             return this.multiplyVectors( v, w );\n \n         }\n \n         this.x *= v.x;\n         this.y *= v.y;\n         this.z *= v.z;\n \n         return this;\n \n     }\n \n     multiplyScalar( scalar ) {\n \n         this.x *= scalar;\n         this.y *= scalar;\n         this.z *= scalar;\n \n         return this;\n \n     }\n \n     multiplyVectors( a, b ) {\n \n         this.x = a.x * b.x;\n         this.y = a.y * b.y;\n         this.z = a.z * b.z;\n \n         return this;\n \n     }\n \n     applyEuler( euler ) {\n \n         if ( ! ( euler && euler.isEuler ) ) {\n \n             console.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n \n         }\n \n         return this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n \n     }\n \n     applyAxisAngle( axis, angle ) {\n \n         return this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n \n     }\n \n     applyMatrix3( m ) {\n \n         const x = this.x, y = this.y, z = this.z;\n         const e = m.elements;\n \n         this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n         this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n         this.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n \n         return this;\n \n     }\n \n     applyNormalMatrix( m ) {\n \n         return this.applyMatrix3( m ).normalize();\n \n     }\n \n     applyMatrix4( m ) {\n \n         const x = this.x, y = this.y, z = this.z;\n         const e = m.elements;\n \n         const w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n \n         this.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n         this.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n         this.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n \n         return this;\n \n     }\n \n     applyQuaternion( q ) {\n \n         const x = this.x, y = this.y, z = this.z;\n         const qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n \n         // calculate quat * vector\n \n         const ix = qw * x + qy * z - qz * y;\n         const iy = qw * y + qz * x - qx * z;\n         const iz = qw * z + qx * y - qy * x;\n         const iw = - qx * x - qy * y - qz * z;\n \n         // calculate result * inverse quat\n \n         this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n         this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n         this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n \n         return this;\n \n     }\n \n     project( camera ) {\n \n         return this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n \n     }\n \n     unproject( camera ) {\n \n         return this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n \n     }\n \n     transformDirection( m ) {\n \n         // input: THREE.Matrix4 affine matrix\n         // vector interpreted as a direction\n \n         const x = this.x, y = this.y, z = this.z;\n         const e = m.elements;\n \n         this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n         this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n         this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n \n         return this.normalize();\n \n     }\n \n     divide( v ) {\n \n         this.x /= v.x;\n         this.y /= v.y;\n         this.z /= v.z;\n \n         return this;\n \n     }\n \n     divideScalar( scalar ) {\n \n         return this.multiplyScalar( 1 / scalar );\n \n     }\n \n     min( v ) {\n \n         this.x = Math.min( this.x, v.x );\n         this.y = Math.min( this.y, v.y );\n         this.z = Math.min( this.z, v.z );\n \n         return this;\n \n     }\n \n     max( v ) {\n \n         this.x = Math.max( this.x, v.x );\n         this.y = Math.max( this.y, v.y );\n         this.z = Math.max( this.z, v.z );\n \n         return this;\n \n     }\n \n     clamp( min, max ) {\n \n         // assumes min < max, componentwise\n \n         this.x = Math.max( min.x, Math.min( max.x, this.x ) );\n         this.y = Math.max( min.y, Math.min( max.y, this.y ) );\n         this.z = Math.max( min.z, Math.min( max.z, this.z ) );\n \n         return this;\n \n     }\n \n     clampScalar( minVal, maxVal ) {\n \n         this.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n         this.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n         this.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n \n         return this;\n \n     }\n \n     clampLength( min, max ) {\n \n         const length = this.length();\n \n         return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n \n     }\n \n     floor() {\n \n         this.x = Math.floor( this.x );\n         this.y = Math.floor( this.y );\n         this.z = Math.floor( this.z );\n \n         return this;\n \n     }\n \n     ceil() {\n \n         this.x = Math.ceil( this.x );\n         this.y = Math.ceil( this.y );\n         this.z = Math.ceil( this.z );\n \n         return this;\n \n     }\n \n     round() {\n \n         this.x = Math.round( this.x );\n         this.y = Math.round( this.y );\n         this.z = Math.round( this.z );\n \n         return this;\n \n     }\n \n     roundToZero() {\n \n         this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n         this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n         this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n \n         return this;\n \n     }\n \n     negate() {\n \n         this.x = - this.x;\n         this.y = - this.y;\n         this.z = - this.z;\n \n         return this;\n \n     }\n \n     dot( v ) {\n \n         return this.x * v.x + this.y * v.y + this.z * v.z;\n \n     }\n \n     // TODO lengthSquared?\n \n     lengthSq() {\n \n         return this.x * this.x + this.y * this.y + this.z * this.z;\n \n     }\n \n     length() {\n \n         return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n \n     }\n \n     manhattanLength() {\n \n         return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n \n     }\n \n     normalize() {\n \n         return this.divideScalar( this.length() || 1 );\n \n     }\n \n     setLength( length ) {\n \n         return this.normalize().multiplyScalar( length );\n \n     }\n \n     lerp( v, alpha ) {\n \n         this.x += ( v.x - this.x ) * alpha;\n         this.y += ( v.y - this.y ) * alpha;\n         this.z += ( v.z - this.z ) * alpha;\n \n         return this;\n \n     }\n \n     lerpVectors( v1, v2, alpha ) {\n \n         this.x = v1.x + ( v2.x - v1.x ) * alpha;\n         this.y = v1.y + ( v2.y - v1.y ) * alpha;\n         this.z = v1.z + ( v2.z - v1.z ) * alpha;\n \n         return this;\n \n     }\n \n     cross( v, w ) {\n \n         if ( w !== undefined ) {\n \n             console.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n             return this.crossVectors( v, w );\n \n         }\n \n         return this.crossVectors( this, v );\n \n     }\n \n     crossVectors( a, b ) {\n \n         const ax = a.x, ay = a.y, az = a.z;\n         const bx = b.x, by = b.y, bz = b.z;\n \n         this.x = ay * bz - az * by;\n         this.y = az * bx - ax * bz;\n         this.z = ax * by - ay * bx;\n \n         return this;\n \n     }\n \n     projectOnVector( v ) {\n \n         const denominator = v.lengthSq();\n \n         if ( denominator === 0 ) return this.set( 0, 0, 0 );\n \n         const scalar = v.dot( this ) / denominator;\n \n         return this.copy( v ).multiplyScalar( scalar );\n \n     }\n \n     projectOnPlane( planeNormal ) {\n \n         _vector$c.copy( this ).projectOnVector( planeNormal );\n \n         return this.sub( _vector$c );\n \n     }\n \n     reflect( normal ) {\n \n         // reflect incident vector off plane orthogonal to normal\n         // normal is assumed to have unit length\n \n         return this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n \n     }\n \n     angleTo( v ) {\n \n         const denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n \n         if ( denominator === 0 ) return Math.PI / 2;\n \n         const theta = this.dot( v ) / denominator;\n \n         // clamp, to handle numerical problems\n \n         return Math.acos( clamp( theta, - 1, 1 ) );\n \n     }\n \n     distanceTo( v ) {\n \n         return Math.sqrt( this.distanceToSquared( v ) );\n \n     }\n \n     distanceToSquared( v ) {\n \n         const dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n \n         return dx * dx + dy * dy + dz * dz;\n \n     }\n \n     manhattanDistanceTo( v ) {\n \n         return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n \n     }\n \n     setFromSpherical( s ) {\n \n         return this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n \n     }\n \n     setFromSphericalCoords( radius, phi, theta ) {\n \n         const sinPhiRadius = Math.sin( phi ) * radius;\n \n         this.x = sinPhiRadius * Math.sin( theta );\n         this.y = Math.cos( phi ) * radius;\n         this.z = sinPhiRadius * Math.cos( theta );\n \n         return this;\n \n     }\n \n     setFromCylindrical( c ) {\n \n         return this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n \n     }\n \n     setFromCylindricalCoords( radius, theta, y ) {\n \n         this.x = radius * Math.sin( theta );\n         this.y = y;\n         this.z = radius * Math.cos( theta );\n \n         return this;\n \n     }\n \n     setFromMatrixPosition( m ) {\n \n         const e = m.elements;\n \n         this.x = e[ 12 ];\n         this.y = e[ 13 ];\n         this.z = e[ 14 ];\n \n         return this;\n \n     }\n \n     setFromMatrixScale( m ) {\n \n         const sx = this.setFromMatrixColumn( m, 0 ).length();\n         const sy = this.setFromMatrixColumn( m, 1 ).length();\n         const sz = this.setFromMatrixColumn( m, 2 ).length();\n \n         this.x = sx;\n         this.y = sy;\n         this.z = sz;\n \n         return this;\n \n     }\n \n     setFromMatrixColumn( m, index ) {\n \n         return this.fromArray( m.elements, index * 4 );\n \n     }\n \n     setFromMatrix3Column( m, index ) {\n \n         return this.fromArray( m.elements, index * 3 );\n \n     }\n \n     setFromEuler( e ) {\n \n         this.x = e._x;\n         this.y = e._y;\n         this.z = e._z;\n \n         return this;\n \n     }\n \n     equals( v ) {\n \n         return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n \n     }\n \n     fromArray( array, offset = 0 ) {\n \n         this.x = array[ offset ];\n         this.y = array[ offset + 1 ];\n         this.z = array[ offset + 2 ];\n \n         return this;\n \n     }\n \n     toArray( array = [], offset = 0 ) {\n \n         array[ offset ] = this.x;\n         array[ offset + 1 ] = this.y;\n         array[ offset + 2 ] = this.z;\n \n         return array;\n \n     }\n \n     fromBufferAttribute( attribute, index, offset ) {\n \n         if ( offset !== undefined ) {\n \n             console.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n \n         }\n \n         this.x = attribute.getX( index );\n         this.y = attribute.getY( index );\n         this.z = attribute.getZ( index );\n \n         return this;\n \n     }\n \n     random() {\n \n         this.x = Math.random();\n         this.y = Math.random();\n         this.z = Math.random();\n \n         return this;\n \n     }\n \n     randomDirection() {\n \n         // Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n \n         const u = ( Math.random() - 0.5 ) * 2;\n         const t = Math.random() * Math.PI * 2;\n         const f = Math.sqrt( 1 - u ** 2 );\n \n         this.x = f * Math.cos( t );\n         this.y = f * Math.sin( t );\n         this.z = u;\n \n         return this;\n \n     }\n \n     *[ Symbol.iterator ]() {\n \n         yield this.x;\n         yield this.y;\n         yield this.z;\n \n     }\n \n }\n \n Vector3.prototype.isVector3 = true;\n \n const _vector$c = /*@__PURE__*/ new Vector3();\n const _quaternion$4 = /*@__PURE__*/ new Quaternion();\n \n class Box3 {\n \n     constructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n \n         this.min = min;\n         this.max = max;\n \n     }\n \n     set( min, max ) {\n \n         this.min.copy( min );\n         this.max.copy( max );\n \n         return this;\n \n     }\n \n     setFromArray( array ) {\n \n         let minX = + Infinity;\n         let minY = + Infinity;\n         let minZ = + Infinity;\n \n         let maxX = - Infinity;\n         let maxY = - Infinity;\n         let maxZ = - Infinity;\n \n         for ( let i = 0, l = array.length; i < l; i += 3 ) {\n \n             const x = array[ i ];\n             const y = array[ i + 1 ];\n             const z = array[ i + 2 ];\n \n             if ( x < minX ) minX = x;\n             if ( y < minY ) minY = y;\n             if ( z < minZ ) minZ = z;\n \n             if ( x > maxX ) maxX = x;\n             if ( y > maxY ) maxY = y;\n             if ( z > maxZ ) maxZ = z;\n \n         }\n \n         this.min.set( minX, minY, minZ );\n         this.max.set( maxX, maxY, maxZ );\n \n         return this;\n \n     }\n \n     setFromBufferAttribute( attribute ) {\n \n         let minX = + Infinity;\n         let minY = + Infinity;\n         let minZ = + Infinity;\n \n         let maxX = - Infinity;\n         let maxY = - Infinity;\n         let maxZ = - Infinity;\n \n         for ( let i = 0, l = attribute.count; i < l; i ++ ) {\n \n             const x = attribute.getX( i );\n             const y = attribute.getY( i );\n             const z = attribute.getZ( i );\n \n             if ( x < minX ) minX = x;\n             if ( y < minY ) minY = y;\n             if ( z < minZ ) minZ = z;\n \n             if ( x > maxX ) maxX = x;\n             if ( y > maxY ) maxY = y;\n             if ( z > maxZ ) maxZ = z;\n \n         }\n \n         this.min.set( minX, minY, minZ );\n         this.max.set( maxX, maxY, maxZ );\n \n         return this;\n \n     }\n \n     setFromPoints( points ) {\n \n         this.makeEmpty();\n \n         for ( let i = 0, il = points.length; i < il; i ++ ) {\n \n             this.expandByPoint( points[ i ] );\n \n         }\n \n         return this;\n \n     }\n \n     setFromCenterAndSize( center, size ) {\n \n         const halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n \n         this.min.copy( center ).sub( halfSize );\n         this.max.copy( center ).add( halfSize );\n \n         return this;\n \n     }\n \n     setFromObject( object, precise = false ) {\n \n         this.makeEmpty();\n \n         return this.expandByObject( object, precise );\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n     copy( box ) {\n \n         this.min.copy( box.min );\n         this.max.copy( box.max );\n \n         return this;\n \n     }\n \n     makeEmpty() {\n \n         this.min.x = this.min.y = this.min.z = + Infinity;\n         this.max.x = this.max.y = this.max.z = - Infinity;\n \n         return this;\n \n     }\n \n     isEmpty() {\n \n         // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n \n         return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n \n     }\n \n     getCenter( target ) {\n \n         return this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n \n     }\n \n     getSize( target ) {\n \n         return this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n \n     }\n \n     expandByPoint( point ) {\n \n         this.min.min( point );\n         this.max.max( point );\n \n         return this;\n \n     }\n \n     expandByVector( vector ) {\n \n         this.min.sub( vector );\n         this.max.add( vector );\n \n         return this;\n \n     }\n \n     expandByScalar( scalar ) {\n \n         this.min.addScalar( - scalar );\n         this.max.addScalar( scalar );\n \n         return this;\n \n     }\n \n     expandByObject( object, precise = false ) {\n \n         // Computes the world-axis-aligned bounding box of an object (including its children),\n         // accounting for both the object's, and children's, world transforms\n \n         object.updateWorldMatrix( false, false );\n \n         const geometry = object.geometry;\n \n         if ( geometry !== undefined ) {\n \n             if ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n \n                 const position = geometry.attributes.position;\n                 for ( let i = 0, l = position.count; i < l; i ++ ) {\n \n                     _vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n                     this.expandByPoint( _vector$b );\n \n                 }\n \n             } else {\n \n                 if ( geometry.boundingBox === null ) {\n \n                     geometry.computeBoundingBox();\n \n                 }\n \n                 _box$3.copy( geometry.boundingBox );\n                 _box$3.applyMatrix4( object.matrixWorld );\n \n                 this.union( _box$3 );\n \n             }\n \n         }\n \n         const children = object.children;\n \n         for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n             this.expandByObject( children[ i ], precise );\n \n         }\n \n         return this;\n \n     }\n \n     containsPoint( point ) {\n \n         return point.x < this.min.x || point.x > this.max.x ||\n             point.y < this.min.y || point.y > this.max.y ||\n             point.z < this.min.z || point.z > this.max.z ? false : true;\n \n     }\n \n     containsBox( box ) {\n \n         return this.min.x <= box.min.x && box.max.x <= this.max.x &&\n             this.min.y <= box.min.y && box.max.y <= this.max.y &&\n             this.min.z <= box.min.z && box.max.z <= this.max.z;\n \n     }\n \n     getParameter( point, target ) {\n \n         // This can potentially have a divide by zero if the box\n         // has a size dimension of 0.\n \n         return target.set(\n             ( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n             ( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n             ( point.z - this.min.z ) / ( this.max.z - this.min.z )\n         );\n \n     }\n \n     intersectsBox( box ) {\n \n         // using 6 splitting planes to rule out intersections.\n         return box.max.x < this.min.x || box.min.x > this.max.x ||\n             box.max.y < this.min.y || box.min.y > this.max.y ||\n             box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n \n     }\n \n     intersectsSphere( sphere ) {\n \n         // Find the point on the AABB closest to the sphere center.\n         this.clampPoint( sphere.center, _vector$b );\n \n         // If that point is inside the sphere, the AABB and sphere intersect.\n         return _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n \n     }\n \n     intersectsPlane( plane ) {\n \n         // We compute the minimum and maximum dot product values. If those values\n         // are on the same side (back or front) of the plane, then there is no intersection.\n \n         let min, max;\n \n         if ( plane.normal.x > 0 ) {\n \n             min = plane.normal.x * this.min.x;\n             max = plane.normal.x * this.max.x;\n \n         } else {\n \n             min = plane.normal.x * this.max.x;\n             max = plane.normal.x * this.min.x;\n \n         }\n \n         if ( plane.normal.y > 0 ) {\n \n             min += plane.normal.y * this.min.y;\n             max += plane.normal.y * this.max.y;\n \n         } else {\n \n             min += plane.normal.y * this.max.y;\n             max += plane.normal.y * this.min.y;\n \n         }\n \n         if ( plane.normal.z > 0 ) {\n \n             min += plane.normal.z * this.min.z;\n             max += plane.normal.z * this.max.z;\n \n         } else {\n \n             min += plane.normal.z * this.max.z;\n             max += plane.normal.z * this.min.z;\n \n         }\n \n         return ( min <= - plane.constant && max >= - plane.constant );\n \n     }\n \n     intersectsTriangle( triangle ) {\n \n         if ( this.isEmpty() ) {\n \n             return false;\n \n         }\n \n         // compute box center and extents\n         this.getCenter( _center );\n         _extents.subVectors( this.max, _center );\n \n         // translate triangle to aabb origin\n         _v0$2.subVectors( triangle.a, _center );\n         _v1$7.subVectors( triangle.b, _center );\n         _v2$3.subVectors( triangle.c, _center );\n \n         // compute edge vectors for triangle\n         _f0.subVectors( _v1$7, _v0$2 );\n         _f1.subVectors( _v2$3, _v1$7 );\n         _f2.subVectors( _v0$2, _v2$3 );\n \n         // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n         // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n         // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n         let axes = [\n             0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n             _f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n             - _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n         ];\n         if ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n \n             return false;\n \n         }\n \n         // test 3 face normals from the aabb\n         axes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n         if ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n \n             return false;\n \n         }\n \n         // finally testing the face normal of the triangle\n         // use already existing triangle edge vectors here\n         _triangleNormal.crossVectors( _f0, _f1 );\n         axes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n \n         return satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n \n     }\n \n     clampPoint( point, target ) {\n \n         return target.copy( point ).clamp( this.min, this.max );\n \n     }\n \n     distanceToPoint( point ) {\n \n         const clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n \n         return clampedPoint.sub( point ).length();\n \n     }\n \n     getBoundingSphere( target ) {\n \n         this.getCenter( target.center );\n \n         target.radius = this.getSize( _vector$b ).length() * 0.5;\n \n         return target;\n \n     }\n \n     intersect( box ) {\n \n         this.min.max( box.min );\n         this.max.min( box.max );\n \n         // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n         if ( this.isEmpty() ) this.makeEmpty();\n \n         return this;\n \n     }\n \n     union( box ) {\n \n         this.min.min( box.min );\n         this.max.max( box.max );\n \n         return this;\n \n     }\n \n     applyMatrix4( matrix ) {\n \n         // transform of empty box is an empty box.\n         if ( this.isEmpty() ) return this;\n \n         // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n         _points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n         _points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n         _points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n         _points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n         _points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n         _points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n         _points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n         _points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n \n         this.setFromPoints( _points );\n \n         return this;\n \n     }\n \n     translate( offset ) {\n \n         this.min.add( offset );\n         this.max.add( offset );\n \n         return this;\n \n     }\n \n     equals( box ) {\n \n         return box.min.equals( this.min ) && box.max.equals( this.max );\n \n     }\n \n }\n \n Box3.prototype.isBox3 = true;\n \n const _points = [\n     /*@__PURE__*/ new Vector3(),\n     /*@__PURE__*/ new Vector3(),\n     /*@__PURE__*/ new Vector3(),\n     /*@__PURE__*/ new Vector3(),\n     /*@__PURE__*/ new Vector3(),\n     /*@__PURE__*/ new Vector3(),\n     /*@__PURE__*/ new Vector3(),\n     /*@__PURE__*/ new Vector3()\n ];\n \n const _vector$b = /*@__PURE__*/ new Vector3();\n \n const _box$3 = /*@__PURE__*/ new Box3();\n \n // triangle centered vertices\n \n const _v0$2 = /*@__PURE__*/ new Vector3();\n const _v1$7 = /*@__PURE__*/ new Vector3();\n const _v2$3 = /*@__PURE__*/ new Vector3();\n \n // triangle edge vectors\n \n const _f0 = /*@__PURE__*/ new Vector3();\n const _f1 = /*@__PURE__*/ new Vector3();\n const _f2 = /*@__PURE__*/ new Vector3();\n \n const _center = /*@__PURE__*/ new Vector3();\n const _extents = /*@__PURE__*/ new Vector3();\n const _triangleNormal = /*@__PURE__*/ new Vector3();\n const _testAxis = /*@__PURE__*/ new Vector3();\n \n function satForAxes( axes, v0, v1, v2, extents ) {\n \n     for ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n \n         _testAxis.fromArray( axes, i );\n         // project the aabb onto the separating axis\n         const r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n         // project all 3 vertices of the triangle onto the separating axis\n         const p0 = v0.dot( _testAxis );\n         const p1 = v1.dot( _testAxis );\n         const p2 = v2.dot( _testAxis );\n         // actual test, basically see if either of the most extreme of the triangle points intersects r\n         if ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n \n             // points of the projected triangle are outside the projected half-length of the aabb\n             // the axis is separating and we can exit\n             return false;\n \n         }\n \n     }\n \n     return true;\n \n }\n \n const _box$2 = /*@__PURE__*/ new Box3();\n const _v1$6 = /*@__PURE__*/ new Vector3();\n const _toFarthestPoint = /*@__PURE__*/ new Vector3();\n const _toPoint = /*@__PURE__*/ new Vector3();\n \n class Sphere {\n \n     constructor( center = new Vector3(), radius = - 1 ) {\n \n         this.center = center;\n         this.radius = radius;\n \n     }\n \n     set( center, radius ) {\n \n         this.center.copy( center );\n         this.radius = radius;\n \n         return this;\n \n     }\n \n     setFromPoints( points, optionalCenter ) {\n \n         const center = this.center;\n \n         if ( optionalCenter !== undefined ) {\n \n             center.copy( optionalCenter );\n \n         } else {\n \n             _box$2.setFromPoints( points ).getCenter( center );\n \n         }\n \n         let maxRadiusSq = 0;\n \n         for ( let i = 0, il = points.length; i < il; i ++ ) {\n \n             maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n \n         }\n \n         this.radius = Math.sqrt( maxRadiusSq );\n \n         return this;\n \n     }\n \n     copy( sphere ) {\n \n         this.center.copy( sphere.center );\n         this.radius = sphere.radius;\n \n         return this;\n \n     }\n \n     isEmpty() {\n \n         return ( this.radius < 0 );\n \n     }\n \n     makeEmpty() {\n \n         this.center.set( 0, 0, 0 );\n         this.radius = - 1;\n \n         return this;\n \n     }\n \n     containsPoint( point ) {\n \n         return ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n \n     }\n \n     distanceToPoint( point ) {\n \n         return ( point.distanceTo( this.center ) - this.radius );\n \n     }\n \n     intersectsSphere( sphere ) {\n \n         const radiusSum = this.radius + sphere.radius;\n \n         return sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n \n     }\n \n     intersectsBox( box ) {\n \n         return box.intersectsSphere( this );\n \n     }\n \n     intersectsPlane( plane ) {\n \n         return Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n \n     }\n \n     clampPoint( point, target ) {\n \n         const deltaLengthSq = this.center.distanceToSquared( point );\n \n         target.copy( point );\n \n         if ( deltaLengthSq > ( this.radius * this.radius ) ) {\n \n             target.sub( this.center ).normalize();\n             target.multiplyScalar( this.radius ).add( this.center );\n \n         }\n \n         return target;\n \n     }\n \n     getBoundingBox( target ) {\n \n         if ( this.isEmpty() ) {\n \n             // Empty sphere produces empty bounding box\n             target.makeEmpty();\n             return target;\n \n         }\n \n         target.set( this.center, this.center );\n         target.expandByScalar( this.radius );\n \n         return target;\n \n     }\n \n     applyMatrix4( matrix ) {\n \n         this.center.applyMatrix4( matrix );\n         this.radius = this.radius * matrix.getMaxScaleOnAxis();\n \n         return this;\n \n     }\n \n     translate( offset ) {\n \n         this.center.add( offset );\n \n         return this;\n \n     }\n \n     expandByPoint( point ) {\n \n         // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n \n         _toPoint.subVectors( point, this.center );\n \n         const lengthSq = _toPoint.lengthSq();\n \n         if ( lengthSq > ( this.radius * this.radius ) ) {\n \n             const length = Math.sqrt( lengthSq );\n             const missingRadiusHalf = ( length - this.radius ) * 0.5;\n \n             // Nudge this sphere towards the target point. Add half the missing distance to radius,\n             // and the other half to position. This gives a tighter enclosure, instead of if\n             // the whole missing distance were just added to radius.\n \n             this.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n             this.radius += missingRadiusHalf;\n \n         }\n \n         return this;\n \n     }\n \n     union( sphere ) {\n \n         // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n \n         // To enclose another sphere into this sphere, we only need to enclose two points:\n         // 1) Enclose the farthest point on the other sphere into this sphere.\n         // 2) Enclose the opposite point of the farthest point into this sphere.\n \n          if ( this.center.equals( sphere.center ) === true ) {\n \n              _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );\n \n \n         } else {\n \n             _toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n \n         }\n \n         this.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n         this.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n \n         return this;\n \n     }\n \n     equals( sphere ) {\n \n         return sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n }\n \n const _vector$a = /*@__PURE__*/ new Vector3();\n const _segCenter = /*@__PURE__*/ new Vector3();\n const _segDir = /*@__PURE__*/ new Vector3();\n const _diff = /*@__PURE__*/ new Vector3();\n \n const _edge1 = /*@__PURE__*/ new Vector3();\n const _edge2 = /*@__PURE__*/ new Vector3();\n const _normal$1 = /*@__PURE__*/ new Vector3();\n \n class Ray {\n \n     constructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n \n         this.origin = origin;\n         this.direction = direction;\n \n     }\n \n     set( origin, direction ) {\n \n         this.origin.copy( origin );\n         this.direction.copy( direction );\n \n         return this;\n \n     }\n \n     copy( ray ) {\n \n         this.origin.copy( ray.origin );\n         this.direction.copy( ray.direction );\n \n         return this;\n \n     }\n \n     at( t, target ) {\n \n         return target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n \n     }\n \n     lookAt( v ) {\n \n         this.direction.copy( v ).sub( this.origin ).normalize();\n \n         return this;\n \n     }\n \n     recast( t ) {\n \n         this.origin.copy( this.at( t, _vector$a ) );\n \n         return this;\n \n     }\n \n     closestPointToPoint( point, target ) {\n \n         target.subVectors( point, this.origin );\n \n         const directionDistance = target.dot( this.direction );\n \n         if ( directionDistance < 0 ) {\n \n             return target.copy( this.origin );\n \n         }\n \n         return target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n \n     }\n \n     distanceToPoint( point ) {\n \n         return Math.sqrt( this.distanceSqToPoint( point ) );\n \n     }\n \n     distanceSqToPoint( point ) {\n \n         const directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n \n         // point behind the ray\n \n         if ( directionDistance < 0 ) {\n \n             return this.origin.distanceToSquared( point );\n \n         }\n \n         _vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n \n         return _vector$a.distanceToSquared( point );\n \n     }\n \n     distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n \n         // from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n         // It returns the min distance between the ray and the segment\n         // defined by v0 and v1\n         // It can also set two optional targets :\n         // - The closest point on the ray\n         // - The closest point on the segment\n \n         _segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n         _segDir.copy( v1 ).sub( v0 ).normalize();\n         _diff.copy( this.origin ).sub( _segCenter );\n \n         const segExtent = v0.distanceTo( v1 ) * 0.5;\n         const a01 = - this.direction.dot( _segDir );\n         const b0 = _diff.dot( this.direction );\n         const b1 = - _diff.dot( _segDir );\n         const c = _diff.lengthSq();\n         const det = Math.abs( 1 - a01 * a01 );\n         let s0, s1, sqrDist, extDet;\n \n         if ( det > 0 ) {\n \n             // The ray and segment are not parallel.\n \n             s0 = a01 * b1 - b0;\n             s1 = a01 * b0 - b1;\n             extDet = segExtent * det;\n \n             if ( s0 >= 0 ) {\n \n                 if ( s1 >= - extDet ) {\n \n                     if ( s1 <= extDet ) {\n \n                         // region 0\n                         // Minimum at interior points of ray and segment.\n \n                         const invDet = 1 / det;\n                         s0 *= invDet;\n                         s1 *= invDet;\n                         sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n \n                     } else {\n \n                         // region 1\n \n                         s1 = segExtent;\n                         s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n                         sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n \n                     }\n \n                 } else {\n \n                     // region 5\n \n                     s1 = - segExtent;\n                     s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n                     sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n \n                 }\n \n             } else {\n \n                 if ( s1 <= - extDet ) {\n \n                     // region 4\n \n                     s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n                     s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n                     sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n \n                 } else if ( s1 <= extDet ) {\n \n                     // region 3\n \n                     s0 = 0;\n                     s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n                     sqrDist = s1 * ( s1 + 2 * b1 ) + c;\n \n                 } else {\n \n                     // region 2\n \n                     s0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n                     s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n                     sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n \n                 }\n \n             }\n \n         } else {\n \n             // Ray and segment are parallel.\n \n             s1 = ( a01 > 0 ) ? - segExtent : segExtent;\n             s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n             sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n \n         }\n \n         if ( optionalPointOnRay ) {\n \n             optionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n \n         }\n \n         if ( optionalPointOnSegment ) {\n \n             optionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n \n         }\n \n         return sqrDist;\n \n     }\n \n     intersectSphere( sphere, target ) {\n \n         _vector$a.subVectors( sphere.center, this.origin );\n         const tca = _vector$a.dot( this.direction );\n         const d2 = _vector$a.dot( _vector$a ) - tca * tca;\n         const radius2 = sphere.radius * sphere.radius;\n \n         if ( d2 > radius2 ) return null;\n \n         const thc = Math.sqrt( radius2 - d2 );\n \n         // t0 = first intersect point - entrance on front of sphere\n         const t0 = tca - thc;\n \n         // t1 = second intersect point - exit point on back of sphere\n         const t1 = tca + thc;\n \n         // test to see if both t0 and t1 are behind the ray - if so, return null\n         if ( t0 < 0 && t1 < 0 ) return null;\n \n         // test to see if t0 is behind the ray:\n         // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n         // in order to always return an intersect point that is in front of the ray.\n         if ( t0 < 0 ) return this.at( t1, target );\n \n         // else t0 is in front of the ray, so return the first collision point scaled by t0\n         return this.at( t0, target );\n \n     }\n \n     intersectsSphere( sphere ) {\n \n         return this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n \n     }\n \n     distanceToPlane( plane ) {\n \n         const denominator = plane.normal.dot( this.direction );\n \n         if ( denominator === 0 ) {\n \n             // line is coplanar, return origin\n             if ( plane.distanceToPoint( this.origin ) === 0 ) {\n \n                 return 0;\n \n             }\n \n             // Null is preferable to undefined since undefined means.... it is undefined\n \n             return null;\n \n         }\n \n         const t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n \n         // Return if the ray never intersects the plane\n \n         return t >= 0 ? t : null;\n \n     }\n \n     intersectPlane( plane, target ) {\n \n         const t = this.distanceToPlane( plane );\n \n         if ( t === null ) {\n \n             return null;\n \n         }\n \n         return this.at( t, target );\n \n     }\n \n     intersectsPlane( plane ) {\n \n         // check if the ray lies on the plane first\n \n         const distToPoint = plane.distanceToPoint( this.origin );\n \n         if ( distToPoint === 0 ) {\n \n             return true;\n \n         }\n \n         const denominator = plane.normal.dot( this.direction );\n \n         if ( denominator * distToPoint < 0 ) {\n \n             return true;\n \n         }\n \n         // ray origin is behind the plane (and is pointing behind it)\n \n         return false;\n \n     }\n \n     intersectBox( box, target ) {\n \n         let tmin, tmax, tymin, tymax, tzmin, tzmax;\n \n         const invdirx = 1 / this.direction.x,\n             invdiry = 1 / this.direction.y,\n             invdirz = 1 / this.direction.z;\n \n         const origin = this.origin;\n \n         if ( invdirx >= 0 ) {\n \n             tmin = ( box.min.x - origin.x ) * invdirx;\n             tmax = ( box.max.x - origin.x ) * invdirx;\n \n         } else {\n \n             tmin = ( box.max.x - origin.x ) * invdirx;\n             tmax = ( box.min.x - origin.x ) * invdirx;\n \n         }\n \n         if ( invdiry >= 0 ) {\n \n             tymin = ( box.min.y - origin.y ) * invdiry;\n             tymax = ( box.max.y - origin.y ) * invdiry;\n \n         } else {\n \n             tymin = ( box.max.y - origin.y ) * invdiry;\n             tymax = ( box.min.y - origin.y ) * invdiry;\n \n         }\n \n         if ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n \n         // These lines also handle the case where tmin or tmax is NaN\n         // (result of 0 * Infinity). x !== x returns true if x is NaN\n \n         if ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n \n         if ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n \n         if ( invdirz >= 0 ) {\n \n             tzmin = ( box.min.z - origin.z ) * invdirz;\n             tzmax = ( box.max.z - origin.z ) * invdirz;\n \n         } else {\n \n             tzmin = ( box.max.z - origin.z ) * invdirz;\n             tzmax = ( box.min.z - origin.z ) * invdirz;\n \n         }\n \n         if ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n \n         if ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n \n         if ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n \n         //return point closest to the ray (positive side)\n \n         if ( tmax < 0 ) return null;\n \n         return this.at( tmin >= 0 ? tmin : tmax, target );\n \n     }\n \n     intersectsBox( box ) {\n \n         return this.intersectBox( box, _vector$a ) !== null;\n \n     }\n \n     intersectTriangle( a, b, c, backfaceCulling, target ) {\n \n         // Compute the offset origin, edges, and normal.\n \n         // from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n \n         _edge1.subVectors( b, a );\n         _edge2.subVectors( c, a );\n         _normal$1.crossVectors( _edge1, _edge2 );\n \n         // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n         // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n         //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n         //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n         //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n         let DdN = this.direction.dot( _normal$1 );\n         let sign;\n \n         if ( DdN > 0 ) {\n \n             if ( backfaceCulling ) return null;\n             sign = 1;\n \n         } else if ( DdN < 0 ) {\n \n             sign = - 1;\n             DdN = - DdN;\n \n         } else {\n \n             return null;\n \n         }\n \n         _diff.subVectors( this.origin, a );\n         const DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n \n         // b1 < 0, no intersection\n         if ( DdQxE2 < 0 ) {\n \n             return null;\n \n         }\n \n         const DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n \n         // b2 < 0, no intersection\n         if ( DdE1xQ < 0 ) {\n \n             return null;\n \n         }\n \n         // b1+b2 > 1, no intersection\n         if ( DdQxE2 + DdE1xQ > DdN ) {\n \n             return null;\n \n         }\n \n         // Line intersects triangle, check if ray does.\n         const QdN = - sign * _diff.dot( _normal$1 );\n \n         // t < 0, no intersection\n         if ( QdN < 0 ) {\n \n             return null;\n \n         }\n \n         // Ray intersects triangle.\n         return this.at( QdN / DdN, target );\n \n     }\n \n     applyMatrix4( matrix4 ) {\n \n         this.origin.applyMatrix4( matrix4 );\n         this.direction.transformDirection( matrix4 );\n \n         return this;\n \n     }\n \n     equals( ray ) {\n \n         return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n }\n \n class Matrix4 {\n \n     constructor() {\n \n         this.elements = [\n \n             1, 0, 0, 0,\n             0, 1, 0, 0,\n             0, 0, 1, 0,\n             0, 0, 0, 1\n \n         ];\n \n         if ( arguments.length > 0 ) {\n \n             console.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n \n         }\n \n     }\n \n     set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n \n         const te = this.elements;\n \n         te[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n         te[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n         te[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n         te[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n \n         return this;\n \n     }\n \n     identity() {\n \n         this.set(\n \n             1, 0, 0, 0,\n             0, 1, 0, 0,\n             0, 0, 1, 0,\n             0, 0, 0, 1\n \n         );\n \n         return this;\n \n     }\n \n     clone() {\n \n         return new Matrix4().fromArray( this.elements );\n \n     }\n \n     copy( m ) {\n \n         const te = this.elements;\n         const me = m.elements;\n \n         te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n         te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n         te[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n         te[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n \n         return this;\n \n     }\n \n     copyPosition( m ) {\n \n         const te = this.elements, me = m.elements;\n \n         te[ 12 ] = me[ 12 ];\n         te[ 13 ] = me[ 13 ];\n         te[ 14 ] = me[ 14 ];\n \n         return this;\n \n     }\n \n     setFromMatrix3( m ) {\n \n         const me = m.elements;\n \n         this.set(\n \n             me[ 0 ], me[ 3 ], me[ 6 ], 0,\n             me[ 1 ], me[ 4 ], me[ 7 ], 0,\n             me[ 2 ], me[ 5 ], me[ 8 ], 0,\n             0, 0, 0, 1\n \n         );\n \n         return this;\n \n     }\n \n     extractBasis( xAxis, yAxis, zAxis ) {\n \n         xAxis.setFromMatrixColumn( this, 0 );\n         yAxis.setFromMatrixColumn( this, 1 );\n         zAxis.setFromMatrixColumn( this, 2 );\n \n         return this;\n \n     }\n \n     makeBasis( xAxis, yAxis, zAxis ) {\n \n         this.set(\n             xAxis.x, yAxis.x, zAxis.x, 0,\n             xAxis.y, yAxis.y, zAxis.y, 0,\n             xAxis.z, yAxis.z, zAxis.z, 0,\n             0, 0, 0, 1\n         );\n \n         return this;\n \n     }\n \n     extractRotation( m ) {\n \n         // this method does not support reflection matrices\n \n         const te = this.elements;\n         const me = m.elements;\n \n         const scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n         const scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n         const scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n \n         te[ 0 ] = me[ 0 ] * scaleX;\n         te[ 1 ] = me[ 1 ] * scaleX;\n         te[ 2 ] = me[ 2 ] * scaleX;\n         te[ 3 ] = 0;\n \n         te[ 4 ] = me[ 4 ] * scaleY;\n         te[ 5 ] = me[ 5 ] * scaleY;\n         te[ 6 ] = me[ 6 ] * scaleY;\n         te[ 7 ] = 0;\n \n         te[ 8 ] = me[ 8 ] * scaleZ;\n         te[ 9 ] = me[ 9 ] * scaleZ;\n         te[ 10 ] = me[ 10 ] * scaleZ;\n         te[ 11 ] = 0;\n \n         te[ 12 ] = 0;\n         te[ 13 ] = 0;\n         te[ 14 ] = 0;\n         te[ 15 ] = 1;\n \n         return this;\n \n     }\n \n     makeRotationFromEuler( euler ) {\n \n         if ( ! ( euler && euler.isEuler ) ) {\n \n             console.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n \n         }\n \n         const te = this.elements;\n \n         const x = euler.x, y = euler.y, z = euler.z;\n         const a = Math.cos( x ), b = Math.sin( x );\n         const c = Math.cos( y ), d = Math.sin( y );\n         const e = Math.cos( z ), f = Math.sin( z );\n \n         if ( euler.order === 'XYZ' ) {\n \n             const ae = a * e, af = a * f, be = b * e, bf = b * f;\n \n             te[ 0 ] = c * e;\n             te[ 4 ] = - c * f;\n             te[ 8 ] = d;\n \n             te[ 1 ] = af + be * d;\n             te[ 5 ] = ae - bf * d;\n             te[ 9 ] = - b * c;\n \n             te[ 2 ] = bf - ae * d;\n             te[ 6 ] = be + af * d;\n             te[ 10 ] = a * c;\n \n         } else if ( euler.order === 'YXZ' ) {\n \n             const ce = c * e, cf = c * f, de = d * e, df = d * f;\n \n             te[ 0 ] = ce + df * b;\n             te[ 4 ] = de * b - cf;\n             te[ 8 ] = a * d;\n \n             te[ 1 ] = a * f;\n             te[ 5 ] = a * e;\n             te[ 9 ] = - b;\n \n             te[ 2 ] = cf * b - de;\n             te[ 6 ] = df + ce * b;\n             te[ 10 ] = a * c;\n \n         } else if ( euler.order === 'ZXY' ) {\n \n             const ce = c * e, cf = c * f, de = d * e, df = d * f;\n \n             te[ 0 ] = ce - df * b;\n             te[ 4 ] = - a * f;\n             te[ 8 ] = de + cf * b;\n \n             te[ 1 ] = cf + de * b;\n             te[ 5 ] = a * e;\n             te[ 9 ] = df - ce * b;\n \n             te[ 2 ] = - a * d;\n             te[ 6 ] = b;\n             te[ 10 ] = a * c;\n \n         } else if ( euler.order === 'ZYX' ) {\n \n             const ae = a * e, af = a * f, be = b * e, bf = b * f;\n \n             te[ 0 ] = c * e;\n             te[ 4 ] = be * d - af;\n             te[ 8 ] = ae * d + bf;\n \n             te[ 1 ] = c * f;\n             te[ 5 ] = bf * d + ae;\n             te[ 9 ] = af * d - be;\n \n             te[ 2 ] = - d;\n             te[ 6 ] = b * c;\n             te[ 10 ] = a * c;\n \n         } else if ( euler.order === 'YZX' ) {\n \n             const ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n \n             te[ 0 ] = c * e;\n             te[ 4 ] = bd - ac * f;\n             te[ 8 ] = bc * f + ad;\n \n             te[ 1 ] = f;\n             te[ 5 ] = a * e;\n             te[ 9 ] = - b * e;\n \n             te[ 2 ] = - d * e;\n             te[ 6 ] = ad * f + bc;\n             te[ 10 ] = ac - bd * f;\n \n         } else if ( euler.order === 'XZY' ) {\n \n             const ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n \n             te[ 0 ] = c * e;\n             te[ 4 ] = - f;\n             te[ 8 ] = d * e;\n \n             te[ 1 ] = ac * f + bd;\n             te[ 5 ] = a * e;\n             te[ 9 ] = ad * f - bc;\n \n             te[ 2 ] = bc * f - ad;\n             te[ 6 ] = b * e;\n             te[ 10 ] = bd * f + ac;\n \n         }\n \n         // bottom row\n         te[ 3 ] = 0;\n         te[ 7 ] = 0;\n         te[ 11 ] = 0;\n \n         // last column\n         te[ 12 ] = 0;\n         te[ 13 ] = 0;\n         te[ 14 ] = 0;\n         te[ 15 ] = 1;\n \n         return this;\n \n     }\n \n     makeRotationFromQuaternion( q ) {\n \n         return this.compose( _zero, q, _one );\n \n     }\n \n     lookAt( eye, target, up ) {\n \n         const te = this.elements;\n \n         _z.subVectors( eye, target );\n \n         if ( _z.lengthSq() === 0 ) {\n \n             // eye and target are in the same position\n \n             _z.z = 1;\n \n         }\n \n         _z.normalize();\n         _x.crossVectors( up, _z );\n \n         if ( _x.lengthSq() === 0 ) {\n \n             // up and z are parallel\n \n             if ( Math.abs( up.z ) === 1 ) {\n \n                 _z.x += 0.0001;\n \n             } else {\n \n                 _z.z += 0.0001;\n \n             }\n \n             _z.normalize();\n             _x.crossVectors( up, _z );\n \n         }\n \n         _x.normalize();\n         _y.crossVectors( _z, _x );\n \n         te[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n         te[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n         te[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n \n         return this;\n \n     }\n \n     multiply( m, n ) {\n \n         if ( n !== undefined ) {\n \n             console.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n             return this.multiplyMatrices( m, n );\n \n         }\n \n         return this.multiplyMatrices( this, m );\n \n     }\n \n     premultiply( m ) {\n \n         return this.multiplyMatrices( m, this );\n \n     }\n \n     multiplyMatrices( a, b ) {\n \n         const ae = a.elements;\n         const be = b.elements;\n         const te = this.elements;\n \n         const a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n         const a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n         const a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n         const a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n \n         const b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n         const b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n         const b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n         const b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n \n         te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n         te[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n         te[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n         te[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n \n         te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n         te[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n         te[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n         te[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n \n         te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n         te[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n         te[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n         te[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n \n         te[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n         te[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n         te[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n         te[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n \n         return this;\n \n     }\n \n     multiplyScalar( s ) {\n \n         const te = this.elements;\n \n         te[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n         te[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n         te[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n         te[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n \n         return this;\n \n     }\n \n     determinant() {\n \n         const te = this.elements;\n \n         const n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n         const n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n         const n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n         const n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n \n         //TODO: make this more efficient\n         //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n \n         return (\n             n41 * (\n                 + n14 * n23 * n32\n                  - n13 * n24 * n32\n                  - n14 * n22 * n33\n                  + n12 * n24 * n33\n                  + n13 * n22 * n34\n                  - n12 * n23 * n34\n             ) +\n             n42 * (\n                 + n11 * n23 * n34\n                  - n11 * n24 * n33\n                  + n14 * n21 * n33\n                  - n13 * n21 * n34\n                  + n13 * n24 * n31\n                  - n14 * n23 * n31\n             ) +\n             n43 * (\n                 + n11 * n24 * n32\n                  - n11 * n22 * n34\n                  - n14 * n21 * n32\n                  + n12 * n21 * n34\n                  + n14 * n22 * n31\n                  - n12 * n24 * n31\n             ) +\n             n44 * (\n                 - n13 * n22 * n31\n                  - n11 * n23 * n32\n                  + n11 * n22 * n33\n                  + n13 * n21 * n32\n                  - n12 * n21 * n33\n                  + n12 * n23 * n31\n             )\n \n         );\n \n     }\n \n     transpose() {\n \n         const te = this.elements;\n         let tmp;\n \n         tmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n         tmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n         tmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n \n         tmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n         tmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n         tmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n \n         return this;\n \n     }\n \n     setPosition( x, y, z ) {\n \n         const te = this.elements;\n \n         if ( x.isVector3 ) {\n \n             te[ 12 ] = x.x;\n             te[ 13 ] = x.y;\n             te[ 14 ] = x.z;\n \n         } else {\n \n             te[ 12 ] = x;\n             te[ 13 ] = y;\n             te[ 14 ] = z;\n \n         }\n \n         return this;\n \n     }\n \n     invert() {\n \n         // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n         const te = this.elements,\n \n             n11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n             n12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n             n13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n             n14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n \n             t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n             t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n             t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n             t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n \n         const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n \n         if ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n \n         const detInv = 1 / det;\n \n         te[ 0 ] = t11 * detInv;\n         te[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n         te[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n         te[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n \n         te[ 4 ] = t12 * detInv;\n         te[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n         te[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n         te[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n \n         te[ 8 ] = t13 * detInv;\n         te[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n         te[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n         te[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n \n         te[ 12 ] = t14 * detInv;\n         te[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n         te[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n         te[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n \n         return this;\n \n     }\n \n     scale( v ) {\n \n         const te = this.elements;\n         const x = v.x, y = v.y, z = v.z;\n \n         te[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n         te[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n         te[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n         te[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n \n         return this;\n \n     }\n \n     getMaxScaleOnAxis() {\n \n         const te = this.elements;\n \n         const scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n         const scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n         const scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n \n         return Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n \n     }\n \n     makeTranslation( x, y, z ) {\n \n         this.set(\n \n             1, 0, 0, x,\n             0, 1, 0, y,\n             0, 0, 1, z,\n             0, 0, 0, 1\n \n         );\n \n         return this;\n \n     }\n \n     makeRotationX( theta ) {\n \n         const c = Math.cos( theta ), s = Math.sin( theta );\n \n         this.set(\n \n             1, 0, 0, 0,\n             0, c, - s, 0,\n             0, s, c, 0,\n             0, 0, 0, 1\n \n         );\n \n         return this;\n \n     }\n \n     makeRotationY( theta ) {\n \n         const c = Math.cos( theta ), s = Math.sin( theta );\n \n         this.set(\n \n              c, 0, s, 0,\n              0, 1, 0, 0,\n             - s, 0, c, 0,\n              0, 0, 0, 1\n \n         );\n \n         return this;\n \n     }\n \n     makeRotationZ( theta ) {\n \n         const c = Math.cos( theta ), s = Math.sin( theta );\n \n         this.set(\n \n             c, - s, 0, 0,\n             s, c, 0, 0,\n             0, 0, 1, 0,\n             0, 0, 0, 1\n \n         );\n \n         return this;\n \n     }\n \n     makeRotationAxis( axis, angle ) {\n \n         // Based on http://www.gamedev.net/reference/articles/article1199.asp\n \n         const c = Math.cos( angle );\n         const s = Math.sin( angle );\n         const t = 1 - c;\n         const x = axis.x, y = axis.y, z = axis.z;\n         const tx = t * x, ty = t * y;\n \n         this.set(\n \n             tx * x + c, tx * y - s * z, tx * z + s * y, 0,\n             tx * y + s * z, ty * y + c, ty * z - s * x, 0,\n             tx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n             0, 0, 0, 1\n \n         );\n \n         return this;\n \n     }\n \n     makeScale( x, y, z ) {\n \n         this.set(\n \n             x, 0, 0, 0,\n             0, y, 0, 0,\n             0, 0, z, 0,\n             0, 0, 0, 1\n \n         );\n \n         return this;\n \n     }\n \n     makeShear( xy, xz, yx, yz, zx, zy ) {\n \n         this.set(\n \n             1, yx, zx, 0,\n             xy, 1, zy, 0,\n             xz, yz, 1, 0,\n             0, 0, 0, 1\n \n         );\n \n         return this;\n \n     }\n \n     compose( position, quaternion, scale ) {\n \n         const te = this.elements;\n \n         const x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n         const x2 = x + x,\ty2 = y + y, z2 = z + z;\n         const xx = x * x2, xy = x * y2, xz = x * z2;\n         const yy = y * y2, yz = y * z2, zz = z * z2;\n         const wx = w * x2, wy = w * y2, wz = w * z2;\n \n         const sx = scale.x, sy = scale.y, sz = scale.z;\n \n         te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n         te[ 1 ] = ( xy + wz ) * sx;\n         te[ 2 ] = ( xz - wy ) * sx;\n         te[ 3 ] = 0;\n \n         te[ 4 ] = ( xy - wz ) * sy;\n         te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n         te[ 6 ] = ( yz + wx ) * sy;\n         te[ 7 ] = 0;\n \n         te[ 8 ] = ( xz + wy ) * sz;\n         te[ 9 ] = ( yz - wx ) * sz;\n         te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n         te[ 11 ] = 0;\n \n         te[ 12 ] = position.x;\n         te[ 13 ] = position.y;\n         te[ 14 ] = position.z;\n         te[ 15 ] = 1;\n \n         return this;\n \n     }\n \n     decompose( position, quaternion, scale ) {\n \n         const te = this.elements;\n \n         let sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n         const sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n         const sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n \n         // if determine is negative, we need to invert one scale\n         const det = this.determinant();\n         if ( det < 0 ) sx = - sx;\n \n         position.x = te[ 12 ];\n         position.y = te[ 13 ];\n         position.z = te[ 14 ];\n \n         // scale the rotation part\n         _m1$2.copy( this );\n \n         const invSX = 1 / sx;\n         const invSY = 1 / sy;\n         const invSZ = 1 / sz;\n \n         _m1$2.elements[ 0 ] *= invSX;\n         _m1$2.elements[ 1 ] *= invSX;\n         _m1$2.elements[ 2 ] *= invSX;\n \n         _m1$2.elements[ 4 ] *= invSY;\n         _m1$2.elements[ 5 ] *= invSY;\n         _m1$2.elements[ 6 ] *= invSY;\n \n         _m1$2.elements[ 8 ] *= invSZ;\n         _m1$2.elements[ 9 ] *= invSZ;\n         _m1$2.elements[ 10 ] *= invSZ;\n \n         quaternion.setFromRotationMatrix( _m1$2 );\n \n         scale.x = sx;\n         scale.y = sy;\n         scale.z = sz;\n \n         return this;\n \n     }\n \n     makePerspective( left, right, top, bottom, near, far ) {\n \n         if ( far === undefined ) {\n \n             console.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n \n         }\n \n         const te = this.elements;\n         const x = 2 * near / ( right - left );\n         const y = 2 * near / ( top - bottom );\n \n         const a = ( right + left ) / ( right - left );\n         const b = ( top + bottom ) / ( top - bottom );\n         const c = - ( far + near ) / ( far - near );\n         const d = - 2 * far * near / ( far - near );\n \n         te[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n         te[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n         te[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n         te[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n \n         return this;\n \n     }\n \n     makeOrthographic( left, right, top, bottom, near, far ) {\n \n         const te = this.elements;\n         const w = 1.0 / ( right - left );\n         const h = 1.0 / ( top - bottom );\n         const p = 1.0 / ( far - near );\n \n         const x = ( right + left ) * w;\n         const y = ( top + bottom ) * h;\n         const z = ( far + near ) * p;\n \n         te[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n         te[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n         te[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n         te[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n \n         return this;\n \n     }\n \n     equals( matrix ) {\n \n         const te = this.elements;\n         const me = matrix.elements;\n \n         for ( let i = 0; i < 16; i ++ ) {\n \n             if ( te[ i ] !== me[ i ] ) return false;\n \n         }\n \n         return true;\n \n     }\n \n     fromArray( array, offset = 0 ) {\n \n         for ( let i = 0; i < 16; i ++ ) {\n \n             this.elements[ i ] = array[ i + offset ];\n \n         }\n \n         return this;\n \n     }\n \n     toArray( array = [], offset = 0 ) {\n \n         const te = this.elements;\n \n         array[ offset ] = te[ 0 ];\n         array[ offset + 1 ] = te[ 1 ];\n         array[ offset + 2 ] = te[ 2 ];\n         array[ offset + 3 ] = te[ 3 ];\n \n         array[ offset + 4 ] = te[ 4 ];\n         array[ offset + 5 ] = te[ 5 ];\n         array[ offset + 6 ] = te[ 6 ];\n         array[ offset + 7 ] = te[ 7 ];\n \n         array[ offset + 8 ] = te[ 8 ];\n         array[ offset + 9 ] = te[ 9 ];\n         array[ offset + 10 ] = te[ 10 ];\n         array[ offset + 11 ] = te[ 11 ];\n \n         array[ offset + 12 ] = te[ 12 ];\n         array[ offset + 13 ] = te[ 13 ];\n         array[ offset + 14 ] = te[ 14 ];\n         array[ offset + 15 ] = te[ 15 ];\n \n         return array;\n \n     }\n \n }\n \n Matrix4.prototype.isMatrix4 = true;\n \n const _v1$5 = /*@__PURE__*/ new Vector3();\n const _m1$2 = /*@__PURE__*/ new Matrix4();\n const _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\n const _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\n const _x = /*@__PURE__*/ new Vector3();\n const _y = /*@__PURE__*/ new Vector3();\n const _z = /*@__PURE__*/ new Vector3();\n \n const _matrix$1 = /*@__PURE__*/ new Matrix4();\n const _quaternion$3 = /*@__PURE__*/ new Quaternion();\n \n class Euler {\n \n     constructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n \n         this._x = x;\n         this._y = y;\n         this._z = z;\n         this._order = order;\n \n     }\n \n     get x() {\n \n         return this._x;\n \n     }\n \n     set x( value ) {\n \n         this._x = value;\n         this._onChangeCallback();\n \n     }\n \n     get y() {\n \n         return this._y;\n \n     }\n \n     set y( value ) {\n \n         this._y = value;\n         this._onChangeCallback();\n \n     }\n \n     get z() {\n \n         return this._z;\n \n     }\n \n     set z( value ) {\n \n         this._z = value;\n         this._onChangeCallback();\n \n     }\n \n     get order() {\n \n         return this._order;\n \n     }\n \n     set order( value ) {\n \n         this._order = value;\n         this._onChangeCallback();\n \n     }\n \n     set( x, y, z, order = this._order ) {\n \n         this._x = x;\n         this._y = y;\n         this._z = z;\n         this._order = order;\n \n         this._onChangeCallback();\n \n         return this;\n \n     }\n \n     clone() {\n \n         return new this.constructor( this._x, this._y, this._z, this._order );\n \n     }\n \n     copy( euler ) {\n \n         this._x = euler._x;\n         this._y = euler._y;\n         this._z = euler._z;\n         this._order = euler._order;\n \n         this._onChangeCallback();\n \n         return this;\n \n     }\n \n     setFromRotationMatrix( m, order = this._order, update = true ) {\n \n         // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n \n         const te = m.elements;\n         const m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n         const m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n         const m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n \n         switch ( order ) {\n \n             case 'XYZ':\n \n                 this._y = Math.asin( clamp( m13, - 1, 1 ) );\n \n                 if ( Math.abs( m13 ) < 0.9999999 ) {\n \n                     this._x = Math.atan2( - m23, m33 );\n                     this._z = Math.atan2( - m12, m11 );\n \n                 } else {\n \n                     this._x = Math.atan2( m32, m22 );\n                     this._z = 0;\n \n                 }\n \n                 break;\n \n             case 'YXZ':\n \n                 this._x = Math.asin( - clamp( m23, - 1, 1 ) );\n \n                 if ( Math.abs( m23 ) < 0.9999999 ) {\n \n                     this._y = Math.atan2( m13, m33 );\n                     this._z = Math.atan2( m21, m22 );\n \n                 } else {\n \n                     this._y = Math.atan2( - m31, m11 );\n                     this._z = 0;\n \n                 }\n \n                 break;\n \n             case 'ZXY':\n \n                 this._x = Math.asin( clamp( m32, - 1, 1 ) );\n \n                 if ( Math.abs( m32 ) < 0.9999999 ) {\n \n                     this._y = Math.atan2( - m31, m33 );\n                     this._z = Math.atan2( - m12, m22 );\n \n                 } else {\n \n                     this._y = 0;\n                     this._z = Math.atan2( m21, m11 );\n \n                 }\n \n                 break;\n \n             case 'ZYX':\n \n                 this._y = Math.asin( - clamp( m31, - 1, 1 ) );\n \n                 if ( Math.abs( m31 ) < 0.9999999 ) {\n \n                     this._x = Math.atan2( m32, m33 );\n                     this._z = Math.atan2( m21, m11 );\n \n                 } else {\n \n                     this._x = 0;\n                     this._z = Math.atan2( - m12, m22 );\n \n                 }\n \n                 break;\n \n             case 'YZX':\n \n                 this._z = Math.asin( clamp( m21, - 1, 1 ) );\n \n                 if ( Math.abs( m21 ) < 0.9999999 ) {\n \n                     this._x = Math.atan2( - m23, m22 );\n                     this._y = Math.atan2( - m31, m11 );\n \n                 } else {\n \n                     this._x = 0;\n                     this._y = Math.atan2( m13, m33 );\n \n                 }\n \n                 break;\n \n             case 'XZY':\n \n                 this._z = Math.asin( - clamp( m12, - 1, 1 ) );\n \n                 if ( Math.abs( m12 ) < 0.9999999 ) {\n \n                     this._x = Math.atan2( m32, m22 );\n                     this._y = Math.atan2( m13, m11 );\n \n                 } else {\n \n                     this._x = Math.atan2( - m23, m33 );\n                     this._y = 0;\n \n                 }\n \n                 break;\n \n             default:\n \n                 console.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n \n         }\n \n         this._order = order;\n \n         if ( update === true ) this._onChangeCallback();\n \n         return this;\n \n     }\n \n     setFromQuaternion( q, order, update ) {\n \n         _matrix$1.makeRotationFromQuaternion( q );\n \n         return this.setFromRotationMatrix( _matrix$1, order, update );\n \n     }\n \n     setFromVector3( v, order = this._order ) {\n \n         return this.set( v.x, v.y, v.z, order );\n \n     }\n \n     reorder( newOrder ) {\n \n         // WARNING: this discards revolution information -bhouston\n \n         _quaternion$3.setFromEuler( this );\n \n         return this.setFromQuaternion( _quaternion$3, newOrder );\n \n     }\n \n     equals( euler ) {\n \n         return ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n \n     }\n \n     fromArray( array ) {\n \n         this._x = array[ 0 ];\n         this._y = array[ 1 ];\n         this._z = array[ 2 ];\n         if ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n \n         this._onChangeCallback();\n \n         return this;\n \n     }\n \n     toArray( array = [], offset = 0 ) {\n \n         array[ offset ] = this._x;\n         array[ offset + 1 ] = this._y;\n         array[ offset + 2 ] = this._z;\n         array[ offset + 3 ] = this._order;\n \n         return array;\n \n     }\n \n     _onChange( callback ) {\n \n         this._onChangeCallback = callback;\n \n         return this;\n \n     }\n \n     _onChangeCallback() {}\n \n }\n \n Euler.prototype.isEuler = true;\n \n Euler.DefaultOrder = 'XYZ';\n Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n \n class Layers {\n \n     constructor() {\n \n         this.mask = 1 | 0;\n \n     }\n \n     set( channel ) {\n \n         this.mask = ( 1 << channel | 0 ) >>> 0;\n \n     }\n \n     enable( channel ) {\n \n         this.mask |= 1 << channel | 0;\n \n     }\n \n     enableAll() {\n \n         this.mask = 0xffffffff | 0;\n \n     }\n \n     toggle( channel ) {\n \n         this.mask ^= 1 << channel | 0;\n \n     }\n \n     disable( channel ) {\n \n         this.mask &= ~ ( 1 << channel | 0 );\n \n     }\n \n     disableAll() {\n \n         this.mask = 0;\n \n     }\n \n     test( layers ) {\n \n         return ( this.mask & layers.mask ) !== 0;\n \n     }\n \n     isEnabled( channel ) {\n \n         return ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n \n     }\n \n }\n \n let _object3DId = 0;\n \n const _v1$4 = /*@__PURE__*/ new Vector3();\n const _q1 = /*@__PURE__*/ new Quaternion();\n const _m1$1 = /*@__PURE__*/ new Matrix4();\n const _target = /*@__PURE__*/ new Vector3();\n \n const _position$3 = /*@__PURE__*/ new Vector3();\n const _scale$2 = /*@__PURE__*/ new Vector3();\n const _quaternion$2 = /*@__PURE__*/ new Quaternion();\n \n const _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\n const _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\n const _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n \n const _addedEvent = { type: 'added' };\n const _removedEvent = { type: 'removed' };\n \n class Object3D extends EventDispatcher {\n \n     constructor() {\n \n         super();\n \n         Object.defineProperty( this, 'id', { value: _object3DId ++ } );\n \n         this.uuid = generateUUID();\n \n         this.name = '';\n         this.type = 'Object3D';\n \n         this.parent = null;\n         this.children = [];\n \n         this.up = Object3D.DefaultUp.clone();\n \n         const position = new Vector3();\n         const rotation = new Euler();\n         const quaternion = new Quaternion();\n         const scale = new Vector3( 1, 1, 1 );\n \n         function onRotationChange() {\n \n             quaternion.setFromEuler( rotation, false );\n \n         }\n \n         function onQuaternionChange() {\n \n             rotation.setFromQuaternion( quaternion, undefined, false );\n \n         }\n \n         rotation._onChange( onRotationChange );\n         quaternion._onChange( onQuaternionChange );\n \n         Object.defineProperties( this, {\n             position: {\n                 configurable: true,\n                 enumerable: true,\n                 value: position\n             },\n             rotation: {\n                 configurable: true,\n                 enumerable: true,\n                 value: rotation\n             },\n             quaternion: {\n                 configurable: true,\n                 enumerable: true,\n                 value: quaternion\n             },\n             scale: {\n                 configurable: true,\n                 enumerable: true,\n                 value: scale\n             },\n             modelViewMatrix: {\n                 value: new Matrix4()\n             },\n             normalMatrix: {\n                 value: new Matrix3()\n             }\n         } );\n \n         this.matrix = new Matrix4();\n         this.matrixWorld = new Matrix4();\n \n         this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n         this.matrixWorldNeedsUpdate = false;\n \n         this.layers = new Layers();\n         this.visible = true;\n \n         this.castShadow = false;\n         this.receiveShadow = false;\n \n         this.frustumCulled = true;\n         this.renderOrder = 0;\n \n         this.animations = [];\n \n         this.userData = {};\n \n     }\n \n     onBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n \n     onAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n \n     applyMatrix4( matrix ) {\n \n         if ( this.matrixAutoUpdate ) this.updateMatrix();\n \n         this.matrix.premultiply( matrix );\n \n         this.matrix.decompose( this.position, this.quaternion, this.scale );\n \n     }\n \n     applyQuaternion( q ) {\n \n         this.quaternion.premultiply( q );\n \n         return this;\n \n     }\n \n     setRotationFromAxisAngle( axis, angle ) {\n \n         // assumes axis is normalized\n \n         this.quaternion.setFromAxisAngle( axis, angle );\n \n     }\n \n     setRotationFromEuler( euler ) {\n \n         this.quaternion.setFromEuler( euler, true );\n \n     }\n \n     setRotationFromMatrix( m ) {\n \n         // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n \n         this.quaternion.setFromRotationMatrix( m );\n \n     }\n \n     setRotationFromQuaternion( q ) {\n \n         // assumes q is normalized\n \n         this.quaternion.copy( q );\n \n     }\n \n     rotateOnAxis( axis, angle ) {\n \n         // rotate object on axis in object space\n         // axis is assumed to be normalized\n \n         _q1.setFromAxisAngle( axis, angle );\n \n         this.quaternion.multiply( _q1 );\n \n         return this;\n \n     }\n \n     rotateOnWorldAxis( axis, angle ) {\n \n         // rotate object on axis in world space\n         // axis is assumed to be normalized\n         // method assumes no rotated parent\n \n         _q1.setFromAxisAngle( axis, angle );\n \n         this.quaternion.premultiply( _q1 );\n \n         return this;\n \n     }\n \n     rotateX( angle ) {\n \n         return this.rotateOnAxis( _xAxis, angle );\n \n     }\n \n     rotateY( angle ) {\n \n         return this.rotateOnAxis( _yAxis, angle );\n \n     }\n \n     rotateZ( angle ) {\n \n         return this.rotateOnAxis( _zAxis, angle );\n \n     }\n \n     translateOnAxis( axis, distance ) {\n \n         // translate object by distance along axis in object space\n         // axis is assumed to be normalized\n \n         _v1$4.copy( axis ).applyQuaternion( this.quaternion );\n \n         this.position.add( _v1$4.multiplyScalar( distance ) );\n \n         return this;\n \n     }\n \n     translateX( distance ) {\n \n         return this.translateOnAxis( _xAxis, distance );\n \n     }\n \n     translateY( distance ) {\n \n         return this.translateOnAxis( _yAxis, distance );\n \n     }\n \n     translateZ( distance ) {\n \n         return this.translateOnAxis( _zAxis, distance );\n \n     }\n \n     localToWorld( vector ) {\n \n         return vector.applyMatrix4( this.matrixWorld );\n \n     }\n \n     worldToLocal( vector ) {\n \n         return vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n \n     }\n \n     lookAt( x, y, z ) {\n \n         // This method does not support objects having non-uniformly-scaled parent(s)\n \n         if ( x.isVector3 ) {\n \n             _target.copy( x );\n \n         } else {\n \n             _target.set( x, y, z );\n \n         }\n \n         const parent = this.parent;\n \n         this.updateWorldMatrix( true, false );\n \n         _position$3.setFromMatrixPosition( this.matrixWorld );\n \n         if ( this.isCamera || this.isLight ) {\n \n             _m1$1.lookAt( _position$3, _target, this.up );\n \n         } else {\n \n             _m1$1.lookAt( _target, _position$3, this.up );\n \n         }\n \n         this.quaternion.setFromRotationMatrix( _m1$1 );\n \n         if ( parent ) {\n \n             _m1$1.extractRotation( parent.matrixWorld );\n             _q1.setFromRotationMatrix( _m1$1 );\n             this.quaternion.premultiply( _q1.invert() );\n \n         }\n \n     }\n \n     add( object ) {\n \n         if ( arguments.length > 1 ) {\n \n             for ( let i = 0; i < arguments.length; i ++ ) {\n \n                 this.add( arguments[ i ] );\n \n             }\n \n             return this;\n \n         }\n \n         if ( object === this ) {\n \n             console.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n             return this;\n \n         }\n \n         if ( object && object.isObject3D ) {\n \n             if ( object.parent !== null ) {\n \n                 object.parent.remove( object );\n \n             }\n \n             object.parent = this;\n             this.children.push( object );\n \n             object.dispatchEvent( _addedEvent );\n \n         } else {\n \n             console.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n \n         }\n \n         return this;\n \n     }\n \n     remove( object ) {\n \n         if ( arguments.length > 1 ) {\n \n             for ( let i = 0; i < arguments.length; i ++ ) {\n \n                 this.remove( arguments[ i ] );\n \n             }\n \n             return this;\n \n         }\n \n         const index = this.children.indexOf( object );\n \n         if ( index !== - 1 ) {\n \n             object.parent = null;\n             this.children.splice( index, 1 );\n \n             object.dispatchEvent( _removedEvent );\n \n         }\n \n         return this;\n \n     }\n \n     removeFromParent() {\n \n         const parent = this.parent;\n \n         if ( parent !== null ) {\n \n             parent.remove( this );\n \n         }\n \n         return this;\n \n     }\n \n     clear() {\n \n         for ( let i = 0; i < this.children.length; i ++ ) {\n \n             const object = this.children[ i ];\n \n             object.parent = null;\n \n             object.dispatchEvent( _removedEvent );\n \n         }\n \n         this.children.length = 0;\n \n         return this;\n \n \n     }\n \n     attach( object ) {\n \n         // adds object as a child of this, while maintaining the object's world transform\n \n         // Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n \n         this.updateWorldMatrix( true, false );\n \n         _m1$1.copy( this.matrixWorld ).invert();\n \n         if ( object.parent !== null ) {\n \n             object.parent.updateWorldMatrix( true, false );\n \n             _m1$1.multiply( object.parent.matrixWorld );\n \n         }\n \n         object.applyMatrix4( _m1$1 );\n \n         this.add( object );\n \n         object.updateWorldMatrix( false, true );\n \n         return this;\n \n     }\n \n     getObjectById( id ) {\n \n         return this.getObjectByProperty( 'id', id );\n \n     }\n \n     getObjectByName( name ) {\n \n         return this.getObjectByProperty( 'name', name );\n \n     }\n \n     getObjectByProperty( name, value ) {\n \n         if ( this[ name ] === value ) return this;\n \n         for ( let i = 0, l = this.children.length; i < l; i ++ ) {\n \n             const child = this.children[ i ];\n             const object = child.getObjectByProperty( name, value );\n \n             if ( object !== undefined ) {\n \n                 return object;\n \n             }\n \n         }\n \n         return undefined;\n \n     }\n \n     getWorldPosition( target ) {\n \n         this.updateWorldMatrix( true, false );\n \n         return target.setFromMatrixPosition( this.matrixWorld );\n \n     }\n \n     getWorldQuaternion( target ) {\n \n         this.updateWorldMatrix( true, false );\n \n         this.matrixWorld.decompose( _position$3, target, _scale$2 );\n \n         return target;\n \n     }\n \n     getWorldScale( target ) {\n \n         this.updateWorldMatrix( true, false );\n \n         this.matrixWorld.decompose( _position$3, _quaternion$2, target );\n \n         return target;\n \n     }\n \n     getWorldDirection( target ) {\n \n         this.updateWorldMatrix( true, false );\n \n         const e = this.matrixWorld.elements;\n \n         return target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n \n     }\n \n     raycast( /* raycaster, intersects */ ) {}\n \n     traverse( callback ) {\n \n         callback( this );\n \n         const children = this.children;\n \n         for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n             children[ i ].traverse( callback );\n \n         }\n \n     }\n \n     traverseVisible( callback ) {\n \n         if ( this.visible === false ) return;\n \n         callback( this );\n \n         const children = this.children;\n \n         for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n             children[ i ].traverseVisible( callback );\n \n         }\n \n     }\n \n     traverseAncestors( callback ) {\n \n         const parent = this.parent;\n \n         if ( parent !== null ) {\n \n             callback( parent );\n \n             parent.traverseAncestors( callback );\n \n         }\n \n     }\n \n     updateMatrix() {\n \n         this.matrix.compose( this.position, this.quaternion, this.scale );\n \n         this.matrixWorldNeedsUpdate = true;\n \n     }\n \n     updateMatrixWorld( force ) {\n \n         if ( this.matrixAutoUpdate ) this.updateMatrix();\n \n         if ( this.matrixWorldNeedsUpdate || force ) {\n \n             if ( this.parent === null ) {\n \n                 this.matrixWorld.copy( this.matrix );\n \n             } else {\n \n                 this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n \n             }\n \n             this.matrixWorldNeedsUpdate = false;\n \n             force = true;\n \n         }\n \n         // update children\n \n         const children = this.children;\n \n         for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n             children[ i ].updateMatrixWorld( force );\n \n         }\n \n     }\n \n     updateWorldMatrix( updateParents, updateChildren ) {\n \n         const parent = this.parent;\n \n         if ( updateParents === true && parent !== null ) {\n \n             parent.updateWorldMatrix( true, false );\n \n         }\n \n         if ( this.matrixAutoUpdate ) this.updateMatrix();\n \n         if ( this.parent === null ) {\n \n             this.matrixWorld.copy( this.matrix );\n \n         } else {\n \n             this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n \n         }\n \n         // update children\n \n         if ( updateChildren === true ) {\n \n             const children = this.children;\n \n             for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n                 children[ i ].updateWorldMatrix( false, true );\n \n             }\n \n         }\n \n     }\n \n     toJSON( meta ) {\n \n         // meta is a string when called from JSON.stringify\n         const isRootObject = ( meta === undefined || typeof meta === 'string' );\n \n         const output = {};\n \n         // meta is a hash used to collect geometries, materials.\n         // not providing it implies that this is the root object\n         // being serialized.\n         if ( isRootObject ) {\n \n             // initialize meta obj\n             meta = {\n                 geometries: {},\n                 materials: {},\n                 textures: {},\n                 images: {},\n                 shapes: {},\n                 skeletons: {},\n                 animations: {},\n                 nodes: {}\n             };\n \n             output.metadata = {\n                 version: 4.5,\n                 type: 'Object',\n                 generator: 'Object3D.toJSON'\n             };\n \n         }\n \n         // standard Object3D serialization\n \n         const object = {};\n \n         object.uuid = this.uuid;\n         object.type = this.type;\n \n         if ( this.name !== '' ) object.name = this.name;\n         if ( this.castShadow === true ) object.castShadow = true;\n         if ( this.receiveShadow === true ) object.receiveShadow = true;\n         if ( this.visible === false ) object.visible = false;\n         if ( this.frustumCulled === false ) object.frustumCulled = false;\n         if ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n         if ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n \n         object.layers = this.layers.mask;\n         object.matrix = this.matrix.toArray();\n \n         if ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n \n         // object specific properties\n \n         if ( this.isInstancedMesh ) {\n \n             object.type = 'InstancedMesh';\n             object.count = this.count;\n             object.instanceMatrix = this.instanceMatrix.toJSON();\n             if ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n \n         }\n \n         //\n \n         function serialize( library, element ) {\n \n             if ( library[ element.uuid ] === undefined ) {\n \n                 library[ element.uuid ] = element.toJSON( meta );\n \n             }\n \n             return element.uuid;\n \n         }\n \n         if ( this.isScene ) {\n \n             if ( this.background ) {\n \n                 if ( this.background.isColor ) {\n \n                     object.background = this.background.toJSON();\n \n                 } else if ( this.background.isTexture ) {\n \n                     object.background = this.background.toJSON( meta ).uuid;\n \n                 }\n \n             }\n \n             if ( this.environment && this.environment.isTexture ) {\n \n                 object.environment = this.environment.toJSON( meta ).uuid;\n \n             }\n \n         } else if ( this.isMesh || this.isLine || this.isPoints ) {\n \n             object.geometry = serialize( meta.geometries, this.geometry );\n \n             const parameters = this.geometry.parameters;\n \n             if ( parameters !== undefined && parameters.shapes !== undefined ) {\n \n                 const shapes = parameters.shapes;\n \n                 if ( Array.isArray( shapes ) ) {\n \n                     for ( let i = 0, l = shapes.length; i < l; i ++ ) {\n \n                         const shape = shapes[ i ];\n \n                         serialize( meta.shapes, shape );\n \n                     }\n \n                 } else {\n \n                     serialize( meta.shapes, shapes );\n \n                 }\n \n             }\n \n         }\n \n         if ( this.isSkinnedMesh ) {\n \n             object.bindMode = this.bindMode;\n             object.bindMatrix = this.bindMatrix.toArray();\n \n             if ( this.skeleton !== undefined ) {\n \n                 serialize( meta.skeletons, this.skeleton );\n \n                 object.skeleton = this.skeleton.uuid;\n \n             }\n \n         }\n \n         if ( this.material !== undefined ) {\n \n             if ( Array.isArray( this.material ) ) {\n \n                 const uuids = [];\n \n                 for ( let i = 0, l = this.material.length; i < l; i ++ ) {\n \n                     uuids.push( serialize( meta.materials, this.material[ i ] ) );\n \n                 }\n \n                 object.material = uuids;\n \n             } else {\n \n                 object.material = serialize( meta.materials, this.material );\n \n             }\n \n         }\n \n         //\n \n         if ( this.children.length > 0 ) {\n \n             object.children = [];\n \n             for ( let i = 0; i < this.children.length; i ++ ) {\n \n                 object.children.push( this.children[ i ].toJSON( meta ).object );\n \n             }\n \n         }\n \n         //\n \n         if ( this.animations.length > 0 ) {\n \n             object.animations = [];\n \n             for ( let i = 0; i < this.animations.length; i ++ ) {\n \n                 const animation = this.animations[ i ];\n \n                 object.animations.push( serialize( meta.animations, animation ) );\n \n             }\n \n         }\n \n         if ( isRootObject ) {\n \n             const geometries = extractFromCache( meta.geometries );\n             const materials = extractFromCache( meta.materials );\n             const textures = extractFromCache( meta.textures );\n             const images = extractFromCache( meta.images );\n             const shapes = extractFromCache( meta.shapes );\n             const skeletons = extractFromCache( meta.skeletons );\n             const animations = extractFromCache( meta.animations );\n             const nodes = extractFromCache( meta.nodes );\n \n             if ( geometries.length > 0 ) output.geometries = geometries;\n             if ( materials.length > 0 ) output.materials = materials;\n             if ( textures.length > 0 ) output.textures = textures;\n             if ( images.length > 0 ) output.images = images;\n             if ( shapes.length > 0 ) output.shapes = shapes;\n             if ( skeletons.length > 0 ) output.skeletons = skeletons;\n             if ( animations.length > 0 ) output.animations = animations;\n             if ( nodes.length > 0 ) output.nodes = nodes;\n \n         }\n \n         output.object = object;\n \n         return output;\n \n         // extract data from the cache hash\n         // remove metadata on each item\n         // and return as array\n         function extractFromCache( cache ) {\n \n             const values = [];\n             for ( const key in cache ) {\n \n                 const data = cache[ key ];\n                 delete data.metadata;\n                 values.push( data );\n \n             }\n \n             return values;\n \n         }\n \n     }\n \n     clone( recursive ) {\n \n         return new this.constructor().copy( this, recursive );\n \n     }\n \n     copy( source, recursive = true ) {\n \n         this.name = source.name;\n \n         this.up.copy( source.up );\n \n         this.position.copy( source.position );\n         this.rotation.order = source.rotation.order;\n         this.quaternion.copy( source.quaternion );\n         this.scale.copy( source.scale );\n \n         this.matrix.copy( source.matrix );\n         this.matrixWorld.copy( source.matrixWorld );\n \n         this.matrixAutoUpdate = source.matrixAutoUpdate;\n         this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n \n         this.layers.mask = source.layers.mask;\n         this.visible = source.visible;\n \n         this.castShadow = source.castShadow;\n         this.receiveShadow = source.receiveShadow;\n \n         this.frustumCulled = source.frustumCulled;\n         this.renderOrder = source.renderOrder;\n \n         this.userData = JSON.parse( JSON.stringify( source.userData ) );\n \n         if ( recursive === true ) {\n \n             for ( let i = 0; i < source.children.length; i ++ ) {\n \n                 const child = source.children[ i ];\n                 this.add( child.clone() );\n \n             }\n \n         }\n \n         return this;\n \n     }\n \n }\n \n Object3D.DefaultUp = new Vector3( 0, 1, 0 );\n Object3D.DefaultMatrixAutoUpdate = true;\n \n Object3D.prototype.isObject3D = true;\n \n const _v0$1 = /*@__PURE__*/ new Vector3();\n const _v1$3 = /*@__PURE__*/ new Vector3();\n const _v2$2 = /*@__PURE__*/ new Vector3();\n const _v3$1 = /*@__PURE__*/ new Vector3();\n \n const _vab = /*@__PURE__*/ new Vector3();\n const _vac = /*@__PURE__*/ new Vector3();\n const _vbc = /*@__PURE__*/ new Vector3();\n const _vap = /*@__PURE__*/ new Vector3();\n const _vbp = /*@__PURE__*/ new Vector3();\n const _vcp = /*@__PURE__*/ new Vector3();\n \n class Triangle {\n \n     constructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n \n         this.a = a;\n         this.b = b;\n         this.c = c;\n \n     }\n \n     static getNormal( a, b, c, target ) {\n \n         target.subVectors( c, b );\n         _v0$1.subVectors( a, b );\n         target.cross( _v0$1 );\n \n         const targetLengthSq = target.lengthSq();\n         if ( targetLengthSq > 0 ) {\n \n             return target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n \n         }\n \n         return target.set( 0, 0, 0 );\n \n     }\n \n     // static/instance method to calculate barycentric coordinates\n     // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n     static getBarycoord( point, a, b, c, target ) {\n \n         _v0$1.subVectors( c, a );\n         _v1$3.subVectors( b, a );\n         _v2$2.subVectors( point, a );\n \n         const dot00 = _v0$1.dot( _v0$1 );\n         const dot01 = _v0$1.dot( _v1$3 );\n         const dot02 = _v0$1.dot( _v2$2 );\n         const dot11 = _v1$3.dot( _v1$3 );\n         const dot12 = _v1$3.dot( _v2$2 );\n \n         const denom = ( dot00 * dot11 - dot01 * dot01 );\n \n         // collinear or singular triangle\n         if ( denom === 0 ) {\n \n             // arbitrary location outside of triangle?\n             // not sure if this is the best idea, maybe should be returning undefined\n             return target.set( - 2, - 1, - 1 );\n \n         }\n \n         const invDenom = 1 / denom;\n         const u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n         const v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n \n         // barycentric coordinates must always sum to 1\n         return target.set( 1 - u - v, v, u );\n \n     }\n \n     static containsPoint( point, a, b, c ) {\n \n         this.getBarycoord( point, a, b, c, _v3$1 );\n \n         return ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n \n     }\n \n     static getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n \n         this.getBarycoord( point, p1, p2, p3, _v3$1 );\n \n         target.set( 0, 0 );\n         target.addScaledVector( uv1, _v3$1.x );\n         target.addScaledVector( uv2, _v3$1.y );\n         target.addScaledVector( uv3, _v3$1.z );\n \n         return target;\n \n     }\n \n     static isFrontFacing( a, b, c, direction ) {\n \n         _v0$1.subVectors( c, b );\n         _v1$3.subVectors( a, b );\n \n         // strictly front facing\n         return ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n \n     }\n \n     set( a, b, c ) {\n \n         this.a.copy( a );\n         this.b.copy( b );\n         this.c.copy( c );\n \n         return this;\n \n     }\n \n     setFromPointsAndIndices( points, i0, i1, i2 ) {\n \n         this.a.copy( points[ i0 ] );\n         this.b.copy( points[ i1 ] );\n         this.c.copy( points[ i2 ] );\n \n         return this;\n \n     }\n \n     setFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n \n         this.a.fromBufferAttribute( attribute, i0 );\n         this.b.fromBufferAttribute( attribute, i1 );\n         this.c.fromBufferAttribute( attribute, i2 );\n \n         return this;\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n     copy( triangle ) {\n \n         this.a.copy( triangle.a );\n         this.b.copy( triangle.b );\n         this.c.copy( triangle.c );\n \n         return this;\n \n     }\n \n     getArea() {\n \n         _v0$1.subVectors( this.c, this.b );\n         _v1$3.subVectors( this.a, this.b );\n \n         return _v0$1.cross( _v1$3 ).length() * 0.5;\n \n     }\n \n     getMidpoint( target ) {\n \n         return target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n \n     }\n \n     getNormal( target ) {\n \n         return Triangle.getNormal( this.a, this.b, this.c, target );\n \n     }\n \n     getPlane( target ) {\n \n         return target.setFromCoplanarPoints( this.a, this.b, this.c );\n \n     }\n \n     getBarycoord( point, target ) {\n \n         return Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n \n     }\n \n     getUV( point, uv1, uv2, uv3, target ) {\n \n         return Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n \n     }\n \n     containsPoint( point ) {\n \n         return Triangle.containsPoint( point, this.a, this.b, this.c );\n \n     }\n \n     isFrontFacing( direction ) {\n \n         return Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n \n     }\n \n     intersectsBox( box ) {\n \n         return box.intersectsTriangle( this );\n \n     }\n \n     closestPointToPoint( p, target ) {\n \n         const a = this.a, b = this.b, c = this.c;\n         let v, w;\n \n         // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n         // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n         // under the accompanying license; see chapter 5.1.5 for detailed explanation.\n         // basically, we're distinguishing which of the voronoi regions of the triangle\n         // the point lies in with the minimum amount of redundant computation.\n \n         _vab.subVectors( b, a );\n         _vac.subVectors( c, a );\n         _vap.subVectors( p, a );\n         const d1 = _vab.dot( _vap );\n         const d2 = _vac.dot( _vap );\n         if ( d1 <= 0 && d2 <= 0 ) {\n \n             // vertex region of A; barycentric coords (1, 0, 0)\n             return target.copy( a );\n \n         }\n \n         _vbp.subVectors( p, b );\n         const d3 = _vab.dot( _vbp );\n         const d4 = _vac.dot( _vbp );\n         if ( d3 >= 0 && d4 <= d3 ) {\n \n             // vertex region of B; barycentric coords (0, 1, 0)\n             return target.copy( b );\n \n         }\n \n         const vc = d1 * d4 - d3 * d2;\n         if ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n \n             v = d1 / ( d1 - d3 );\n             // edge region of AB; barycentric coords (1-v, v, 0)\n             return target.copy( a ).addScaledVector( _vab, v );\n \n         }\n \n         _vcp.subVectors( p, c );\n         const d5 = _vab.dot( _vcp );\n         const d6 = _vac.dot( _vcp );\n         if ( d6 >= 0 && d5 <= d6 ) {\n \n             // vertex region of C; barycentric coords (0, 0, 1)\n             return target.copy( c );\n \n         }\n \n         const vb = d5 * d2 - d1 * d6;\n         if ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n \n             w = d2 / ( d2 - d6 );\n             // edge region of AC; barycentric coords (1-w, 0, w)\n             return target.copy( a ).addScaledVector( _vac, w );\n \n         }\n \n         const va = d3 * d6 - d5 * d4;\n         if ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n \n             _vbc.subVectors( c, b );\n             w = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n             // edge region of BC; barycentric coords (0, 1-w, w)\n             return target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n \n         }\n \n         // face region\n         const denom = 1 / ( va + vb + vc );\n         // u = va * denom\n         v = vb * denom;\n         w = vc * denom;\n \n         return target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n \n     }\n \n     equals( triangle ) {\n \n         return triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n \n     }\n \n }\n \n let materialId = 0;\n \n class Material extends EventDispatcher {\n \n     constructor() {\n \n         super();\n \n         Object.defineProperty( this, 'id', { value: materialId ++ } );\n \n         this.uuid = generateUUID();\n \n         this.name = '';\n         this.type = 'Material';\n \n         this.fog = true;\n \n         this.blending = NormalBlending;\n         this.side = FrontSide;\n         this.vertexColors = false;\n \n         this.opacity = 1;\n         this.transparent = false;\n \n         this.blendSrc = SrcAlphaFactor;\n         this.blendDst = OneMinusSrcAlphaFactor;\n         this.blendEquation = AddEquation;\n         this.blendSrcAlpha = null;\n         this.blendDstAlpha = null;\n         this.blendEquationAlpha = null;\n \n         this.depthFunc = LessEqualDepth;\n         this.depthTest = true;\n         this.depthWrite = true;\n \n         this.stencilWriteMask = 0xff;\n         this.stencilFunc = AlwaysStencilFunc;\n         this.stencilRef = 0;\n         this.stencilFuncMask = 0xff;\n         this.stencilFail = KeepStencilOp;\n         this.stencilZFail = KeepStencilOp;\n         this.stencilZPass = KeepStencilOp;\n         this.stencilWrite = false;\n \n         this.clippingPlanes = null;\n         this.clipIntersection = false;\n         this.clipShadows = false;\n \n         this.shadowSide = null;\n \n         this.colorWrite = true;\n \n         this.precision = null; // override the renderer's default precision for this material\n \n         this.polygonOffset = false;\n         this.polygonOffsetFactor = 0;\n         this.polygonOffsetUnits = 0;\n \n         this.dithering = false;\n \n         this.alphaToCoverage = false;\n         this.premultipliedAlpha = false;\n \n         this.visible = true;\n \n         this.toneMapped = true;\n \n         this.userData = {};\n \n         this.version = 0;\n \n         this._alphaTest = 0;\n \n     }\n \n     get alphaTest() {\n \n         return this._alphaTest;\n \n     }\n \n     set alphaTest( value ) {\n \n         if ( this._alphaTest > 0 !== value > 0 ) {\n \n             this.version ++;\n \n         }\n \n         this._alphaTest = value;\n \n     }\n \n     onBuild( /* shaderobject, renderer */ ) {}\n \n     onBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n \n     onBeforeCompile( /* shaderobject, renderer */ ) {}\n \n     customProgramCacheKey() {\n \n         return this.onBeforeCompile.toString();\n \n     }\n \n     setValues( values ) {\n \n         if ( values === undefined ) return;\n \n         for ( const key in values ) {\n \n             const newValue = values[ key ];\n \n             if ( newValue === undefined ) {\n \n                 console.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n                 continue;\n \n             }\n \n             // for backward compatibility if shading is set in the constructor\n             if ( key === 'shading' ) {\n \n                 console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n                 this.flatShading = ( newValue === FlatShading ) ? true : false;\n                 continue;\n \n             }\n \n             const currentValue = this[ key ];\n \n             if ( currentValue === undefined ) {\n \n                 console.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n                 continue;\n \n             }\n \n             if ( currentValue && currentValue.isColor ) {\n \n                 currentValue.set( newValue );\n \n             } else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n \n                 currentValue.copy( newValue );\n \n             } else {\n \n                 this[ key ] = newValue;\n \n             }\n \n         }\n \n     }\n \n     toJSON( meta ) {\n \n         const isRootObject = ( meta === undefined || typeof meta === 'string' );\n \n         if ( isRootObject ) {\n \n             meta = {\n                 textures: {},\n                 images: {}\n             };\n \n         }\n \n         const data = {\n             metadata: {\n                 version: 4.5,\n                 type: 'Material',\n                 generator: 'Material.toJSON'\n             }\n         };\n \n         // standard Material serialization\n         data.uuid = this.uuid;\n         data.type = this.type;\n \n         if ( this.name !== '' ) data.name = this.name;\n \n         if ( this.color && this.color.isColor ) data.color = this.color.getHex();\n \n         if ( this.roughness !== undefined ) data.roughness = this.roughness;\n         if ( this.metalness !== undefined ) data.metalness = this.metalness;\n \n         if ( this.sheen !== undefined ) data.sheen = this.sheen;\n         if ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n         if ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n         if ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n         if ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n \n         if ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n         if ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n         if ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n         if ( this.shininess !== undefined ) data.shininess = this.shininess;\n         if ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n         if ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n \n         if ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n \n             data.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n \n         }\n \n         if ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n \n             data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n \n         }\n \n         if ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n \n             data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n             data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n \n         }\n \n         if ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n         if ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n         if ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n \n         if ( this.lightMap && this.lightMap.isTexture ) {\n \n             data.lightMap = this.lightMap.toJSON( meta ).uuid;\n             data.lightMapIntensity = this.lightMapIntensity;\n \n         }\n \n         if ( this.aoMap && this.aoMap.isTexture ) {\n \n             data.aoMap = this.aoMap.toJSON( meta ).uuid;\n             data.aoMapIntensity = this.aoMapIntensity;\n \n         }\n \n         if ( this.bumpMap && this.bumpMap.isTexture ) {\n \n             data.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n             data.bumpScale = this.bumpScale;\n \n         }\n \n         if ( this.normalMap && this.normalMap.isTexture ) {\n \n             data.normalMap = this.normalMap.toJSON( meta ).uuid;\n             data.normalMapType = this.normalMapType;\n             data.normalScale = this.normalScale.toArray();\n \n         }\n \n         if ( this.displacementMap && this.displacementMap.isTexture ) {\n \n             data.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n             data.displacementScale = this.displacementScale;\n             data.displacementBias = this.displacementBias;\n \n         }\n \n         if ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n         if ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n \n         if ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n         if ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n         if ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n         if ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n \n         if ( this.envMap && this.envMap.isTexture ) {\n \n             data.envMap = this.envMap.toJSON( meta ).uuid;\n \n             if ( this.combine !== undefined ) data.combine = this.combine;\n \n         }\n \n         if ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n         if ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n         if ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n \n         if ( this.gradientMap && this.gradientMap.isTexture ) {\n \n             data.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n \n         }\n \n         if ( this.transmission !== undefined ) data.transmission = this.transmission;\n         if ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n         if ( this.thickness !== undefined ) data.thickness = this.thickness;\n         if ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n         if ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n         if ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n \n         if ( this.size !== undefined ) data.size = this.size;\n         if ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n         if ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n \n         if ( this.blending !== NormalBlending ) data.blending = this.blending;\n         if ( this.side !== FrontSide ) data.side = this.side;\n         if ( this.vertexColors ) data.vertexColors = true;\n \n         if ( this.opacity < 1 ) data.opacity = this.opacity;\n         if ( this.transparent === true ) data.transparent = this.transparent;\n \n         data.depthFunc = this.depthFunc;\n         data.depthTest = this.depthTest;\n         data.depthWrite = this.depthWrite;\n         data.colorWrite = this.colorWrite;\n \n         data.stencilWrite = this.stencilWrite;\n         data.stencilWriteMask = this.stencilWriteMask;\n         data.stencilFunc = this.stencilFunc;\n         data.stencilRef = this.stencilRef;\n         data.stencilFuncMask = this.stencilFuncMask;\n         data.stencilFail = this.stencilFail;\n         data.stencilZFail = this.stencilZFail;\n         data.stencilZPass = this.stencilZPass;\n \n         // rotation (SpriteMaterial)\n         if ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n \n         if ( this.polygonOffset === true ) data.polygonOffset = true;\n         if ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n         if ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n \n         if ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n         if ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n         if ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n         if ( this.scale !== undefined ) data.scale = this.scale;\n \n         if ( this.dithering === true ) data.dithering = true;\n \n         if ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n         if ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n         if ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n \n         if ( this.wireframe === true ) data.wireframe = this.wireframe;\n         if ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n         if ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n         if ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n \n         if ( this.flatShading === true ) data.flatShading = this.flatShading;\n \n         if ( this.visible === false ) data.visible = false;\n \n         if ( this.toneMapped === false ) data.toneMapped = false;\n \n         if ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n \n         // TODO: Copied from Object3D.toJSON\n \n         function extractFromCache( cache ) {\n \n             const values = [];\n \n             for ( const key in cache ) {\n \n                 const data = cache[ key ];\n                 delete data.metadata;\n                 values.push( data );\n \n             }\n \n             return values;\n \n         }\n \n         if ( isRootObject ) {\n \n             const textures = extractFromCache( meta.textures );\n             const images = extractFromCache( meta.images );\n \n             if ( textures.length > 0 ) data.textures = textures;\n             if ( images.length > 0 ) data.images = images;\n \n         }\n \n         return data;\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n     copy( source ) {\n \n         this.name = source.name;\n \n         this.fog = source.fog;\n \n         this.blending = source.blending;\n         this.side = source.side;\n         this.vertexColors = source.vertexColors;\n \n         this.opacity = source.opacity;\n         this.transparent = source.transparent;\n \n         this.blendSrc = source.blendSrc;\n         this.blendDst = source.blendDst;\n         this.blendEquation = source.blendEquation;\n         this.blendSrcAlpha = source.blendSrcAlpha;\n         this.blendDstAlpha = source.blendDstAlpha;\n         this.blendEquationAlpha = source.blendEquationAlpha;\n \n         this.depthFunc = source.depthFunc;\n         this.depthTest = source.depthTest;\n         this.depthWrite = source.depthWrite;\n \n         this.stencilWriteMask = source.stencilWriteMask;\n         this.stencilFunc = source.stencilFunc;\n         this.stencilRef = source.stencilRef;\n         this.stencilFuncMask = source.stencilFuncMask;\n         this.stencilFail = source.stencilFail;\n         this.stencilZFail = source.stencilZFail;\n         this.stencilZPass = source.stencilZPass;\n         this.stencilWrite = source.stencilWrite;\n \n         const srcPlanes = source.clippingPlanes;\n         let dstPlanes = null;\n \n         if ( srcPlanes !== null ) {\n \n             const n = srcPlanes.length;\n             dstPlanes = new Array( n );\n \n             for ( let i = 0; i !== n; ++ i ) {\n \n                 dstPlanes[ i ] = srcPlanes[ i ].clone();\n \n             }\n \n         }\n \n         this.clippingPlanes = dstPlanes;\n         this.clipIntersection = source.clipIntersection;\n         this.clipShadows = source.clipShadows;\n \n         this.shadowSide = source.shadowSide;\n \n         this.colorWrite = source.colorWrite;\n \n         this.precision = source.precision;\n \n         this.polygonOffset = source.polygonOffset;\n         this.polygonOffsetFactor = source.polygonOffsetFactor;\n         this.polygonOffsetUnits = source.polygonOffsetUnits;\n \n         this.dithering = source.dithering;\n \n         this.alphaTest = source.alphaTest;\n         this.alphaToCoverage = source.alphaToCoverage;\n         this.premultipliedAlpha = source.premultipliedAlpha;\n \n         this.visible = source.visible;\n \n         this.toneMapped = source.toneMapped;\n \n         this.userData = JSON.parse( JSON.stringify( source.userData ) );\n \n         return this;\n \n     }\n \n     dispose() {\n \n         this.dispatchEvent( { type: 'dispose' } );\n \n     }\n \n     set needsUpdate( value ) {\n \n         if ( value === true ) this.version ++;\n \n     }\n \n }\n \n Material.prototype.isMaterial = true;\n \n Material.fromType = function ( /*type*/ ) {\n \n     // TODO: Behavior added in Materials.js\n \n     return null;\n \n };\n \n class MeshBasicMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.type = 'MeshBasicMaterial';\n \n         this.color = new Color( 0xffffff ); // emissive\n \n         this.map = null;\n \n         this.lightMap = null;\n         this.lightMapIntensity = 1.0;\n \n         this.aoMap = null;\n         this.aoMapIntensity = 1.0;\n \n         this.specularMap = null;\n \n         this.alphaMap = null;\n \n         this.envMap = null;\n         this.combine = MultiplyOperation;\n         this.reflectivity = 1;\n         this.refractionRatio = 0.98;\n \n         this.wireframe = false;\n         this.wireframeLinewidth = 1;\n         this.wireframeLinecap = 'round';\n         this.wireframeLinejoin = 'round';\n \n         this.setValues( parameters );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.color.copy( source.color );\n \n         this.map = source.map;\n \n         this.lightMap = source.lightMap;\n         this.lightMapIntensity = source.lightMapIntensity;\n \n         this.aoMap = source.aoMap;\n         this.aoMapIntensity = source.aoMapIntensity;\n \n         this.specularMap = source.specularMap;\n \n         this.alphaMap = source.alphaMap;\n \n         this.envMap = source.envMap;\n         this.combine = source.combine;\n         this.reflectivity = source.reflectivity;\n         this.refractionRatio = source.refractionRatio;\n \n         this.wireframe = source.wireframe;\n         this.wireframeLinewidth = source.wireframeLinewidth;\n         this.wireframeLinecap = source.wireframeLinecap;\n         this.wireframeLinejoin = source.wireframeLinejoin;\n \n         return this;\n \n     }\n \n }\n \n MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n \n const _vector$9 = /*@__PURE__*/ new Vector3();\n const _vector2$1 = /*@__PURE__*/ new Vector2();\n \n class BufferAttribute {\n \n     constructor( array, itemSize, normalized ) {\n \n         if ( Array.isArray( array ) ) {\n \n             throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n \n         }\n \n         this.name = '';\n \n         this.array = array;\n         this.itemSize = itemSize;\n         this.count = array !== undefined ? array.length / itemSize : 0;\n         this.normalized = normalized === true;\n \n         this.usage = StaticDrawUsage;\n         this.updateRange = { offset: 0, count: - 1 };\n \n         this.version = 0;\n \n     }\n \n     onUploadCallback() {}\n \n     set needsUpdate( value ) {\n \n         if ( value === true ) this.version ++;\n \n     }\n \n     setUsage( value ) {\n \n         this.usage = value;\n \n         return this;\n \n     }\n \n     copy( source ) {\n \n         this.name = source.name;\n         this.array = new source.array.constructor( source.array );\n         this.itemSize = source.itemSize;\n         this.count = source.count;\n         this.normalized = source.normalized;\n \n         this.usage = source.usage;\n \n         return this;\n \n     }\n \n     copyAt( index1, attribute, index2 ) {\n \n         index1 *= this.itemSize;\n         index2 *= attribute.itemSize;\n \n         for ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n \n             this.array[ index1 + i ] = attribute.array[ index2 + i ];\n \n         }\n \n         return this;\n \n     }\n \n     copyArray( array ) {\n \n         this.array.set( array );\n \n         return this;\n \n     }\n \n     copyColorsArray( colors ) {\n \n         const array = this.array;\n         let offset = 0;\n \n         for ( let i = 0, l = colors.length; i < l; i ++ ) {\n \n             let color = colors[ i ];\n \n             if ( color === undefined ) {\n \n                 console.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n                 color = new Color();\n \n             }\n \n             array[ offset ++ ] = color.r;\n             array[ offset ++ ] = color.g;\n             array[ offset ++ ] = color.b;\n \n         }\n \n         return this;\n \n     }\n \n     copyVector2sArray( vectors ) {\n \n         const array = this.array;\n         let offset = 0;\n \n         for ( let i = 0, l = vectors.length; i < l; i ++ ) {\n \n             let vector = vectors[ i ];\n \n             if ( vector === undefined ) {\n \n                 console.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n                 vector = new Vector2();\n \n             }\n \n             array[ offset ++ ] = vector.x;\n             array[ offset ++ ] = vector.y;\n \n         }\n \n         return this;\n \n     }\n \n     copyVector3sArray( vectors ) {\n \n         const array = this.array;\n         let offset = 0;\n \n         for ( let i = 0, l = vectors.length; i < l; i ++ ) {\n \n             let vector = vectors[ i ];\n \n             if ( vector === undefined ) {\n \n                 console.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n                 vector = new Vector3();\n \n             }\n \n             array[ offset ++ ] = vector.x;\n             array[ offset ++ ] = vector.y;\n             array[ offset ++ ] = vector.z;\n \n         }\n \n         return this;\n \n     }\n \n     copyVector4sArray( vectors ) {\n \n         const array = this.array;\n         let offset = 0;\n \n         for ( let i = 0, l = vectors.length; i < l; i ++ ) {\n \n             let vector = vectors[ i ];\n \n             if ( vector === undefined ) {\n \n                 console.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n                 vector = new Vector4();\n \n             }\n \n             array[ offset ++ ] = vector.x;\n             array[ offset ++ ] = vector.y;\n             array[ offset ++ ] = vector.z;\n             array[ offset ++ ] = vector.w;\n \n         }\n \n         return this;\n \n     }\n \n     applyMatrix3( m ) {\n \n         if ( this.itemSize === 2 ) {\n \n             for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n                 _vector2$1.fromBufferAttribute( this, i );\n                 _vector2$1.applyMatrix3( m );\n \n                 this.setXY( i, _vector2$1.x, _vector2$1.y );\n \n             }\n \n         } else if ( this.itemSize === 3 ) {\n \n             for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n                 _vector$9.fromBufferAttribute( this, i );\n                 _vector$9.applyMatrix3( m );\n \n                 this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n \n             }\n \n         }\n \n         return this;\n \n     }\n \n     applyMatrix4( m ) {\n \n         for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n             _vector$9.fromBufferAttribute( this, i );\n \n             _vector$9.applyMatrix4( m );\n \n             this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n \n         }\n \n         return this;\n \n     }\n \n     applyNormalMatrix( m ) {\n \n         for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n             _vector$9.fromBufferAttribute( this, i );\n \n             _vector$9.applyNormalMatrix( m );\n \n             this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n \n         }\n \n         return this;\n \n     }\n \n     transformDirection( m ) {\n \n         for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n             _vector$9.fromBufferAttribute( this, i );\n \n             _vector$9.transformDirection( m );\n \n             this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n \n         }\n \n         return this;\n \n     }\n \n     set( value, offset = 0 ) {\n \n         this.array.set( value, offset );\n \n         return this;\n \n     }\n \n     getX( index ) {\n \n         return this.array[ index * this.itemSize ];\n \n     }\n \n     setX( index, x ) {\n \n         this.array[ index * this.itemSize ] = x;\n \n         return this;\n \n     }\n \n     getY( index ) {\n \n         return this.array[ index * this.itemSize + 1 ];\n \n     }\n \n     setY( index, y ) {\n \n         this.array[ index * this.itemSize + 1 ] = y;\n \n         return this;\n \n     }\n \n     getZ( index ) {\n \n         return this.array[ index * this.itemSize + 2 ];\n \n     }\n \n     setZ( index, z ) {\n \n         this.array[ index * this.itemSize + 2 ] = z;\n \n         return this;\n \n     }\n \n     getW( index ) {\n \n         return this.array[ index * this.itemSize + 3 ];\n \n     }\n \n     setW( index, w ) {\n \n         this.array[ index * this.itemSize + 3 ] = w;\n \n         return this;\n \n     }\n \n     setXY( index, x, y ) {\n \n         index *= this.itemSize;\n \n         this.array[ index + 0 ] = x;\n         this.array[ index + 1 ] = y;\n \n         return this;\n \n     }\n \n     setXYZ( index, x, y, z ) {\n \n         index *= this.itemSize;\n \n         this.array[ index + 0 ] = x;\n         this.array[ index + 1 ] = y;\n         this.array[ index + 2 ] = z;\n \n         return this;\n \n     }\n \n     setXYZW( index, x, y, z, w ) {\n \n         index *= this.itemSize;\n \n         this.array[ index + 0 ] = x;\n         this.array[ index + 1 ] = y;\n         this.array[ index + 2 ] = z;\n         this.array[ index + 3 ] = w;\n \n         return this;\n \n     }\n \n     onUpload( callback ) {\n \n         this.onUploadCallback = callback;\n \n         return this;\n \n     }\n \n     clone() {\n \n         return new this.constructor( this.array, this.itemSize ).copy( this );\n \n     }\n \n     toJSON() {\n \n         const data = {\n             itemSize: this.itemSize,\n             type: this.array.constructor.name,\n             array: Array.prototype.slice.call( this.array ),\n             normalized: this.normalized\n         };\n \n         if ( this.name !== '' ) data.name = this.name;\n         if ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n         if ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n \n         return data;\n \n     }\n \n }\n \n BufferAttribute.prototype.isBufferAttribute = true;\n \n //\n \n class Int8BufferAttribute extends BufferAttribute {\n \n     constructor( array, itemSize, normalized ) {\n \n         super( new Int8Array( array ), itemSize, normalized );\n \n     }\n \n }\n \n class Uint8BufferAttribute extends BufferAttribute {\n \n     constructor( array, itemSize, normalized ) {\n \n         super( new Uint8Array( array ), itemSize, normalized );\n \n     }\n \n }\n \n class Uint8ClampedBufferAttribute extends BufferAttribute {\n \n     constructor( array, itemSize, normalized ) {\n \n         super( new Uint8ClampedArray( array ), itemSize, normalized );\n \n     }\n \n }\n \n class Int16BufferAttribute extends BufferAttribute {\n \n     constructor( array, itemSize, normalized ) {\n \n         super( new Int16Array( array ), itemSize, normalized );\n \n     }\n \n }\n \n class Uint16BufferAttribute extends BufferAttribute {\n \n     constructor( array, itemSize, normalized ) {\n \n         super( new Uint16Array( array ), itemSize, normalized );\n \n     }\n \n }\n \n class Int32BufferAttribute extends BufferAttribute {\n \n     constructor( array, itemSize, normalized ) {\n \n         super( new Int32Array( array ), itemSize, normalized );\n \n     }\n \n }\n \n class Uint32BufferAttribute extends BufferAttribute {\n \n     constructor( array, itemSize, normalized ) {\n \n         super( new Uint32Array( array ), itemSize, normalized );\n \n     }\n \n }\n \n class Float16BufferAttribute extends BufferAttribute {\n \n     constructor( array, itemSize, normalized ) {\n \n         super( new Uint16Array( array ), itemSize, normalized );\n \n     }\n \n }\n \n Float16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n \n class Float32BufferAttribute extends BufferAttribute {\n \n     constructor( array, itemSize, normalized ) {\n \n         super( new Float32Array( array ), itemSize, normalized );\n \n     }\n \n }\n \n class Float64BufferAttribute extends BufferAttribute {\n \n     constructor( array, itemSize, normalized ) {\n \n         super( new Float64Array( array ), itemSize, normalized );\n \n     }\n \n }\n \n let _id$1 = 0;\n \n const _m1 = /*@__PURE__*/ new Matrix4();\n const _obj = /*@__PURE__*/ new Object3D();\n const _offset = /*@__PURE__*/ new Vector3();\n const _box$1 = /*@__PURE__*/ new Box3();\n const _boxMorphTargets = /*@__PURE__*/ new Box3();\n const _vector$8 = /*@__PURE__*/ new Vector3();\n \n class BufferGeometry extends EventDispatcher {\n \n     constructor() {\n \n         super();\n \n         Object.defineProperty( this, 'id', { value: _id$1 ++ } );\n \n         this.uuid = generateUUID();\n \n         this.name = '';\n         this.type = 'BufferGeometry';\n \n         this.index = null;\n         this.attributes = {};\n \n         this.morphAttributes = {};\n         this.morphTargetsRelative = false;\n \n         this.groups = [];\n \n         this.boundingBox = null;\n         this.boundingSphere = null;\n \n         this.drawRange = { start: 0, count: Infinity };\n \n         this.userData = {};\n \n     }\n \n     getIndex() {\n \n         return this.index;\n \n     }\n \n     setIndex( index ) {\n \n         if ( Array.isArray( index ) ) {\n \n             this.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n \n         } else {\n \n             this.index = index;\n \n         }\n \n         return this;\n \n     }\n \n     getAttribute( name ) {\n \n         return this.attributes[ name ];\n \n     }\n \n     setAttribute( name, attribute ) {\n \n         this.attributes[ name ] = attribute;\n \n         return this;\n \n     }\n \n     deleteAttribute( name ) {\n \n         delete this.attributes[ name ];\n \n         return this;\n \n     }\n \n     hasAttribute( name ) {\n \n         return this.attributes[ name ] !== undefined;\n \n     }\n \n     addGroup( start, count, materialIndex = 0 ) {\n \n         this.groups.push( {\n \n             start: start,\n             count: count,\n             materialIndex: materialIndex\n \n         } );\n \n     }\n \n     clearGroups() {\n \n         this.groups = [];\n \n     }\n \n     setDrawRange( start, count ) {\n \n         this.drawRange.start = start;\n         this.drawRange.count = count;\n \n     }\n \n     applyMatrix4( matrix ) {\n \n         const position = this.attributes.position;\n \n         if ( position !== undefined ) {\n \n             position.applyMatrix4( matrix );\n \n             position.needsUpdate = true;\n \n         }\n \n         const normal = this.attributes.normal;\n \n         if ( normal !== undefined ) {\n \n             const normalMatrix = new Matrix3().getNormalMatrix( matrix );\n \n             normal.applyNormalMatrix( normalMatrix );\n \n             normal.needsUpdate = true;\n \n         }\n \n         const tangent = this.attributes.tangent;\n \n         if ( tangent !== undefined ) {\n \n             tangent.transformDirection( matrix );\n \n             tangent.needsUpdate = true;\n \n         }\n \n         if ( this.boundingBox !== null ) {\n \n             this.computeBoundingBox();\n \n         }\n \n         if ( this.boundingSphere !== null ) {\n \n             this.computeBoundingSphere();\n \n         }\n \n         return this;\n \n     }\n \n     applyQuaternion( q ) {\n \n         _m1.makeRotationFromQuaternion( q );\n \n         this.applyMatrix4( _m1 );\n \n         return this;\n \n     }\n \n     rotateX( angle ) {\n \n         // rotate geometry around world x-axis\n \n         _m1.makeRotationX( angle );\n \n         this.applyMatrix4( _m1 );\n \n         return this;\n \n     }\n \n     rotateY( angle ) {\n \n         // rotate geometry around world y-axis\n \n         _m1.makeRotationY( angle );\n \n         this.applyMatrix4( _m1 );\n \n         return this;\n \n     }\n \n     rotateZ( angle ) {\n \n         // rotate geometry around world z-axis\n \n         _m1.makeRotationZ( angle );\n \n         this.applyMatrix4( _m1 );\n \n         return this;\n \n     }\n \n     translate( x, y, z ) {\n \n         // translate geometry\n \n         _m1.makeTranslation( x, y, z );\n \n         this.applyMatrix4( _m1 );\n \n         return this;\n \n     }\n \n     scale( x, y, z ) {\n \n         // scale geometry\n \n         _m1.makeScale( x, y, z );\n \n         this.applyMatrix4( _m1 );\n \n         return this;\n \n     }\n \n     lookAt( vector ) {\n \n         _obj.lookAt( vector );\n \n         _obj.updateMatrix();\n \n         this.applyMatrix4( _obj.matrix );\n \n         return this;\n \n     }\n \n     center() {\n \n         this.computeBoundingBox();\n \n         this.boundingBox.getCenter( _offset ).negate();\n \n         this.translate( _offset.x, _offset.y, _offset.z );\n \n         return this;\n \n     }\n \n     setFromPoints( points ) {\n \n         const position = [];\n \n         for ( let i = 0, l = points.length; i < l; i ++ ) {\n \n             const point = points[ i ];\n             position.push( point.x, point.y, point.z || 0 );\n \n         }\n \n         this.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n \n         return this;\n \n     }\n \n     computeBoundingBox() {\n \n         if ( this.boundingBox === null ) {\n \n             this.boundingBox = new Box3();\n \n         }\n \n         const position = this.attributes.position;\n         const morphAttributesPosition = this.morphAttributes.position;\n \n         if ( position && position.isGLBufferAttribute ) {\n \n             console.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n \n             this.boundingBox.set(\n                 new Vector3( - Infinity, - Infinity, - Infinity ),\n                 new Vector3( + Infinity, + Infinity, + Infinity )\n             );\n \n             return;\n \n         }\n \n         if ( position !== undefined ) {\n \n             this.boundingBox.setFromBufferAttribute( position );\n \n             // process morph attributes if present\n \n             if ( morphAttributesPosition ) {\n \n                 for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n \n                     const morphAttribute = morphAttributesPosition[ i ];\n                     _box$1.setFromBufferAttribute( morphAttribute );\n \n                     if ( this.morphTargetsRelative ) {\n \n                         _vector$8.addVectors( this.boundingBox.min, _box$1.min );\n                         this.boundingBox.expandByPoint( _vector$8 );\n \n                         _vector$8.addVectors( this.boundingBox.max, _box$1.max );\n                         this.boundingBox.expandByPoint( _vector$8 );\n \n                     } else {\n \n                         this.boundingBox.expandByPoint( _box$1.min );\n                         this.boundingBox.expandByPoint( _box$1.max );\n \n                     }\n \n                 }\n \n             }\n \n         } else {\n \n             this.boundingBox.makeEmpty();\n \n         }\n \n         if ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n \n             console.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n \n         }\n \n     }\n \n     computeBoundingSphere() {\n \n         if ( this.boundingSphere === null ) {\n \n             this.boundingSphere = new Sphere();\n \n         }\n \n         const position = this.attributes.position;\n         const morphAttributesPosition = this.morphAttributes.position;\n \n         if ( position && position.isGLBufferAttribute ) {\n \n             console.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n \n             this.boundingSphere.set( new Vector3(), Infinity );\n \n             return;\n \n         }\n \n         if ( position ) {\n \n             // first, find the center of the bounding sphere\n \n             const center = this.boundingSphere.center;\n \n             _box$1.setFromBufferAttribute( position );\n \n             // process morph attributes if present\n \n             if ( morphAttributesPosition ) {\n \n                 for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n \n                     const morphAttribute = morphAttributesPosition[ i ];\n                     _boxMorphTargets.setFromBufferAttribute( morphAttribute );\n \n                     if ( this.morphTargetsRelative ) {\n \n                         _vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n                         _box$1.expandByPoint( _vector$8 );\n \n                         _vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n                         _box$1.expandByPoint( _vector$8 );\n \n                     } else {\n \n                         _box$1.expandByPoint( _boxMorphTargets.min );\n                         _box$1.expandByPoint( _boxMorphTargets.max );\n \n                     }\n \n                 }\n \n             }\n \n             _box$1.getCenter( center );\n \n             // second, try to find a boundingSphere with a radius smaller than the\n             // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n \n             let maxRadiusSq = 0;\n \n             for ( let i = 0, il = position.count; i < il; i ++ ) {\n \n                 _vector$8.fromBufferAttribute( position, i );\n \n                 maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n \n             }\n \n             // process morph attributes if present\n \n             if ( morphAttributesPosition ) {\n \n                 for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n \n                     const morphAttribute = morphAttributesPosition[ i ];\n                     const morphTargetsRelative = this.morphTargetsRelative;\n \n                     for ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n \n                         _vector$8.fromBufferAttribute( morphAttribute, j );\n \n                         if ( morphTargetsRelative ) {\n \n                             _offset.fromBufferAttribute( position, j );\n                             _vector$8.add( _offset );\n \n                         }\n \n                         maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n \n                     }\n \n                 }\n \n             }\n \n             this.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n \n             if ( isNaN( this.boundingSphere.radius ) ) {\n \n                 console.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n \n             }\n \n         }\n \n     }\n \n     computeTangents() {\n \n         const index = this.index;\n         const attributes = this.attributes;\n \n         // based on http://www.terathon.com/code/tangent.html\n         // (per vertex tangents)\n \n         if ( index === null ||\n              attributes.position === undefined ||\n              attributes.normal === undefined ||\n              attributes.uv === undefined ) {\n \n             console.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n             return;\n \n         }\n \n         const indices = index.array;\n         const positions = attributes.position.array;\n         const normals = attributes.normal.array;\n         const uvs = attributes.uv.array;\n \n         const nVertices = positions.length / 3;\n \n         if ( this.hasAttribute( 'tangent' ) === false ) {\n \n             this.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n \n         }\n \n         const tangents = this.getAttribute( 'tangent' ).array;\n \n         const tan1 = [], tan2 = [];\n \n         for ( let i = 0; i < nVertices; i ++ ) {\n \n             tan1[ i ] = new Vector3();\n             tan2[ i ] = new Vector3();\n \n         }\n \n         const vA = new Vector3(),\n             vB = new Vector3(),\n             vC = new Vector3(),\n \n             uvA = new Vector2(),\n             uvB = new Vector2(),\n             uvC = new Vector2(),\n \n             sdir = new Vector3(),\n             tdir = new Vector3();\n \n         function handleTriangle( a, b, c ) {\n \n             vA.fromArray( positions, a * 3 );\n             vB.fromArray( positions, b * 3 );\n             vC.fromArray( positions, c * 3 );\n \n             uvA.fromArray( uvs, a * 2 );\n             uvB.fromArray( uvs, b * 2 );\n             uvC.fromArray( uvs, c * 2 );\n \n             vB.sub( vA );\n             vC.sub( vA );\n \n             uvB.sub( uvA );\n             uvC.sub( uvA );\n \n             const r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n \n             // silently ignore degenerate uv triangles having coincident or colinear vertices\n \n             if ( ! isFinite( r ) ) return;\n \n             sdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n             tdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n \n             tan1[ a ].add( sdir );\n             tan1[ b ].add( sdir );\n             tan1[ c ].add( sdir );\n \n             tan2[ a ].add( tdir );\n             tan2[ b ].add( tdir );\n             tan2[ c ].add( tdir );\n \n         }\n \n         let groups = this.groups;\n \n         if ( groups.length === 0 ) {\n \n             groups = [ {\n                 start: 0,\n                 count: indices.length\n             } ];\n \n         }\n \n         for ( let i = 0, il = groups.length; i < il; ++ i ) {\n \n             const group = groups[ i ];\n \n             const start = group.start;\n             const count = group.count;\n \n             for ( let j = start, jl = start + count; j < jl; j += 3 ) {\n \n                 handleTriangle(\n                     indices[ j + 0 ],\n                     indices[ j + 1 ],\n                     indices[ j + 2 ]\n                 );\n \n             }\n \n         }\n \n         const tmp = new Vector3(), tmp2 = new Vector3();\n         const n = new Vector3(), n2 = new Vector3();\n \n         function handleVertex( v ) {\n \n             n.fromArray( normals, v * 3 );\n             n2.copy( n );\n \n             const t = tan1[ v ];\n \n             // Gram-Schmidt orthogonalize\n \n             tmp.copy( t );\n             tmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n \n             // Calculate handedness\n \n             tmp2.crossVectors( n2, t );\n             const test = tmp2.dot( tan2[ v ] );\n             const w = ( test < 0.0 ) ? - 1.0 : 1.0;\n \n             tangents[ v * 4 ] = tmp.x;\n             tangents[ v * 4 + 1 ] = tmp.y;\n             tangents[ v * 4 + 2 ] = tmp.z;\n             tangents[ v * 4 + 3 ] = w;\n \n         }\n \n         for ( let i = 0, il = groups.length; i < il; ++ i ) {\n \n             const group = groups[ i ];\n \n             const start = group.start;\n             const count = group.count;\n \n             for ( let j = start, jl = start + count; j < jl; j += 3 ) {\n \n                 handleVertex( indices[ j + 0 ] );\n                 handleVertex( indices[ j + 1 ] );\n                 handleVertex( indices[ j + 2 ] );\n \n             }\n \n         }\n \n     }\n \n     computeVertexNormals() {\n \n         const index = this.index;\n         const positionAttribute = this.getAttribute( 'position' );\n \n         if ( positionAttribute !== undefined ) {\n \n             let normalAttribute = this.getAttribute( 'normal' );\n \n             if ( normalAttribute === undefined ) {\n \n                 normalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n                 this.setAttribute( 'normal', normalAttribute );\n \n             } else {\n \n                 // reset existing normals to zero\n \n                 for ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n \n                     normalAttribute.setXYZ( i, 0, 0, 0 );\n \n                 }\n \n             }\n \n             const pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n             const nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n             const cb = new Vector3(), ab = new Vector3();\n \n             // indexed elements\n \n             if ( index ) {\n \n                 for ( let i = 0, il = index.count; i < il; i += 3 ) {\n \n                     const vA = index.getX( i + 0 );\n                     const vB = index.getX( i + 1 );\n                     const vC = index.getX( i + 2 );\n \n                     pA.fromBufferAttribute( positionAttribute, vA );\n                     pB.fromBufferAttribute( positionAttribute, vB );\n                     pC.fromBufferAttribute( positionAttribute, vC );\n \n                     cb.subVectors( pC, pB );\n                     ab.subVectors( pA, pB );\n                     cb.cross( ab );\n \n                     nA.fromBufferAttribute( normalAttribute, vA );\n                     nB.fromBufferAttribute( normalAttribute, vB );\n                     nC.fromBufferAttribute( normalAttribute, vC );\n \n                     nA.add( cb );\n                     nB.add( cb );\n                     nC.add( cb );\n \n                     normalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n                     normalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n                     normalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n \n                 }\n \n             } else {\n \n                 // non-indexed elements (unconnected triangle soup)\n \n                 for ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n \n                     pA.fromBufferAttribute( positionAttribute, i + 0 );\n                     pB.fromBufferAttribute( positionAttribute, i + 1 );\n                     pC.fromBufferAttribute( positionAttribute, i + 2 );\n \n                     cb.subVectors( pC, pB );\n                     ab.subVectors( pA, pB );\n                     cb.cross( ab );\n \n                     normalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n                     normalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n                     normalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n \n                 }\n \n             }\n \n             this.normalizeNormals();\n \n             normalAttribute.needsUpdate = true;\n \n         }\n \n     }\n \n     merge( geometry, offset ) {\n \n         if ( ! ( geometry && geometry.isBufferGeometry ) ) {\n \n             console.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n             return;\n \n         }\n \n         if ( offset === undefined ) {\n \n             offset = 0;\n \n             console.warn(\n                 'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n                 + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n             );\n \n         }\n \n         const attributes = this.attributes;\n \n         for ( const key in attributes ) {\n \n             if ( geometry.attributes[ key ] === undefined ) continue;\n \n             const attribute1 = attributes[ key ];\n             const attributeArray1 = attribute1.array;\n \n             const attribute2 = geometry.attributes[ key ];\n             const attributeArray2 = attribute2.array;\n \n             const attributeOffset = attribute2.itemSize * offset;\n             const length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n \n             for ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n \n                 attributeArray1[ j ] = attributeArray2[ i ];\n \n             }\n \n         }\n \n         return this;\n \n     }\n \n     normalizeNormals() {\n \n         const normals = this.attributes.normal;\n \n         for ( let i = 0, il = normals.count; i < il; i ++ ) {\n \n             _vector$8.fromBufferAttribute( normals, i );\n \n             _vector$8.normalize();\n \n             normals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n \n         }\n \n     }\n \n     toNonIndexed() {\n \n         function convertBufferAttribute( attribute, indices ) {\n \n             const array = attribute.array;\n             const itemSize = attribute.itemSize;\n             const normalized = attribute.normalized;\n \n             const array2 = new array.constructor( indices.length * itemSize );\n \n             let index = 0, index2 = 0;\n \n             for ( let i = 0, l = indices.length; i < l; i ++ ) {\n \n                 if ( attribute.isInterleavedBufferAttribute ) {\n \n                     index = indices[ i ] * attribute.data.stride + attribute.offset;\n \n                 } else {\n \n                     index = indices[ i ] * itemSize;\n \n                 }\n \n                 for ( let j = 0; j < itemSize; j ++ ) {\n \n                     array2[ index2 ++ ] = array[ index ++ ];\n \n                 }\n \n             }\n \n             return new BufferAttribute( array2, itemSize, normalized );\n \n         }\n \n         //\n \n         if ( this.index === null ) {\n \n             console.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n             return this;\n \n         }\n \n         const geometry2 = new BufferGeometry();\n \n         const indices = this.index.array;\n         const attributes = this.attributes;\n \n         // attributes\n \n         for ( const name in attributes ) {\n \n             const attribute = attributes[ name ];\n \n             const newAttribute = convertBufferAttribute( attribute, indices );\n \n             geometry2.setAttribute( name, newAttribute );\n \n         }\n \n         // morph attributes\n \n         const morphAttributes = this.morphAttributes;\n \n         for ( const name in morphAttributes ) {\n \n             const morphArray = [];\n             const morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n \n             for ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n \n                 const attribute = morphAttribute[ i ];\n \n                 const newAttribute = convertBufferAttribute( attribute, indices );\n \n                 morphArray.push( newAttribute );\n \n             }\n \n             geometry2.morphAttributes[ name ] = morphArray;\n \n         }\n \n         geometry2.morphTargetsRelative = this.morphTargetsRelative;\n \n         // groups\n \n         const groups = this.groups;\n \n         for ( let i = 0, l = groups.length; i < l; i ++ ) {\n \n             const group = groups[ i ];\n             geometry2.addGroup( group.start, group.count, group.materialIndex );\n \n         }\n \n         return geometry2;\n \n     }\n \n     toJSON() {\n \n         const data = {\n             metadata: {\n                 version: 4.5,\n                 type: 'BufferGeometry',\n                 generator: 'BufferGeometry.toJSON'\n             }\n         };\n \n         // standard BufferGeometry serialization\n \n         data.uuid = this.uuid;\n         data.type = this.type;\n         if ( this.name !== '' ) data.name = this.name;\n         if ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n \n         if ( this.parameters !== undefined ) {\n \n             const parameters = this.parameters;\n \n             for ( const key in parameters ) {\n \n                 if ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n \n             }\n \n             return data;\n \n         }\n \n         // for simplicity the code assumes attributes are not shared across geometries, see #15811\n \n         data.data = { attributes: {} };\n \n         const index = this.index;\n \n         if ( index !== null ) {\n \n             data.data.index = {\n                 type: index.array.constructor.name,\n                 array: Array.prototype.slice.call( index.array )\n             };\n \n         }\n \n         const attributes = this.attributes;\n \n         for ( const key in attributes ) {\n \n             const attribute = attributes[ key ];\n \n             data.data.attributes[ key ] = attribute.toJSON( data.data );\n \n         }\n \n         const morphAttributes = {};\n         let hasMorphAttributes = false;\n \n         for ( const key in this.morphAttributes ) {\n \n             const attributeArray = this.morphAttributes[ key ];\n \n             const array = [];\n \n             for ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n \n                 const attribute = attributeArray[ i ];\n \n                 array.push( attribute.toJSON( data.data ) );\n \n             }\n \n             if ( array.length > 0 ) {\n \n                 morphAttributes[ key ] = array;\n \n                 hasMorphAttributes = true;\n \n             }\n \n         }\n \n         if ( hasMorphAttributes ) {\n \n             data.data.morphAttributes = morphAttributes;\n             data.data.morphTargetsRelative = this.morphTargetsRelative;\n \n         }\n \n         const groups = this.groups;\n \n         if ( groups.length > 0 ) {\n \n             data.data.groups = JSON.parse( JSON.stringify( groups ) );\n \n         }\n \n         const boundingSphere = this.boundingSphere;\n \n         if ( boundingSphere !== null ) {\n \n             data.data.boundingSphere = {\n                 center: boundingSphere.center.toArray(),\n                 radius: boundingSphere.radius\n             };\n \n         }\n \n         return data;\n \n     }\n \n     clone() {\n \n          return new this.constructor().copy( this );\n \n     }\n \n     copy( source ) {\n \n         // reset\n \n         this.index = null;\n         this.attributes = {};\n         this.morphAttributes = {};\n         this.groups = [];\n         this.boundingBox = null;\n         this.boundingSphere = null;\n \n         // used for storing cloned, shared data\n \n         const data = {};\n \n         // name\n \n         this.name = source.name;\n \n         // index\n \n         const index = source.index;\n \n         if ( index !== null ) {\n \n             this.setIndex( index.clone( data ) );\n \n         }\n \n         // attributes\n \n         const attributes = source.attributes;\n \n         for ( const name in attributes ) {\n \n             const attribute = attributes[ name ];\n             this.setAttribute( name, attribute.clone( data ) );\n \n         }\n \n         // morph attributes\n \n         const morphAttributes = source.morphAttributes;\n \n         for ( const name in morphAttributes ) {\n \n             const array = [];\n             const morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n \n             for ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n \n                 array.push( morphAttribute[ i ].clone( data ) );\n \n             }\n \n             this.morphAttributes[ name ] = array;\n \n         }\n \n         this.morphTargetsRelative = source.morphTargetsRelative;\n \n         // groups\n \n         const groups = source.groups;\n \n         for ( let i = 0, l = groups.length; i < l; i ++ ) {\n \n             const group = groups[ i ];\n             this.addGroup( group.start, group.count, group.materialIndex );\n \n         }\n \n         // bounding box\n \n         const boundingBox = source.boundingBox;\n \n         if ( boundingBox !== null ) {\n \n             this.boundingBox = boundingBox.clone();\n \n         }\n \n         // bounding sphere\n \n         const boundingSphere = source.boundingSphere;\n \n         if ( boundingSphere !== null ) {\n \n             this.boundingSphere = boundingSphere.clone();\n \n         }\n \n         // draw range\n \n         this.drawRange.start = source.drawRange.start;\n         this.drawRange.count = source.drawRange.count;\n \n         // user data\n \n         this.userData = source.userData;\n \n         // geometry generator parameters\n \n         if ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n \n         return this;\n \n     }\n \n     dispose() {\n \n         this.dispatchEvent( { type: 'dispose' } );\n \n     }\n \n }\n \n BufferGeometry.prototype.isBufferGeometry = true;\n \n const _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\n const _ray$2 = /*@__PURE__*/ new Ray();\n const _sphere$3 = /*@__PURE__*/ new Sphere();\n \n const _vA$1 = /*@__PURE__*/ new Vector3();\n const _vB$1 = /*@__PURE__*/ new Vector3();\n const _vC$1 = /*@__PURE__*/ new Vector3();\n \n const _tempA = /*@__PURE__*/ new Vector3();\n const _tempB = /*@__PURE__*/ new Vector3();\n const _tempC = /*@__PURE__*/ new Vector3();\n \n const _morphA = /*@__PURE__*/ new Vector3();\n const _morphB = /*@__PURE__*/ new Vector3();\n const _morphC = /*@__PURE__*/ new Vector3();\n \n const _uvA$1 = /*@__PURE__*/ new Vector2();\n const _uvB$1 = /*@__PURE__*/ new Vector2();\n const _uvC$1 = /*@__PURE__*/ new Vector2();\n \n const _intersectionPoint = /*@__PURE__*/ new Vector3();\n const _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n \n class Mesh extends Object3D {\n \n     constructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n \n         super();\n \n         this.type = 'Mesh';\n \n         this.geometry = geometry;\n         this.material = material;\n \n         this.updateMorphTargets();\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         if ( source.morphTargetInfluences !== undefined ) {\n \n             this.morphTargetInfluences = source.morphTargetInfluences.slice();\n \n         }\n \n         if ( source.morphTargetDictionary !== undefined ) {\n \n             this.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n \n         }\n \n         this.material = source.material;\n         this.geometry = source.geometry;\n \n         return this;\n \n     }\n \n     updateMorphTargets() {\n \n         const geometry = this.geometry;\n \n         if ( geometry.isBufferGeometry ) {\n \n             const morphAttributes = geometry.morphAttributes;\n             const keys = Object.keys( morphAttributes );\n \n             if ( keys.length > 0 ) {\n \n                 const morphAttribute = morphAttributes[ keys[ 0 ] ];\n \n                 if ( morphAttribute !== undefined ) {\n \n                     this.morphTargetInfluences = [];\n                     this.morphTargetDictionary = {};\n \n                     for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n \n                         const name = morphAttribute[ m ].name || String( m );\n \n                         this.morphTargetInfluences.push( 0 );\n                         this.morphTargetDictionary[ name ] = m;\n \n                     }\n \n                 }\n \n             }\n \n         } else {\n \n             const morphTargets = geometry.morphTargets;\n \n             if ( morphTargets !== undefined && morphTargets.length > 0 ) {\n \n                 console.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n             }\n \n         }\n \n     }\n \n     raycast( raycaster, intersects ) {\n \n         const geometry = this.geometry;\n         const material = this.material;\n         const matrixWorld = this.matrixWorld;\n \n         if ( material === undefined ) return;\n \n         // Checking boundingSphere distance to ray\n \n         if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n \n         _sphere$3.copy( geometry.boundingSphere );\n         _sphere$3.applyMatrix4( matrixWorld );\n \n         if ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n \n         //\n \n         _inverseMatrix$2.copy( matrixWorld ).invert();\n         _ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n \n         // Check boundingBox before continuing\n \n         if ( geometry.boundingBox !== null ) {\n \n             if ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n \n         }\n \n         let intersection;\n \n         if ( geometry.isBufferGeometry ) {\n \n             const index = geometry.index;\n             const position = geometry.attributes.position;\n             const morphPosition = geometry.morphAttributes.position;\n             const morphTargetsRelative = geometry.morphTargetsRelative;\n             const uv = geometry.attributes.uv;\n             const uv2 = geometry.attributes.uv2;\n             const groups = geometry.groups;\n             const drawRange = geometry.drawRange;\n \n             if ( index !== null ) {\n \n                 // indexed buffer geometry\n \n                 if ( Array.isArray( material ) ) {\n \n                     for ( let i = 0, il = groups.length; i < il; i ++ ) {\n \n                         const group = groups[ i ];\n                         const groupMaterial = material[ group.materialIndex ];\n \n                         const start = Math.max( group.start, drawRange.start );\n                         const end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n \n                         for ( let j = start, jl = end; j < jl; j += 3 ) {\n \n                             const a = index.getX( j );\n                             const b = index.getX( j + 1 );\n                             const c = index.getX( j + 2 );\n \n                             intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n \n                             if ( intersection ) {\n \n                                 intersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n                                 intersection.face.materialIndex = group.materialIndex;\n                                 intersects.push( intersection );\n \n                             }\n \n                         }\n \n                     }\n \n                 } else {\n \n                     const start = Math.max( 0, drawRange.start );\n                     const end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n \n                     for ( let i = start, il = end; i < il; i += 3 ) {\n \n                         const a = index.getX( i );\n                         const b = index.getX( i + 1 );\n                         const c = index.getX( i + 2 );\n \n                         intersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n \n                         if ( intersection ) {\n \n                             intersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n                             intersects.push( intersection );\n \n                         }\n \n                     }\n \n                 }\n \n             } else if ( position !== undefined ) {\n \n                 // non-indexed buffer geometry\n \n                 if ( Array.isArray( material ) ) {\n \n                     for ( let i = 0, il = groups.length; i < il; i ++ ) {\n \n                         const group = groups[ i ];\n                         const groupMaterial = material[ group.materialIndex ];\n \n                         const start = Math.max( group.start, drawRange.start );\n                         const end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n \n                         for ( let j = start, jl = end; j < jl; j += 3 ) {\n \n                             const a = j;\n                             const b = j + 1;\n                             const c = j + 2;\n \n                             intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n \n                             if ( intersection ) {\n \n                                 intersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n                                 intersection.face.materialIndex = group.materialIndex;\n                                 intersects.push( intersection );\n \n                             }\n \n                         }\n \n                     }\n \n                 } else {\n \n                     const start = Math.max( 0, drawRange.start );\n                     const end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n \n                     for ( let i = start, il = end; i < il; i += 3 ) {\n \n                         const a = i;\n                         const b = i + 1;\n                         const c = i + 2;\n \n                         intersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n \n                         if ( intersection ) {\n \n                             intersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n                             intersects.push( intersection );\n \n                         }\n \n                     }\n \n                 }\n \n             }\n \n         } else if ( geometry.isGeometry ) {\n \n             console.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n         }\n \n     }\n \n }\n \n Mesh.prototype.isMesh = true;\n \n function checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n \n     let intersect;\n \n     if ( material.side === BackSide ) {\n \n         intersect = ray.intersectTriangle( pC, pB, pA, true, point );\n \n     } else {\n \n         intersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n \n     }\n \n     if ( intersect === null ) return null;\n \n     _intersectionPointWorld.copy( point );\n     _intersectionPointWorld.applyMatrix4( object.matrixWorld );\n \n     const distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n \n     if ( distance < raycaster.near || distance > raycaster.far ) return null;\n \n     return {\n         distance: distance,\n         point: _intersectionPointWorld.clone(),\n         object: object\n     };\n \n }\n \n function checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n \n     _vA$1.fromBufferAttribute( position, a );\n     _vB$1.fromBufferAttribute( position, b );\n     _vC$1.fromBufferAttribute( position, c );\n \n     const morphInfluences = object.morphTargetInfluences;\n \n     if ( morphPosition && morphInfluences ) {\n \n         _morphA.set( 0, 0, 0 );\n         _morphB.set( 0, 0, 0 );\n         _morphC.set( 0, 0, 0 );\n \n         for ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n \n             const influence = morphInfluences[ i ];\n             const morphAttribute = morphPosition[ i ];\n \n             if ( influence === 0 ) continue;\n \n             _tempA.fromBufferAttribute( morphAttribute, a );\n             _tempB.fromBufferAttribute( morphAttribute, b );\n             _tempC.fromBufferAttribute( morphAttribute, c );\n \n             if ( morphTargetsRelative ) {\n \n                 _morphA.addScaledVector( _tempA, influence );\n                 _morphB.addScaledVector( _tempB, influence );\n                 _morphC.addScaledVector( _tempC, influence );\n \n             } else {\n \n                 _morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n                 _morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n                 _morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n \n             }\n \n         }\n \n         _vA$1.add( _morphA );\n         _vB$1.add( _morphB );\n         _vC$1.add( _morphC );\n \n     }\n \n     if ( object.isSkinnedMesh ) {\n \n         object.boneTransform( a, _vA$1 );\n         object.boneTransform( b, _vB$1 );\n         object.boneTransform( c, _vC$1 );\n \n     }\n \n     const intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n \n     if ( intersection ) {\n \n         if ( uv ) {\n \n             _uvA$1.fromBufferAttribute( uv, a );\n             _uvB$1.fromBufferAttribute( uv, b );\n             _uvC$1.fromBufferAttribute( uv, c );\n \n             intersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n \n         }\n \n         if ( uv2 ) {\n \n             _uvA$1.fromBufferAttribute( uv2, a );\n             _uvB$1.fromBufferAttribute( uv2, b );\n             _uvC$1.fromBufferAttribute( uv2, c );\n \n             intersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n \n         }\n \n         const face = {\n             a: a,\n             b: b,\n             c: c,\n             normal: new Vector3(),\n             materialIndex: 0\n         };\n \n         Triangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n \n         intersection.face = face;\n \n     }\n \n     return intersection;\n \n }\n \n class BoxGeometry extends BufferGeometry {\n \n     constructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n \n         super();\n \n         this.type = 'BoxGeometry';\n \n         this.parameters = {\n             width: width,\n             height: height,\n             depth: depth,\n             widthSegments: widthSegments,\n             heightSegments: heightSegments,\n             depthSegments: depthSegments\n         };\n \n         const scope = this;\n \n         // segments\n \n         widthSegments = Math.floor( widthSegments );\n         heightSegments = Math.floor( heightSegments );\n         depthSegments = Math.floor( depthSegments );\n \n         // buffers\n \n         const indices = [];\n         const vertices = [];\n         const normals = [];\n         const uvs = [];\n \n         // helper variables\n \n         let numberOfVertices = 0;\n         let groupStart = 0;\n \n         // build each side of the box geometry\n \n         buildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n         buildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n         buildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n         buildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n         buildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n         buildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n \n         // build geometry\n \n         this.setIndex( indices );\n         this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n         this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n         function buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n \n             const segmentWidth = width / gridX;\n             const segmentHeight = height / gridY;\n \n             const widthHalf = width / 2;\n             const heightHalf = height / 2;\n             const depthHalf = depth / 2;\n \n             const gridX1 = gridX + 1;\n             const gridY1 = gridY + 1;\n \n             let vertexCounter = 0;\n             let groupCount = 0;\n \n             const vector = new Vector3();\n \n             // generate vertices, normals and uvs\n \n             for ( let iy = 0; iy < gridY1; iy ++ ) {\n \n                 const y = iy * segmentHeight - heightHalf;\n \n                 for ( let ix = 0; ix < gridX1; ix ++ ) {\n \n                     const x = ix * segmentWidth - widthHalf;\n \n                     // set values to correct vector component\n \n                     vector[ u ] = x * udir;\n                     vector[ v ] = y * vdir;\n                     vector[ w ] = depthHalf;\n \n                     // now apply vector to vertex buffer\n \n                     vertices.push( vector.x, vector.y, vector.z );\n \n                     // set values to correct vector component\n \n                     vector[ u ] = 0;\n                     vector[ v ] = 0;\n                     vector[ w ] = depth > 0 ? 1 : - 1;\n \n                     // now apply vector to normal buffer\n \n                     normals.push( vector.x, vector.y, vector.z );\n \n                     // uvs\n \n                     uvs.push( ix / gridX );\n                     uvs.push( 1 - ( iy / gridY ) );\n \n                     // counters\n \n                     vertexCounter += 1;\n \n                 }\n \n             }\n \n             // indices\n \n             // 1. you need three indices to draw a single face\n             // 2. a single segment consists of two faces\n             // 3. so we need to generate six (2*3) indices per segment\n \n             for ( let iy = 0; iy < gridY; iy ++ ) {\n \n                 for ( let ix = 0; ix < gridX; ix ++ ) {\n \n                     const a = numberOfVertices + ix + gridX1 * iy;\n                     const b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n                     const c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n                     const d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n \n                     // faces\n \n                     indices.push( a, b, d );\n                     indices.push( b, c, d );\n \n                     // increase counter\n \n                     groupCount += 6;\n \n                 }\n \n             }\n \n             // add a group to the geometry. this will ensure multi material support\n \n             scope.addGroup( groupStart, groupCount, materialIndex );\n \n             // calculate new start value for groups\n \n             groupStart += groupCount;\n \n             // update total number of vertices\n \n             numberOfVertices += vertexCounter;\n \n         }\n \n     }\n \n     static fromJSON( data ) {\n \n         return new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n \n     }\n \n }\n \n /**\n  * Uniform Utilities\n  */\n \n function cloneUniforms( src ) {\n \n     const dst = {};\n \n     for ( const u in src ) {\n \n         dst[ u ] = {};\n \n         for ( const p in src[ u ] ) {\n \n             const property = src[ u ][ p ];\n \n             if ( property && ( property.isColor ||\n                 property.isMatrix3 || property.isMatrix4 ||\n                 property.isVector2 || property.isVector3 || property.isVector4 ||\n                 property.isTexture || property.isQuaternion ) ) {\n \n                 dst[ u ][ p ] = property.clone();\n \n             } else if ( Array.isArray( property ) ) {\n \n                 dst[ u ][ p ] = property.slice();\n \n             } else {\n \n                 dst[ u ][ p ] = property;\n \n             }\n \n         }\n \n     }\n \n     return dst;\n \n }\n \n function mergeUniforms( uniforms ) {\n \n     const merged = {};\n \n     for ( let u = 0; u < uniforms.length; u ++ ) {\n \n         const tmp = cloneUniforms( uniforms[ u ] );\n \n         for ( const p in tmp ) {\n \n             merged[ p ] = tmp[ p ];\n \n         }\n \n     }\n \n     return merged;\n \n }\n \n // Legacy\n \n const UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n \n var default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n \n var default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n \n class ShaderMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.type = 'ShaderMaterial';\n \n         this.defines = {};\n         this.uniforms = {};\n \n         this.vertexShader = default_vertex;\n         this.fragmentShader = default_fragment;\n \n         this.linewidth = 1;\n \n         this.wireframe = false;\n         this.wireframeLinewidth = 1;\n \n         this.fog = false; // set to use scene fog\n         this.lights = false; // set to use scene lights\n         this.clipping = false; // set to use user-defined clipping planes\n \n         this.extensions = {\n             derivatives: false, // set to use derivatives\n             fragDepth: false, // set to use fragment depth values\n             drawBuffers: false, // set to use draw buffers\n             shaderTextureLOD: false // set to use shader texture LOD\n         };\n \n         // When rendered geometry doesn't include these attributes but the material does,\n         // use these default values in WebGL. This avoids errors when buffer data is missing.\n         this.defaultAttributeValues = {\n             'color': [ 1, 1, 1 ],\n             'uv': [ 0, 0 ],\n             'uv2': [ 0, 0 ]\n         };\n \n         this.index0AttributeName = undefined;\n         this.uniformsNeedUpdate = false;\n \n         this.glslVersion = null;\n \n         if ( parameters !== undefined ) {\n \n             if ( parameters.attributes !== undefined ) {\n \n                 console.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n \n             }\n \n             this.setValues( parameters );\n \n         }\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.fragmentShader = source.fragmentShader;\n         this.vertexShader = source.vertexShader;\n \n         this.uniforms = cloneUniforms( source.uniforms );\n \n         this.defines = Object.assign( {}, source.defines );\n \n         this.wireframe = source.wireframe;\n         this.wireframeLinewidth = source.wireframeLinewidth;\n \n         this.lights = source.lights;\n         this.clipping = source.clipping;\n \n         this.extensions = Object.assign( {}, source.extensions );\n \n         this.glslVersion = source.glslVersion;\n \n         return this;\n \n     }\n \n     toJSON( meta ) {\n \n         const data = super.toJSON( meta );\n \n         data.glslVersion = this.glslVersion;\n         data.uniforms = {};\n \n         for ( const name in this.uniforms ) {\n \n             const uniform = this.uniforms[ name ];\n             const value = uniform.value;\n \n             if ( value && value.isTexture ) {\n \n                 data.uniforms[ name ] = {\n                     type: 't',\n                     value: value.toJSON( meta ).uuid\n                 };\n \n             } else if ( value && value.isColor ) {\n \n                 data.uniforms[ name ] = {\n                     type: 'c',\n                     value: value.getHex()\n                 };\n \n             } else if ( value && value.isVector2 ) {\n \n                 data.uniforms[ name ] = {\n                     type: 'v2',\n                     value: value.toArray()\n                 };\n \n             } else if ( value && value.isVector3 ) {\n \n                 data.uniforms[ name ] = {\n                     type: 'v3',\n                     value: value.toArray()\n                 };\n \n             } else if ( value && value.isVector4 ) {\n \n                 data.uniforms[ name ] = {\n                     type: 'v4',\n                     value: value.toArray()\n                 };\n \n             } else if ( value && value.isMatrix3 ) {\n \n                 data.uniforms[ name ] = {\n                     type: 'm3',\n                     value: value.toArray()\n                 };\n \n             } else if ( value && value.isMatrix4 ) {\n \n                 data.uniforms[ name ] = {\n                     type: 'm4',\n                     value: value.toArray()\n                 };\n \n             } else {\n \n                 data.uniforms[ name ] = {\n                     value: value\n                 };\n \n                 // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n \n             }\n \n         }\n \n         if ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n \n         data.vertexShader = this.vertexShader;\n         data.fragmentShader = this.fragmentShader;\n \n         const extensions = {};\n \n         for ( const key in this.extensions ) {\n \n             if ( this.extensions[ key ] === true ) extensions[ key ] = true;\n \n         }\n \n         if ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n \n         return data;\n \n     }\n \n }\n \n ShaderMaterial.prototype.isShaderMaterial = true;\n \n class Camera extends Object3D {\n \n     constructor() {\n \n         super();\n \n         this.type = 'Camera';\n \n         this.matrixWorldInverse = new Matrix4();\n \n         this.projectionMatrix = new Matrix4();\n         this.projectionMatrixInverse = new Matrix4();\n \n     }\n \n     copy( source, recursive ) {\n \n         super.copy( source, recursive );\n \n         this.matrixWorldInverse.copy( source.matrixWorldInverse );\n \n         this.projectionMatrix.copy( source.projectionMatrix );\n         this.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n \n         return this;\n \n     }\n \n     getWorldDirection( target ) {\n \n         this.updateWorldMatrix( true, false );\n \n         const e = this.matrixWorld.elements;\n \n         return target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n \n     }\n \n     updateMatrixWorld( force ) {\n \n         super.updateMatrixWorld( force );\n \n         this.matrixWorldInverse.copy( this.matrixWorld ).invert();\n \n     }\n \n     updateWorldMatrix( updateParents, updateChildren ) {\n \n         super.updateWorldMatrix( updateParents, updateChildren );\n \n         this.matrixWorldInverse.copy( this.matrixWorld ).invert();\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n }\n \n Camera.prototype.isCamera = true;\n \n class PerspectiveCamera extends Camera {\n \n     constructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n \n         super();\n \n         this.type = 'PerspectiveCamera';\n \n         this.fov = fov;\n         this.zoom = 1;\n \n         this.near = near;\n         this.far = far;\n         this.focus = 10;\n \n         this.aspect = aspect;\n         this.view = null;\n \n         this.filmGauge = 35;\t// width of the film (default in millimeters)\n         this.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n \n         this.updateProjectionMatrix();\n \n     }\n \n     copy( source, recursive ) {\n \n         super.copy( source, recursive );\n \n         this.fov = source.fov;\n         this.zoom = source.zoom;\n \n         this.near = source.near;\n         this.far = source.far;\n         this.focus = source.focus;\n \n         this.aspect = source.aspect;\n         this.view = source.view === null ? null : Object.assign( {}, source.view );\n \n         this.filmGauge = source.filmGauge;\n         this.filmOffset = source.filmOffset;\n \n         return this;\n \n     }\n \n     /**\n      * Sets the FOV by focal length in respect to the current .filmGauge.\n      *\n      * The default film gauge is 35, so that the focal length can be specified for\n      * a 35mm (full frame) camera.\n      *\n      * Values for focal length and film gauge must have the same unit.\n      */\n     setFocalLength( focalLength ) {\n \n         /** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n         const vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n \n         this.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n         this.updateProjectionMatrix();\n \n     }\n \n     /**\n      * Calculates the focal length from the current .fov and .filmGauge.\n      */\n     getFocalLength() {\n \n         const vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n \n         return 0.5 * this.getFilmHeight() / vExtentSlope;\n \n     }\n \n     getEffectiveFOV() {\n \n         return RAD2DEG * 2 * Math.atan(\n             Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n \n     }\n \n     getFilmWidth() {\n \n         // film not completely covered in portrait format (aspect < 1)\n         return this.filmGauge * Math.min( this.aspect, 1 );\n \n     }\n \n     getFilmHeight() {\n \n         // film not completely covered in landscape format (aspect > 1)\n         return this.filmGauge / Math.max( this.aspect, 1 );\n \n     }\n \n     /**\n      * Sets an offset in a larger frustum. This is useful for multi-window or\n      * multi-monitor/multi-machine setups.\n      *\n      * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n      * the monitors are in grid like this\n      *\n      *   +---+---+---+\n      *   | A | B | C |\n      *   +---+---+---+\n      *   | D | E | F |\n      *   +---+---+---+\n      *\n      * then for each monitor you would call it like this\n      *\n      *   const w = 1920;\n      *   const h = 1080;\n      *   const fullWidth = w * 3;\n      *   const fullHeight = h * 2;\n      *\n      *   --A--\n      *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n      *   --B--\n      *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n      *   --C--\n      *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n      *   --D--\n      *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n      *   --E--\n      *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n      *   --F--\n      *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n      *\n      *   Note there is no reason monitors have to be the same size or in a grid.\n      */\n     setViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n \n         this.aspect = fullWidth / fullHeight;\n \n         if ( this.view === null ) {\n \n             this.view = {\n                 enabled: true,\n                 fullWidth: 1,\n                 fullHeight: 1,\n                 offsetX: 0,\n                 offsetY: 0,\n                 width: 1,\n                 height: 1\n             };\n \n         }\n \n         this.view.enabled = true;\n         this.view.fullWidth = fullWidth;\n         this.view.fullHeight = fullHeight;\n         this.view.offsetX = x;\n         this.view.offsetY = y;\n         this.view.width = width;\n         this.view.height = height;\n \n         this.updateProjectionMatrix();\n \n     }\n \n     clearViewOffset() {\n \n         if ( this.view !== null ) {\n \n             this.view.enabled = false;\n \n         }\n \n         this.updateProjectionMatrix();\n \n     }\n \n     updateProjectionMatrix() {\n \n         const near = this.near;\n         let top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n         let height = 2 * top;\n         let width = this.aspect * height;\n         let left = - 0.5 * width;\n         const view = this.view;\n \n         if ( this.view !== null && this.view.enabled ) {\n \n             const fullWidth = view.fullWidth,\n                 fullHeight = view.fullHeight;\n \n             left += view.offsetX * width / fullWidth;\n             top -= view.offsetY * height / fullHeight;\n             width *= view.width / fullWidth;\n             height *= view.height / fullHeight;\n \n         }\n \n         const skew = this.filmOffset;\n         if ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n \n         this.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n \n         this.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n \n     }\n \n     toJSON( meta ) {\n \n         const data = super.toJSON( meta );\n \n         data.object.fov = this.fov;\n         data.object.zoom = this.zoom;\n \n         data.object.near = this.near;\n         data.object.far = this.far;\n         data.object.focus = this.focus;\n \n         data.object.aspect = this.aspect;\n \n         if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n \n         data.object.filmGauge = this.filmGauge;\n         data.object.filmOffset = this.filmOffset;\n \n         return data;\n \n     }\n \n }\n \n PerspectiveCamera.prototype.isPerspectiveCamera = true;\n \n const fov = 90, aspect = 1;\n \n class CubeCamera extends Object3D {\n \n     constructor( near, far, renderTarget ) {\n \n         super();\n \n         this.type = 'CubeCamera';\n \n         if ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n \n             console.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n             return;\n \n         }\n \n         this.renderTarget = renderTarget;\n \n         const cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n         cameraPX.layers = this.layers;\n         cameraPX.up.set( 0, - 1, 0 );\n         cameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n         this.add( cameraPX );\n \n         const cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n         cameraNX.layers = this.layers;\n         cameraNX.up.set( 0, - 1, 0 );\n         cameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n         this.add( cameraNX );\n \n         const cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n         cameraPY.layers = this.layers;\n         cameraPY.up.set( 0, 0, 1 );\n         cameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n         this.add( cameraPY );\n \n         const cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n         cameraNY.layers = this.layers;\n         cameraNY.up.set( 0, 0, - 1 );\n         cameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n         this.add( cameraNY );\n \n         const cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n         cameraPZ.layers = this.layers;\n         cameraPZ.up.set( 0, - 1, 0 );\n         cameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n         this.add( cameraPZ );\n \n         const cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n         cameraNZ.layers = this.layers;\n         cameraNZ.up.set( 0, - 1, 0 );\n         cameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n         this.add( cameraNZ );\n \n     }\n \n     update( renderer, scene ) {\n \n         if ( this.parent === null ) this.updateMatrixWorld();\n \n         const renderTarget = this.renderTarget;\n \n         const [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n \n         const currentRenderTarget = renderer.getRenderTarget();\n \n         const currentOutputEncoding = renderer.outputEncoding;\n         const currentToneMapping = renderer.toneMapping;\n         const currentXrEnabled = renderer.xr.enabled;\n \n         renderer.outputEncoding = LinearEncoding;\n         renderer.toneMapping = NoToneMapping;\n         renderer.xr.enabled = false;\n \n         const generateMipmaps = renderTarget.texture.generateMipmaps;\n \n         renderTarget.texture.generateMipmaps = false;\n \n         renderer.setRenderTarget( renderTarget, 0 );\n         renderer.render( scene, cameraPX );\n \n         renderer.setRenderTarget( renderTarget, 1 );\n         renderer.render( scene, cameraNX );\n \n         renderer.setRenderTarget( renderTarget, 2 );\n         renderer.render( scene, cameraPY );\n \n         renderer.setRenderTarget( renderTarget, 3 );\n         renderer.render( scene, cameraNY );\n \n         renderer.setRenderTarget( renderTarget, 4 );\n         renderer.render( scene, cameraPZ );\n \n         renderTarget.texture.generateMipmaps = generateMipmaps;\n \n         renderer.setRenderTarget( renderTarget, 5 );\n         renderer.render( scene, cameraNZ );\n \n         renderer.setRenderTarget( currentRenderTarget );\n \n         renderer.outputEncoding = currentOutputEncoding;\n         renderer.toneMapping = currentToneMapping;\n         renderer.xr.enabled = currentXrEnabled;\n \n         renderTarget.texture.needsPMREMUpdate = true;\n \n     }\n \n }\n \n class CubeTexture extends Texture {\n \n     constructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n \n         images = images !== undefined ? images : [];\n         mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n \n         super( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n \n         this.flipY = false;\n \n     }\n \n     get images() {\n \n         return this.image;\n \n     }\n \n     set images( value ) {\n \n         this.image = value;\n \n     }\n \n }\n \n CubeTexture.prototype.isCubeTexture = true;\n \n class WebGLCubeRenderTarget extends WebGLRenderTarget {\n \n     constructor( size, options = {} ) {\n \n         super( size, size, options );\n \n         const image = { width: size, height: size, depth: 1 };\n         const images = [ image, image, image, image, image, image ];\n \n         this.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n \n         // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n         // in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n         // in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n \n         // three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n         // and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n         // as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n \n         this.texture.isRenderTargetTexture = true;\n \n         this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n         this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n \n     }\n \n     fromEquirectangularTexture( renderer, texture ) {\n \n         this.texture.type = texture.type;\n         this.texture.encoding = texture.encoding;\n \n         this.texture.generateMipmaps = texture.generateMipmaps;\n         this.texture.minFilter = texture.minFilter;\n         this.texture.magFilter = texture.magFilter;\n \n         const shader = {\n \n             uniforms: {\n                 tEquirect: { value: null },\n             },\n \n             vertexShader: /* glsl */`\n \n                 varying vec3 vWorldDirection;\n \n                 vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n \n                     return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n \n                 }\n \n                 void main() {\n \n                     vWorldDirection = transformDirection( position, modelMatrix );\n \n                     #include <begin_vertex>\n                     #include <project_vertex>\n \n                 }\n             `,\n \n             fragmentShader: /* glsl */`\n \n                 uniform sampler2D tEquirect;\n \n                 varying vec3 vWorldDirection;\n \n                 #include <common>\n \n                 void main() {\n \n                     vec3 direction = normalize( vWorldDirection );\n \n                     vec2 sampleUV = equirectUv( direction );\n \n                     gl_FragColor = texture2D( tEquirect, sampleUV );\n \n                 }\n             `\n         };\n \n         const geometry = new BoxGeometry( 5, 5, 5 );\n \n         const material = new ShaderMaterial( {\n \n             name: 'CubemapFromEquirect',\n \n             uniforms: cloneUniforms( shader.uniforms ),\n             vertexShader: shader.vertexShader,\n             fragmentShader: shader.fragmentShader,\n             side: BackSide,\n             blending: NoBlending\n \n         } );\n \n         material.uniforms.tEquirect.value = texture;\n \n         const mesh = new Mesh( geometry, material );\n \n         const currentMinFilter = texture.minFilter;\n \n         // Avoid blurred poles\n         if ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n \n         const camera = new CubeCamera( 1, 10, this );\n         camera.update( renderer, mesh );\n \n         texture.minFilter = currentMinFilter;\n \n         mesh.geometry.dispose();\n         mesh.material.dispose();\n \n         return this;\n \n     }\n \n     clear( renderer, color, depth, stencil ) {\n \n         const currentRenderTarget = renderer.getRenderTarget();\n \n         for ( let i = 0; i < 6; i ++ ) {\n \n             renderer.setRenderTarget( this, i );\n \n             renderer.clear( color, depth, stencil );\n \n         }\n \n         renderer.setRenderTarget( currentRenderTarget );\n \n     }\n \n }\n \n WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n \n const _vector1 = /*@__PURE__*/ new Vector3();\n const _vector2 = /*@__PURE__*/ new Vector3();\n const _normalMatrix = /*@__PURE__*/ new Matrix3();\n \n class Plane {\n \n     constructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n \n         // normal is assumed to be normalized\n \n         this.normal = normal;\n         this.constant = constant;\n \n     }\n \n     set( normal, constant ) {\n \n         this.normal.copy( normal );\n         this.constant = constant;\n \n         return this;\n \n     }\n \n     setComponents( x, y, z, w ) {\n \n         this.normal.set( x, y, z );\n         this.constant = w;\n \n         return this;\n \n     }\n \n     setFromNormalAndCoplanarPoint( normal, point ) {\n \n         this.normal.copy( normal );\n         this.constant = - point.dot( this.normal );\n \n         return this;\n \n     }\n \n     setFromCoplanarPoints( a, b, c ) {\n \n         const normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n \n         // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n \n         this.setFromNormalAndCoplanarPoint( normal, a );\n \n         return this;\n \n     }\n \n     copy( plane ) {\n \n         this.normal.copy( plane.normal );\n         this.constant = plane.constant;\n \n         return this;\n \n     }\n \n     normalize() {\n \n         // Note: will lead to a divide by zero if the plane is invalid.\n \n         const inverseNormalLength = 1.0 / this.normal.length();\n         this.normal.multiplyScalar( inverseNormalLength );\n         this.constant *= inverseNormalLength;\n \n         return this;\n \n     }\n \n     negate() {\n \n         this.constant *= - 1;\n         this.normal.negate();\n \n         return this;\n \n     }\n \n     distanceToPoint( point ) {\n \n         return this.normal.dot( point ) + this.constant;\n \n     }\n \n     distanceToSphere( sphere ) {\n \n         return this.distanceToPoint( sphere.center ) - sphere.radius;\n \n     }\n \n     projectPoint( point, target ) {\n \n         return target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n \n     }\n \n     intersectLine( line, target ) {\n \n         const direction = line.delta( _vector1 );\n \n         const denominator = this.normal.dot( direction );\n \n         if ( denominator === 0 ) {\n \n             // line is coplanar, return origin\n             if ( this.distanceToPoint( line.start ) === 0 ) {\n \n                 return target.copy( line.start );\n \n             }\n \n             // Unsure if this is the correct method to handle this case.\n             return null;\n \n         }\n \n         const t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n \n         if ( t < 0 || t > 1 ) {\n \n             return null;\n \n         }\n \n         return target.copy( direction ).multiplyScalar( t ).add( line.start );\n \n     }\n \n     intersectsLine( line ) {\n \n         // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n \n         const startSign = this.distanceToPoint( line.start );\n         const endSign = this.distanceToPoint( line.end );\n \n         return ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n \n     }\n \n     intersectsBox( box ) {\n \n         return box.intersectsPlane( this );\n \n     }\n \n     intersectsSphere( sphere ) {\n \n         return sphere.intersectsPlane( this );\n \n     }\n \n     coplanarPoint( target ) {\n \n         return target.copy( this.normal ).multiplyScalar( - this.constant );\n \n     }\n \n     applyMatrix4( matrix, optionalNormalMatrix ) {\n \n         const normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n \n         const referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n \n         const normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n \n         this.constant = - referencePoint.dot( normal );\n \n         return this;\n \n     }\n \n     translate( offset ) {\n \n         this.constant -= offset.dot( this.normal );\n \n         return this;\n \n     }\n \n     equals( plane ) {\n \n         return plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n }\n \n Plane.prototype.isPlane = true;\n \n const _sphere$2 = /*@__PURE__*/ new Sphere();\n const _vector$7 = /*@__PURE__*/ new Vector3();\n \n class Frustum {\n \n     constructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n \n         this.planes = [ p0, p1, p2, p3, p4, p5 ];\n \n     }\n \n     set( p0, p1, p2, p3, p4, p5 ) {\n \n         const planes = this.planes;\n \n         planes[ 0 ].copy( p0 );\n         planes[ 1 ].copy( p1 );\n         planes[ 2 ].copy( p2 );\n         planes[ 3 ].copy( p3 );\n         planes[ 4 ].copy( p4 );\n         planes[ 5 ].copy( p5 );\n \n         return this;\n \n     }\n \n     copy( frustum ) {\n \n         const planes = this.planes;\n \n         for ( let i = 0; i < 6; i ++ ) {\n \n             planes[ i ].copy( frustum.planes[ i ] );\n \n         }\n \n         return this;\n \n     }\n \n     setFromProjectionMatrix( m ) {\n \n         const planes = this.planes;\n         const me = m.elements;\n         const me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n         const me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n         const me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n         const me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n \n         planes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n         planes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n         planes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n         planes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n         planes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n         planes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n \n         return this;\n \n     }\n \n     intersectsObject( object ) {\n \n         const geometry = object.geometry;\n \n         if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n \n         _sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n \n         return this.intersectsSphere( _sphere$2 );\n \n     }\n \n     intersectsSprite( sprite ) {\n \n         _sphere$2.center.set( 0, 0, 0 );\n         _sphere$2.radius = 0.7071067811865476;\n         _sphere$2.applyMatrix4( sprite.matrixWorld );\n \n         return this.intersectsSphere( _sphere$2 );\n \n     }\n \n     intersectsSphere( sphere ) {\n \n         const planes = this.planes;\n         const center = sphere.center;\n         const negRadius = - sphere.radius;\n \n         for ( let i = 0; i < 6; i ++ ) {\n \n             const distance = planes[ i ].distanceToPoint( center );\n \n             if ( distance < negRadius ) {\n \n                 return false;\n \n             }\n \n         }\n \n         return true;\n \n     }\n \n     intersectsBox( box ) {\n \n         const planes = this.planes;\n \n         for ( let i = 0; i < 6; i ++ ) {\n \n             const plane = planes[ i ];\n \n             // corner at max distance\n \n             _vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n             _vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n             _vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n \n             if ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n \n                 return false;\n \n             }\n \n         }\n \n         return true;\n \n     }\n \n     containsPoint( point ) {\n \n         const planes = this.planes;\n \n         for ( let i = 0; i < 6; i ++ ) {\n \n             if ( planes[ i ].distanceToPoint( point ) < 0 ) {\n \n                 return false;\n \n             }\n \n         }\n \n         return true;\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n }\n \n function WebGLAnimation() {\n \n     let context = null;\n     let isAnimating = false;\n     let animationLoop = null;\n     let requestId = null;\n \n     function onAnimationFrame( time, frame ) {\n \n         animationLoop( time, frame );\n \n         requestId = context.requestAnimationFrame( onAnimationFrame );\n \n     }\n \n     return {\n \n         start: function () {\n \n             if ( isAnimating === true ) return;\n             if ( animationLoop === null ) return;\n \n             requestId = context.requestAnimationFrame( onAnimationFrame );\n \n             isAnimating = true;\n \n         },\n \n         stop: function () {\n \n             context.cancelAnimationFrame( requestId );\n \n             isAnimating = false;\n \n         },\n \n         setAnimationLoop: function ( callback ) {\n \n             animationLoop = callback;\n \n         },\n \n         setContext: function ( value ) {\n \n             context = value;\n \n         }\n \n     };\n \n }\n \n function WebGLAttributes( gl, capabilities ) {\n \n     const isWebGL2 = capabilities.isWebGL2;\n \n     const buffers = new WeakMap();\n \n     function createBuffer( attribute, bufferType ) {\n \n         const array = attribute.array;\n         const usage = attribute.usage;\n \n         const buffer = gl.createBuffer();\n \n         gl.bindBuffer( bufferType, buffer );\n         gl.bufferData( bufferType, array, usage );\n \n         attribute.onUploadCallback();\n \n         let type;\n \n         if ( array instanceof Float32Array ) {\n \n             type = 5126;\n \n         } else if ( array instanceof Uint16Array ) {\n \n             if ( attribute.isFloat16BufferAttribute ) {\n \n                 if ( isWebGL2 ) {\n \n                     type = 5131;\n \n                 } else {\n \n                     throw new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n \n                 }\n \n             } else {\n \n                 type = 5123;\n \n             }\n \n         } else if ( array instanceof Int16Array ) {\n \n             type = 5122;\n \n         } else if ( array instanceof Uint32Array ) {\n \n             type = 5125;\n \n         } else if ( array instanceof Int32Array ) {\n \n             type = 5124;\n \n         } else if ( array instanceof Int8Array ) {\n \n             type = 5120;\n \n         } else if ( array instanceof Uint8Array ) {\n \n             type = 5121;\n \n         } else if ( array instanceof Uint8ClampedArray ) {\n \n             type = 5121;\n \n         } else {\n \n             throw new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n \n         }\n \n         return {\n             buffer: buffer,\n             type: type,\n             bytesPerElement: array.BYTES_PER_ELEMENT,\n             version: attribute.version\n         };\n \n     }\n \n     function updateBuffer( buffer, attribute, bufferType ) {\n \n         const array = attribute.array;\n         const updateRange = attribute.updateRange;\n \n         gl.bindBuffer( bufferType, buffer );\n \n         if ( updateRange.count === - 1 ) {\n \n             // Not using update ranges\n \n             gl.bufferSubData( bufferType, 0, array );\n \n         } else {\n \n             if ( isWebGL2 ) {\n \n                 gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n                     array, updateRange.offset, updateRange.count );\n \n             } else {\n \n                 gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n                     array.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n \n             }\n \n             updateRange.count = - 1; // reset range\n \n         }\n \n     }\n \n     //\n \n     function get( attribute ) {\n \n         if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n \n         return buffers.get( attribute );\n \n     }\n \n     function remove( attribute ) {\n \n         if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n \n         const data = buffers.get( attribute );\n \n         if ( data ) {\n \n             gl.deleteBuffer( data.buffer );\n \n             buffers.delete( attribute );\n \n         }\n \n     }\n \n     function update( attribute, bufferType ) {\n \n         if ( attribute.isGLBufferAttribute ) {\n \n             const cached = buffers.get( attribute );\n \n             if ( ! cached || cached.version < attribute.version ) {\n \n                 buffers.set( attribute, {\n                     buffer: attribute.buffer,\n                     type: attribute.type,\n                     bytesPerElement: attribute.elementSize,\n                     version: attribute.version\n                 } );\n \n             }\n \n             return;\n \n         }\n \n         if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n \n         const data = buffers.get( attribute );\n \n         if ( data === undefined ) {\n \n             buffers.set( attribute, createBuffer( attribute, bufferType ) );\n \n         } else if ( data.version < attribute.version ) {\n \n             updateBuffer( data.buffer, attribute, bufferType );\n \n             data.version = attribute.version;\n \n         }\n \n     }\n \n     return {\n \n         get: get,\n         remove: remove,\n         update: update\n \n     };\n \n }\n \n class PlaneGeometry extends BufferGeometry {\n \n     constructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n \n         super();\n         this.type = 'PlaneGeometry';\n \n         this.parameters = {\n             width: width,\n             height: height,\n             widthSegments: widthSegments,\n             heightSegments: heightSegments\n         };\n \n         const width_half = width / 2;\n         const height_half = height / 2;\n \n         const gridX = Math.floor( widthSegments );\n         const gridY = Math.floor( heightSegments );\n \n         const gridX1 = gridX + 1;\n         const gridY1 = gridY + 1;\n \n         const segment_width = width / gridX;\n         const segment_height = height / gridY;\n \n         //\n \n         const indices = [];\n         const vertices = [];\n         const normals = [];\n         const uvs = [];\n \n         for ( let iy = 0; iy < gridY1; iy ++ ) {\n \n             const y = iy * segment_height - height_half;\n \n             for ( let ix = 0; ix < gridX1; ix ++ ) {\n \n                 const x = ix * segment_width - width_half;\n \n                 vertices.push( x, - y, 0 );\n \n                 normals.push( 0, 0, 1 );\n \n                 uvs.push( ix / gridX );\n                 uvs.push( 1 - ( iy / gridY ) );\n \n             }\n \n         }\n \n         for ( let iy = 0; iy < gridY; iy ++ ) {\n \n             for ( let ix = 0; ix < gridX; ix ++ ) {\n \n                 const a = ix + gridX1 * iy;\n                 const b = ix + gridX1 * ( iy + 1 );\n                 const c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n                 const d = ( ix + 1 ) + gridX1 * iy;\n \n                 indices.push( a, b, d );\n                 indices.push( b, c, d );\n \n             }\n \n         }\n \n         this.setIndex( indices );\n         this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n         this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n     }\n \n     static fromJSON( data ) {\n \n         return new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n \n     }\n \n }\n \n var alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n \n var alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n \n var alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n \n var alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n \n var aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n \n var aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n \n var begin_vertex = \"vec3 transformed = vec3( position );\";\n \n var beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n \n var bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n \n var bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n \n var clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n \n var clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n \n var clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n \n var clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n \n var color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n \n var color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n \n var color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n \n var color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n \n var common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n \n var cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n \n var defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n \n var displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n \n var displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n \n var emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n \n var emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n \n var encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n \n var encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n \n var envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n \n var envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n \n var envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n \n var envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n \n var envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n \n var fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n \n var fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n \n var fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n \n var fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n \n var gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n \n var lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n \n var lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n \n var lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n \n var lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n \n var envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n \n var lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n \n var lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n \n var lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n \n var lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n \n var lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n \n var lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n \n var lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n \n var lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n \n var lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n \n var logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n \n var logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n \n var logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n \n var logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n \n var map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n \n var map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n \n var map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n \n var map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n \n var metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n \n var metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n \n var morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n \n var morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n \n var morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n \n var morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n \n var normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n \n var normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n \n var normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n \n var normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n \n var normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n \n var normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n \n var clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n \n var clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n \n var clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n \n var output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n \n var packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n \n var premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n \n var project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n \n var dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n \n var dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n \n var roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n \n var roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n \n var shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n \n var shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n \n var shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n \n var shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n \n var skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n \n var skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n \n var skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n \n var skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n \n var specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n \n var specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n \n var tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n \n var tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n \n var transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\n \n var transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n \n var uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n \n var uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n \n var uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n \n var uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n \n var uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n \n var uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n \n var worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n \n const vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n \n const fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\\n\\t#endif\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n \n const vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n \n const fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n \n const vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n \n const fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n \n const vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n \n const fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n \n const vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n \n const fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n \n const vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n const fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n \n const vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n const fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n \n const vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n const fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n \n const vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n \n const fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n \n const vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n \n const fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n \n const vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n const fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n \n const vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n \n const fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n \n const vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n const fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n \n const vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n const fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n \n const vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n const fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n \n const vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n const fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n \n const ShaderChunk = {\n     alphamap_fragment: alphamap_fragment,\n     alphamap_pars_fragment: alphamap_pars_fragment,\n     alphatest_fragment: alphatest_fragment,\n     alphatest_pars_fragment: alphatest_pars_fragment,\n     aomap_fragment: aomap_fragment,\n     aomap_pars_fragment: aomap_pars_fragment,\n     begin_vertex: begin_vertex,\n     beginnormal_vertex: beginnormal_vertex,\n     bsdfs: bsdfs,\n     bumpmap_pars_fragment: bumpmap_pars_fragment,\n     clipping_planes_fragment: clipping_planes_fragment,\n     clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n     clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n     clipping_planes_vertex: clipping_planes_vertex,\n     color_fragment: color_fragment,\n     color_pars_fragment: color_pars_fragment,\n     color_pars_vertex: color_pars_vertex,\n     color_vertex: color_vertex,\n     common: common,\n     cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n     defaultnormal_vertex: defaultnormal_vertex,\n     displacementmap_pars_vertex: displacementmap_pars_vertex,\n     displacementmap_vertex: displacementmap_vertex,\n     emissivemap_fragment: emissivemap_fragment,\n     emissivemap_pars_fragment: emissivemap_pars_fragment,\n     encodings_fragment: encodings_fragment,\n     encodings_pars_fragment: encodings_pars_fragment,\n     envmap_fragment: envmap_fragment,\n     envmap_common_pars_fragment: envmap_common_pars_fragment,\n     envmap_pars_fragment: envmap_pars_fragment,\n     envmap_pars_vertex: envmap_pars_vertex,\n     envmap_physical_pars_fragment: envmap_physical_pars_fragment,\n     envmap_vertex: envmap_vertex,\n     fog_vertex: fog_vertex,\n     fog_pars_vertex: fog_pars_vertex,\n     fog_fragment: fog_fragment,\n     fog_pars_fragment: fog_pars_fragment,\n     gradientmap_pars_fragment: gradientmap_pars_fragment,\n     lightmap_fragment: lightmap_fragment,\n     lightmap_pars_fragment: lightmap_pars_fragment,\n     lights_lambert_vertex: lights_lambert_vertex,\n     lights_pars_begin: lights_pars_begin,\n     lights_toon_fragment: lights_toon_fragment,\n     lights_toon_pars_fragment: lights_toon_pars_fragment,\n     lights_phong_fragment: lights_phong_fragment,\n     lights_phong_pars_fragment: lights_phong_pars_fragment,\n     lights_physical_fragment: lights_physical_fragment,\n     lights_physical_pars_fragment: lights_physical_pars_fragment,\n     lights_fragment_begin: lights_fragment_begin,\n     lights_fragment_maps: lights_fragment_maps,\n     lights_fragment_end: lights_fragment_end,\n     logdepthbuf_fragment: logdepthbuf_fragment,\n     logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n     logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n     logdepthbuf_vertex: logdepthbuf_vertex,\n     map_fragment: map_fragment,\n     map_pars_fragment: map_pars_fragment,\n     map_particle_fragment: map_particle_fragment,\n     map_particle_pars_fragment: map_particle_pars_fragment,\n     metalnessmap_fragment: metalnessmap_fragment,\n     metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n     morphcolor_vertex: morphcolor_vertex,\n     morphnormal_vertex: morphnormal_vertex,\n     morphtarget_pars_vertex: morphtarget_pars_vertex,\n     morphtarget_vertex: morphtarget_vertex,\n     normal_fragment_begin: normal_fragment_begin,\n     normal_fragment_maps: normal_fragment_maps,\n     normal_pars_fragment: normal_pars_fragment,\n     normal_pars_vertex: normal_pars_vertex,\n     normal_vertex: normal_vertex,\n     normalmap_pars_fragment: normalmap_pars_fragment,\n     clearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n     clearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n     clearcoat_pars_fragment: clearcoat_pars_fragment,\n     output_fragment: output_fragment,\n     packing: packing,\n     premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n     project_vertex: project_vertex,\n     dithering_fragment: dithering_fragment,\n     dithering_pars_fragment: dithering_pars_fragment,\n     roughnessmap_fragment: roughnessmap_fragment,\n     roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n     shadowmap_pars_fragment: shadowmap_pars_fragment,\n     shadowmap_pars_vertex: shadowmap_pars_vertex,\n     shadowmap_vertex: shadowmap_vertex,\n     shadowmask_pars_fragment: shadowmask_pars_fragment,\n     skinbase_vertex: skinbase_vertex,\n     skinning_pars_vertex: skinning_pars_vertex,\n     skinning_vertex: skinning_vertex,\n     skinnormal_vertex: skinnormal_vertex,\n     specularmap_fragment: specularmap_fragment,\n     specularmap_pars_fragment: specularmap_pars_fragment,\n     tonemapping_fragment: tonemapping_fragment,\n     tonemapping_pars_fragment: tonemapping_pars_fragment,\n     transmission_fragment: transmission_fragment,\n     transmission_pars_fragment: transmission_pars_fragment,\n     uv_pars_fragment: uv_pars_fragment,\n     uv_pars_vertex: uv_pars_vertex,\n     uv_vertex: uv_vertex,\n     uv2_pars_fragment: uv2_pars_fragment,\n     uv2_pars_vertex: uv2_pars_vertex,\n     uv2_vertex: uv2_vertex,\n     worldpos_vertex: worldpos_vertex,\n \n     background_vert: vertex$g,\n     background_frag: fragment$g,\n     cube_vert: vertex$f,\n     cube_frag: fragment$f,\n     depth_vert: vertex$e,\n     depth_frag: fragment$e,\n     distanceRGBA_vert: vertex$d,\n     distanceRGBA_frag: fragment$d,\n     equirect_vert: vertex$c,\n     equirect_frag: fragment$c,\n     linedashed_vert: vertex$b,\n     linedashed_frag: fragment$b,\n     meshbasic_vert: vertex$a,\n     meshbasic_frag: fragment$a,\n     meshlambert_vert: vertex$9,\n     meshlambert_frag: fragment$9,\n     meshmatcap_vert: vertex$8,\n     meshmatcap_frag: fragment$8,\n     meshnormal_vert: vertex$7,\n     meshnormal_frag: fragment$7,\n     meshphong_vert: vertex$6,\n     meshphong_frag: fragment$6,\n     meshphysical_vert: vertex$5,\n     meshphysical_frag: fragment$5,\n     meshtoon_vert: vertex$4,\n     meshtoon_frag: fragment$4,\n     points_vert: vertex$3,\n     points_frag: fragment$3,\n     shadow_vert: vertex$2,\n     shadow_frag: fragment$2,\n     sprite_vert: vertex$1,\n     sprite_frag: fragment$1\n };\n \n /**\n  * Uniforms library for shared webgl shaders\n  */\n \n const UniformsLib = {\n \n     common: {\n \n         diffuse: { value: new Color( 0xffffff ) },\n         opacity: { value: 1.0 },\n \n         map: { value: null },\n         uvTransform: { value: new Matrix3() },\n         uv2Transform: { value: new Matrix3() },\n \n         alphaMap: { value: null },\n         alphaTest: { value: 0 }\n \n     },\n \n     specularmap: {\n \n         specularMap: { value: null },\n \n     },\n \n     envmap: {\n \n         envMap: { value: null },\n         flipEnvMap: { value: - 1 },\n         reflectivity: { value: 1.0 }, // basic, lambert, phong\n         ior: { value: 1.5 }, // physical\n         refractionRatio: { value: 0.98 } // basic, lambert, phong\n \n     },\n \n     aomap: {\n \n         aoMap: { value: null },\n         aoMapIntensity: { value: 1 }\n \n     },\n \n     lightmap: {\n \n         lightMap: { value: null },\n         lightMapIntensity: { value: 1 }\n \n     },\n \n     emissivemap: {\n \n         emissiveMap: { value: null }\n \n     },\n \n     bumpmap: {\n \n         bumpMap: { value: null },\n         bumpScale: { value: 1 }\n \n     },\n \n     normalmap: {\n \n         normalMap: { value: null },\n         normalScale: { value: new Vector2( 1, 1 ) }\n \n     },\n \n     displacementmap: {\n \n         displacementMap: { value: null },\n         displacementScale: { value: 1 },\n         displacementBias: { value: 0 }\n \n     },\n \n     roughnessmap: {\n \n         roughnessMap: { value: null }\n \n     },\n \n     metalnessmap: {\n \n         metalnessMap: { value: null }\n \n     },\n \n     gradientmap: {\n \n         gradientMap: { value: null }\n \n     },\n \n     fog: {\n \n         fogDensity: { value: 0.00025 },\n         fogNear: { value: 1 },\n         fogFar: { value: 2000 },\n         fogColor: { value: new Color( 0xffffff ) }\n \n     },\n \n     lights: {\n \n         ambientLightColor: { value: [] },\n \n         lightProbe: { value: [] },\n \n         directionalLights: { value: [], properties: {\n             direction: {},\n             color: {}\n         } },\n \n         directionalLightShadows: { value: [], properties: {\n             shadowBias: {},\n             shadowNormalBias: {},\n             shadowRadius: {},\n             shadowMapSize: {}\n         } },\n \n         directionalShadowMap: { value: [] },\n         directionalShadowMatrix: { value: [] },\n \n         spotLights: { value: [], properties: {\n             color: {},\n             position: {},\n             direction: {},\n             distance: {},\n             coneCos: {},\n             penumbraCos: {},\n             decay: {}\n         } },\n \n         spotLightShadows: { value: [], properties: {\n             shadowBias: {},\n             shadowNormalBias: {},\n             shadowRadius: {},\n             shadowMapSize: {}\n         } },\n \n         spotShadowMap: { value: [] },\n         spotShadowMatrix: { value: [] },\n \n         pointLights: { value: [], properties: {\n             color: {},\n             position: {},\n             decay: {},\n             distance: {}\n         } },\n \n         pointLightShadows: { value: [], properties: {\n             shadowBias: {},\n             shadowNormalBias: {},\n             shadowRadius: {},\n             shadowMapSize: {},\n             shadowCameraNear: {},\n             shadowCameraFar: {}\n         } },\n \n         pointShadowMap: { value: [] },\n         pointShadowMatrix: { value: [] },\n \n         hemisphereLights: { value: [], properties: {\n             direction: {},\n             skyColor: {},\n             groundColor: {}\n         } },\n \n         // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n         rectAreaLights: { value: [], properties: {\n             color: {},\n             position: {},\n             width: {},\n             height: {}\n         } },\n \n         ltc_1: { value: null },\n         ltc_2: { value: null }\n \n     },\n \n     points: {\n \n         diffuse: { value: new Color( 0xffffff ) },\n         opacity: { value: 1.0 },\n         size: { value: 1.0 },\n         scale: { value: 1.0 },\n         map: { value: null },\n         alphaMap: { value: null },\n         alphaTest: { value: 0 },\n         uvTransform: { value: new Matrix3() }\n \n     },\n \n     sprite: {\n \n         diffuse: { value: new Color( 0xffffff ) },\n         opacity: { value: 1.0 },\n         center: { value: new Vector2( 0.5, 0.5 ) },\n         rotation: { value: 0.0 },\n         map: { value: null },\n         alphaMap: { value: null },\n         alphaTest: { value: 0 },\n         uvTransform: { value: new Matrix3() }\n \n     }\n \n };\n \n const ShaderLib = {\n \n     basic: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.common,\n             UniformsLib.specularmap,\n             UniformsLib.envmap,\n             UniformsLib.aomap,\n             UniformsLib.lightmap,\n             UniformsLib.fog\n         ] ),\n \n         vertexShader: ShaderChunk.meshbasic_vert,\n         fragmentShader: ShaderChunk.meshbasic_frag\n \n     },\n \n     lambert: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.common,\n             UniformsLib.specularmap,\n             UniformsLib.envmap,\n             UniformsLib.aomap,\n             UniformsLib.lightmap,\n             UniformsLib.emissivemap,\n             UniformsLib.fog,\n             UniformsLib.lights,\n             {\n                 emissive: { value: new Color( 0x000000 ) }\n             }\n         ] ),\n \n         vertexShader: ShaderChunk.meshlambert_vert,\n         fragmentShader: ShaderChunk.meshlambert_frag\n \n     },\n \n     phong: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.common,\n             UniformsLib.specularmap,\n             UniformsLib.envmap,\n             UniformsLib.aomap,\n             UniformsLib.lightmap,\n             UniformsLib.emissivemap,\n             UniformsLib.bumpmap,\n             UniformsLib.normalmap,\n             UniformsLib.displacementmap,\n             UniformsLib.fog,\n             UniformsLib.lights,\n             {\n                 emissive: { value: new Color( 0x000000 ) },\n                 specular: { value: new Color( 0x111111 ) },\n                 shininess: { value: 30 }\n             }\n         ] ),\n \n         vertexShader: ShaderChunk.meshphong_vert,\n         fragmentShader: ShaderChunk.meshphong_frag\n \n     },\n \n     standard: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.common,\n             UniformsLib.envmap,\n             UniformsLib.aomap,\n             UniformsLib.lightmap,\n             UniformsLib.emissivemap,\n             UniformsLib.bumpmap,\n             UniformsLib.normalmap,\n             UniformsLib.displacementmap,\n             UniformsLib.roughnessmap,\n             UniformsLib.metalnessmap,\n             UniformsLib.fog,\n             UniformsLib.lights,\n             {\n                 emissive: { value: new Color( 0x000000 ) },\n                 roughness: { value: 1.0 },\n                 metalness: { value: 0.0 },\n                 envMapIntensity: { value: 1 } // temporary\n             }\n         ] ),\n \n         vertexShader: ShaderChunk.meshphysical_vert,\n         fragmentShader: ShaderChunk.meshphysical_frag\n \n     },\n \n     toon: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.common,\n             UniformsLib.aomap,\n             UniformsLib.lightmap,\n             UniformsLib.emissivemap,\n             UniformsLib.bumpmap,\n             UniformsLib.normalmap,\n             UniformsLib.displacementmap,\n             UniformsLib.gradientmap,\n             UniformsLib.fog,\n             UniformsLib.lights,\n             {\n                 emissive: { value: new Color( 0x000000 ) }\n             }\n         ] ),\n \n         vertexShader: ShaderChunk.meshtoon_vert,\n         fragmentShader: ShaderChunk.meshtoon_frag\n \n     },\n \n     matcap: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.common,\n             UniformsLib.bumpmap,\n             UniformsLib.normalmap,\n             UniformsLib.displacementmap,\n             UniformsLib.fog,\n             {\n                 matcap: { value: null }\n             }\n         ] ),\n \n         vertexShader: ShaderChunk.meshmatcap_vert,\n         fragmentShader: ShaderChunk.meshmatcap_frag\n \n     },\n \n     points: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.points,\n             UniformsLib.fog\n         ] ),\n \n         vertexShader: ShaderChunk.points_vert,\n         fragmentShader: ShaderChunk.points_frag\n \n     },\n \n     dashed: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.common,\n             UniformsLib.fog,\n             {\n                 scale: { value: 1 },\n                 dashSize: { value: 1 },\n                 totalSize: { value: 2 }\n             }\n         ] ),\n \n         vertexShader: ShaderChunk.linedashed_vert,\n         fragmentShader: ShaderChunk.linedashed_frag\n \n     },\n \n     depth: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.common,\n             UniformsLib.displacementmap\n         ] ),\n \n         vertexShader: ShaderChunk.depth_vert,\n         fragmentShader: ShaderChunk.depth_frag\n \n     },\n \n     normal: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.common,\n             UniformsLib.bumpmap,\n             UniformsLib.normalmap,\n             UniformsLib.displacementmap,\n             {\n                 opacity: { value: 1.0 }\n             }\n         ] ),\n \n         vertexShader: ShaderChunk.meshnormal_vert,\n         fragmentShader: ShaderChunk.meshnormal_frag\n \n     },\n \n     sprite: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.sprite,\n             UniformsLib.fog\n         ] ),\n \n         vertexShader: ShaderChunk.sprite_vert,\n         fragmentShader: ShaderChunk.sprite_frag\n \n     },\n \n     background: {\n \n         uniforms: {\n             uvTransform: { value: new Matrix3() },\n             t2D: { value: null },\n         },\n \n         vertexShader: ShaderChunk.background_vert,\n         fragmentShader: ShaderChunk.background_frag\n \n     },\n     /* -------------------------------------------------------------------------\n     //\tCube map shader\n      ------------------------------------------------------------------------- */\n \n     cube: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.envmap,\n             {\n                 opacity: { value: 1.0 }\n             }\n         ] ),\n \n         vertexShader: ShaderChunk.cube_vert,\n         fragmentShader: ShaderChunk.cube_frag\n \n     },\n \n     equirect: {\n \n         uniforms: {\n             tEquirect: { value: null },\n         },\n \n         vertexShader: ShaderChunk.equirect_vert,\n         fragmentShader: ShaderChunk.equirect_frag\n \n     },\n \n     distanceRGBA: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.common,\n             UniformsLib.displacementmap,\n             {\n                 referencePosition: { value: new Vector3() },\n                 nearDistance: { value: 1 },\n                 farDistance: { value: 1000 }\n             }\n         ] ),\n \n         vertexShader: ShaderChunk.distanceRGBA_vert,\n         fragmentShader: ShaderChunk.distanceRGBA_frag\n \n     },\n \n     shadow: {\n \n         uniforms: mergeUniforms( [\n             UniformsLib.lights,\n             UniformsLib.fog,\n             {\n                 color: { value: new Color( 0x00000 ) },\n                 opacity: { value: 1.0 }\n             },\n         ] ),\n \n         vertexShader: ShaderChunk.shadow_vert,\n         fragmentShader: ShaderChunk.shadow_frag\n \n     }\n \n };\n \n ShaderLib.physical = {\n \n     uniforms: mergeUniforms( [\n         ShaderLib.standard.uniforms,\n         {\n             clearcoat: { value: 0 },\n             clearcoatMap: { value: null },\n             clearcoatRoughness: { value: 0 },\n             clearcoatRoughnessMap: { value: null },\n             clearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n             clearcoatNormalMap: { value: null },\n             sheen: { value: 0 },\n             sheenColor: { value: new Color( 0x000000 ) },\n             sheenColorMap: { value: null },\n             sheenRoughness: { value: 1 },\n             sheenRoughnessMap: { value: null },\n             transmission: { value: 0 },\n             transmissionMap: { value: null },\n             transmissionSamplerSize: { value: new Vector2() },\n             transmissionSamplerMap: { value: null },\n             thickness: { value: 0 },\n             thicknessMap: { value: null },\n             attenuationDistance: { value: 0 },\n             attenuationColor: { value: new Color( 0x000000 ) },\n             specularIntensity: { value: 1 },\n             specularIntensityMap: { value: null },\n             specularColor: { value: new Color( 1, 1, 1 ) },\n             specularColorMap: { value: null },\n         }\n     ] ),\n \n     vertexShader: ShaderChunk.meshphysical_vert,\n     fragmentShader: ShaderChunk.meshphysical_frag\n \n };\n \n function WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {\n \n     const clearColor = new Color( 0x000000 );\n     let clearAlpha = alpha === true ? 0 : 1;\n \n     let planeMesh;\n     let boxMesh;\n \n     let currentBackground = null;\n     let currentBackgroundVersion = 0;\n     let currentTonemapping = null;\n \n     function render( renderList, scene ) {\n \n         let forceClear = false;\n         let background = scene.isScene === true ? scene.background : null;\n \n         if ( background && background.isTexture ) {\n \n             background = cubemaps.get( background );\n \n         }\n \n         // Ignore background in AR\n         // TODO: Reconsider this.\n \n         const xr = renderer.xr;\n         const session = xr.getSession && xr.getSession();\n \n         if ( session && session.environmentBlendMode === 'additive' ) {\n \n             background = null;\n \n         }\n \n         if ( background === null ) {\n \n             setClear( clearColor, clearAlpha );\n \n         } else if ( background && background.isColor ) {\n \n             setClear( background, 1 );\n             forceClear = true;\n \n         }\n \n         if ( renderer.autoClear || forceClear ) {\n \n             renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n \n         }\n \n         if ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n \n             if ( boxMesh === undefined ) {\n \n                 boxMesh = new Mesh(\n                     new BoxGeometry( 1, 1, 1 ),\n                     new ShaderMaterial( {\n                         name: 'BackgroundCubeMaterial',\n                         uniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n                         vertexShader: ShaderLib.cube.vertexShader,\n                         fragmentShader: ShaderLib.cube.fragmentShader,\n                         side: BackSide,\n                         depthTest: false,\n                         depthWrite: false,\n                         fog: false\n                     } )\n                 );\n \n                 boxMesh.geometry.deleteAttribute( 'normal' );\n                 boxMesh.geometry.deleteAttribute( 'uv' );\n \n                 boxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n \n                     this.matrixWorld.copyPosition( camera.matrixWorld );\n \n                 };\n \n                 // enable code injection for non-built-in material\n                 Object.defineProperty( boxMesh.material, 'envMap', {\n \n                     get: function () {\n \n                         return this.uniforms.envMap.value;\n \n                     }\n \n                 } );\n \n                 objects.update( boxMesh );\n \n             }\n \n             boxMesh.material.uniforms.envMap.value = background;\n             boxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n \n             if ( currentBackground !== background ||\n                 currentBackgroundVersion !== background.version ||\n                 currentTonemapping !== renderer.toneMapping ) {\n \n                 boxMesh.material.needsUpdate = true;\n \n                 currentBackground = background;\n                 currentBackgroundVersion = background.version;\n                 currentTonemapping = renderer.toneMapping;\n \n             }\n \n             // push to the pre-sorted opaque render list\n             renderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n \n         } else if ( background && background.isTexture ) {\n \n             if ( planeMesh === undefined ) {\n \n                 planeMesh = new Mesh(\n                     new PlaneGeometry( 2, 2 ),\n                     new ShaderMaterial( {\n                         name: 'BackgroundMaterial',\n                         uniforms: cloneUniforms( ShaderLib.background.uniforms ),\n                         vertexShader: ShaderLib.background.vertexShader,\n                         fragmentShader: ShaderLib.background.fragmentShader,\n                         side: FrontSide,\n                         depthTest: false,\n                         depthWrite: false,\n                         fog: false\n                     } )\n                 );\n \n                 planeMesh.geometry.deleteAttribute( 'normal' );\n \n                 // enable code injection for non-built-in material\n                 Object.defineProperty( planeMesh.material, 'map', {\n \n                     get: function () {\n \n                         return this.uniforms.t2D.value;\n \n                     }\n \n                 } );\n \n                 objects.update( planeMesh );\n \n             }\n \n             planeMesh.material.uniforms.t2D.value = background;\n \n             if ( background.matrixAutoUpdate === true ) {\n \n                 background.updateMatrix();\n \n             }\n \n             planeMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n \n             if ( currentBackground !== background ||\n                 currentBackgroundVersion !== background.version ||\n                 currentTonemapping !== renderer.toneMapping ) {\n \n                 planeMesh.material.needsUpdate = true;\n \n                 currentBackground = background;\n                 currentBackgroundVersion = background.version;\n                 currentTonemapping = renderer.toneMapping;\n \n             }\n \n \n             // push to the pre-sorted opaque render list\n             renderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n \n         }\n \n     }\n \n     function setClear( color, alpha ) {\n \n         state.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n \n     }\n \n     return {\n \n         getClearColor: function () {\n \n             return clearColor;\n \n         },\n         setClearColor: function ( color, alpha = 1 ) {\n \n             clearColor.set( color );\n             clearAlpha = alpha;\n             setClear( clearColor, clearAlpha );\n \n         },\n         getClearAlpha: function () {\n \n             return clearAlpha;\n \n         },\n         setClearAlpha: function ( alpha ) {\n \n             clearAlpha = alpha;\n             setClear( clearColor, clearAlpha );\n \n         },\n         render: render\n \n     };\n \n }\n \n function WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n \n     const maxVertexAttributes = gl.getParameter( 34921 );\n \n     const extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n     const vaoAvailable = capabilities.isWebGL2 || extension !== null;\n \n     const bindingStates = {};\n \n     const defaultState = createBindingState( null );\n     let currentState = defaultState;\n     let forceUpdate = false;\n \n     function setup( object, material, program, geometry, index ) {\n \n         let updateBuffers = false;\n \n         if ( vaoAvailable ) {\n \n             const state = getBindingState( geometry, program, material );\n \n             if ( currentState !== state ) {\n \n                 currentState = state;\n                 bindVertexArrayObject( currentState.object );\n \n             }\n \n             updateBuffers = needsUpdate( geometry, index );\n \n             if ( updateBuffers ) saveCache( geometry, index );\n \n         } else {\n \n             const wireframe = ( material.wireframe === true );\n \n             if ( currentState.geometry !== geometry.id ||\n                 currentState.program !== program.id ||\n                 currentState.wireframe !== wireframe ) {\n \n                 currentState.geometry = geometry.id;\n                 currentState.program = program.id;\n                 currentState.wireframe = wireframe;\n \n                 updateBuffers = true;\n \n             }\n \n         }\n \n         if ( object.isInstancedMesh === true ) {\n \n             updateBuffers = true;\n \n         }\n \n         if ( index !== null ) {\n \n             attributes.update( index, 34963 );\n \n         }\n \n         if ( updateBuffers || forceUpdate ) {\n \n             forceUpdate = false;\n \n             setupVertexAttributes( object, material, program, geometry );\n \n             if ( index !== null ) {\n \n                 gl.bindBuffer( 34963, attributes.get( index ).buffer );\n \n             }\n \n         }\n \n     }\n \n     function createVertexArrayObject() {\n \n         if ( capabilities.isWebGL2 ) return gl.createVertexArray();\n \n         return extension.createVertexArrayOES();\n \n     }\n \n     function bindVertexArrayObject( vao ) {\n \n         if ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n \n         return extension.bindVertexArrayOES( vao );\n \n     }\n \n     function deleteVertexArrayObject( vao ) {\n \n         if ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n \n         return extension.deleteVertexArrayOES( vao );\n \n     }\n \n     function getBindingState( geometry, program, material ) {\n \n         const wireframe = ( material.wireframe === true );\n \n         let programMap = bindingStates[ geometry.id ];\n \n         if ( programMap === undefined ) {\n \n             programMap = {};\n             bindingStates[ geometry.id ] = programMap;\n \n         }\n \n         let stateMap = programMap[ program.id ];\n \n         if ( stateMap === undefined ) {\n \n             stateMap = {};\n             programMap[ program.id ] = stateMap;\n \n         }\n \n         let state = stateMap[ wireframe ];\n \n         if ( state === undefined ) {\n \n             state = createBindingState( createVertexArrayObject() );\n             stateMap[ wireframe ] = state;\n \n         }\n \n         return state;\n \n     }\n \n     function createBindingState( vao ) {\n \n         const newAttributes = [];\n         const enabledAttributes = [];\n         const attributeDivisors = [];\n \n         for ( let i = 0; i < maxVertexAttributes; i ++ ) {\n \n             newAttributes[ i ] = 0;\n             enabledAttributes[ i ] = 0;\n             attributeDivisors[ i ] = 0;\n \n         }\n \n         return {\n \n             // for backward compatibility on non-VAO support browser\n             geometry: null,\n             program: null,\n             wireframe: false,\n \n             newAttributes: newAttributes,\n             enabledAttributes: enabledAttributes,\n             attributeDivisors: attributeDivisors,\n             object: vao,\n             attributes: {},\n             index: null\n \n         };\n \n     }\n \n     function needsUpdate( geometry, index ) {\n \n         const cachedAttributes = currentState.attributes;\n         const geometryAttributes = geometry.attributes;\n \n         let attributesNum = 0;\n \n         for ( const key in geometryAttributes ) {\n \n             const cachedAttribute = cachedAttributes[ key ];\n             const geometryAttribute = geometryAttributes[ key ];\n \n             if ( cachedAttribute === undefined ) return true;\n \n             if ( cachedAttribute.attribute !== geometryAttribute ) return true;\n \n             if ( cachedAttribute.data !== geometryAttribute.data ) return true;\n \n             attributesNum ++;\n \n         }\n \n         if ( currentState.attributesNum !== attributesNum ) return true;\n \n         if ( currentState.index !== index ) return true;\n \n         return false;\n \n     }\n \n     function saveCache( geometry, index ) {\n \n         const cache = {};\n         const attributes = geometry.attributes;\n         let attributesNum = 0;\n \n         for ( const key in attributes ) {\n \n             const attribute = attributes[ key ];\n \n             const data = {};\n             data.attribute = attribute;\n \n             if ( attribute.data ) {\n \n                 data.data = attribute.data;\n \n             }\n \n             cache[ key ] = data;\n \n             attributesNum ++;\n \n         }\n \n         currentState.attributes = cache;\n         currentState.attributesNum = attributesNum;\n \n         currentState.index = index;\n \n     }\n \n     function initAttributes() {\n \n         const newAttributes = currentState.newAttributes;\n \n         for ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n \n             newAttributes[ i ] = 0;\n \n         }\n \n     }\n \n     function enableAttribute( attribute ) {\n \n         enableAttributeAndDivisor( attribute, 0 );\n \n     }\n \n     function enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n \n         const newAttributes = currentState.newAttributes;\n         const enabledAttributes = currentState.enabledAttributes;\n         const attributeDivisors = currentState.attributeDivisors;\n \n         newAttributes[ attribute ] = 1;\n \n         if ( enabledAttributes[ attribute ] === 0 ) {\n \n             gl.enableVertexAttribArray( attribute );\n             enabledAttributes[ attribute ] = 1;\n \n         }\n \n         if ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n \n             const extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n \n             extension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n             attributeDivisors[ attribute ] = meshPerAttribute;\n \n         }\n \n     }\n \n     function disableUnusedAttributes() {\n \n         const newAttributes = currentState.newAttributes;\n         const enabledAttributes = currentState.enabledAttributes;\n \n         for ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n \n             if ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n \n                 gl.disableVertexAttribArray( i );\n                 enabledAttributes[ i ] = 0;\n \n             }\n \n         }\n \n     }\n \n     function vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n \n         if ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n \n             gl.vertexAttribIPointer( index, size, type, stride, offset );\n \n         } else {\n \n             gl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n \n         }\n \n     }\n \n     function setupVertexAttributes( object, material, program, geometry ) {\n \n         if ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n \n             if ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n \n         }\n \n         initAttributes();\n \n         const geometryAttributes = geometry.attributes;\n \n         const programAttributes = program.getAttributes();\n \n         const materialDefaultAttributeValues = material.defaultAttributeValues;\n \n         for ( const name in programAttributes ) {\n \n             const programAttribute = programAttributes[ name ];\n \n             if ( programAttribute.location >= 0 ) {\n \n                 let geometryAttribute = geometryAttributes[ name ];\n \n                 if ( geometryAttribute === undefined ) {\n \n                     if ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n                     if ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n \n                 }\n \n                 if ( geometryAttribute !== undefined ) {\n \n                     const normalized = geometryAttribute.normalized;\n                     const size = geometryAttribute.itemSize;\n \n                     const attribute = attributes.get( geometryAttribute );\n \n                     // TODO Attribute may not be available on context restore\n \n                     if ( attribute === undefined ) continue;\n \n                     const buffer = attribute.buffer;\n                     const type = attribute.type;\n                     const bytesPerElement = attribute.bytesPerElement;\n \n                     if ( geometryAttribute.isInterleavedBufferAttribute ) {\n \n                         const data = geometryAttribute.data;\n                         const stride = data.stride;\n                         const offset = geometryAttribute.offset;\n \n                         if ( data.isInstancedInterleavedBuffer ) {\n \n                             for ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n \n                                 enableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n \n                             }\n \n                             if ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n \n                                 geometry._maxInstanceCount = data.meshPerAttribute * data.count;\n \n                             }\n \n                         } else {\n \n                             for ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n \n                                 enableAttribute( programAttribute.location + i );\n \n                             }\n \n                         }\n \n                         gl.bindBuffer( 34962, buffer );\n \n                         for ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n \n                             vertexAttribPointer(\n                                 programAttribute.location + i,\n                                 size / programAttribute.locationSize,\n                                 type,\n                                 normalized,\n                                 stride * bytesPerElement,\n                                 ( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n                             );\n \n                         }\n \n                     } else {\n \n                         if ( geometryAttribute.isInstancedBufferAttribute ) {\n \n                             for ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n \n                                 enableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n \n                             }\n \n                             if ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n \n                                 geometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n \n                             }\n \n                         } else {\n \n                             for ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n \n                                 enableAttribute( programAttribute.location + i );\n \n                             }\n \n                         }\n \n                         gl.bindBuffer( 34962, buffer );\n \n                         for ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n \n                             vertexAttribPointer(\n                                 programAttribute.location + i,\n                                 size / programAttribute.locationSize,\n                                 type,\n                                 normalized,\n                                 size * bytesPerElement,\n                                 ( size / programAttribute.locationSize ) * i * bytesPerElement\n                             );\n \n                         }\n \n                     }\n \n                 } else if ( materialDefaultAttributeValues !== undefined ) {\n \n                     const value = materialDefaultAttributeValues[ name ];\n \n                     if ( value !== undefined ) {\n \n                         switch ( value.length ) {\n \n                             case 2:\n                                 gl.vertexAttrib2fv( programAttribute.location, value );\n                                 break;\n \n                             case 3:\n                                 gl.vertexAttrib3fv( programAttribute.location, value );\n                                 break;\n \n                             case 4:\n                                 gl.vertexAttrib4fv( programAttribute.location, value );\n                                 break;\n \n                             default:\n                                 gl.vertexAttrib1fv( programAttribute.location, value );\n \n                         }\n \n                     }\n \n                 }\n \n             }\n \n         }\n \n         disableUnusedAttributes();\n \n     }\n \n     function dispose() {\n \n         reset();\n \n         for ( const geometryId in bindingStates ) {\n \n             const programMap = bindingStates[ geometryId ];\n \n             for ( const programId in programMap ) {\n \n                 const stateMap = programMap[ programId ];\n \n                 for ( const wireframe in stateMap ) {\n \n                     deleteVertexArrayObject( stateMap[ wireframe ].object );\n \n                     delete stateMap[ wireframe ];\n \n                 }\n \n                 delete programMap[ programId ];\n \n             }\n \n             delete bindingStates[ geometryId ];\n \n         }\n \n     }\n \n     function releaseStatesOfGeometry( geometry ) {\n \n         if ( bindingStates[ geometry.id ] === undefined ) return;\n \n         const programMap = bindingStates[ geometry.id ];\n \n         for ( const programId in programMap ) {\n \n             const stateMap = programMap[ programId ];\n \n             for ( const wireframe in stateMap ) {\n \n                 deleteVertexArrayObject( stateMap[ wireframe ].object );\n \n                 delete stateMap[ wireframe ];\n \n             }\n \n             delete programMap[ programId ];\n \n         }\n \n         delete bindingStates[ geometry.id ];\n \n     }\n \n     function releaseStatesOfProgram( program ) {\n \n         for ( const geometryId in bindingStates ) {\n \n             const programMap = bindingStates[ geometryId ];\n \n             if ( programMap[ program.id ] === undefined ) continue;\n \n             const stateMap = programMap[ program.id ];\n \n             for ( const wireframe in stateMap ) {\n \n                 deleteVertexArrayObject( stateMap[ wireframe ].object );\n \n                 delete stateMap[ wireframe ];\n \n             }\n \n             delete programMap[ program.id ];\n \n         }\n \n     }\n \n     function reset() {\n \n         resetDefaultState();\n         forceUpdate = true;\n \n         if ( currentState === defaultState ) return;\n \n         currentState = defaultState;\n         bindVertexArrayObject( currentState.object );\n \n     }\n \n     // for backward-compatibility\n \n     function resetDefaultState() {\n \n         defaultState.geometry = null;\n         defaultState.program = null;\n         defaultState.wireframe = false;\n \n     }\n \n     return {\n \n         setup: setup,\n         reset: reset,\n         resetDefaultState: resetDefaultState,\n         dispose: dispose,\n         releaseStatesOfGeometry: releaseStatesOfGeometry,\n         releaseStatesOfProgram: releaseStatesOfProgram,\n \n         initAttributes: initAttributes,\n         enableAttribute: enableAttribute,\n         disableUnusedAttributes: disableUnusedAttributes\n \n     };\n \n }\n \n function WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n \n     const isWebGL2 = capabilities.isWebGL2;\n \n     let mode;\n \n     function setMode( value ) {\n \n         mode = value;\n \n     }\n \n     function render( start, count ) {\n \n         gl.drawArrays( mode, start, count );\n \n         info.update( count, mode, 1 );\n \n     }\n \n     function renderInstances( start, count, primcount ) {\n \n         if ( primcount === 0 ) return;\n \n         let extension, methodName;\n \n         if ( isWebGL2 ) {\n \n             extension = gl;\n             methodName = 'drawArraysInstanced';\n \n         } else {\n \n             extension = extensions.get( 'ANGLE_instanced_arrays' );\n             methodName = 'drawArraysInstancedANGLE';\n \n             if ( extension === null ) {\n \n                 console.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n                 return;\n \n             }\n \n         }\n \n         extension[ methodName ]( mode, start, count, primcount );\n \n         info.update( count, mode, primcount );\n \n     }\n \n     //\n \n     this.setMode = setMode;\n     this.render = render;\n     this.renderInstances = renderInstances;\n \n }\n \n function WebGLCapabilities( gl, extensions, parameters ) {\n \n     let maxAnisotropy;\n \n     function getMaxAnisotropy() {\n \n         if ( maxAnisotropy !== undefined ) return maxAnisotropy;\n \n         if ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n \n             const extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n \n             maxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n \n         } else {\n \n             maxAnisotropy = 0;\n \n         }\n \n         return maxAnisotropy;\n \n     }\n \n     function getMaxPrecision( precision ) {\n \n         if ( precision === 'highp' ) {\n \n             if ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n                 gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n \n                 return 'highp';\n \n             }\n \n             precision = 'mediump';\n \n         }\n \n         if ( precision === 'mediump' ) {\n \n             if ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n                 gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n \n                 return 'mediump';\n \n             }\n \n         }\n \n         return 'lowp';\n \n     }\n \n     const isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n         ( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n \n     let precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n     const maxPrecision = getMaxPrecision( precision );\n \n     if ( maxPrecision !== precision ) {\n \n         console.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n         precision = maxPrecision;\n \n     }\n \n     const drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n \n     const logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n \n     const maxTextures = gl.getParameter( 34930 );\n     const maxVertexTextures = gl.getParameter( 35660 );\n     const maxTextureSize = gl.getParameter( 3379 );\n     const maxCubemapSize = gl.getParameter( 34076 );\n \n     const maxAttributes = gl.getParameter( 34921 );\n     const maxVertexUniforms = gl.getParameter( 36347 );\n     const maxVaryings = gl.getParameter( 36348 );\n     const maxFragmentUniforms = gl.getParameter( 36349 );\n \n     const vertexTextures = maxVertexTextures > 0;\n     const floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n     const floatVertexTextures = vertexTextures && floatFragmentTextures;\n \n     const maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n \n     return {\n \n         isWebGL2: isWebGL2,\n \n         drawBuffers: drawBuffers,\n \n         getMaxAnisotropy: getMaxAnisotropy,\n         getMaxPrecision: getMaxPrecision,\n \n         precision: precision,\n         logarithmicDepthBuffer: logarithmicDepthBuffer,\n \n         maxTextures: maxTextures,\n         maxVertexTextures: maxVertexTextures,\n         maxTextureSize: maxTextureSize,\n         maxCubemapSize: maxCubemapSize,\n \n         maxAttributes: maxAttributes,\n         maxVertexUniforms: maxVertexUniforms,\n         maxVaryings: maxVaryings,\n         maxFragmentUniforms: maxFragmentUniforms,\n \n         vertexTextures: vertexTextures,\n         floatFragmentTextures: floatFragmentTextures,\n         floatVertexTextures: floatVertexTextures,\n \n         maxSamples: maxSamples\n \n     };\n \n }\n \n function WebGLClipping( properties ) {\n \n     const scope = this;\n \n     let globalState = null,\n         numGlobalPlanes = 0,\n         localClippingEnabled = false,\n         renderingShadows = false;\n \n     const plane = new Plane(),\n         viewNormalMatrix = new Matrix3(),\n \n         uniform = { value: null, needsUpdate: false };\n \n     this.uniform = uniform;\n     this.numPlanes = 0;\n     this.numIntersection = 0;\n \n     this.init = function ( planes, enableLocalClipping, camera ) {\n \n         const enabled =\n             planes.length !== 0 ||\n             enableLocalClipping ||\n             // enable state of previous frame - the clipping code has to\n             // run another frame in order to reset the state:\n             numGlobalPlanes !== 0 ||\n             localClippingEnabled;\n \n         localClippingEnabled = enableLocalClipping;\n \n         globalState = projectPlanes( planes, camera, 0 );\n         numGlobalPlanes = planes.length;\n \n         return enabled;\n \n     };\n \n     this.beginShadows = function () {\n \n         renderingShadows = true;\n         projectPlanes( null );\n \n     };\n \n     this.endShadows = function () {\n \n         renderingShadows = false;\n         resetGlobalState();\n \n     };\n \n     this.setState = function ( material, camera, useCache ) {\n \n         const planes = material.clippingPlanes,\n             clipIntersection = material.clipIntersection,\n             clipShadows = material.clipShadows;\n \n         const materialProperties = properties.get( material );\n \n         if ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n \n             // there's no local clipping\n \n             if ( renderingShadows ) {\n \n                 // there's no global clipping\n \n                 projectPlanes( null );\n \n             } else {\n \n                 resetGlobalState();\n \n             }\n \n         } else {\n \n             const nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n                 lGlobal = nGlobal * 4;\n \n             let dstArray = materialProperties.clippingState || null;\n \n             uniform.value = dstArray; // ensure unique state\n \n             dstArray = projectPlanes( planes, camera, lGlobal, useCache );\n \n             for ( let i = 0; i !== lGlobal; ++ i ) {\n \n                 dstArray[ i ] = globalState[ i ];\n \n             }\n \n             materialProperties.clippingState = dstArray;\n             this.numIntersection = clipIntersection ? this.numPlanes : 0;\n             this.numPlanes += nGlobal;\n \n         }\n \n \n     };\n \n     function resetGlobalState() {\n \n         if ( uniform.value !== globalState ) {\n \n             uniform.value = globalState;\n             uniform.needsUpdate = numGlobalPlanes > 0;\n \n         }\n \n         scope.numPlanes = numGlobalPlanes;\n         scope.numIntersection = 0;\n \n     }\n \n     function projectPlanes( planes, camera, dstOffset, skipTransform ) {\n \n         const nPlanes = planes !== null ? planes.length : 0;\n         let dstArray = null;\n \n         if ( nPlanes !== 0 ) {\n \n             dstArray = uniform.value;\n \n             if ( skipTransform !== true || dstArray === null ) {\n \n                 const flatSize = dstOffset + nPlanes * 4,\n                     viewMatrix = camera.matrixWorldInverse;\n \n                 viewNormalMatrix.getNormalMatrix( viewMatrix );\n \n                 if ( dstArray === null || dstArray.length < flatSize ) {\n \n                     dstArray = new Float32Array( flatSize );\n \n                 }\n \n                 for ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n \n                     plane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n \n                     plane.normal.toArray( dstArray, i4 );\n                     dstArray[ i4 + 3 ] = plane.constant;\n \n                 }\n \n             }\n \n             uniform.value = dstArray;\n             uniform.needsUpdate = true;\n \n         }\n \n         scope.numPlanes = nPlanes;\n         scope.numIntersection = 0;\n \n         return dstArray;\n \n     }\n \n }\n \n function WebGLCubeMaps( renderer ) {\n \n     let cubemaps = new WeakMap();\n \n     function mapTextureMapping( texture, mapping ) {\n \n         if ( mapping === EquirectangularReflectionMapping ) {\n \n             texture.mapping = CubeReflectionMapping;\n \n         } else if ( mapping === EquirectangularRefractionMapping ) {\n \n             texture.mapping = CubeRefractionMapping;\n \n         }\n \n         return texture;\n \n     }\n \n     function get( texture ) {\n \n         if ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n \n             const mapping = texture.mapping;\n \n             if ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n \n                 if ( cubemaps.has( texture ) ) {\n \n                     const cubemap = cubemaps.get( texture ).texture;\n                     return mapTextureMapping( cubemap, texture.mapping );\n \n                 } else {\n \n                     const image = texture.image;\n \n                     if ( image && image.height > 0 ) {\n \n                         const renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n                         renderTarget.fromEquirectangularTexture( renderer, texture );\n                         cubemaps.set( texture, renderTarget );\n \n                         texture.addEventListener( 'dispose', onTextureDispose );\n \n                         return mapTextureMapping( renderTarget.texture, texture.mapping );\n \n                     } else {\n \n                         // image not yet ready. try the conversion next frame\n \n                         return null;\n \n                     }\n \n                 }\n \n             }\n \n         }\n \n         return texture;\n \n     }\n \n     function onTextureDispose( event ) {\n \n         const texture = event.target;\n \n         texture.removeEventListener( 'dispose', onTextureDispose );\n \n         const cubemap = cubemaps.get( texture );\n \n         if ( cubemap !== undefined ) {\n \n             cubemaps.delete( texture );\n             cubemap.dispose();\n \n         }\n \n     }\n \n     function dispose() {\n \n         cubemaps = new WeakMap();\n \n     }\n \n     return {\n         get: get,\n         dispose: dispose\n     };\n \n }\n \n class OrthographicCamera extends Camera {\n \n     constructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n \n         super();\n \n         this.type = 'OrthographicCamera';\n \n         this.zoom = 1;\n         this.view = null;\n \n         this.left = left;\n         this.right = right;\n         this.top = top;\n         this.bottom = bottom;\n \n         this.near = near;\n         this.far = far;\n \n         this.updateProjectionMatrix();\n \n     }\n \n     copy( source, recursive ) {\n \n         super.copy( source, recursive );\n \n         this.left = source.left;\n         this.right = source.right;\n         this.top = source.top;\n         this.bottom = source.bottom;\n         this.near = source.near;\n         this.far = source.far;\n \n         this.zoom = source.zoom;\n         this.view = source.view === null ? null : Object.assign( {}, source.view );\n \n         return this;\n \n     }\n \n     setViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n \n         if ( this.view === null ) {\n \n             this.view = {\n                 enabled: true,\n                 fullWidth: 1,\n                 fullHeight: 1,\n                 offsetX: 0,\n                 offsetY: 0,\n                 width: 1,\n                 height: 1\n             };\n \n         }\n \n         this.view.enabled = true;\n         this.view.fullWidth = fullWidth;\n         this.view.fullHeight = fullHeight;\n         this.view.offsetX = x;\n         this.view.offsetY = y;\n         this.view.width = width;\n         this.view.height = height;\n \n         this.updateProjectionMatrix();\n \n     }\n \n     clearViewOffset() {\n \n         if ( this.view !== null ) {\n \n             this.view.enabled = false;\n \n         }\n \n         this.updateProjectionMatrix();\n \n     }\n \n     updateProjectionMatrix() {\n \n         const dx = ( this.right - this.left ) / ( 2 * this.zoom );\n         const dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n         const cx = ( this.right + this.left ) / 2;\n         const cy = ( this.top + this.bottom ) / 2;\n \n         let left = cx - dx;\n         let right = cx + dx;\n         let top = cy + dy;\n         let bottom = cy - dy;\n \n         if ( this.view !== null && this.view.enabled ) {\n \n             const scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n             const scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n \n             left += scaleW * this.view.offsetX;\n             right = left + scaleW * this.view.width;\n             top -= scaleH * this.view.offsetY;\n             bottom = top - scaleH * this.view.height;\n \n         }\n \n         this.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n \n         this.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n \n     }\n \n     toJSON( meta ) {\n \n         const data = super.toJSON( meta );\n \n         data.object.zoom = this.zoom;\n         data.object.left = this.left;\n         data.object.right = this.right;\n         data.object.top = this.top;\n         data.object.bottom = this.bottom;\n         data.object.near = this.near;\n         data.object.far = this.far;\n \n         if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n \n         return data;\n \n     }\n \n }\n \n OrthographicCamera.prototype.isOrthographicCamera = true;\n \n const LOD_MIN = 4;\n \n // The standard deviations (radians) associated with the extra mips. These are\n // chosen to approximate a Trowbridge-Reitz distribution function times the\n // geometric shadowing function. These sigma values squared must match the\n // variance #defines in cube_uv_reflection_fragment.glsl.js.\n const EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n \n // The maximum length of the blur for loop. Smaller sigmas will use fewer\n // samples and exit early, but not recompile the shader.\n const MAX_SAMPLES = 20;\n \n const _flatCamera = /*@__PURE__*/ new OrthographicCamera();\n const _clearColor = /*@__PURE__*/ new Color();\n let _oldTarget = null;\n \n // Golden Ratio\n const PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\n const INV_PHI = 1 / PHI;\n \n // Vertices of a dodecahedron (except the opposites, which represent the\n // same axis), used as axis directions evenly spread on a sphere.\n const _axisDirections = [\n     /*@__PURE__*/ new Vector3( 1, 1, 1 ),\n     /*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n     /*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n     /*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n     /*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n     /*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n     /*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n     /*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n     /*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n     /*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n \n /**\n  * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n  * (PMREM) from a cubeMap environment texture. This allows different levels of\n  * blur to be quickly accessed based on material roughness. It is packed into a\n  * special CubeUV format that allows us to perform custom interpolation so that\n  * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n  * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n  * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n  * higher roughness levels. In this way we maintain resolution to smoothly\n  * interpolate diffuse lighting while limiting sampling computation.\n  *\n  * Paper: Fast, Accurate Image-Based Lighting\n  * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n */\n \n class PMREMGenerator {\n \n     constructor( renderer ) {\n \n         this._renderer = renderer;\n         this._pingPongRenderTarget = null;\n \n         this._lodMax = 0;\n         this._cubeSize = 0;\n         this._lodPlanes = [];\n         this._sizeLods = [];\n         this._sigmas = [];\n \n         this._blurMaterial = null;\n         this._cubemapMaterial = null;\n         this._equirectMaterial = null;\n \n         this._compileMaterial( this._blurMaterial );\n \n     }\n \n     /**\n      * Generates a PMREM from a supplied Scene, which can be faster than using an\n      * image if networking bandwidth is low. Optional sigma specifies a blur radius\n      * in radians to be applied to the scene before PMREM generation. Optional near\n      * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n      * is placed at the origin).\n      */\n     fromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n \n         _oldTarget = this._renderer.getRenderTarget();\n \n         this._setSize( 256 );\n \n         const cubeUVRenderTarget = this._allocateTargets();\n         cubeUVRenderTarget.depthBuffer = true;\n \n         this._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n \n         if ( sigma > 0 ) {\n \n             this._blur( cubeUVRenderTarget, 0, 0, sigma );\n \n         }\n \n         this._applyPMREM( cubeUVRenderTarget );\n         this._cleanup( cubeUVRenderTarget );\n \n         return cubeUVRenderTarget;\n \n     }\n \n     /**\n      * Generates a PMREM from an equirectangular texture, which can be either LDR\n      * or HDR. The ideal input image size is 1k (1024 x 512),\n      * as this matches best with the 256 x 256 cubemap output.\n      */\n     fromEquirectangular( equirectangular, renderTarget = null ) {\n \n         return this._fromTexture( equirectangular, renderTarget );\n \n     }\n \n     /**\n      * Generates a PMREM from an cubemap texture, which can be either LDR\n      * or HDR. The ideal input cube size is 256 x 256,\n      * as this matches best with the 256 x 256 cubemap output.\n      */\n     fromCubemap( cubemap, renderTarget = null ) {\n \n         return this._fromTexture( cubemap, renderTarget );\n \n     }\n \n     /**\n      * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n      * your texture's network fetch for increased concurrency.\n      */\n     compileCubemapShader() {\n \n         if ( this._cubemapMaterial === null ) {\n \n             this._cubemapMaterial = _getCubemapMaterial();\n             this._compileMaterial( this._cubemapMaterial );\n \n         }\n \n     }\n \n     /**\n      * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n      * your texture's network fetch for increased concurrency.\n      */\n     compileEquirectangularShader() {\n \n         if ( this._equirectMaterial === null ) {\n \n             this._equirectMaterial = _getEquirectMaterial();\n             this._compileMaterial( this._equirectMaterial );\n \n         }\n \n     }\n \n     /**\n      * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n      * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n      * one of them will cause any others to also become unusable.\n      */\n     dispose() {\n \n         this._dispose();\n \n         if ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n         if ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n \n     }\n \n     // private interface\n \n     _setSize( cubeSize ) {\n \n         this._lodMax = Math.floor( Math.log2( cubeSize ) );\n         this._cubeSize = Math.pow( 2, this._lodMax );\n \n     }\n \n     _dispose() {\n \n         if ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n \n         if ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n \n         for ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n \n             this._lodPlanes[ i ].dispose();\n \n         }\n \n     }\n \n     _cleanup( outputTarget ) {\n \n         this._renderer.setRenderTarget( _oldTarget );\n         outputTarget.scissorTest = false;\n         _setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n \n     }\n \n     _fromTexture( texture, renderTarget ) {\n \n         if ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n \n             this._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n \n         } else { // Equirectangular\n \n             this._setSize( texture.image.width / 4 );\n \n         }\n \n         _oldTarget = this._renderer.getRenderTarget();\n \n         const cubeUVRenderTarget = renderTarget || this._allocateTargets();\n         this._textureToCubeUV( texture, cubeUVRenderTarget );\n         this._applyPMREM( cubeUVRenderTarget );\n         this._cleanup( cubeUVRenderTarget );\n \n         return cubeUVRenderTarget;\n \n     }\n \n     _allocateTargets() {\n \n         const width = 3 * Math.max( this._cubeSize, 16 * 7 );\n         const height = 4 * this._cubeSize - 32;\n \n         const params = {\n             magFilter: LinearFilter,\n             minFilter: LinearFilter,\n             generateMipmaps: false,\n             type: HalfFloatType,\n             format: RGBAFormat,\n             encoding: LinearEncoding,\n             depthBuffer: false\n         };\n \n         const cubeUVRenderTarget = _createRenderTarget( width, height, params );\n \n         if ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n \n             if ( this._pingPongRenderTarget !== null ) {\n \n                 this._dispose();\n \n             }\n \n             this._pingPongRenderTarget = _createRenderTarget( width, height, params );\n \n             const { _lodMax } = this;\n             ( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n \n             this._blurMaterial = _getBlurShader( _lodMax, width, height );\n \n         }\n \n         return cubeUVRenderTarget;\n \n     }\n \n     _compileMaterial( material ) {\n \n         const tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n         this._renderer.compile( tmpMesh, _flatCamera );\n \n     }\n \n     _sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n \n         const fov = 90;\n         const aspect = 1;\n         const cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n         const upSign = [ 1, - 1, 1, 1, 1, 1 ];\n         const forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n         const renderer = this._renderer;\n \n         const originalAutoClear = renderer.autoClear;\n         const toneMapping = renderer.toneMapping;\n         renderer.getClearColor( _clearColor );\n \n         renderer.toneMapping = NoToneMapping;\n         renderer.autoClear = false;\n \n         const backgroundMaterial = new MeshBasicMaterial( {\n             name: 'PMREM.Background',\n             side: BackSide,\n             depthWrite: false,\n             depthTest: false,\n         } );\n \n         const backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n \n         let useSolidColor = false;\n         const background = scene.background;\n \n         if ( background ) {\n \n             if ( background.isColor ) {\n \n                 backgroundMaterial.color.copy( background );\n                 scene.background = null;\n                 useSolidColor = true;\n \n             }\n \n         } else {\n \n             backgroundMaterial.color.copy( _clearColor );\n             useSolidColor = true;\n \n         }\n \n         for ( let i = 0; i < 6; i ++ ) {\n \n             const col = i % 3;\n \n             if ( col === 0 ) {\n \n                 cubeCamera.up.set( 0, upSign[ i ], 0 );\n                 cubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n \n             } else if ( col === 1 ) {\n \n                 cubeCamera.up.set( 0, 0, upSign[ i ] );\n                 cubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n \n             } else {\n \n                 cubeCamera.up.set( 0, upSign[ i ], 0 );\n                 cubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n \n             }\n \n             const size = this._cubeSize;\n \n             _setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n \n             renderer.setRenderTarget( cubeUVRenderTarget );\n \n             if ( useSolidColor ) {\n \n                 renderer.render( backgroundBox, cubeCamera );\n \n             }\n \n             renderer.render( scene, cubeCamera );\n \n         }\n \n         backgroundBox.geometry.dispose();\n         backgroundBox.material.dispose();\n \n         renderer.toneMapping = toneMapping;\n         renderer.autoClear = originalAutoClear;\n         scene.background = background;\n \n     }\n \n     _textureToCubeUV( texture, cubeUVRenderTarget ) {\n \n         const renderer = this._renderer;\n \n         const isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n \n         if ( isCubeTexture ) {\n \n             if ( this._cubemapMaterial === null ) {\n \n                 this._cubemapMaterial = _getCubemapMaterial();\n \n             }\n \n             this._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n \n         } else {\n \n             if ( this._equirectMaterial === null ) {\n \n                 this._equirectMaterial = _getEquirectMaterial();\n \n             }\n \n         }\n \n         const material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n         const mesh = new Mesh( this._lodPlanes[ 0 ], material );\n \n         const uniforms = material.uniforms;\n \n         uniforms[ 'envMap' ].value = texture;\n \n         const size = this._cubeSize;\n \n         _setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n \n         renderer.setRenderTarget( cubeUVRenderTarget );\n         renderer.render( mesh, _flatCamera );\n \n     }\n \n     _applyPMREM( cubeUVRenderTarget ) {\n \n         const renderer = this._renderer;\n         const autoClear = renderer.autoClear;\n         renderer.autoClear = false;\n \n         for ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n \n             const sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n \n             const poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n \n             this._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n \n         }\n \n         renderer.autoClear = autoClear;\n \n     }\n \n     /**\n      * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n      * vertically and horizontally, but this breaks down on a cube. Here we apply\n      * the blur latitudinally (around the poles), and then longitudinally (towards\n      * the poles) to approximate the orthogonally-separable blur. It is least\n      * accurate at the poles, but still does a decent job.\n      */\n     _blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n \n         const pingPongRenderTarget = this._pingPongRenderTarget;\n \n         this._halfBlur(\n             cubeUVRenderTarget,\n             pingPongRenderTarget,\n             lodIn,\n             lodOut,\n             sigma,\n             'latitudinal',\n             poleAxis );\n \n         this._halfBlur(\n             pingPongRenderTarget,\n             cubeUVRenderTarget,\n             lodOut,\n             lodOut,\n             sigma,\n             'longitudinal',\n             poleAxis );\n \n     }\n \n     _halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n \n         const renderer = this._renderer;\n         const blurMaterial = this._blurMaterial;\n \n         if ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n \n             console.error(\n                 'blur direction must be either latitudinal or longitudinal!' );\n \n         }\n \n         // Number of standard deviations at which to cut off the discrete approximation.\n         const STANDARD_DEVIATIONS = 3;\n \n         const blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n         const blurUniforms = blurMaterial.uniforms;\n \n         const pixels = this._sizeLods[ lodIn ] - 1;\n         const radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n         const sigmaPixels = sigmaRadians / radiansPerPixel;\n         const samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n \n         if ( samples > MAX_SAMPLES ) {\n \n             console.warn( `sigmaRadians, ${\n                 sigmaRadians}, is too large and will clip, as it requested ${\n                 samples} samples when the maximum is set to ${MAX_SAMPLES}` );\n \n         }\n \n         const weights = [];\n         let sum = 0;\n \n         for ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n \n             const x = i / sigmaPixels;\n             const weight = Math.exp( - x * x / 2 );\n             weights.push( weight );\n \n             if ( i === 0 ) {\n \n                 sum += weight;\n \n             } else if ( i < samples ) {\n \n                 sum += 2 * weight;\n \n             }\n \n         }\n \n         for ( let i = 0; i < weights.length; i ++ ) {\n \n             weights[ i ] = weights[ i ] / sum;\n \n         }\n \n         blurUniforms[ 'envMap' ].value = targetIn.texture;\n         blurUniforms[ 'samples' ].value = samples;\n         blurUniforms[ 'weights' ].value = weights;\n         blurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n \n         if ( poleAxis ) {\n \n             blurUniforms[ 'poleAxis' ].value = poleAxis;\n \n         }\n \n         const { _lodMax } = this;\n         blurUniforms[ 'dTheta' ].value = radiansPerPixel;\n         blurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n \n         const outputSize = this._sizeLods[ lodOut ];\n         const x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n         const y = 4 * ( this._cubeSize - outputSize );\n \n         _setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n         renderer.setRenderTarget( targetOut );\n         renderer.render( blurMesh, _flatCamera );\n \n     }\n \n }\n \n \n \n function _createPlanes( lodMax ) {\n \n     const lodPlanes = [];\n     const sizeLods = [];\n     const sigmas = [];\n \n     let lod = lodMax;\n \n     const totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n \n     for ( let i = 0; i < totalLods; i ++ ) {\n \n         const sizeLod = Math.pow( 2, lod );\n         sizeLods.push( sizeLod );\n         let sigma = 1.0 / sizeLod;\n \n         if ( i > lodMax - LOD_MIN ) {\n \n             sigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n \n         } else if ( i === 0 ) {\n \n             sigma = 0;\n \n         }\n \n         sigmas.push( sigma );\n \n         const texelSize = 1.0 / ( sizeLod - 1 );\n         const min = - texelSize / 2;\n         const max = 1 + texelSize / 2;\n         const uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n \n         const cubeFaces = 6;\n         const vertices = 6;\n         const positionSize = 3;\n         const uvSize = 2;\n         const faceIndexSize = 1;\n \n         const position = new Float32Array( positionSize * vertices * cubeFaces );\n         const uv = new Float32Array( uvSize * vertices * cubeFaces );\n         const faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n \n         for ( let face = 0; face < cubeFaces; face ++ ) {\n \n             const x = ( face % 3 ) * 2 / 3 - 1;\n             const y = face > 2 ? 0 : - 1;\n             const coordinates = [\n                 x, y, 0,\n                 x + 2 / 3, y, 0,\n                 x + 2 / 3, y + 1, 0,\n                 x, y, 0,\n                 x + 2 / 3, y + 1, 0,\n                 x, y + 1, 0\n             ];\n             position.set( coordinates, positionSize * vertices * face );\n             uv.set( uv1, uvSize * vertices * face );\n             const fill = [ face, face, face, face, face, face ];\n             faceIndex.set( fill, faceIndexSize * vertices * face );\n \n         }\n \n         const planes = new BufferGeometry();\n         planes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n         planes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n         planes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n         lodPlanes.push( planes );\n \n         if ( lod > LOD_MIN ) {\n \n             lod --;\n \n         }\n \n     }\n \n     return { lodPlanes, sizeLods, sigmas };\n \n }\n \n function _createRenderTarget( width, height, params ) {\n \n     const cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n     cubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n     cubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n     cubeUVRenderTarget.scissorTest = true;\n     return cubeUVRenderTarget;\n \n }\n \n function _setViewport( target, x, y, width, height ) {\n \n     target.viewport.set( x, y, width, height );\n     target.scissor.set( x, y, width, height );\n \n }\n \n function _getBlurShader( lodMax, width, height ) {\n \n     const weights = new Float32Array( MAX_SAMPLES );\n     const poleAxis = new Vector3( 0, 1, 0 );\n     const shaderMaterial = new ShaderMaterial( {\n \n         name: 'SphericalGaussianBlur',\n \n         defines: {\n             'n': MAX_SAMPLES,\n             'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n             'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n             'CUBEUV_MAX_MIP': `${lodMax}.0`,\n         },\n \n         uniforms: {\n             'envMap': { value: null },\n             'samples': { value: 1 },\n             'weights': { value: weights },\n             'latitudinal': { value: false },\n             'dTheta': { value: 0 },\n             'mipInt': { value: 0 },\n             'poleAxis': { value: poleAxis }\n         },\n \n         vertexShader: _getCommonVertexShader(),\n \n         fragmentShader: /* glsl */`\n \n             precision mediump float;\n             precision mediump int;\n \n             varying vec3 vOutputDirection;\n \n             uniform sampler2D envMap;\n             uniform int samples;\n             uniform float weights[ n ];\n             uniform bool latitudinal;\n             uniform float dTheta;\n             uniform float mipInt;\n             uniform vec3 poleAxis;\n \n             #define ENVMAP_TYPE_CUBE_UV\n             #include <cube_uv_reflection_fragment>\n \n             vec3 getSample( float theta, vec3 axis ) {\n \n                 float cosTheta = cos( theta );\n                 // Rodrigues' axis-angle rotation\n                 vec3 sampleDirection = vOutputDirection * cosTheta\n                     + cross( axis, vOutputDirection ) * sin( theta )\n                     + axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n \n                 return bilinearCubeUV( envMap, sampleDirection, mipInt );\n \n             }\n \n             void main() {\n \n                 vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n \n                 if ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n \n                     axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n \n                 }\n \n                 axis = normalize( axis );\n \n                 gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n                 gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n \n                 for ( int i = 1; i < n; i++ ) {\n \n                     if ( i >= samples ) {\n \n                         break;\n \n                     }\n \n                     float theta = dTheta * float( i );\n                     gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n                     gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n \n                 }\n \n             }\n         `,\n \n         blending: NoBlending,\n         depthTest: false,\n         depthWrite: false\n \n     } );\n \n     return shaderMaterial;\n \n }\n \n function _getEquirectMaterial() {\n \n     return new ShaderMaterial( {\n \n         name: 'EquirectangularToCubeUV',\n \n         uniforms: {\n             'envMap': { value: null }\n         },\n \n         vertexShader: _getCommonVertexShader(),\n \n         fragmentShader: /* glsl */`\n \n             precision mediump float;\n             precision mediump int;\n \n             varying vec3 vOutputDirection;\n \n             uniform sampler2D envMap;\n \n             #include <common>\n \n             void main() {\n \n                 vec3 outputDirection = normalize( vOutputDirection );\n                 vec2 uv = equirectUv( outputDirection );\n \n                 gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n \n             }\n         `,\n \n         blending: NoBlending,\n         depthTest: false,\n         depthWrite: false\n \n     } );\n \n }\n \n function _getCubemapMaterial() {\n \n     return new ShaderMaterial( {\n \n         name: 'CubemapToCubeUV',\n \n         uniforms: {\n             'envMap': { value: null },\n             'flipEnvMap': { value: - 1 }\n         },\n \n         vertexShader: _getCommonVertexShader(),\n \n         fragmentShader: /* glsl */`\n \n             precision mediump float;\n             precision mediump int;\n \n             uniform float flipEnvMap;\n \n             varying vec3 vOutputDirection;\n \n             uniform samplerCube envMap;\n \n             void main() {\n \n                 gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n \n             }\n         `,\n \n         blending: NoBlending,\n         depthTest: false,\n         depthWrite: false\n \n     } );\n \n }\n \n function _getCommonVertexShader() {\n \n     return /* glsl */`\n \n         precision mediump float;\n         precision mediump int;\n \n         attribute float faceIndex;\n \n         varying vec3 vOutputDirection;\n \n         // RH coordinate system; PMREM face-indexing convention\n         vec3 getDirection( vec2 uv, float face ) {\n \n             uv = 2.0 * uv - 1.0;\n \n             vec3 direction = vec3( uv, 1.0 );\n \n             if ( face == 0.0 ) {\n \n                 direction = direction.zyx; // ( 1, v, u ) pos x\n \n             } else if ( face == 1.0 ) {\n \n                 direction = direction.xzy;\n                 direction.xz *= -1.0; // ( -u, 1, -v ) pos y\n \n             } else if ( face == 2.0 ) {\n \n                 direction.x *= -1.0; // ( -u, v, 1 ) pos z\n \n             } else if ( face == 3.0 ) {\n \n                 direction = direction.zyx;\n                 direction.xz *= -1.0; // ( -1, v, -u ) neg x\n \n             } else if ( face == 4.0 ) {\n \n                 direction = direction.xzy;\n                 direction.xy *= -1.0; // ( -u, -1, v ) neg y\n \n             } else if ( face == 5.0 ) {\n \n                 direction.z *= -1.0; // ( u, v, -1 ) neg z\n \n             }\n \n             return direction;\n \n         }\n \n         void main() {\n \n             vOutputDirection = getDirection( uv, faceIndex );\n             gl_Position = vec4( position, 1.0 );\n \n         }\n     `;\n \n }\n \n function WebGLCubeUVMaps( renderer ) {\n \n     let cubeUVmaps = new WeakMap();\n \n     let pmremGenerator = null;\n \n     function get( texture ) {\n \n         if ( texture && texture.isTexture ) {\n \n             const mapping = texture.mapping;\n \n             const isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n             const isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n \n             // equirect/cube map to cubeUV conversion\n \n             if ( isEquirectMap || isCubeMap ) {\n \n                 if ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n \n                     texture.needsPMREMUpdate = false;\n \n                     let renderTarget = cubeUVmaps.get( texture );\n \n                     if ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n \n                     renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n                     cubeUVmaps.set( texture, renderTarget );\n \n                     return renderTarget.texture;\n \n                 } else {\n \n                     if ( cubeUVmaps.has( texture ) ) {\n \n                         return cubeUVmaps.get( texture ).texture;\n \n                     } else {\n \n                         const image = texture.image;\n \n                         if ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n \n                             if ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n \n                             const renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n                             cubeUVmaps.set( texture, renderTarget );\n \n                             texture.addEventListener( 'dispose', onTextureDispose );\n \n                             return renderTarget.texture;\n \n                         } else {\n \n                             // image not yet ready. try the conversion next frame\n \n                             return null;\n \n                         }\n \n                     }\n \n                 }\n \n             }\n \n         }\n \n         return texture;\n \n     }\n \n     function isCubeTextureComplete( image ) {\n \n         let count = 0;\n         const length = 6;\n \n         for ( let i = 0; i < length; i ++ ) {\n \n             if ( image[ i ] !== undefined ) count ++;\n \n         }\n \n         return count === length;\n \n \n     }\n \n     function onTextureDispose( event ) {\n \n         const texture = event.target;\n \n         texture.removeEventListener( 'dispose', onTextureDispose );\n \n         const cubemapUV = cubeUVmaps.get( texture );\n \n         if ( cubemapUV !== undefined ) {\n \n             cubeUVmaps.delete( texture );\n             cubemapUV.dispose();\n \n         }\n \n     }\n \n     function dispose() {\n \n         cubeUVmaps = new WeakMap();\n \n         if ( pmremGenerator !== null ) {\n \n             pmremGenerator.dispose();\n             pmremGenerator = null;\n \n         }\n \n     }\n \n     return {\n         get: get,\n         dispose: dispose\n     };\n \n }\n \n function WebGLExtensions( gl ) {\n \n     const extensions = {};\n \n     function getExtension( name ) {\n \n         if ( extensions[ name ] !== undefined ) {\n \n             return extensions[ name ];\n \n         }\n \n         let extension;\n \n         switch ( name ) {\n \n             case 'WEBGL_depth_texture':\n                 extension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n                 break;\n \n             case 'EXT_texture_filter_anisotropic':\n                 extension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n                 break;\n \n             case 'WEBGL_compressed_texture_s3tc':\n                 extension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n                 break;\n \n             case 'WEBGL_compressed_texture_pvrtc':\n                 extension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n                 break;\n \n             default:\n                 extension = gl.getExtension( name );\n \n         }\n \n         extensions[ name ] = extension;\n \n         return extension;\n \n     }\n \n     return {\n \n         has: function ( name ) {\n \n             return getExtension( name ) !== null;\n \n         },\n \n         init: function ( capabilities ) {\n \n             if ( capabilities.isWebGL2 ) {\n \n                 getExtension( 'EXT_color_buffer_float' );\n \n             } else {\n \n                 getExtension( 'WEBGL_depth_texture' );\n                 getExtension( 'OES_texture_float' );\n                 getExtension( 'OES_texture_half_float' );\n                 getExtension( 'OES_texture_half_float_linear' );\n                 getExtension( 'OES_standard_derivatives' );\n                 getExtension( 'OES_element_index_uint' );\n                 getExtension( 'OES_vertex_array_object' );\n                 getExtension( 'ANGLE_instanced_arrays' );\n \n             }\n \n             getExtension( 'OES_texture_float_linear' );\n             getExtension( 'EXT_color_buffer_half_float' );\n             getExtension( 'WEBGL_multisampled_render_to_texture' );\n \n         },\n \n         get: function ( name ) {\n \n             const extension = getExtension( name );\n \n             if ( extension === null ) {\n \n                 console.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n \n             }\n \n             return extension;\n \n         }\n \n     };\n \n }\n \n function WebGLGeometries( gl, attributes, info, bindingStates ) {\n \n     const geometries = {};\n     const wireframeAttributes = new WeakMap();\n \n     function onGeometryDispose( event ) {\n \n         const geometry = event.target;\n \n         if ( geometry.index !== null ) {\n \n             attributes.remove( geometry.index );\n \n         }\n \n         for ( const name in geometry.attributes ) {\n \n             attributes.remove( geometry.attributes[ name ] );\n \n         }\n \n         geometry.removeEventListener( 'dispose', onGeometryDispose );\n \n         delete geometries[ geometry.id ];\n \n         const attribute = wireframeAttributes.get( geometry );\n \n         if ( attribute ) {\n \n             attributes.remove( attribute );\n             wireframeAttributes.delete( geometry );\n \n         }\n \n         bindingStates.releaseStatesOfGeometry( geometry );\n \n         if ( geometry.isInstancedBufferGeometry === true ) {\n \n             delete geometry._maxInstanceCount;\n \n         }\n \n         //\n \n         info.memory.geometries --;\n \n     }\n \n     function get( object, geometry ) {\n \n         if ( geometries[ geometry.id ] === true ) return geometry;\n \n         geometry.addEventListener( 'dispose', onGeometryDispose );\n \n         geometries[ geometry.id ] = true;\n \n         info.memory.geometries ++;\n \n         return geometry;\n \n     }\n \n     function update( geometry ) {\n \n         const geometryAttributes = geometry.attributes;\n \n         // Updating index buffer in VAO now. See WebGLBindingStates.\n \n         for ( const name in geometryAttributes ) {\n \n             attributes.update( geometryAttributes[ name ], 34962 );\n \n         }\n \n         // morph targets\n \n         const morphAttributes = geometry.morphAttributes;\n \n         for ( const name in morphAttributes ) {\n \n             const array = morphAttributes[ name ];\n \n             for ( let i = 0, l = array.length; i < l; i ++ ) {\n \n                 attributes.update( array[ i ], 34962 );\n \n             }\n \n         }\n \n     }\n \n     function updateWireframeAttribute( geometry ) {\n \n         const indices = [];\n \n         const geometryIndex = geometry.index;\n         const geometryPosition = geometry.attributes.position;\n         let version = 0;\n \n         if ( geometryIndex !== null ) {\n \n             const array = geometryIndex.array;\n             version = geometryIndex.version;\n \n             for ( let i = 0, l = array.length; i < l; i += 3 ) {\n \n                 const a = array[ i + 0 ];\n                 const b = array[ i + 1 ];\n                 const c = array[ i + 2 ];\n \n                 indices.push( a, b, b, c, c, a );\n \n             }\n \n         } else {\n \n             const array = geometryPosition.array;\n             version = geometryPosition.version;\n \n             for ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n \n                 const a = i + 0;\n                 const b = i + 1;\n                 const c = i + 2;\n \n                 indices.push( a, b, b, c, c, a );\n \n             }\n \n         }\n \n         const attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n         attribute.version = version;\n \n         // Updating index buffer in VAO now. See WebGLBindingStates\n \n         //\n \n         const previousAttribute = wireframeAttributes.get( geometry );\n \n         if ( previousAttribute ) attributes.remove( previousAttribute );\n \n         //\n \n         wireframeAttributes.set( geometry, attribute );\n \n     }\n \n     function getWireframeAttribute( geometry ) {\n \n         const currentAttribute = wireframeAttributes.get( geometry );\n \n         if ( currentAttribute ) {\n \n             const geometryIndex = geometry.index;\n \n             if ( geometryIndex !== null ) {\n \n                 // if the attribute is obsolete, create a new one\n \n                 if ( currentAttribute.version < geometryIndex.version ) {\n \n                     updateWireframeAttribute( geometry );\n \n                 }\n \n             }\n \n         } else {\n \n             updateWireframeAttribute( geometry );\n \n         }\n \n         return wireframeAttributes.get( geometry );\n \n     }\n \n     return {\n \n         get: get,\n         update: update,\n \n         getWireframeAttribute: getWireframeAttribute\n \n     };\n \n }\n \n function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n \n     const isWebGL2 = capabilities.isWebGL2;\n \n     let mode;\n \n     function setMode( value ) {\n \n         mode = value;\n \n     }\n \n     let type, bytesPerElement;\n \n     function setIndex( value ) {\n \n         type = value.type;\n         bytesPerElement = value.bytesPerElement;\n \n     }\n \n     function render( start, count ) {\n \n         gl.drawElements( mode, count, type, start * bytesPerElement );\n \n         info.update( count, mode, 1 );\n \n     }\n \n     function renderInstances( start, count, primcount ) {\n \n         if ( primcount === 0 ) return;\n \n         let extension, methodName;\n \n         if ( isWebGL2 ) {\n \n             extension = gl;\n             methodName = 'drawElementsInstanced';\n \n         } else {\n \n             extension = extensions.get( 'ANGLE_instanced_arrays' );\n             methodName = 'drawElementsInstancedANGLE';\n \n             if ( extension === null ) {\n \n                 console.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n                 return;\n \n             }\n \n         }\n \n         extension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n \n         info.update( count, mode, primcount );\n \n     }\n \n     //\n \n     this.setMode = setMode;\n     this.setIndex = setIndex;\n     this.render = render;\n     this.renderInstances = renderInstances;\n \n }\n \n function WebGLInfo( gl ) {\n \n     const memory = {\n         geometries: 0,\n         textures: 0\n     };\n \n     const render = {\n         frame: 0,\n         calls: 0,\n         triangles: 0,\n         points: 0,\n         lines: 0\n     };\n \n     function update( count, mode, instanceCount ) {\n \n         render.calls ++;\n \n         switch ( mode ) {\n \n             case 4:\n                 render.triangles += instanceCount * ( count / 3 );\n                 break;\n \n             case 1:\n                 render.lines += instanceCount * ( count / 2 );\n                 break;\n \n             case 3:\n                 render.lines += instanceCount * ( count - 1 );\n                 break;\n \n             case 2:\n                 render.lines += instanceCount * count;\n                 break;\n \n             case 0:\n                 render.points += instanceCount * count;\n                 break;\n \n             default:\n                 console.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n                 break;\n \n         }\n \n     }\n \n     function reset() {\n \n         render.frame ++;\n         render.calls = 0;\n         render.triangles = 0;\n         render.points = 0;\n         render.lines = 0;\n \n     }\n \n     return {\n         memory: memory,\n         render: render,\n         programs: null,\n         autoReset: true,\n         reset: reset,\n         update: update\n     };\n \n }\n \n function numericalSort( a, b ) {\n \n     return a[ 0 ] - b[ 0 ];\n \n }\n \n function absNumericalSort( a, b ) {\n \n     return Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n \n }\n \n function denormalize( morph, attribute ) {\n \n     let denominator = 1;\n     const array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n \n     if ( array instanceof Int8Array ) denominator = 127;\n     else if ( array instanceof Int16Array ) denominator = 32767;\n     else if ( array instanceof Int32Array ) denominator = 2147483647;\n     else console.error( 'THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array );\n \n     morph.divideScalar( denominator );\n \n }\n \n function WebGLMorphtargets( gl, capabilities, textures ) {\n \n     const influencesList = {};\n     const morphInfluences = new Float32Array( 8 );\n     const morphTextures = new WeakMap();\n     const morph = new Vector4();\n \n     const workInfluences = [];\n \n     for ( let i = 0; i < 8; i ++ ) {\n \n         workInfluences[ i ] = [ i, 0 ];\n \n     }\n \n     function update( object, geometry, material, program ) {\n \n         const objectInfluences = object.morphTargetInfluences;\n \n         if ( capabilities.isWebGL2 === true ) {\n \n             // instead of using attributes, the WebGL 2 code path encodes morph targets\n             // into an array of data textures. Each layer represents a single morph target.\n \n             const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n             const morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n \n             let entry = morphTextures.get( geometry );\n \n             if ( entry === undefined || entry.count !== morphTargetsCount ) {\n \n                 if ( entry !== undefined ) entry.texture.dispose();\n \n                 const hasMorphPosition = geometry.morphAttributes.position !== undefined;\n                 const hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n                 const hasMorphColors = geometry.morphAttributes.color !== undefined;\n \n                 const morphTargets = geometry.morphAttributes.position || [];\n                 const morphNormals = geometry.morphAttributes.normal || [];\n                 const morphColors = geometry.morphAttributes.color || [];\n \n                 let vertexDataCount = 0;\n \n                 if ( hasMorphPosition === true ) vertexDataCount = 1;\n                 if ( hasMorphNormals === true ) vertexDataCount = 2;\n                 if ( hasMorphColors === true ) vertexDataCount = 3;\n \n                 let width = geometry.attributes.position.count * vertexDataCount;\n                 let height = 1;\n \n                 if ( width > capabilities.maxTextureSize ) {\n \n                     height = Math.ceil( width / capabilities.maxTextureSize );\n                     width = capabilities.maxTextureSize;\n \n                 }\n \n                 const buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n \n                 const texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n                 texture.type = FloatType;\n                 texture.needsUpdate = true;\n \n                 // fill buffer\n \n                 const vertexDataStride = vertexDataCount * 4;\n \n                 for ( let i = 0; i < morphTargetsCount; i ++ ) {\n \n                     const morphTarget = morphTargets[ i ];\n                     const morphNormal = morphNormals[ i ];\n                     const morphColor = morphColors[ i ];\n \n                     const offset = width * height * 4 * i;\n \n                     for ( let j = 0; j < morphTarget.count; j ++ ) {\n \n                         const stride = j * vertexDataStride;\n \n                         if ( hasMorphPosition === true ) {\n \n                             morph.fromBufferAttribute( morphTarget, j );\n \n                             if ( morphTarget.normalized === true ) denormalize( morph, morphTarget );\n \n                             buffer[ offset + stride + 0 ] = morph.x;\n                             buffer[ offset + stride + 1 ] = morph.y;\n                             buffer[ offset + stride + 2 ] = morph.z;\n                             buffer[ offset + stride + 3 ] = 0;\n \n                         }\n \n                         if ( hasMorphNormals === true ) {\n \n                             morph.fromBufferAttribute( morphNormal, j );\n \n                             if ( morphNormal.normalized === true ) denormalize( morph, morphNormal );\n \n                             buffer[ offset + stride + 4 ] = morph.x;\n                             buffer[ offset + stride + 5 ] = morph.y;\n                             buffer[ offset + stride + 6 ] = morph.z;\n                             buffer[ offset + stride + 7 ] = 0;\n \n                         }\n \n                         if ( hasMorphColors === true ) {\n \n                             morph.fromBufferAttribute( morphColor, j );\n \n                             if ( morphColor.normalized === true ) denormalize( morph, morphColor );\n \n                             buffer[ offset + stride + 8 ] = morph.x;\n                             buffer[ offset + stride + 9 ] = morph.y;\n                             buffer[ offset + stride + 10 ] = morph.z;\n                             buffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n \n                         }\n \n                     }\n \n                 }\n \n                 entry = {\n                     count: morphTargetsCount,\n                     texture: texture,\n                     size: new Vector2( width, height )\n                 };\n \n                 morphTextures.set( geometry, entry );\n \n                 function disposeTexture() {\n \n                     texture.dispose();\n \n                     morphTextures.delete( geometry );\n \n                     geometry.removeEventListener( 'dispose', disposeTexture );\n \n                 }\n \n                 geometry.addEventListener( 'dispose', disposeTexture );\n \n             }\n \n             //\n \n             let morphInfluencesSum = 0;\n \n             for ( let i = 0; i < objectInfluences.length; i ++ ) {\n \n                 morphInfluencesSum += objectInfluences[ i ];\n \n             }\n \n             const morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n \n             program.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n             program.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n \n             program.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n             program.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n \n \n         } else {\n \n             // When object doesn't have morph target influences defined, we treat it as a 0-length array\n             // This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n \n             const length = objectInfluences === undefined ? 0 : objectInfluences.length;\n \n             let influences = influencesList[ geometry.id ];\n \n             if ( influences === undefined || influences.length !== length ) {\n \n                 // initialise list\n \n                 influences = [];\n \n                 for ( let i = 0; i < length; i ++ ) {\n \n                     influences[ i ] = [ i, 0 ];\n \n                 }\n \n                 influencesList[ geometry.id ] = influences;\n \n             }\n \n             // Collect influences\n \n             for ( let i = 0; i < length; i ++ ) {\n \n                 const influence = influences[ i ];\n \n                 influence[ 0 ] = i;\n                 influence[ 1 ] = objectInfluences[ i ];\n \n             }\n \n             influences.sort( absNumericalSort );\n \n             for ( let i = 0; i < 8; i ++ ) {\n \n                 if ( i < length && influences[ i ][ 1 ] ) {\n \n                     workInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n                     workInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n \n                 } else {\n \n                     workInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n                     workInfluences[ i ][ 1 ] = 0;\n \n                 }\n \n             }\n \n             workInfluences.sort( numericalSort );\n \n             const morphTargets = geometry.morphAttributes.position;\n             const morphNormals = geometry.morphAttributes.normal;\n \n             let morphInfluencesSum = 0;\n \n             for ( let i = 0; i < 8; i ++ ) {\n \n                 const influence = workInfluences[ i ];\n                 const index = influence[ 0 ];\n                 const value = influence[ 1 ];\n \n                 if ( index !== Number.MAX_SAFE_INTEGER && value ) {\n \n                     if ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n \n                         geometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n \n                     }\n \n                     if ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n \n                         geometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n \n                     }\n \n                     morphInfluences[ i ] = value;\n                     morphInfluencesSum += value;\n \n                 } else {\n \n                     if ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n \n                         geometry.deleteAttribute( 'morphTarget' + i );\n \n                     }\n \n                     if ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n \n                         geometry.deleteAttribute( 'morphNormal' + i );\n \n                     }\n \n                     morphInfluences[ i ] = 0;\n \n                 }\n \n             }\n \n             // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n             // This allows us to switch between absolute morphs and relative morphs without changing shader code\n             // When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n             const morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n \n             program.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n             program.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n \n         }\n \n     }\n \n     return {\n \n         update: update\n \n     };\n \n }\n \n function WebGLObjects( gl, geometries, attributes, info ) {\n \n     let updateMap = new WeakMap();\n \n     function update( object ) {\n \n         const frame = info.render.frame;\n \n         const geometry = object.geometry;\n         const buffergeometry = geometries.get( object, geometry );\n \n         // Update once per frame\n \n         if ( updateMap.get( buffergeometry ) !== frame ) {\n \n             geometries.update( buffergeometry );\n \n             updateMap.set( buffergeometry, frame );\n \n         }\n \n         if ( object.isInstancedMesh ) {\n \n             if ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n \n                 object.addEventListener( 'dispose', onInstancedMeshDispose );\n \n             }\n \n             attributes.update( object.instanceMatrix, 34962 );\n \n             if ( object.instanceColor !== null ) {\n \n                 attributes.update( object.instanceColor, 34962 );\n \n             }\n \n         }\n \n         return buffergeometry;\n \n     }\n \n     function dispose() {\n \n         updateMap = new WeakMap();\n \n     }\n \n     function onInstancedMeshDispose( event ) {\n \n         const instancedMesh = event.target;\n \n         instancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n \n         attributes.remove( instancedMesh.instanceMatrix );\n \n         if ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n \n     }\n \n     return {\n \n         update: update,\n         dispose: dispose\n \n     };\n \n }\n \n /**\n  * Uniforms of a program.\n  * Those form a tree structure with a special top-level container for the root,\n  * which you get by calling 'new WebGLUniforms( gl, program )'.\n  *\n  *\n  * Properties of inner nodes including the top-level container:\n  *\n  * .seq - array of nested uniforms\n  * .map - nested uniforms by name\n  *\n  *\n  * Methods of all nodes except the top-level container:\n  *\n  * .setValue( gl, value, [textures] )\n  *\n  * \t\tuploads a uniform value(s)\n  *  \tthe 'textures' parameter is needed for sampler uniforms\n  *\n  *\n  * Static methods of the top-level container (textures factorizations):\n  *\n  * .upload( gl, seq, values, textures )\n  *\n  * \t\tsets uniforms in 'seq' to 'values[id].value'\n  *\n  * .seqWithValue( seq, values ) : filteredSeq\n  *\n  * \t\tfilters 'seq' entries with corresponding entry in values\n  *\n  *\n  * Methods of the top-level container (textures factorizations):\n  *\n  * .setValue( gl, name, value, textures )\n  *\n  * \t\tsets uniform with  name 'name' to 'value'\n  *\n  * .setOptional( gl, obj, prop )\n  *\n  * \t\tlike .set for an optional property of the object\n  *\n  */\n \n const emptyTexture = new Texture();\n const emptyArrayTexture = new DataArrayTexture();\n const empty3dTexture = new Data3DTexture();\n const emptyCubeTexture = new CubeTexture();\n \n // --- Utilities ---\n \n // Array Caches (provide typed arrays for temporary by size)\n \n const arrayCacheF32 = [];\n const arrayCacheI32 = [];\n \n // Float32Array caches used for uploading Matrix uniforms\n \n const mat4array = new Float32Array( 16 );\n const mat3array = new Float32Array( 9 );\n const mat2array = new Float32Array( 4 );\n \n // Flattening for arrays of vectors and matrices\n \n function flatten( array, nBlocks, blockSize ) {\n \n     const firstElem = array[ 0 ];\n \n     if ( firstElem <= 0 || firstElem > 0 ) return array;\n     // unoptimized: ! isNaN( firstElem )\n     // see http://jacksondunstan.com/articles/983\n \n     const n = nBlocks * blockSize;\n     let r = arrayCacheF32[ n ];\n \n     if ( r === undefined ) {\n \n         r = new Float32Array( n );\n         arrayCacheF32[ n ] = r;\n \n     }\n \n     if ( nBlocks !== 0 ) {\n \n         firstElem.toArray( r, 0 );\n \n         for ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n \n             offset += blockSize;\n             array[ i ].toArray( r, offset );\n \n         }\n \n     }\n \n     return r;\n \n }\n \n function arraysEqual( a, b ) {\n \n     if ( a.length !== b.length ) return false;\n \n     for ( let i = 0, l = a.length; i < l; i ++ ) {\n \n         if ( a[ i ] !== b[ i ] ) return false;\n \n     }\n \n     return true;\n \n }\n \n function copyArray( a, b ) {\n \n     for ( let i = 0, l = b.length; i < l; i ++ ) {\n \n         a[ i ] = b[ i ];\n \n     }\n \n }\n \n // Texture unit allocation\n \n function allocTexUnits( textures, n ) {\n \n     let r = arrayCacheI32[ n ];\n \n     if ( r === undefined ) {\n \n         r = new Int32Array( n );\n         arrayCacheI32[ n ] = r;\n \n     }\n \n     for ( let i = 0; i !== n; ++ i ) {\n \n         r[ i ] = textures.allocateTextureUnit();\n \n     }\n \n     return r;\n \n }\n \n // --- Setters ---\n \n // Note: Defining these methods externally, because they come in a bunch\n // and this way their names minify.\n \n // Single scalar\n \n function setValueV1f( gl, v ) {\n \n     const cache = this.cache;\n \n     if ( cache[ 0 ] === v ) return;\n \n     gl.uniform1f( this.addr, v );\n \n     cache[ 0 ] = v;\n \n }\n \n // Single float vector (from flat array or THREE.VectorN)\n \n function setValueV2f( gl, v ) {\n \n     const cache = this.cache;\n \n     if ( v.x !== undefined ) {\n \n         if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n \n             gl.uniform2f( this.addr, v.x, v.y );\n \n             cache[ 0 ] = v.x;\n             cache[ 1 ] = v.y;\n \n         }\n \n     } else {\n \n         if ( arraysEqual( cache, v ) ) return;\n \n         gl.uniform2fv( this.addr, v );\n \n         copyArray( cache, v );\n \n     }\n \n }\n \n function setValueV3f( gl, v ) {\n \n     const cache = this.cache;\n \n     if ( v.x !== undefined ) {\n \n         if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n \n             gl.uniform3f( this.addr, v.x, v.y, v.z );\n \n             cache[ 0 ] = v.x;\n             cache[ 1 ] = v.y;\n             cache[ 2 ] = v.z;\n \n         }\n \n     } else if ( v.r !== undefined ) {\n \n         if ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n \n             gl.uniform3f( this.addr, v.r, v.g, v.b );\n \n             cache[ 0 ] = v.r;\n             cache[ 1 ] = v.g;\n             cache[ 2 ] = v.b;\n \n         }\n \n     } else {\n \n         if ( arraysEqual( cache, v ) ) return;\n \n         gl.uniform3fv( this.addr, v );\n \n         copyArray( cache, v );\n \n     }\n \n }\n \n function setValueV4f( gl, v ) {\n \n     const cache = this.cache;\n \n     if ( v.x !== undefined ) {\n \n         if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n \n             gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n \n             cache[ 0 ] = v.x;\n             cache[ 1 ] = v.y;\n             cache[ 2 ] = v.z;\n             cache[ 3 ] = v.w;\n \n         }\n \n     } else {\n \n         if ( arraysEqual( cache, v ) ) return;\n \n         gl.uniform4fv( this.addr, v );\n \n         copyArray( cache, v );\n \n     }\n \n }\n \n // Single matrix (from flat array or THREE.MatrixN)\n \n function setValueM2( gl, v ) {\n \n     const cache = this.cache;\n     const elements = v.elements;\n \n     if ( elements === undefined ) {\n \n         if ( arraysEqual( cache, v ) ) return;\n \n         gl.uniformMatrix2fv( this.addr, false, v );\n \n         copyArray( cache, v );\n \n     } else {\n \n         if ( arraysEqual( cache, elements ) ) return;\n \n         mat2array.set( elements );\n \n         gl.uniformMatrix2fv( this.addr, false, mat2array );\n \n         copyArray( cache, elements );\n \n     }\n \n }\n \n function setValueM3( gl, v ) {\n \n     const cache = this.cache;\n     const elements = v.elements;\n \n     if ( elements === undefined ) {\n \n         if ( arraysEqual( cache, v ) ) return;\n \n         gl.uniformMatrix3fv( this.addr, false, v );\n \n         copyArray( cache, v );\n \n     } else {\n \n         if ( arraysEqual( cache, elements ) ) return;\n \n         mat3array.set( elements );\n \n         gl.uniformMatrix3fv( this.addr, false, mat3array );\n \n         copyArray( cache, elements );\n \n     }\n \n }\n \n function setValueM4( gl, v ) {\n \n     const cache = this.cache;\n     const elements = v.elements;\n \n     if ( elements === undefined ) {\n \n         if ( arraysEqual( cache, v ) ) return;\n \n         gl.uniformMatrix4fv( this.addr, false, v );\n \n         copyArray( cache, v );\n \n     } else {\n \n         if ( arraysEqual( cache, elements ) ) return;\n \n         mat4array.set( elements );\n \n         gl.uniformMatrix4fv( this.addr, false, mat4array );\n \n         copyArray( cache, elements );\n \n     }\n \n }\n \n // Single integer / boolean\n \n function setValueV1i( gl, v ) {\n \n     const cache = this.cache;\n \n     if ( cache[ 0 ] === v ) return;\n \n     gl.uniform1i( this.addr, v );\n \n     cache[ 0 ] = v;\n \n }\n \n // Single integer / boolean vector (from flat array)\n \n function setValueV2i( gl, v ) {\n \n     const cache = this.cache;\n \n     if ( arraysEqual( cache, v ) ) return;\n \n     gl.uniform2iv( this.addr, v );\n \n     copyArray( cache, v );\n \n }\n \n function setValueV3i( gl, v ) {\n \n     const cache = this.cache;\n \n     if ( arraysEqual( cache, v ) ) return;\n \n     gl.uniform3iv( this.addr, v );\n \n     copyArray( cache, v );\n \n }\n \n function setValueV4i( gl, v ) {\n \n     const cache = this.cache;\n \n     if ( arraysEqual( cache, v ) ) return;\n \n     gl.uniform4iv( this.addr, v );\n \n     copyArray( cache, v );\n \n }\n \n // Single unsigned integer\n \n function setValueV1ui( gl, v ) {\n \n     const cache = this.cache;\n \n     if ( cache[ 0 ] === v ) return;\n \n     gl.uniform1ui( this.addr, v );\n \n     cache[ 0 ] = v;\n \n }\n \n // Single unsigned integer vector (from flat array)\n \n function setValueV2ui( gl, v ) {\n \n     const cache = this.cache;\n \n     if ( arraysEqual( cache, v ) ) return;\n \n     gl.uniform2uiv( this.addr, v );\n \n     copyArray( cache, v );\n \n }\n \n function setValueV3ui( gl, v ) {\n \n     const cache = this.cache;\n \n     if ( arraysEqual( cache, v ) ) return;\n \n     gl.uniform3uiv( this.addr, v );\n \n     copyArray( cache, v );\n \n }\n \n function setValueV4ui( gl, v ) {\n \n     const cache = this.cache;\n \n     if ( arraysEqual( cache, v ) ) return;\n \n     gl.uniform4uiv( this.addr, v );\n \n     copyArray( cache, v );\n \n }\n \n \n // Single texture (2D / Cube)\n \n function setValueT1( gl, v, textures ) {\n \n     const cache = this.cache;\n     const unit = textures.allocateTextureUnit();\n \n     if ( cache[ 0 ] !== unit ) {\n \n         gl.uniform1i( this.addr, unit );\n         cache[ 0 ] = unit;\n \n     }\n \n     textures.setTexture2D( v || emptyTexture, unit );\n \n }\n \n function setValueT3D1( gl, v, textures ) {\n \n     const cache = this.cache;\n     const unit = textures.allocateTextureUnit();\n \n     if ( cache[ 0 ] !== unit ) {\n \n         gl.uniform1i( this.addr, unit );\n         cache[ 0 ] = unit;\n \n     }\n \n     textures.setTexture3D( v || empty3dTexture, unit );\n \n }\n \n function setValueT6( gl, v, textures ) {\n \n     const cache = this.cache;\n     const unit = textures.allocateTextureUnit();\n \n     if ( cache[ 0 ] !== unit ) {\n \n         gl.uniform1i( this.addr, unit );\n         cache[ 0 ] = unit;\n \n     }\n \n     textures.setTextureCube( v || emptyCubeTexture, unit );\n \n }\n \n function setValueT2DArray1( gl, v, textures ) {\n \n     const cache = this.cache;\n     const unit = textures.allocateTextureUnit();\n \n     if ( cache[ 0 ] !== unit ) {\n \n         gl.uniform1i( this.addr, unit );\n         cache[ 0 ] = unit;\n \n     }\n \n     textures.setTexture2DArray( v || emptyArrayTexture, unit );\n \n }\n \n // Helper to pick the right setter for the singular case\n \n function getSingularSetter( type ) {\n \n     switch ( type ) {\n \n         case 0x1406: return setValueV1f; // FLOAT\n         case 0x8b50: return setValueV2f; // _VEC2\n         case 0x8b51: return setValueV3f; // _VEC3\n         case 0x8b52: return setValueV4f; // _VEC4\n \n         case 0x8b5a: return setValueM2; // _MAT2\n         case 0x8b5b: return setValueM3; // _MAT3\n         case 0x8b5c: return setValueM4; // _MAT4\n \n         case 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n         case 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n         case 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n         case 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n \n         case 0x1405: return setValueV1ui; // UINT\n         case 0x8dc6: return setValueV2ui; // _VEC2\n         case 0x8dc7: return setValueV3ui; // _VEC3\n         case 0x8dc8: return setValueV4ui; // _VEC4\n \n         case 0x8b5e: // SAMPLER_2D\n         case 0x8d66: // SAMPLER_EXTERNAL_OES\n         case 0x8dca: // INT_SAMPLER_2D\n         case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n         case 0x8b62: // SAMPLER_2D_SHADOW\n             return setValueT1;\n \n         case 0x8b5f: // SAMPLER_3D\n         case 0x8dcb: // INT_SAMPLER_3D\n         case 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n             return setValueT3D1;\n \n         case 0x8b60: // SAMPLER_CUBE\n         case 0x8dcc: // INT_SAMPLER_CUBE\n         case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n         case 0x8dc5: // SAMPLER_CUBE_SHADOW\n             return setValueT6;\n \n         case 0x8dc1: // SAMPLER_2D_ARRAY\n         case 0x8dcf: // INT_SAMPLER_2D_ARRAY\n         case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n         case 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n             return setValueT2DArray1;\n \n     }\n \n }\n \n \n // Array of scalars\n \n function setValueV1fArray( gl, v ) {\n \n     gl.uniform1fv( this.addr, v );\n \n }\n \n // Array of vectors (from flat array or array of THREE.VectorN)\n \n function setValueV2fArray( gl, v ) {\n \n     const data = flatten( v, this.size, 2 );\n \n     gl.uniform2fv( this.addr, data );\n \n }\n \n function setValueV3fArray( gl, v ) {\n \n     const data = flatten( v, this.size, 3 );\n \n     gl.uniform3fv( this.addr, data );\n \n }\n \n function setValueV4fArray( gl, v ) {\n \n     const data = flatten( v, this.size, 4 );\n \n     gl.uniform4fv( this.addr, data );\n \n }\n \n // Array of matrices (from flat array or array of THREE.MatrixN)\n \n function setValueM2Array( gl, v ) {\n \n     const data = flatten( v, this.size, 4 );\n \n     gl.uniformMatrix2fv( this.addr, false, data );\n \n }\n \n function setValueM3Array( gl, v ) {\n \n     const data = flatten( v, this.size, 9 );\n \n     gl.uniformMatrix3fv( this.addr, false, data );\n \n }\n \n function setValueM4Array( gl, v ) {\n \n     const data = flatten( v, this.size, 16 );\n \n     gl.uniformMatrix4fv( this.addr, false, data );\n \n }\n \n // Array of integer / boolean\n \n function setValueV1iArray( gl, v ) {\n \n     gl.uniform1iv( this.addr, v );\n \n }\n \n // Array of integer / boolean vectors (from flat array)\n \n function setValueV2iArray( gl, v ) {\n \n     gl.uniform2iv( this.addr, v );\n \n }\n \n function setValueV3iArray( gl, v ) {\n \n     gl.uniform3iv( this.addr, v );\n \n }\n \n function setValueV4iArray( gl, v ) {\n \n     gl.uniform4iv( this.addr, v );\n \n }\n \n // Array of unsigned integer\n \n function setValueV1uiArray( gl, v ) {\n \n     gl.uniform1uiv( this.addr, v );\n \n }\n \n // Array of unsigned integer vectors (from flat array)\n \n function setValueV2uiArray( gl, v ) {\n \n     gl.uniform2uiv( this.addr, v );\n \n }\n \n function setValueV3uiArray( gl, v ) {\n \n     gl.uniform3uiv( this.addr, v );\n \n }\n \n function setValueV4uiArray( gl, v ) {\n \n     gl.uniform4uiv( this.addr, v );\n \n }\n \n \n // Array of textures (2D / 3D / Cube / 2DArray)\n \n function setValueT1Array( gl, v, textures ) {\n \n     const n = v.length;\n \n     const units = allocTexUnits( textures, n );\n \n     gl.uniform1iv( this.addr, units );\n \n     for ( let i = 0; i !== n; ++ i ) {\n \n         textures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n \n     }\n \n }\n \n function setValueT3DArray( gl, v, textures ) {\n \n     const n = v.length;\n \n     const units = allocTexUnits( textures, n );\n \n     gl.uniform1iv( this.addr, units );\n \n     for ( let i = 0; i !== n; ++ i ) {\n \n         textures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n \n     }\n \n }\n \n function setValueT6Array( gl, v, textures ) {\n \n     const n = v.length;\n \n     const units = allocTexUnits( textures, n );\n \n     gl.uniform1iv( this.addr, units );\n \n     for ( let i = 0; i !== n; ++ i ) {\n \n         textures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n \n     }\n \n }\n \n function setValueT2DArrayArray( gl, v, textures ) {\n \n     const n = v.length;\n \n     const units = allocTexUnits( textures, n );\n \n     gl.uniform1iv( this.addr, units );\n \n     for ( let i = 0; i !== n; ++ i ) {\n \n         textures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n \n     }\n \n }\n \n \n // Helper to pick the right setter for a pure (bottom-level) array\n \n function getPureArraySetter( type ) {\n \n     switch ( type ) {\n \n         case 0x1406: return setValueV1fArray; // FLOAT\n         case 0x8b50: return setValueV2fArray; // _VEC2\n         case 0x8b51: return setValueV3fArray; // _VEC3\n         case 0x8b52: return setValueV4fArray; // _VEC4\n \n         case 0x8b5a: return setValueM2Array; // _MAT2\n         case 0x8b5b: return setValueM3Array; // _MAT3\n         case 0x8b5c: return setValueM4Array; // _MAT4\n \n         case 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n         case 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n         case 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n         case 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n \n         case 0x1405: return setValueV1uiArray; // UINT\n         case 0x8dc6: return setValueV2uiArray; // _VEC2\n         case 0x8dc7: return setValueV3uiArray; // _VEC3\n         case 0x8dc8: return setValueV4uiArray; // _VEC4\n \n         case 0x8b5e: // SAMPLER_2D\n         case 0x8d66: // SAMPLER_EXTERNAL_OES\n         case 0x8dca: // INT_SAMPLER_2D\n         case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n         case 0x8b62: // SAMPLER_2D_SHADOW\n             return setValueT1Array;\n \n         case 0x8b5f: // SAMPLER_3D\n         case 0x8dcb: // INT_SAMPLER_3D\n         case 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n             return setValueT3DArray;\n \n         case 0x8b60: // SAMPLER_CUBE\n         case 0x8dcc: // INT_SAMPLER_CUBE\n         case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n         case 0x8dc5: // SAMPLER_CUBE_SHADOW\n             return setValueT6Array;\n \n         case 0x8dc1: // SAMPLER_2D_ARRAY\n         case 0x8dcf: // INT_SAMPLER_2D_ARRAY\n         case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n         case 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n             return setValueT2DArrayArray;\n \n     }\n \n }\n \n // --- Uniform Classes ---\n \n function SingleUniform( id, activeInfo, addr ) {\n \n     this.id = id;\n     this.addr = addr;\n     this.cache = [];\n     this.setValue = getSingularSetter( activeInfo.type );\n \n     // this.path = activeInfo.name; // DEBUG\n \n }\n \n function PureArrayUniform( id, activeInfo, addr ) {\n \n     this.id = id;\n     this.addr = addr;\n     this.cache = [];\n     this.size = activeInfo.size;\n     this.setValue = getPureArraySetter( activeInfo.type );\n \n     // this.path = activeInfo.name; // DEBUG\n \n }\n \n PureArrayUniform.prototype.updateCache = function ( data ) {\n \n     const cache = this.cache;\n \n     if ( data instanceof Float32Array && cache.length !== data.length ) {\n \n         this.cache = new Float32Array( data.length );\n \n     }\n \n     copyArray( cache, data );\n \n };\n \n function StructuredUniform( id ) {\n \n     this.id = id;\n \n     this.seq = [];\n     this.map = {};\n \n }\n \n StructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n \n     const seq = this.seq;\n \n     for ( let i = 0, n = seq.length; i !== n; ++ i ) {\n \n         const u = seq[ i ];\n         u.setValue( gl, value[ u.id ], textures );\n \n     }\n \n };\n \n // --- Top-level ---\n \n // Parser - builds up the property tree from the path strings\n \n const RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n \n // extracts\n // \t- the identifier (member name or array index)\n //  - followed by an optional right bracket (found when array index)\n //  - followed by an optional left bracket or dot (type of subscript)\n //\n // Note: These portions can be read in a non-overlapping fashion and\n // allow straightforward parsing of the hierarchy that WebGL encodes\n // in the uniform names.\n \n function addUniform( container, uniformObject ) {\n \n     container.seq.push( uniformObject );\n     container.map[ uniformObject.id ] = uniformObject;\n \n }\n \n function parseUniform( activeInfo, addr, container ) {\n \n     const path = activeInfo.name,\n         pathLength = path.length;\n \n     // reset RegExp object, because of the early exit of a previous run\n     RePathPart.lastIndex = 0;\n \n     while ( true ) {\n \n         const match = RePathPart.exec( path ),\n             matchEnd = RePathPart.lastIndex;\n \n         let id = match[ 1 ];\n         const idIsIndex = match[ 2 ] === ']',\n             subscript = match[ 3 ];\n \n         if ( idIsIndex ) id = id | 0; // convert to integer\n \n         if ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n \n             // bare name or \"pure\" bottom-level array \"[0]\" suffix\n \n             addUniform( container, subscript === undefined ?\n                 new SingleUniform( id, activeInfo, addr ) :\n                 new PureArrayUniform( id, activeInfo, addr ) );\n \n             break;\n \n         } else {\n \n             // step into inner node / create it in case it doesn't exist\n \n             const map = container.map;\n             let next = map[ id ];\n \n             if ( next === undefined ) {\n \n                 next = new StructuredUniform( id );\n                 addUniform( container, next );\n \n             }\n \n             container = next;\n \n         }\n \n     }\n \n }\n \n // Root Container\n \n function WebGLUniforms( gl, program ) {\n \n     this.seq = [];\n     this.map = {};\n \n     const n = gl.getProgramParameter( program, 35718 );\n \n     for ( let i = 0; i < n; ++ i ) {\n \n         const info = gl.getActiveUniform( program, i ),\n             addr = gl.getUniformLocation( program, info.name );\n \n         parseUniform( info, addr, this );\n \n     }\n \n }\n \n WebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n \n     const u = this.map[ name ];\n \n     if ( u !== undefined ) u.setValue( gl, value, textures );\n \n };\n \n WebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n \n     const v = object[ name ];\n \n     if ( v !== undefined ) this.setValue( gl, name, v );\n \n };\n \n \n // Static interface\n \n WebGLUniforms.upload = function ( gl, seq, values, textures ) {\n \n     for ( let i = 0, n = seq.length; i !== n; ++ i ) {\n \n         const u = seq[ i ],\n             v = values[ u.id ];\n \n         if ( v.needsUpdate !== false ) {\n \n             // note: always updating when .needsUpdate is undefined\n             u.setValue( gl, v.value, textures );\n \n         }\n \n     }\n \n };\n \n WebGLUniforms.seqWithValue = function ( seq, values ) {\n \n     const r = [];\n \n     for ( let i = 0, n = seq.length; i !== n; ++ i ) {\n \n         const u = seq[ i ];\n         if ( u.id in values ) r.push( u );\n \n     }\n \n     return r;\n \n };\n \n function WebGLShader( gl, type, string ) {\n \n     const shader = gl.createShader( type );\n \n     gl.shaderSource( shader, string );\n     gl.compileShader( shader );\n \n     return shader;\n \n }\n \n let programIdCount = 0;\n \n function handleSource( string, errorLine ) {\n \n     const lines = string.split( '\\n' );\n     const lines2 = [];\n \n     const from = Math.max( errorLine - 6, 0 );\n     const to = Math.min( errorLine + 6, lines.length );\n \n     for ( let i = from; i < to; i ++ ) {\n \n         lines2.push( ( i + 1 ) + ': ' + lines[ i ] );\n \n     }\n \n     return lines2.join( '\\n' );\n \n }\n \n function getEncodingComponents( encoding ) {\n \n     switch ( encoding ) {\n \n         case LinearEncoding:\n             return [ 'Linear', '( value )' ];\n         case sRGBEncoding:\n             return [ 'sRGB', '( value )' ];\n         default:\n             console.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n             return [ 'Linear', '( value )' ];\n \n     }\n \n }\n \n function getShaderErrors( gl, shader, type ) {\n \n     const status = gl.getShaderParameter( shader, 35713 );\n     const errors = gl.getShaderInfoLog( shader ).trim();\n \n     if ( status && errors === '' ) return '';\n \n     const errorLine = parseInt( /ERROR: 0:(\\d+)/.exec( errors )[ 1 ] );\n \n     // --enable-privileged-webgl-extension\n     // console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n \n     return type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n \n }\n \n function getTexelEncodingFunction( functionName, encoding ) {\n \n     const components = getEncodingComponents( encoding );\n     return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n \n }\n \n function getToneMappingFunction( functionName, toneMapping ) {\n \n     let toneMappingName;\n \n     switch ( toneMapping ) {\n \n         case LinearToneMapping:\n             toneMappingName = 'Linear';\n             break;\n \n         case ReinhardToneMapping:\n             toneMappingName = 'Reinhard';\n             break;\n \n         case CineonToneMapping:\n             toneMappingName = 'OptimizedCineon';\n             break;\n \n         case ACESFilmicToneMapping:\n             toneMappingName = 'ACESFilmic';\n             break;\n \n         case CustomToneMapping:\n             toneMappingName = 'Custom';\n             break;\n \n         default:\n             console.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n             toneMappingName = 'Linear';\n \n     }\n \n     return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n \n }\n \n function generateExtensions( parameters ) {\n \n     const chunks = [\n         ( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n         ( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n         ( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n         ( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n     ];\n \n     return chunks.filter( filterEmptyLine ).join( '\\n' );\n \n }\n \n function generateDefines( defines ) {\n \n     const chunks = [];\n \n     for ( const name in defines ) {\n \n         const value = defines[ name ];\n \n         if ( value === false ) continue;\n \n         chunks.push( '#define ' + name + ' ' + value );\n \n     }\n \n     return chunks.join( '\\n' );\n \n }\n \n function fetchAttributeLocations( gl, program ) {\n \n     const attributes = {};\n \n     const n = gl.getProgramParameter( program, 35721 );\n \n     for ( let i = 0; i < n; i ++ ) {\n \n         const info = gl.getActiveAttrib( program, i );\n         const name = info.name;\n \n         let locationSize = 1;\n         if ( info.type === 35674 ) locationSize = 2;\n         if ( info.type === 35675 ) locationSize = 3;\n         if ( info.type === 35676 ) locationSize = 4;\n \n         // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n \n         attributes[ name ] = {\n             type: info.type,\n             location: gl.getAttribLocation( program, name ),\n             locationSize: locationSize\n         };\n \n     }\n \n     return attributes;\n \n }\n \n function filterEmptyLine( string ) {\n \n     return string !== '';\n \n }\n \n function replaceLightNums( string, parameters ) {\n \n     return string\n         .replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n         .replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n         .replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n         .replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n         .replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n         .replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n         .replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n         .replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n \n }\n \n function replaceClippingPlaneNums( string, parameters ) {\n \n     return string\n         .replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n         .replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n \n }\n \n // Resolve Includes\n \n const includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n \n function resolveIncludes( string ) {\n \n     return string.replace( includePattern, includeReplacer );\n \n }\n \n function includeReplacer( match, include ) {\n \n     const string = ShaderChunk[ include ];\n \n     if ( string === undefined ) {\n \n         throw new Error( 'Can not resolve #include <' + include + '>' );\n \n     }\n \n     return resolveIncludes( string );\n \n }\n \n // Unroll Loops\n \n const deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n const unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n \n function unrollLoops( string ) {\n \n     return string\n         .replace( unrollLoopPattern, loopReplacer )\n         .replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n \n }\n \n function deprecatedLoopReplacer( match, start, end, snippet ) {\n \n     console.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n     return loopReplacer( match, start, end, snippet );\n \n }\n \n function loopReplacer( match, start, end, snippet ) {\n \n     let string = '';\n \n     for ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n \n         string += snippet\n             .replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n             .replace( /UNROLLED_LOOP_INDEX/g, i );\n \n     }\n \n     return string;\n \n }\n \n //\n \n function generatePrecision( parameters ) {\n \n     let precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n \n     if ( parameters.precision === 'highp' ) {\n \n         precisionstring += '\\n#define HIGH_PRECISION';\n \n     } else if ( parameters.precision === 'mediump' ) {\n \n         precisionstring += '\\n#define MEDIUM_PRECISION';\n \n     } else if ( parameters.precision === 'lowp' ) {\n \n         precisionstring += '\\n#define LOW_PRECISION';\n \n     }\n \n     return precisionstring;\n \n }\n \n function generateShadowMapTypeDefine( parameters ) {\n \n     let shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n \n     if ( parameters.shadowMapType === PCFShadowMap ) {\n \n         shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n \n     } else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n \n         shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n \n     } else if ( parameters.shadowMapType === VSMShadowMap ) {\n \n         shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n \n     }\n \n     return shadowMapTypeDefine;\n \n }\n \n function generateEnvMapTypeDefine( parameters ) {\n \n     let envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n \n     if ( parameters.envMap ) {\n \n         switch ( parameters.envMapMode ) {\n \n             case CubeReflectionMapping:\n             case CubeRefractionMapping:\n                 envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n                 break;\n \n             case CubeUVReflectionMapping:\n                 envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n                 break;\n \n         }\n \n     }\n \n     return envMapTypeDefine;\n \n }\n \n function generateEnvMapModeDefine( parameters ) {\n \n     let envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n \n     if ( parameters.envMap ) {\n \n         switch ( parameters.envMapMode ) {\n \n             case CubeRefractionMapping:\n \n                 envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n                 break;\n \n         }\n \n     }\n \n     return envMapModeDefine;\n \n }\n \n function generateEnvMapBlendingDefine( parameters ) {\n \n     let envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n \n     if ( parameters.envMap ) {\n \n         switch ( parameters.combine ) {\n \n             case MultiplyOperation:\n                 envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n                 break;\n \n             case MixOperation:\n                 envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n                 break;\n \n             case AddOperation:\n                 envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n                 break;\n \n         }\n \n     }\n \n     return envMapBlendingDefine;\n \n }\n \n function generateCubeUVSize( parameters ) {\n \n     const imageHeight = parameters.envMapCubeUVHeight;\n \n     if ( imageHeight === null ) return null;\n \n     const maxMip = Math.log2( imageHeight / 32 + 1 ) + 3;\n \n     const texelHeight = 1.0 / imageHeight;\n \n     const texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n \n     return { texelWidth, texelHeight, maxMip };\n \n }\n \n function WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n \n     // TODO Send this event to Three.js DevTools\n     // console.log( 'WebGLProgram', cacheKey );\n \n     const gl = renderer.getContext();\n \n     const defines = parameters.defines;\n \n     let vertexShader = parameters.vertexShader;\n     let fragmentShader = parameters.fragmentShader;\n \n     const shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n     const envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n     const envMapModeDefine = generateEnvMapModeDefine( parameters );\n     const envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n     const envMapCubeUVSize = generateCubeUVSize( parameters );\n \n     const customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n \n     const customDefines = generateDefines( defines );\n \n     const program = gl.createProgram();\n \n     let prefixVertex, prefixFragment;\n     let versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n \n     if ( parameters.isRawShaderMaterial ) {\n \n         prefixVertex = [\n \n             customDefines\n \n         ].filter( filterEmptyLine ).join( '\\n' );\n \n         if ( prefixVertex.length > 0 ) {\n \n             prefixVertex += '\\n';\n \n         }\n \n         prefixFragment = [\n \n             customExtensions,\n             customDefines\n \n         ].filter( filterEmptyLine ).join( '\\n' );\n \n         if ( prefixFragment.length > 0 ) {\n \n             prefixFragment += '\\n';\n \n         }\n \n     } else {\n \n         prefixVertex = [\n \n             generatePrecision( parameters ),\n \n             '#define SHADER_NAME ' + parameters.shaderName,\n \n             customDefines,\n \n             parameters.instancing ? '#define USE_INSTANCING' : '',\n             parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n \n             parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n \n             '#define MAX_BONES ' + parameters.maxBones,\n             ( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n             ( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n \n             parameters.map ? '#define USE_MAP' : '',\n             parameters.envMap ? '#define USE_ENVMAP' : '',\n             parameters.envMap ? '#define ' + envMapModeDefine : '',\n             parameters.lightMap ? '#define USE_LIGHTMAP' : '',\n             parameters.aoMap ? '#define USE_AOMAP' : '',\n             parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n             parameters.bumpMap ? '#define USE_BUMPMAP' : '',\n             parameters.normalMap ? '#define USE_NORMALMAP' : '',\n             ( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n             ( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n \n             parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n             parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n             parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n \n             parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n \n             parameters.specularMap ? '#define USE_SPECULARMAP' : '',\n             parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n             parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n \n             parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n             parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n             parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n \n             parameters.transmission ? '#define USE_TRANSMISSION' : '',\n             parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n             parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n \n             parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n             parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n \n             parameters.vertexTangents ? '#define USE_TANGENT' : '',\n             parameters.vertexColors ? '#define USE_COLOR' : '',\n             parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n             parameters.vertexUvs ? '#define USE_UV' : '',\n             parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n \n             parameters.flatShading ? '#define FLAT_SHADED' : '',\n \n             parameters.skinning ? '#define USE_SKINNING' : '',\n             parameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n \n             parameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n             parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n             ( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n             ( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n             ( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n             ( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n             parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n             parameters.flipSided ? '#define FLIP_SIDED' : '',\n \n             parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n             parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n \n             parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n \n             parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n             ( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n \n             'uniform mat4 modelMatrix;',\n             'uniform mat4 modelViewMatrix;',\n             'uniform mat4 projectionMatrix;',\n             'uniform mat4 viewMatrix;',\n             'uniform mat3 normalMatrix;',\n             'uniform vec3 cameraPosition;',\n             'uniform bool isOrthographic;',\n \n             '#ifdef USE_INSTANCING',\n \n             '\tattribute mat4 instanceMatrix;',\n \n             '#endif',\n \n             '#ifdef USE_INSTANCING_COLOR',\n \n             '\tattribute vec3 instanceColor;',\n \n             '#endif',\n \n             'attribute vec3 position;',\n             'attribute vec3 normal;',\n             'attribute vec2 uv;',\n \n             '#ifdef USE_TANGENT',\n \n             '\tattribute vec4 tangent;',\n \n             '#endif',\n \n             '#if defined( USE_COLOR_ALPHA )',\n \n             '\tattribute vec4 color;',\n \n             '#elif defined( USE_COLOR )',\n \n             '\tattribute vec3 color;',\n \n             '#endif',\n \n             '#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n \n             '\tattribute vec3 morphTarget0;',\n             '\tattribute vec3 morphTarget1;',\n             '\tattribute vec3 morphTarget2;',\n             '\tattribute vec3 morphTarget3;',\n \n             '\t#ifdef USE_MORPHNORMALS',\n \n             '\t\tattribute vec3 morphNormal0;',\n             '\t\tattribute vec3 morphNormal1;',\n             '\t\tattribute vec3 morphNormal2;',\n             '\t\tattribute vec3 morphNormal3;',\n \n             '\t#else',\n \n             '\t\tattribute vec3 morphTarget4;',\n             '\t\tattribute vec3 morphTarget5;',\n             '\t\tattribute vec3 morphTarget6;',\n             '\t\tattribute vec3 morphTarget7;',\n \n             '\t#endif',\n \n             '#endif',\n \n             '#ifdef USE_SKINNING',\n \n             '\tattribute vec4 skinIndex;',\n             '\tattribute vec4 skinWeight;',\n \n             '#endif',\n \n             '\\n'\n \n         ].filter( filterEmptyLine ).join( '\\n' );\n \n         prefixFragment = [\n \n             customExtensions,\n \n             generatePrecision( parameters ),\n \n             '#define SHADER_NAME ' + parameters.shaderName,\n \n             customDefines,\n \n             ( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n             ( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n \n             parameters.map ? '#define USE_MAP' : '',\n             parameters.matcap ? '#define USE_MATCAP' : '',\n             parameters.envMap ? '#define USE_ENVMAP' : '',\n             parameters.envMap ? '#define ' + envMapTypeDefine : '',\n             parameters.envMap ? '#define ' + envMapModeDefine : '',\n             parameters.envMap ? '#define ' + envMapBlendingDefine : '',\n             envMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n             envMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n             envMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n             parameters.lightMap ? '#define USE_LIGHTMAP' : '',\n             parameters.aoMap ? '#define USE_AOMAP' : '',\n             parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n             parameters.bumpMap ? '#define USE_BUMPMAP' : '',\n             parameters.normalMap ? '#define USE_NORMALMAP' : '',\n             ( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n             ( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n \n             parameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n             parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n             parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n             parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n \n             parameters.specularMap ? '#define USE_SPECULARMAP' : '',\n             parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n             parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n             parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n             parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n \n             parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n             parameters.alphaTest ? '#define USE_ALPHATEST' : '',\n \n             parameters.sheen ? '#define USE_SHEEN' : '',\n             parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n             parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n \n             parameters.transmission ? '#define USE_TRANSMISSION' : '',\n             parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n             parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n \n             parameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n \n             parameters.vertexTangents ? '#define USE_TANGENT' : '',\n             parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n             parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n             parameters.vertexUvs ? '#define USE_UV' : '',\n             parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n \n             parameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n \n             parameters.flatShading ? '#define FLAT_SHADED' : '',\n \n             parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n             parameters.flipSided ? '#define FLIP_SIDED' : '',\n \n             parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n             parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n \n             parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n \n             parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n \n             parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n             ( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n \n             'uniform mat4 viewMatrix;',\n             'uniform vec3 cameraPosition;',\n             'uniform bool isOrthographic;',\n \n             ( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n             ( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n             ( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n \n             parameters.dithering ? '#define DITHERING' : '',\n             parameters.opaque ? '#define OPAQUE' : '',\n \n             ShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n             getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n \n             parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n \n             '\\n'\n \n         ].filter( filterEmptyLine ).join( '\\n' );\n \n     }\n \n     vertexShader = resolveIncludes( vertexShader );\n     vertexShader = replaceLightNums( vertexShader, parameters );\n     vertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n \n     fragmentShader = resolveIncludes( fragmentShader );\n     fragmentShader = replaceLightNums( fragmentShader, parameters );\n     fragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n \n     vertexShader = unrollLoops( vertexShader );\n     fragmentShader = unrollLoops( fragmentShader );\n \n     if ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n \n         // GLSL 3.0 conversion for built-in materials and ShaderMaterial\n \n         versionString = '#version 300 es\\n';\n \n         prefixVertex = [\n             'precision mediump sampler2DArray;',\n             '#define attribute in',\n             '#define varying out',\n             '#define texture2D texture'\n         ].join( '\\n' ) + '\\n' + prefixVertex;\n \n         prefixFragment = [\n             '#define varying in',\n             ( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n             ( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n             '#define gl_FragDepthEXT gl_FragDepth',\n             '#define texture2D texture',\n             '#define textureCube texture',\n             '#define texture2DProj textureProj',\n             '#define texture2DLodEXT textureLod',\n             '#define texture2DProjLodEXT textureProjLod',\n             '#define textureCubeLodEXT textureLod',\n             '#define texture2DGradEXT textureGrad',\n             '#define texture2DProjGradEXT textureProjGrad',\n             '#define textureCubeGradEXT textureGrad'\n         ].join( '\\n' ) + '\\n' + prefixFragment;\n \n     }\n \n     const vertexGlsl = versionString + prefixVertex + vertexShader;\n     const fragmentGlsl = versionString + prefixFragment + fragmentShader;\n \n     // console.log( '*VERTEX*', vertexGlsl );\n     // console.log( '*FRAGMENT*', fragmentGlsl );\n \n     const glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n     const glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n \n     gl.attachShader( program, glVertexShader );\n     gl.attachShader( program, glFragmentShader );\n \n     // Force a particular attribute to index 0.\n \n     if ( parameters.index0AttributeName !== undefined ) {\n \n         gl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n \n     } else if ( parameters.morphTargets === true ) {\n \n         // programs with morphTargets displace position out of attribute 0\n         gl.bindAttribLocation( program, 0, 'position' );\n \n     }\n \n     gl.linkProgram( program );\n \n     // check for link errors\n     if ( renderer.debug.checkShaderErrors ) {\n \n         const programLog = gl.getProgramInfoLog( program ).trim();\n         const vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n         const fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n \n         let runnable = true;\n         let haveDiagnostics = true;\n \n         if ( gl.getProgramParameter( program, 35714 ) === false ) {\n \n             runnable = false;\n \n             const vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n             const fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n \n             console.error(\n                 'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n                 'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n                 'Program Info Log: ' + programLog + '\\n' +\n                 vertexErrors + '\\n' +\n                 fragmentErrors\n             );\n \n         } else if ( programLog !== '' ) {\n \n             console.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n \n         } else if ( vertexLog === '' || fragmentLog === '' ) {\n \n             haveDiagnostics = false;\n \n         }\n \n         if ( haveDiagnostics ) {\n \n             this.diagnostics = {\n \n                 runnable: runnable,\n \n                 programLog: programLog,\n \n                 vertexShader: {\n \n                     log: vertexLog,\n                     prefix: prefixVertex\n \n                 },\n \n                 fragmentShader: {\n \n                     log: fragmentLog,\n                     prefix: prefixFragment\n \n                 }\n \n             };\n \n         }\n \n     }\n \n     // Clean up\n \n     // Crashes in iOS9 and iOS10. #18402\n     // gl.detachShader( program, glVertexShader );\n     // gl.detachShader( program, glFragmentShader );\n \n     gl.deleteShader( glVertexShader );\n     gl.deleteShader( glFragmentShader );\n \n     // set up caching for uniform locations\n \n     let cachedUniforms;\n \n     this.getUniforms = function () {\n \n         if ( cachedUniforms === undefined ) {\n \n             cachedUniforms = new WebGLUniforms( gl, program );\n \n         }\n \n         return cachedUniforms;\n \n     };\n \n     // set up caching for attribute locations\n \n     let cachedAttributes;\n \n     this.getAttributes = function () {\n \n         if ( cachedAttributes === undefined ) {\n \n             cachedAttributes = fetchAttributeLocations( gl, program );\n \n         }\n \n         return cachedAttributes;\n \n     };\n \n     // free resource\n \n     this.destroy = function () {\n \n         bindingStates.releaseStatesOfProgram( this );\n \n         gl.deleteProgram( program );\n         this.program = undefined;\n \n     };\n \n     //\n \n     this.name = parameters.shaderName;\n     this.id = programIdCount ++;\n     this.cacheKey = cacheKey;\n     this.usedTimes = 1;\n     this.program = program;\n     this.vertexShader = glVertexShader;\n     this.fragmentShader = glFragmentShader;\n \n     return this;\n \n }\n \n let _id = 0;\n \n class WebGLShaderCache {\n \n     constructor() {\n \n         this.shaderCache = new Map();\n         this.materialCache = new Map();\n \n     }\n \n     update( material ) {\n \n         const vertexShader = material.vertexShader;\n         const fragmentShader = material.fragmentShader;\n \n         const vertexShaderStage = this._getShaderStage( vertexShader );\n         const fragmentShaderStage = this._getShaderStage( fragmentShader );\n \n         const materialShaders = this._getShaderCacheForMaterial( material );\n \n         if ( materialShaders.has( vertexShaderStage ) === false ) {\n \n             materialShaders.add( vertexShaderStage );\n             vertexShaderStage.usedTimes ++;\n \n         }\n \n         if ( materialShaders.has( fragmentShaderStage ) === false ) {\n \n             materialShaders.add( fragmentShaderStage );\n             fragmentShaderStage.usedTimes ++;\n \n         }\n \n         return this;\n \n     }\n \n     remove( material ) {\n \n         const materialShaders = this.materialCache.get( material );\n \n         for ( const shaderStage of materialShaders ) {\n \n             shaderStage.usedTimes --;\n \n             if ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n \n         }\n \n         this.materialCache.delete( material );\n \n         return this;\n \n     }\n \n     getVertexShaderID( material ) {\n \n         return this._getShaderStage( material.vertexShader ).id;\n \n     }\n \n     getFragmentShaderID( material ) {\n \n         return this._getShaderStage( material.fragmentShader ).id;\n \n     }\n \n     dispose() {\n \n         this.shaderCache.clear();\n         this.materialCache.clear();\n \n     }\n \n     _getShaderCacheForMaterial( material ) {\n \n         const cache = this.materialCache;\n \n         if ( cache.has( material ) === false ) {\n \n             cache.set( material, new Set() );\n \n         }\n \n         return cache.get( material );\n \n     }\n \n     _getShaderStage( code ) {\n \n         const cache = this.shaderCache;\n \n         if ( cache.has( code ) === false ) {\n \n             const stage = new WebGLShaderStage( code );\n             cache.set( code, stage );\n \n         }\n \n         return cache.get( code );\n \n     }\n \n }\n \n class WebGLShaderStage {\n \n     constructor( code ) {\n \n         this.id = _id ++;\n \n         this.code = code;\n         this.usedTimes = 0;\n \n     }\n \n }\n \n function WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n \n     const _programLayers = new Layers();\n     const _customShaders = new WebGLShaderCache();\n     const programs = [];\n \n     const isWebGL2 = capabilities.isWebGL2;\n     const logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n     const floatVertexTextures = capabilities.floatVertexTextures;\n     const maxVertexUniforms = capabilities.maxVertexUniforms;\n     const vertexTextures = capabilities.vertexTextures;\n     let precision = capabilities.precision;\n \n     const shaderIDs = {\n         MeshDepthMaterial: 'depth',\n         MeshDistanceMaterial: 'distanceRGBA',\n         MeshNormalMaterial: 'normal',\n         MeshBasicMaterial: 'basic',\n         MeshLambertMaterial: 'lambert',\n         MeshPhongMaterial: 'phong',\n         MeshToonMaterial: 'toon',\n         MeshStandardMaterial: 'physical',\n         MeshPhysicalMaterial: 'physical',\n         MeshMatcapMaterial: 'matcap',\n         LineBasicMaterial: 'basic',\n         LineDashedMaterial: 'dashed',\n         PointsMaterial: 'points',\n         ShadowMaterial: 'shadow',\n         SpriteMaterial: 'sprite'\n     };\n \n     function getMaxBones( object ) {\n \n         const skeleton = object.skeleton;\n         const bones = skeleton.bones;\n \n         if ( floatVertexTextures ) {\n \n             return 1024;\n \n         } else {\n \n             // default for when object is not specified\n             // ( for example when prebuilding shader to be used with multiple objects )\n             //\n             //  - leave some extra space for other uniforms\n             //  - limit here is ANGLE's 254 max uniform vectors\n             //    (up to 54 should be safe)\n \n             const nVertexUniforms = maxVertexUniforms;\n             const nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n \n             const maxBones = Math.min( nVertexMatrices, bones.length );\n \n             if ( maxBones < bones.length ) {\n \n                 console.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n                 return 0;\n \n             }\n \n             return maxBones;\n \n         }\n \n     }\n \n     function getParameters( material, lights, shadows, scene, object ) {\n \n         const fog = scene.fog;\n         const geometry = object.geometry;\n         const environment = material.isMeshStandardMaterial ? scene.environment : null;\n \n         const envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n         const envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n \n         const shaderID = shaderIDs[ material.type ];\n \n         // heuristics to create shader parameters according to lights in the scene\n         // (not to blow over maxLights budget)\n \n         const maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;\n \n         if ( material.precision !== null ) {\n \n             precision = capabilities.getMaxPrecision( material.precision );\n \n             if ( precision !== material.precision ) {\n \n                 console.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n \n             }\n \n         }\n \n         //\n \n         const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n         const morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n \n         let morphTextureStride = 0;\n \n         if ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n         if ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n         if ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n \n         //\n \n         let vertexShader, fragmentShader;\n         let customVertexShaderID, customFragmentShaderID;\n \n         if ( shaderID ) {\n \n             const shader = ShaderLib[ shaderID ];\n \n             vertexShader = shader.vertexShader;\n             fragmentShader = shader.fragmentShader;\n \n         } else {\n \n             vertexShader = material.vertexShader;\n             fragmentShader = material.fragmentShader;\n \n             _customShaders.update( material );\n \n             customVertexShaderID = _customShaders.getVertexShaderID( material );\n             customFragmentShaderID = _customShaders.getFragmentShaderID( material );\n \n         }\n \n         const currentRenderTarget = renderer.getRenderTarget();\n \n         const useAlphaTest = material.alphaTest > 0;\n         const useClearcoat = material.clearcoat > 0;\n \n         const parameters = {\n \n             isWebGL2: isWebGL2,\n \n             shaderID: shaderID,\n             shaderName: material.type,\n \n             vertexShader: vertexShader,\n             fragmentShader: fragmentShader,\n             defines: material.defines,\n \n             customVertexShaderID: customVertexShaderID,\n             customFragmentShaderID: customFragmentShaderID,\n \n             isRawShaderMaterial: material.isRawShaderMaterial === true,\n             glslVersion: material.glslVersion,\n \n             precision: precision,\n \n             instancing: object.isInstancedMesh === true,\n             instancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n \n             supportsVertexTextures: vertexTextures,\n             outputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n             map: !! material.map,\n             matcap: !! material.matcap,\n             envMap: !! envMap,\n             envMapMode: envMap && envMap.mapping,\n             envMapCubeUVHeight: envMapCubeUVHeight,\n             lightMap: !! material.lightMap,\n             aoMap: !! material.aoMap,\n             emissiveMap: !! material.emissiveMap,\n             bumpMap: !! material.bumpMap,\n             normalMap: !! material.normalMap,\n             objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n             tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n \n             decodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n \n             clearcoat: useClearcoat,\n             clearcoatMap: useClearcoat && !! material.clearcoatMap,\n             clearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n             clearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n \n             displacementMap: !! material.displacementMap,\n             roughnessMap: !! material.roughnessMap,\n             metalnessMap: !! material.metalnessMap,\n             specularMap: !! material.specularMap,\n             specularIntensityMap: !! material.specularIntensityMap,\n             specularColorMap: !! material.specularColorMap,\n \n             opaque: material.transparent === false && material.blending === NormalBlending,\n \n             alphaMap: !! material.alphaMap,\n             alphaTest: useAlphaTest,\n \n             gradientMap: !! material.gradientMap,\n \n             sheen: material.sheen > 0,\n             sheenColorMap: !! material.sheenColorMap,\n             sheenRoughnessMap: !! material.sheenRoughnessMap,\n \n             transmission: material.transmission > 0,\n             transmissionMap: !! material.transmissionMap,\n             thicknessMap: !! material.thicknessMap,\n \n             combine: material.combine,\n \n             vertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n             vertexColors: material.vertexColors,\n             vertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n             vertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n             uvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n \n             fog: !! fog,\n             useFog: material.fog,\n             fogExp2: ( fog && fog.isFogExp2 ),\n \n             flatShading: !! material.flatShading,\n \n             sizeAttenuation: material.sizeAttenuation,\n             logarithmicDepthBuffer: logarithmicDepthBuffer,\n \n             skinning: object.isSkinnedMesh === true && maxBones > 0,\n             maxBones: maxBones,\n             useVertexTexture: floatVertexTextures,\n \n             morphTargets: geometry.morphAttributes.position !== undefined,\n             morphNormals: geometry.morphAttributes.normal !== undefined,\n             morphColors: geometry.morphAttributes.color !== undefined,\n             morphTargetsCount: morphTargetsCount,\n             morphTextureStride: morphTextureStride,\n \n             numDirLights: lights.directional.length,\n             numPointLights: lights.point.length,\n             numSpotLights: lights.spot.length,\n             numRectAreaLights: lights.rectArea.length,\n             numHemiLights: lights.hemi.length,\n \n             numDirLightShadows: lights.directionalShadowMap.length,\n             numPointLightShadows: lights.pointShadowMap.length,\n             numSpotLightShadows: lights.spotShadowMap.length,\n \n             numClippingPlanes: clipping.numPlanes,\n             numClipIntersection: clipping.numIntersection,\n \n             dithering: material.dithering,\n \n             shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n             shadowMapType: renderer.shadowMap.type,\n \n             toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n             physicallyCorrectLights: renderer.physicallyCorrectLights,\n \n             premultipliedAlpha: material.premultipliedAlpha,\n \n             doubleSided: material.side === DoubleSide,\n             flipSided: material.side === BackSide,\n \n             depthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n \n             index0AttributeName: material.index0AttributeName,\n \n             extensionDerivatives: material.extensions && material.extensions.derivatives,\n             extensionFragDepth: material.extensions && material.extensions.fragDepth,\n             extensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n             extensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n \n             rendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n             rendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n             rendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n \n             customProgramCacheKey: material.customProgramCacheKey()\n \n         };\n \n         return parameters;\n \n     }\n \n     function getProgramCacheKey( parameters ) {\n \n         const array = [];\n \n         if ( parameters.shaderID ) {\n \n             array.push( parameters.shaderID );\n \n         } else {\n \n             array.push( parameters.customVertexShaderID );\n             array.push( parameters.customFragmentShaderID );\n \n         }\n \n         if ( parameters.defines !== undefined ) {\n \n             for ( const name in parameters.defines ) {\n \n                 array.push( name );\n                 array.push( parameters.defines[ name ] );\n \n             }\n \n         }\n \n         if ( parameters.isRawShaderMaterial === false ) {\n \n             getProgramCacheKeyParameters( array, parameters );\n             getProgramCacheKeyBooleans( array, parameters );\n             array.push( renderer.outputEncoding );\n \n         }\n \n         array.push( parameters.customProgramCacheKey );\n \n         return array.join();\n \n     }\n \n     function getProgramCacheKeyParameters( array, parameters ) {\n \n         array.push( parameters.precision );\n         array.push( parameters.outputEncoding );\n         array.push( parameters.envMapMode );\n         array.push( parameters.envMapCubeUVHeight );\n         array.push( parameters.combine );\n         array.push( parameters.vertexUvs );\n         array.push( parameters.fogExp2 );\n         array.push( parameters.sizeAttenuation );\n         array.push( parameters.maxBones );\n         array.push( parameters.morphTargetsCount );\n         array.push( parameters.morphAttributeCount );\n         array.push( parameters.numDirLights );\n         array.push( parameters.numPointLights );\n         array.push( parameters.numSpotLights );\n         array.push( parameters.numHemiLights );\n         array.push( parameters.numRectAreaLights );\n         array.push( parameters.numDirLightShadows );\n         array.push( parameters.numPointLightShadows );\n         array.push( parameters.numSpotLightShadows );\n         array.push( parameters.shadowMapType );\n         array.push( parameters.toneMapping );\n         array.push( parameters.numClippingPlanes );\n         array.push( parameters.numClipIntersection );\n \n     }\n \n     function getProgramCacheKeyBooleans( array, parameters ) {\n \n         _programLayers.disableAll();\n \n         if ( parameters.isWebGL2 )\n             _programLayers.enable( 0 );\n         if ( parameters.supportsVertexTextures )\n             _programLayers.enable( 1 );\n         if ( parameters.instancing )\n             _programLayers.enable( 2 );\n         if ( parameters.instancingColor )\n             _programLayers.enable( 3 );\n         if ( parameters.map )\n             _programLayers.enable( 4 );\n         if ( parameters.matcap )\n             _programLayers.enable( 5 );\n         if ( parameters.envMap )\n             _programLayers.enable( 6 );\n         if ( parameters.lightMap )\n             _programLayers.enable( 7 );\n         if ( parameters.aoMap )\n             _programLayers.enable( 8 );\n         if ( parameters.emissiveMap )\n             _programLayers.enable( 9 );\n         if ( parameters.bumpMap )\n             _programLayers.enable( 10 );\n         if ( parameters.normalMap )\n             _programLayers.enable( 11 );\n         if ( parameters.objectSpaceNormalMap )\n             _programLayers.enable( 12 );\n         if ( parameters.tangentSpaceNormalMap )\n             _programLayers.enable( 13 );\n         if ( parameters.clearcoat )\n             _programLayers.enable( 14 );\n         if ( parameters.clearcoatMap )\n             _programLayers.enable( 15 );\n         if ( parameters.clearcoatRoughnessMap )\n             _programLayers.enable( 16 );\n         if ( parameters.clearcoatNormalMap )\n             _programLayers.enable( 17 );\n         if ( parameters.displacementMap )\n             _programLayers.enable( 18 );\n         if ( parameters.specularMap )\n             _programLayers.enable( 19 );\n         if ( parameters.roughnessMap )\n             _programLayers.enable( 20 );\n         if ( parameters.metalnessMap )\n             _programLayers.enable( 21 );\n         if ( parameters.gradientMap )\n             _programLayers.enable( 22 );\n         if ( parameters.alphaMap )\n             _programLayers.enable( 23 );\n         if ( parameters.alphaTest )\n             _programLayers.enable( 24 );\n         if ( parameters.vertexColors )\n             _programLayers.enable( 25 );\n         if ( parameters.vertexAlphas )\n             _programLayers.enable( 26 );\n         if ( parameters.vertexUvs )\n             _programLayers.enable( 27 );\n         if ( parameters.vertexTangents )\n             _programLayers.enable( 28 );\n         if ( parameters.uvsVertexOnly )\n             _programLayers.enable( 29 );\n         if ( parameters.fog )\n             _programLayers.enable( 30 );\n \n         array.push( _programLayers.mask );\n         _programLayers.disableAll();\n \n         if ( parameters.useFog )\n             _programLayers.enable( 0 );\n         if ( parameters.flatShading )\n             _programLayers.enable( 1 );\n         if ( parameters.logarithmicDepthBuffer )\n             _programLayers.enable( 2 );\n         if ( parameters.skinning )\n             _programLayers.enable( 3 );\n         if ( parameters.useVertexTexture )\n             _programLayers.enable( 4 );\n         if ( parameters.morphTargets )\n             _programLayers.enable( 5 );\n         if ( parameters.morphNormals )\n             _programLayers.enable( 6 );\n         if ( parameters.morphColors )\n             _programLayers.enable( 7 );\n         if ( parameters.premultipliedAlpha )\n             _programLayers.enable( 8 );\n         if ( parameters.shadowMapEnabled )\n             _programLayers.enable( 9 );\n         if ( parameters.physicallyCorrectLights )\n             _programLayers.enable( 10 );\n         if ( parameters.doubleSided )\n             _programLayers.enable( 11 );\n         if ( parameters.flipSided )\n             _programLayers.enable( 12 );\n         if ( parameters.depthPacking )\n             _programLayers.enable( 13 );\n         if ( parameters.dithering )\n             _programLayers.enable( 14 );\n         if ( parameters.specularIntensityMap )\n             _programLayers.enable( 15 );\n         if ( parameters.specularColorMap )\n             _programLayers.enable( 16 );\n         if ( parameters.transmission )\n             _programLayers.enable( 17 );\n         if ( parameters.transmissionMap )\n             _programLayers.enable( 18 );\n         if ( parameters.thicknessMap )\n             _programLayers.enable( 19 );\n         if ( parameters.sheen )\n             _programLayers.enable( 20 );\n         if ( parameters.sheenColorMap )\n             _programLayers.enable( 21 );\n         if ( parameters.sheenRoughnessMap )\n             _programLayers.enable( 22 );\n         if ( parameters.decodeVideoTexture )\n             _programLayers.enable( 23 );\n         if ( parameters.opaque )\n             _programLayers.enable( 24 );\n \n         array.push( _programLayers.mask );\n \n     }\n \n     function getUniforms( material ) {\n \n         const shaderID = shaderIDs[ material.type ];\n         let uniforms;\n \n         if ( shaderID ) {\n \n             const shader = ShaderLib[ shaderID ];\n             uniforms = UniformsUtils.clone( shader.uniforms );\n \n         } else {\n \n             uniforms = material.uniforms;\n \n         }\n \n         return uniforms;\n \n     }\n \n     function acquireProgram( parameters, cacheKey ) {\n \n         let program;\n \n         // Check if code has been already compiled\n         for ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n \n             const preexistingProgram = programs[ p ];\n \n             if ( preexistingProgram.cacheKey === cacheKey ) {\n \n                 program = preexistingProgram;\n                 ++ program.usedTimes;\n \n                 break;\n \n             }\n \n         }\n \n         if ( program === undefined ) {\n \n             program = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n             programs.push( program );\n \n         }\n \n         return program;\n \n     }\n \n     function releaseProgram( program ) {\n \n         if ( -- program.usedTimes === 0 ) {\n \n             // Remove from unordered set\n             const i = programs.indexOf( program );\n             programs[ i ] = programs[ programs.length - 1 ];\n             programs.pop();\n \n             // Free WebGL resources\n             program.destroy();\n \n         }\n \n     }\n \n     function releaseShaderCache( material ) {\n \n         _customShaders.remove( material );\n \n     }\n \n     function dispose() {\n \n         _customShaders.dispose();\n \n     }\n \n     return {\n         getParameters: getParameters,\n         getProgramCacheKey: getProgramCacheKey,\n         getUniforms: getUniforms,\n         acquireProgram: acquireProgram,\n         releaseProgram: releaseProgram,\n         releaseShaderCache: releaseShaderCache,\n         // Exposed for resource monitoring & error feedback via renderer.info:\n         programs: programs,\n         dispose: dispose\n     };\n \n }\n \n function WebGLProperties() {\n \n     let properties = new WeakMap();\n \n     function get( object ) {\n \n         let map = properties.get( object );\n \n         if ( map === undefined ) {\n \n             map = {};\n             properties.set( object, map );\n \n         }\n \n         return map;\n \n     }\n \n     function remove( object ) {\n \n         properties.delete( object );\n \n     }\n \n     function update( object, key, value ) {\n \n         properties.get( object )[ key ] = value;\n \n     }\n \n     function dispose() {\n \n         properties = new WeakMap();\n \n     }\n \n     return {\n         get: get,\n         remove: remove,\n         update: update,\n         dispose: dispose\n     };\n \n }\n \n function painterSortStable( a, b ) {\n \n     if ( a.groupOrder !== b.groupOrder ) {\n \n         return a.groupOrder - b.groupOrder;\n \n     } else if ( a.renderOrder !== b.renderOrder ) {\n \n         return a.renderOrder - b.renderOrder;\n \n     } else if ( a.material.id !== b.material.id ) {\n \n         return a.material.id - b.material.id;\n \n     } else if ( a.z !== b.z ) {\n \n         return a.z - b.z;\n \n     } else {\n \n         return a.id - b.id;\n \n     }\n \n }\n \n function reversePainterSortStable( a, b ) {\n \n     if ( a.groupOrder !== b.groupOrder ) {\n \n         return a.groupOrder - b.groupOrder;\n \n     } else if ( a.renderOrder !== b.renderOrder ) {\n \n         return a.renderOrder - b.renderOrder;\n \n     } else if ( a.z !== b.z ) {\n \n         return b.z - a.z;\n \n     } else {\n \n         return a.id - b.id;\n \n     }\n \n }\n \n \n function WebGLRenderList() {\n \n     const renderItems = [];\n     let renderItemsIndex = 0;\n \n     const opaque = [];\n     const transmissive = [];\n     const transparent = [];\n \n     function init() {\n \n         renderItemsIndex = 0;\n \n         opaque.length = 0;\n         transmissive.length = 0;\n         transparent.length = 0;\n \n     }\n \n     function getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n \n         let renderItem = renderItems[ renderItemsIndex ];\n \n         if ( renderItem === undefined ) {\n \n             renderItem = {\n                 id: object.id,\n                 object: object,\n                 geometry: geometry,\n                 material: material,\n                 groupOrder: groupOrder,\n                 renderOrder: object.renderOrder,\n                 z: z,\n                 group: group\n             };\n \n             renderItems[ renderItemsIndex ] = renderItem;\n \n         } else {\n \n             renderItem.id = object.id;\n             renderItem.object = object;\n             renderItem.geometry = geometry;\n             renderItem.material = material;\n             renderItem.groupOrder = groupOrder;\n             renderItem.renderOrder = object.renderOrder;\n             renderItem.z = z;\n             renderItem.group = group;\n \n         }\n \n         renderItemsIndex ++;\n \n         return renderItem;\n \n     }\n \n     function push( object, geometry, material, groupOrder, z, group ) {\n \n         const renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n \n         if ( material.transmission > 0.0 ) {\n \n             transmissive.push( renderItem );\n \n         } else if ( material.transparent === true ) {\n \n             transparent.push( renderItem );\n \n         } else {\n \n             opaque.push( renderItem );\n \n         }\n \n     }\n \n     function unshift( object, geometry, material, groupOrder, z, group ) {\n \n         const renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n \n         if ( material.transmission > 0.0 ) {\n \n             transmissive.unshift( renderItem );\n \n         } else if ( material.transparent === true ) {\n \n             transparent.unshift( renderItem );\n \n         } else {\n \n             opaque.unshift( renderItem );\n \n         }\n \n     }\n \n     function sort( customOpaqueSort, customTransparentSort ) {\n \n         if ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n         if ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n         if ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n \n     }\n \n     function finish() {\n \n         // Clear references from inactive renderItems in the list\n \n         for ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n \n             const renderItem = renderItems[ i ];\n \n             if ( renderItem.id === null ) break;\n \n             renderItem.id = null;\n             renderItem.object = null;\n             renderItem.geometry = null;\n             renderItem.material = null;\n             renderItem.group = null;\n \n         }\n \n     }\n \n     return {\n \n         opaque: opaque,\n         transmissive: transmissive,\n         transparent: transparent,\n \n         init: init,\n         push: push,\n         unshift: unshift,\n         finish: finish,\n \n         sort: sort\n     };\n \n }\n \n function WebGLRenderLists() {\n \n     let lists = new WeakMap();\n \n     function get( scene, renderCallDepth ) {\n \n         let list;\n \n         if ( lists.has( scene ) === false ) {\n \n             list = new WebGLRenderList();\n             lists.set( scene, [ list ] );\n \n         } else {\n \n             if ( renderCallDepth >= lists.get( scene ).length ) {\n \n                 list = new WebGLRenderList();\n                 lists.get( scene ).push( list );\n \n             } else {\n \n                 list = lists.get( scene )[ renderCallDepth ];\n \n             }\n \n         }\n \n         return list;\n \n     }\n \n     function dispose() {\n \n         lists = new WeakMap();\n \n     }\n \n     return {\n         get: get,\n         dispose: dispose\n     };\n \n }\n \n function UniformsCache() {\n \n     const lights = {};\n \n     return {\n \n         get: function ( light ) {\n \n             if ( lights[ light.id ] !== undefined ) {\n \n                 return lights[ light.id ];\n \n             }\n \n             let uniforms;\n \n             switch ( light.type ) {\n \n                 case 'DirectionalLight':\n                     uniforms = {\n                         direction: new Vector3(),\n                         color: new Color()\n                     };\n                     break;\n \n                 case 'SpotLight':\n                     uniforms = {\n                         position: new Vector3(),\n                         direction: new Vector3(),\n                         color: new Color(),\n                         distance: 0,\n                         coneCos: 0,\n                         penumbraCos: 0,\n                         decay: 0\n                     };\n                     break;\n \n                 case 'PointLight':\n                     uniforms = {\n                         position: new Vector3(),\n                         color: new Color(),\n                         distance: 0,\n                         decay: 0\n                     };\n                     break;\n \n                 case 'HemisphereLight':\n                     uniforms = {\n                         direction: new Vector3(),\n                         skyColor: new Color(),\n                         groundColor: new Color()\n                     };\n                     break;\n \n                 case 'RectAreaLight':\n                     uniforms = {\n                         color: new Color(),\n                         position: new Vector3(),\n                         halfWidth: new Vector3(),\n                         halfHeight: new Vector3()\n                     };\n                     break;\n \n             }\n \n             lights[ light.id ] = uniforms;\n \n             return uniforms;\n \n         }\n \n     };\n \n }\n \n function ShadowUniformsCache() {\n \n     const lights = {};\n \n     return {\n \n         get: function ( light ) {\n \n             if ( lights[ light.id ] !== undefined ) {\n \n                 return lights[ light.id ];\n \n             }\n \n             let uniforms;\n \n             switch ( light.type ) {\n \n                 case 'DirectionalLight':\n                     uniforms = {\n                         shadowBias: 0,\n                         shadowNormalBias: 0,\n                         shadowRadius: 1,\n                         shadowMapSize: new Vector2()\n                     };\n                     break;\n \n                 case 'SpotLight':\n                     uniforms = {\n                         shadowBias: 0,\n                         shadowNormalBias: 0,\n                         shadowRadius: 1,\n                         shadowMapSize: new Vector2()\n                     };\n                     break;\n \n                 case 'PointLight':\n                     uniforms = {\n                         shadowBias: 0,\n                         shadowNormalBias: 0,\n                         shadowRadius: 1,\n                         shadowMapSize: new Vector2(),\n                         shadowCameraNear: 1,\n                         shadowCameraFar: 1000\n                     };\n                     break;\n \n                 // TODO (abelnation): set RectAreaLight shadow uniforms\n \n             }\n \n             lights[ light.id ] = uniforms;\n \n             return uniforms;\n \n         }\n \n     };\n \n }\n \n \n \n let nextVersion = 0;\n \n function shadowCastingLightsFirst( lightA, lightB ) {\n \n     return ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n \n }\n \n function WebGLLights( extensions, capabilities ) {\n \n     const cache = new UniformsCache();\n \n     const shadowCache = ShadowUniformsCache();\n \n     const state = {\n \n         version: 0,\n \n         hash: {\n             directionalLength: - 1,\n             pointLength: - 1,\n             spotLength: - 1,\n             rectAreaLength: - 1,\n             hemiLength: - 1,\n \n             numDirectionalShadows: - 1,\n             numPointShadows: - 1,\n             numSpotShadows: - 1\n         },\n \n         ambient: [ 0, 0, 0 ],\n         probe: [],\n         directional: [],\n         directionalShadow: [],\n         directionalShadowMap: [],\n         directionalShadowMatrix: [],\n         spot: [],\n         spotShadow: [],\n         spotShadowMap: [],\n         spotShadowMatrix: [],\n         rectArea: [],\n         rectAreaLTC1: null,\n         rectAreaLTC2: null,\n         point: [],\n         pointShadow: [],\n         pointShadowMap: [],\n         pointShadowMatrix: [],\n         hemi: []\n \n     };\n \n     for ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n \n     const vector3 = new Vector3();\n     const matrix4 = new Matrix4();\n     const matrix42 = new Matrix4();\n \n     function setup( lights, physicallyCorrectLights ) {\n \n         let r = 0, g = 0, b = 0;\n \n         for ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n \n         let directionalLength = 0;\n         let pointLength = 0;\n         let spotLength = 0;\n         let rectAreaLength = 0;\n         let hemiLength = 0;\n \n         let numDirectionalShadows = 0;\n         let numPointShadows = 0;\n         let numSpotShadows = 0;\n \n         lights.sort( shadowCastingLightsFirst );\n \n         // artist-friendly light intensity scaling factor\n         const scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n \n         for ( let i = 0, l = lights.length; i < l; i ++ ) {\n \n             const light = lights[ i ];\n \n             const color = light.color;\n             const intensity = light.intensity;\n             const distance = light.distance;\n \n             const shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n \n             if ( light.isAmbientLight ) {\n \n                 r += color.r * intensity * scaleFactor;\n                 g += color.g * intensity * scaleFactor;\n                 b += color.b * intensity * scaleFactor;\n \n             } else if ( light.isLightProbe ) {\n \n                 for ( let j = 0; j < 9; j ++ ) {\n \n                     state.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n \n                 }\n \n             } else if ( light.isDirectionalLight ) {\n \n                 const uniforms = cache.get( light );\n \n                 uniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n \n                 if ( light.castShadow ) {\n \n                     const shadow = light.shadow;\n \n                     const shadowUniforms = shadowCache.get( light );\n \n                     shadowUniforms.shadowBias = shadow.bias;\n                     shadowUniforms.shadowNormalBias = shadow.normalBias;\n                     shadowUniforms.shadowRadius = shadow.radius;\n                     shadowUniforms.shadowMapSize = shadow.mapSize;\n \n                     state.directionalShadow[ directionalLength ] = shadowUniforms;\n                     state.directionalShadowMap[ directionalLength ] = shadowMap;\n                     state.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n \n                     numDirectionalShadows ++;\n \n                 }\n \n                 state.directional[ directionalLength ] = uniforms;\n \n                 directionalLength ++;\n \n             } else if ( light.isSpotLight ) {\n \n                 const uniforms = cache.get( light );\n \n                 uniforms.position.setFromMatrixPosition( light.matrixWorld );\n \n                 uniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n                 uniforms.distance = distance;\n \n                 uniforms.coneCos = Math.cos( light.angle );\n                 uniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n                 uniforms.decay = light.decay;\n \n                 if ( light.castShadow ) {\n \n                     const shadow = light.shadow;\n \n                     const shadowUniforms = shadowCache.get( light );\n \n                     shadowUniforms.shadowBias = shadow.bias;\n                     shadowUniforms.shadowNormalBias = shadow.normalBias;\n                     shadowUniforms.shadowRadius = shadow.radius;\n                     shadowUniforms.shadowMapSize = shadow.mapSize;\n \n                     state.spotShadow[ spotLength ] = shadowUniforms;\n                     state.spotShadowMap[ spotLength ] = shadowMap;\n                     state.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n \n                     numSpotShadows ++;\n \n                 }\n \n                 state.spot[ spotLength ] = uniforms;\n \n                 spotLength ++;\n \n             } else if ( light.isRectAreaLight ) {\n \n                 const uniforms = cache.get( light );\n \n                 // (a) intensity is the total visible light emitted\n                 //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n \n                 // (b) intensity is the brightness of the light\n                 uniforms.color.copy( color ).multiplyScalar( intensity );\n \n                 uniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n                 uniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n \n                 state.rectArea[ rectAreaLength ] = uniforms;\n \n                 rectAreaLength ++;\n \n             } else if ( light.isPointLight ) {\n \n                 const uniforms = cache.get( light );\n \n                 uniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n                 uniforms.distance = light.distance;\n                 uniforms.decay = light.decay;\n \n                 if ( light.castShadow ) {\n \n                     const shadow = light.shadow;\n \n                     const shadowUniforms = shadowCache.get( light );\n \n                     shadowUniforms.shadowBias = shadow.bias;\n                     shadowUniforms.shadowNormalBias = shadow.normalBias;\n                     shadowUniforms.shadowRadius = shadow.radius;\n                     shadowUniforms.shadowMapSize = shadow.mapSize;\n                     shadowUniforms.shadowCameraNear = shadow.camera.near;\n                     shadowUniforms.shadowCameraFar = shadow.camera.far;\n \n                     state.pointShadow[ pointLength ] = shadowUniforms;\n                     state.pointShadowMap[ pointLength ] = shadowMap;\n                     state.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n \n                     numPointShadows ++;\n \n                 }\n \n                 state.point[ pointLength ] = uniforms;\n \n                 pointLength ++;\n \n             } else if ( light.isHemisphereLight ) {\n \n                 const uniforms = cache.get( light );\n \n                 uniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n                 uniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n \n                 state.hemi[ hemiLength ] = uniforms;\n \n                 hemiLength ++;\n \n             }\n \n         }\n \n         if ( rectAreaLength > 0 ) {\n \n             if ( capabilities.isWebGL2 ) {\n \n                 // WebGL 2\n \n                 state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n                 state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n \n             } else {\n \n                 // WebGL 1\n \n                 if ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n \n                     state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n                     state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n \n                 } else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n \n                     state.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n                     state.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n \n                 } else {\n \n                     console.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n \n                 }\n \n             }\n \n         }\n \n         state.ambient[ 0 ] = r;\n         state.ambient[ 1 ] = g;\n         state.ambient[ 2 ] = b;\n \n         const hash = state.hash;\n \n         if ( hash.directionalLength !== directionalLength ||\n             hash.pointLength !== pointLength ||\n             hash.spotLength !== spotLength ||\n             hash.rectAreaLength !== rectAreaLength ||\n             hash.hemiLength !== hemiLength ||\n             hash.numDirectionalShadows !== numDirectionalShadows ||\n             hash.numPointShadows !== numPointShadows ||\n             hash.numSpotShadows !== numSpotShadows ) {\n \n             state.directional.length = directionalLength;\n             state.spot.length = spotLength;\n             state.rectArea.length = rectAreaLength;\n             state.point.length = pointLength;\n             state.hemi.length = hemiLength;\n \n             state.directionalShadow.length = numDirectionalShadows;\n             state.directionalShadowMap.length = numDirectionalShadows;\n             state.pointShadow.length = numPointShadows;\n             state.pointShadowMap.length = numPointShadows;\n             state.spotShadow.length = numSpotShadows;\n             state.spotShadowMap.length = numSpotShadows;\n             state.directionalShadowMatrix.length = numDirectionalShadows;\n             state.pointShadowMatrix.length = numPointShadows;\n             state.spotShadowMatrix.length = numSpotShadows;\n \n             hash.directionalLength = directionalLength;\n             hash.pointLength = pointLength;\n             hash.spotLength = spotLength;\n             hash.rectAreaLength = rectAreaLength;\n             hash.hemiLength = hemiLength;\n \n             hash.numDirectionalShadows = numDirectionalShadows;\n             hash.numPointShadows = numPointShadows;\n             hash.numSpotShadows = numSpotShadows;\n \n             state.version = nextVersion ++;\n \n         }\n \n     }\n \n     function setupView( lights, camera ) {\n \n         let directionalLength = 0;\n         let pointLength = 0;\n         let spotLength = 0;\n         let rectAreaLength = 0;\n         let hemiLength = 0;\n \n         const viewMatrix = camera.matrixWorldInverse;\n \n         for ( let i = 0, l = lights.length; i < l; i ++ ) {\n \n             const light = lights[ i ];\n \n             if ( light.isDirectionalLight ) {\n \n                 const uniforms = state.directional[ directionalLength ];\n \n                 uniforms.direction.setFromMatrixPosition( light.matrixWorld );\n                 vector3.setFromMatrixPosition( light.target.matrixWorld );\n                 uniforms.direction.sub( vector3 );\n                 uniforms.direction.transformDirection( viewMatrix );\n \n                 directionalLength ++;\n \n             } else if ( light.isSpotLight ) {\n \n                 const uniforms = state.spot[ spotLength ];\n \n                 uniforms.position.setFromMatrixPosition( light.matrixWorld );\n                 uniforms.position.applyMatrix4( viewMatrix );\n \n                 uniforms.direction.setFromMatrixPosition( light.matrixWorld );\n                 vector3.setFromMatrixPosition( light.target.matrixWorld );\n                 uniforms.direction.sub( vector3 );\n                 uniforms.direction.transformDirection( viewMatrix );\n \n                 spotLength ++;\n \n             } else if ( light.isRectAreaLight ) {\n \n                 const uniforms = state.rectArea[ rectAreaLength ];\n \n                 uniforms.position.setFromMatrixPosition( light.matrixWorld );\n                 uniforms.position.applyMatrix4( viewMatrix );\n \n                 // extract local rotation of light to derive width/height half vectors\n                 matrix42.identity();\n                 matrix4.copy( light.matrixWorld );\n                 matrix4.premultiply( viewMatrix );\n                 matrix42.extractRotation( matrix4 );\n \n                 uniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n                 uniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n \n                 uniforms.halfWidth.applyMatrix4( matrix42 );\n                 uniforms.halfHeight.applyMatrix4( matrix42 );\n \n                 rectAreaLength ++;\n \n             } else if ( light.isPointLight ) {\n \n                 const uniforms = state.point[ pointLength ];\n \n                 uniforms.position.setFromMatrixPosition( light.matrixWorld );\n                 uniforms.position.applyMatrix4( viewMatrix );\n \n                 pointLength ++;\n \n             } else if ( light.isHemisphereLight ) {\n \n                 const uniforms = state.hemi[ hemiLength ];\n \n                 uniforms.direction.setFromMatrixPosition( light.matrixWorld );\n                 uniforms.direction.transformDirection( viewMatrix );\n                 uniforms.direction.normalize();\n \n                 hemiLength ++;\n \n             }\n \n         }\n \n     }\n \n     return {\n         setup: setup,\n         setupView: setupView,\n         state: state\n     };\n \n }\n \n function WebGLRenderState( extensions, capabilities ) {\n \n     const lights = new WebGLLights( extensions, capabilities );\n \n     const lightsArray = [];\n     const shadowsArray = [];\n \n     function init() {\n \n         lightsArray.length = 0;\n         shadowsArray.length = 0;\n \n     }\n \n     function pushLight( light ) {\n \n         lightsArray.push( light );\n \n     }\n \n     function pushShadow( shadowLight ) {\n \n         shadowsArray.push( shadowLight );\n \n     }\n \n     function setupLights( physicallyCorrectLights ) {\n \n         lights.setup( lightsArray, physicallyCorrectLights );\n \n     }\n \n     function setupLightsView( camera ) {\n \n         lights.setupView( lightsArray, camera );\n \n     }\n \n     const state = {\n         lightsArray: lightsArray,\n         shadowsArray: shadowsArray,\n \n         lights: lights\n     };\n \n     return {\n         init: init,\n         state: state,\n         setupLights: setupLights,\n         setupLightsView: setupLightsView,\n \n         pushLight: pushLight,\n         pushShadow: pushShadow\n     };\n \n }\n \n function WebGLRenderStates( extensions, capabilities ) {\n \n     let renderStates = new WeakMap();\n \n     function get( scene, renderCallDepth = 0 ) {\n \n         let renderState;\n \n         if ( renderStates.has( scene ) === false ) {\n \n             renderState = new WebGLRenderState( extensions, capabilities );\n             renderStates.set( scene, [ renderState ] );\n \n         } else {\n \n             if ( renderCallDepth >= renderStates.get( scene ).length ) {\n \n                 renderState = new WebGLRenderState( extensions, capabilities );\n                 renderStates.get( scene ).push( renderState );\n \n             } else {\n \n                 renderState = renderStates.get( scene )[ renderCallDepth ];\n \n             }\n \n         }\n \n         return renderState;\n \n     }\n \n     function dispose() {\n \n         renderStates = new WeakMap();\n \n     }\n \n     return {\n         get: get,\n         dispose: dispose\n     };\n \n }\n \n class MeshDepthMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.type = 'MeshDepthMaterial';\n \n         this.depthPacking = BasicDepthPacking;\n \n         this.map = null;\n \n         this.alphaMap = null;\n \n         this.displacementMap = null;\n         this.displacementScale = 1;\n         this.displacementBias = 0;\n \n         this.wireframe = false;\n         this.wireframeLinewidth = 1;\n \n         this.fog = false;\n \n         this.setValues( parameters );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.depthPacking = source.depthPacking;\n \n         this.map = source.map;\n \n         this.alphaMap = source.alphaMap;\n \n         this.displacementMap = source.displacementMap;\n         this.displacementScale = source.displacementScale;\n         this.displacementBias = source.displacementBias;\n \n         this.wireframe = source.wireframe;\n         this.wireframeLinewidth = source.wireframeLinewidth;\n \n         return this;\n \n     }\n \n }\n \n MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n \n class MeshDistanceMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.type = 'MeshDistanceMaterial';\n \n         this.referencePosition = new Vector3();\n         this.nearDistance = 1;\n         this.farDistance = 1000;\n \n         this.map = null;\n \n         this.alphaMap = null;\n \n         this.displacementMap = null;\n         this.displacementScale = 1;\n         this.displacementBias = 0;\n \n         this.fog = false;\n \n         this.setValues( parameters );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.referencePosition.copy( source.referencePosition );\n         this.nearDistance = source.nearDistance;\n         this.farDistance = source.farDistance;\n \n         this.map = source.map;\n \n         this.alphaMap = source.alphaMap;\n \n         this.displacementMap = source.displacementMap;\n         this.displacementScale = source.displacementScale;\n         this.displacementBias = source.displacementBias;\n \n         return this;\n \n     }\n \n }\n \n MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n \n const vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n \n const fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n \n function WebGLShadowMap( _renderer, _objects, _capabilities ) {\n \n     let _frustum = new Frustum();\n \n     const _shadowMapSize = new Vector2(),\n         _viewportSize = new Vector2(),\n \n         _viewport = new Vector4(),\n \n         _depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n         _distanceMaterial = new MeshDistanceMaterial(),\n \n         _materialCache = {},\n \n         _maxTextureSize = _capabilities.maxTextureSize;\n \n     const shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n \n     const shadowMaterialVertical = new ShaderMaterial( {\n         defines: {\n             VSM_SAMPLES: 8\n         },\n         uniforms: {\n             shadow_pass: { value: null },\n             resolution: { value: new Vector2() },\n             radius: { value: 4.0 }\n         },\n \n         vertexShader: vertex,\n         fragmentShader: fragment\n \n     } );\n \n     const shadowMaterialHorizontal = shadowMaterialVertical.clone();\n     shadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n \n     const fullScreenTri = new BufferGeometry();\n     fullScreenTri.setAttribute(\n         'position',\n         new BufferAttribute(\n             new Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n             3\n         )\n     );\n \n     const fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n \n     const scope = this;\n \n     this.enabled = false;\n \n     this.autoUpdate = true;\n     this.needsUpdate = false;\n \n     this.type = PCFShadowMap;\n \n     this.render = function ( lights, scene, camera ) {\n \n         if ( scope.enabled === false ) return;\n         if ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n \n         if ( lights.length === 0 ) return;\n \n         const currentRenderTarget = _renderer.getRenderTarget();\n         const activeCubeFace = _renderer.getActiveCubeFace();\n         const activeMipmapLevel = _renderer.getActiveMipmapLevel();\n \n         const _state = _renderer.state;\n \n         // Set GL state for depth map.\n         _state.setBlending( NoBlending );\n         _state.buffers.color.setClear( 1, 1, 1, 1 );\n         _state.buffers.depth.setTest( true );\n         _state.setScissorTest( false );\n \n         // render depth map\n \n         for ( let i = 0, il = lights.length; i < il; i ++ ) {\n \n             const light = lights[ i ];\n             const shadow = light.shadow;\n \n             if ( shadow === undefined ) {\n \n                 console.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n                 continue;\n \n             }\n \n             if ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n \n             _shadowMapSize.copy( shadow.mapSize );\n \n             const shadowFrameExtents = shadow.getFrameExtents();\n \n             _shadowMapSize.multiply( shadowFrameExtents );\n \n             _viewportSize.copy( shadow.mapSize );\n \n             if ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n \n                 if ( _shadowMapSize.x > _maxTextureSize ) {\n \n                     _viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n                     _shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n                     shadow.mapSize.x = _viewportSize.x;\n \n                 }\n \n                 if ( _shadowMapSize.y > _maxTextureSize ) {\n \n                     _viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n                     _shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n                     shadow.mapSize.y = _viewportSize.y;\n \n                 }\n \n             }\n \n             if ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n \n                 shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n                 shadow.map.texture.name = light.name + '.shadowMap';\n \n                 shadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n \n                 shadow.camera.updateProjectionMatrix();\n \n             }\n \n             if ( shadow.map === null ) {\n \n                 const pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n \n                 shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n                 shadow.map.texture.name = light.name + '.shadowMap';\n \n                 shadow.camera.updateProjectionMatrix();\n \n             }\n \n             _renderer.setRenderTarget( shadow.map );\n             _renderer.clear();\n \n             const viewportCount = shadow.getViewportCount();\n \n             for ( let vp = 0; vp < viewportCount; vp ++ ) {\n \n                 const viewport = shadow.getViewport( vp );\n \n                 _viewport.set(\n                     _viewportSize.x * viewport.x,\n                     _viewportSize.y * viewport.y,\n                     _viewportSize.x * viewport.z,\n                     _viewportSize.y * viewport.w\n                 );\n \n                 _state.viewport( _viewport );\n \n                 shadow.updateMatrices( light, vp );\n \n                 _frustum = shadow.getFrustum();\n \n                 renderObject( scene, camera, shadow.camera, light, this.type );\n \n             }\n \n             // do blur pass for VSM\n \n             if ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n \n                 VSMPass( shadow, camera );\n \n             }\n \n             shadow.needsUpdate = false;\n \n         }\n \n         scope.needsUpdate = false;\n \n         _renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n \n     };\n \n     function VSMPass( shadow, camera ) {\n \n         const geometry = _objects.update( fullScreenMesh );\n \n         if ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n \n             shadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n             shadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n \n             shadowMaterialVertical.needsUpdate = true;\n             shadowMaterialHorizontal.needsUpdate = true;\n \n         }\n \n         // vertical pass\n \n         shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n         shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n         shadowMaterialVertical.uniforms.radius.value = shadow.radius;\n         _renderer.setRenderTarget( shadow.mapPass );\n         _renderer.clear();\n         _renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n \n         // horizontal pass\n \n         shadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n         shadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n         shadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n         _renderer.setRenderTarget( shadow.map );\n         _renderer.clear();\n         _renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n \n     }\n \n     function getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n \n         let result = null;\n \n         const customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n \n         if ( customMaterial !== undefined ) {\n \n             result = customMaterial;\n \n         } else {\n \n             result = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n \n         }\n \n         if ( ( _renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 ) ||\n             ( material.displacementMap && material.displacementScale !== 0 ) ||\n             ( material.alphaMap && material.alphaTest > 0 ) ) {\n \n             // in this case we need a unique material instance reflecting the\n             // appropriate state\n \n             const keyA = result.uuid, keyB = material.uuid;\n \n             let materialsForVariant = _materialCache[ keyA ];\n \n             if ( materialsForVariant === undefined ) {\n \n                 materialsForVariant = {};\n                 _materialCache[ keyA ] = materialsForVariant;\n \n             }\n \n             let cachedMaterial = materialsForVariant[ keyB ];\n \n             if ( cachedMaterial === undefined ) {\n \n                 cachedMaterial = result.clone();\n                 materialsForVariant[ keyB ] = cachedMaterial;\n \n             }\n \n             result = cachedMaterial;\n \n         }\n \n         result.visible = material.visible;\n         result.wireframe = material.wireframe;\n \n         if ( type === VSMShadowMap ) {\n \n             result.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n \n         } else {\n \n             result.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n \n         }\n \n         result.alphaMap = material.alphaMap;\n         result.alphaTest = material.alphaTest;\n \n         result.clipShadows = material.clipShadows;\n         result.clippingPlanes = material.clippingPlanes;\n         result.clipIntersection = material.clipIntersection;\n \n         result.displacementMap = material.displacementMap;\n         result.displacementScale = material.displacementScale;\n         result.displacementBias = material.displacementBias;\n \n         result.wireframeLinewidth = material.wireframeLinewidth;\n         result.linewidth = material.linewidth;\n \n         if ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n \n             result.referencePosition.setFromMatrixPosition( light.matrixWorld );\n             result.nearDistance = shadowCameraNear;\n             result.farDistance = shadowCameraFar;\n \n         }\n \n         return result;\n \n     }\n \n     function renderObject( object, camera, shadowCamera, light, type ) {\n \n         if ( object.visible === false ) return;\n \n         const visible = object.layers.test( camera.layers );\n \n         if ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n \n             if ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n \n                 object.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n \n                 const geometry = _objects.update( object );\n                 const material = object.material;\n \n                 if ( Array.isArray( material ) ) {\n \n                     const groups = geometry.groups;\n \n                     for ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n \n                         const group = groups[ k ];\n                         const groupMaterial = material[ group.materialIndex ];\n \n                         if ( groupMaterial && groupMaterial.visible ) {\n \n                             const depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n \n                             _renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n \n                         }\n \n                     }\n \n                 } else if ( material.visible ) {\n \n                     const depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n \n                     _renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n \n                 }\n \n             }\n \n         }\n \n         const children = object.children;\n \n         for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n             renderObject( children[ i ], camera, shadowCamera, light, type );\n \n         }\n \n     }\n \n }\n \n function WebGLState( gl, extensions, capabilities ) {\n \n     const isWebGL2 = capabilities.isWebGL2;\n \n     function ColorBuffer() {\n \n         let locked = false;\n \n         const color = new Vector4();\n         let currentColorMask = null;\n         const currentColorClear = new Vector4( 0, 0, 0, 0 );\n \n         return {\n \n             setMask: function ( colorMask ) {\n \n                 if ( currentColorMask !== colorMask && ! locked ) {\n \n                     gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n                     currentColorMask = colorMask;\n \n                 }\n \n             },\n \n             setLocked: function ( lock ) {\n \n                 locked = lock;\n \n             },\n \n             setClear: function ( r, g, b, a, premultipliedAlpha ) {\n \n                 if ( premultipliedAlpha === true ) {\n \n                     r *= a; g *= a; b *= a;\n \n                 }\n \n                 color.set( r, g, b, a );\n \n                 if ( currentColorClear.equals( color ) === false ) {\n \n                     gl.clearColor( r, g, b, a );\n                     currentColorClear.copy( color );\n \n                 }\n \n             },\n \n             reset: function () {\n \n                 locked = false;\n \n                 currentColorMask = null;\n                 currentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n \n             }\n \n         };\n \n     }\n \n     function DepthBuffer() {\n \n         let locked = false;\n \n         let currentDepthMask = null;\n         let currentDepthFunc = null;\n         let currentDepthClear = null;\n \n         return {\n \n             setTest: function ( depthTest ) {\n \n                 if ( depthTest ) {\n \n                     enable( 2929 );\n \n                 } else {\n \n                     disable( 2929 );\n \n                 }\n \n             },\n \n             setMask: function ( depthMask ) {\n \n                 if ( currentDepthMask !== depthMask && ! locked ) {\n \n                     gl.depthMask( depthMask );\n                     currentDepthMask = depthMask;\n \n                 }\n \n             },\n \n             setFunc: function ( depthFunc ) {\n \n                 if ( currentDepthFunc !== depthFunc ) {\n \n                     if ( depthFunc ) {\n \n                         switch ( depthFunc ) {\n \n                             case NeverDepth:\n \n                                 gl.depthFunc( 512 );\n                                 break;\n \n                             case AlwaysDepth:\n \n                                 gl.depthFunc( 519 );\n                                 break;\n \n                             case LessDepth:\n \n                                 gl.depthFunc( 513 );\n                                 break;\n \n                             case LessEqualDepth:\n \n                                 gl.depthFunc( 515 );\n                                 break;\n \n                             case EqualDepth:\n \n                                 gl.depthFunc( 514 );\n                                 break;\n \n                             case GreaterEqualDepth:\n \n                                 gl.depthFunc( 518 );\n                                 break;\n \n                             case GreaterDepth:\n \n                                 gl.depthFunc( 516 );\n                                 break;\n \n                             case NotEqualDepth:\n \n                                 gl.depthFunc( 517 );\n                                 break;\n \n                             default:\n \n                                 gl.depthFunc( 515 );\n \n                         }\n \n                     } else {\n \n                         gl.depthFunc( 515 );\n \n                     }\n \n                     currentDepthFunc = depthFunc;\n \n                 }\n \n             },\n \n             setLocked: function ( lock ) {\n \n                 locked = lock;\n \n             },\n \n             setClear: function ( depth ) {\n \n                 if ( currentDepthClear !== depth ) {\n \n                     gl.clearDepth( depth );\n                     currentDepthClear = depth;\n \n                 }\n \n             },\n \n             reset: function () {\n \n                 locked = false;\n \n                 currentDepthMask = null;\n                 currentDepthFunc = null;\n                 currentDepthClear = null;\n \n             }\n \n         };\n \n     }\n \n     function StencilBuffer() {\n \n         let locked = false;\n \n         let currentStencilMask = null;\n         let currentStencilFunc = null;\n         let currentStencilRef = null;\n         let currentStencilFuncMask = null;\n         let currentStencilFail = null;\n         let currentStencilZFail = null;\n         let currentStencilZPass = null;\n         let currentStencilClear = null;\n \n         return {\n \n             setTest: function ( stencilTest ) {\n \n                 if ( ! locked ) {\n \n                     if ( stencilTest ) {\n \n                         enable( 2960 );\n \n                     } else {\n \n                         disable( 2960 );\n \n                     }\n \n                 }\n \n             },\n \n             setMask: function ( stencilMask ) {\n \n                 if ( currentStencilMask !== stencilMask && ! locked ) {\n \n                     gl.stencilMask( stencilMask );\n                     currentStencilMask = stencilMask;\n \n                 }\n \n             },\n \n             setFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n \n                 if ( currentStencilFunc !== stencilFunc ||\n                      currentStencilRef !== stencilRef ||\n                      currentStencilFuncMask !== stencilMask ) {\n \n                     gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n \n                     currentStencilFunc = stencilFunc;\n                     currentStencilRef = stencilRef;\n                     currentStencilFuncMask = stencilMask;\n \n                 }\n \n             },\n \n             setOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n \n                 if ( currentStencilFail !== stencilFail ||\n                      currentStencilZFail !== stencilZFail ||\n                      currentStencilZPass !== stencilZPass ) {\n \n                     gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n \n                     currentStencilFail = stencilFail;\n                     currentStencilZFail = stencilZFail;\n                     currentStencilZPass = stencilZPass;\n \n                 }\n \n             },\n \n             setLocked: function ( lock ) {\n \n                 locked = lock;\n \n             },\n \n             setClear: function ( stencil ) {\n \n                 if ( currentStencilClear !== stencil ) {\n \n                     gl.clearStencil( stencil );\n                     currentStencilClear = stencil;\n \n                 }\n \n             },\n \n             reset: function () {\n \n                 locked = false;\n \n                 currentStencilMask = null;\n                 currentStencilFunc = null;\n                 currentStencilRef = null;\n                 currentStencilFuncMask = null;\n                 currentStencilFail = null;\n                 currentStencilZFail = null;\n                 currentStencilZPass = null;\n                 currentStencilClear = null;\n \n             }\n \n         };\n \n     }\n \n     //\n \n     const colorBuffer = new ColorBuffer();\n     const depthBuffer = new DepthBuffer();\n     const stencilBuffer = new StencilBuffer();\n \n     let enabledCapabilities = {};\n \n     let currentBoundFramebuffers = {};\n     let currentDrawbuffers = new WeakMap();\n     let defaultDrawbuffers = [];\n \n     let currentProgram = null;\n \n     let currentBlendingEnabled = false;\n     let currentBlending = null;\n     let currentBlendEquation = null;\n     let currentBlendSrc = null;\n     let currentBlendDst = null;\n     let currentBlendEquationAlpha = null;\n     let currentBlendSrcAlpha = null;\n     let currentBlendDstAlpha = null;\n     let currentPremultipledAlpha = false;\n \n     let currentFlipSided = null;\n     let currentCullFace = null;\n \n     let currentLineWidth = null;\n \n     let currentPolygonOffsetFactor = null;\n     let currentPolygonOffsetUnits = null;\n \n     const maxTextures = gl.getParameter( 35661 );\n \n     let lineWidthAvailable = false;\n     let version = 0;\n     const glVersion = gl.getParameter( 7938 );\n \n     if ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n \n         version = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n         lineWidthAvailable = ( version >= 1.0 );\n \n     } else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n \n         version = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n         lineWidthAvailable = ( version >= 2.0 );\n \n     }\n \n     let currentTextureSlot = null;\n     let currentBoundTextures = {};\n \n     const scissorParam = gl.getParameter( 3088 );\n     const viewportParam = gl.getParameter( 2978 );\n \n     const currentScissor = new Vector4().fromArray( scissorParam );\n     const currentViewport = new Vector4().fromArray( viewportParam );\n \n     function createTexture( type, target, count ) {\n \n         const data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n         const texture = gl.createTexture();\n \n         gl.bindTexture( type, texture );\n         gl.texParameteri( type, 10241, 9728 );\n         gl.texParameteri( type, 10240, 9728 );\n \n         for ( let i = 0; i < count; i ++ ) {\n \n             gl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n \n         }\n \n         return texture;\n \n     }\n \n     const emptyTextures = {};\n     emptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n     emptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n \n     // init\n \n     colorBuffer.setClear( 0, 0, 0, 1 );\n     depthBuffer.setClear( 1 );\n     stencilBuffer.setClear( 0 );\n \n     enable( 2929 );\n     depthBuffer.setFunc( LessEqualDepth );\n \n     setFlipSided( false );\n     setCullFace( CullFaceBack );\n     enable( 2884 );\n \n     setBlending( NoBlending );\n \n     //\n \n     function enable( id ) {\n \n         if ( enabledCapabilities[ id ] !== true ) {\n \n             gl.enable( id );\n             enabledCapabilities[ id ] = true;\n \n         }\n \n     }\n \n     function disable( id ) {\n \n         if ( enabledCapabilities[ id ] !== false ) {\n \n             gl.disable( id );\n             enabledCapabilities[ id ] = false;\n \n         }\n \n     }\n \n     function bindFramebuffer( target, framebuffer ) {\n \n         if ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n \n             gl.bindFramebuffer( target, framebuffer );\n \n             currentBoundFramebuffers[ target ] = framebuffer;\n \n             if ( isWebGL2 ) {\n \n                 // 36009 is equivalent to 36160\n \n                 if ( target === 36009 ) {\n \n                     currentBoundFramebuffers[ 36160 ] = framebuffer;\n \n                 }\n \n                 if ( target === 36160 ) {\n \n                     currentBoundFramebuffers[ 36009 ] = framebuffer;\n \n                 }\n \n             }\n \n             return true;\n \n         }\n \n         return false;\n \n     }\n \n     function drawBuffers( renderTarget, framebuffer ) {\n \n         let drawBuffers = defaultDrawbuffers;\n \n         let needsUpdate = false;\n \n         if ( renderTarget ) {\n \n             drawBuffers = currentDrawbuffers.get( framebuffer );\n \n             if ( drawBuffers === undefined ) {\n \n                 drawBuffers = [];\n                 currentDrawbuffers.set( framebuffer, drawBuffers );\n \n             }\n \n             if ( renderTarget.isWebGLMultipleRenderTargets ) {\n \n                 const textures = renderTarget.texture;\n \n                 if ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n \n                     for ( let i = 0, il = textures.length; i < il; i ++ ) {\n \n                         drawBuffers[ i ] = 36064 + i;\n \n                     }\n \n                     drawBuffers.length = textures.length;\n \n                     needsUpdate = true;\n \n                 }\n \n             } else {\n \n                 if ( drawBuffers[ 0 ] !== 36064 ) {\n \n                     drawBuffers[ 0 ] = 36064;\n \n                     needsUpdate = true;\n \n                 }\n \n             }\n \n         } else {\n \n             if ( drawBuffers[ 0 ] !== 1029 ) {\n \n                 drawBuffers[ 0 ] = 1029;\n \n                 needsUpdate = true;\n \n             }\n \n         }\n \n         if ( needsUpdate ) {\n \n             if ( capabilities.isWebGL2 ) {\n \n                 gl.drawBuffers( drawBuffers );\n \n             } else {\n \n                 extensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n \n             }\n \n         }\n \n \n     }\n \n     function useProgram( program ) {\n \n         if ( currentProgram !== program ) {\n \n             gl.useProgram( program );\n \n             currentProgram = program;\n \n             return true;\n \n         }\n \n         return false;\n \n     }\n \n     const equationToGL = {\n         [ AddEquation ]: 32774,\n         [ SubtractEquation ]: 32778,\n         [ ReverseSubtractEquation ]: 32779\n     };\n \n     if ( isWebGL2 ) {\n \n         equationToGL[ MinEquation ] = 32775;\n         equationToGL[ MaxEquation ] = 32776;\n \n     } else {\n \n         const extension = extensions.get( 'EXT_blend_minmax' );\n \n         if ( extension !== null ) {\n \n             equationToGL[ MinEquation ] = extension.MIN_EXT;\n             equationToGL[ MaxEquation ] = extension.MAX_EXT;\n \n         }\n \n     }\n \n     const factorToGL = {\n         [ ZeroFactor ]: 0,\n         [ OneFactor ]: 1,\n         [ SrcColorFactor ]: 768,\n         [ SrcAlphaFactor ]: 770,\n         [ SrcAlphaSaturateFactor ]: 776,\n         [ DstColorFactor ]: 774,\n         [ DstAlphaFactor ]: 772,\n         [ OneMinusSrcColorFactor ]: 769,\n         [ OneMinusSrcAlphaFactor ]: 771,\n         [ OneMinusDstColorFactor ]: 775,\n         [ OneMinusDstAlphaFactor ]: 773\n     };\n \n     function setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n \n         if ( blending === NoBlending ) {\n \n             if ( currentBlendingEnabled === true ) {\n \n                 disable( 3042 );\n                 currentBlendingEnabled = false;\n \n             }\n \n             return;\n \n         }\n \n         if ( currentBlendingEnabled === false ) {\n \n             enable( 3042 );\n             currentBlendingEnabled = true;\n \n         }\n \n         if ( blending !== CustomBlending ) {\n \n             if ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n \n                 if ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n \n                     gl.blendEquation( 32774 );\n \n                     currentBlendEquation = AddEquation;\n                     currentBlendEquationAlpha = AddEquation;\n \n                 }\n \n                 if ( premultipliedAlpha ) {\n \n                     switch ( blending ) {\n \n                         case NormalBlending:\n                             gl.blendFuncSeparate( 1, 771, 1, 771 );\n                             break;\n \n                         case AdditiveBlending:\n                             gl.blendFunc( 1, 1 );\n                             break;\n \n                         case SubtractiveBlending:\n                             gl.blendFuncSeparate( 0, 769, 0, 1 );\n                             break;\n \n                         case MultiplyBlending:\n                             gl.blendFuncSeparate( 0, 768, 0, 770 );\n                             break;\n \n                         default:\n                             console.error( 'THREE.WebGLState: Invalid blending: ', blending );\n                             break;\n \n                     }\n \n                 } else {\n \n                     switch ( blending ) {\n \n                         case NormalBlending:\n                             gl.blendFuncSeparate( 770, 771, 1, 771 );\n                             break;\n \n                         case AdditiveBlending:\n                             gl.blendFunc( 770, 1 );\n                             break;\n \n                         case SubtractiveBlending:\n                             gl.blendFuncSeparate( 0, 769, 0, 1 );\n                             break;\n \n                         case MultiplyBlending:\n                             gl.blendFunc( 0, 768 );\n                             break;\n \n                         default:\n                             console.error( 'THREE.WebGLState: Invalid blending: ', blending );\n                             break;\n \n                     }\n \n                 }\n \n                 currentBlendSrc = null;\n                 currentBlendDst = null;\n                 currentBlendSrcAlpha = null;\n                 currentBlendDstAlpha = null;\n \n                 currentBlending = blending;\n                 currentPremultipledAlpha = premultipliedAlpha;\n \n             }\n \n             return;\n \n         }\n \n         // custom blending\n \n         blendEquationAlpha = blendEquationAlpha || blendEquation;\n         blendSrcAlpha = blendSrcAlpha || blendSrc;\n         blendDstAlpha = blendDstAlpha || blendDst;\n \n         if ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n \n             gl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n \n             currentBlendEquation = blendEquation;\n             currentBlendEquationAlpha = blendEquationAlpha;\n \n         }\n \n         if ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n \n             gl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n \n             currentBlendSrc = blendSrc;\n             currentBlendDst = blendDst;\n             currentBlendSrcAlpha = blendSrcAlpha;\n             currentBlendDstAlpha = blendDstAlpha;\n \n         }\n \n         currentBlending = blending;\n         currentPremultipledAlpha = null;\n \n     }\n \n     function setMaterial( material, frontFaceCW ) {\n \n         material.side === DoubleSide\n             ? disable( 2884 )\n             : enable( 2884 );\n \n         let flipSided = ( material.side === BackSide );\n         if ( frontFaceCW ) flipSided = ! flipSided;\n \n         setFlipSided( flipSided );\n \n         ( material.blending === NormalBlending && material.transparent === false )\n             ? setBlending( NoBlending )\n             : setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n \n         depthBuffer.setFunc( material.depthFunc );\n         depthBuffer.setTest( material.depthTest );\n         depthBuffer.setMask( material.depthWrite );\n         colorBuffer.setMask( material.colorWrite );\n \n         const stencilWrite = material.stencilWrite;\n         stencilBuffer.setTest( stencilWrite );\n         if ( stencilWrite ) {\n \n             stencilBuffer.setMask( material.stencilWriteMask );\n             stencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n             stencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n \n         }\n \n         setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n \n         material.alphaToCoverage === true\n             ? enable( 32926 )\n             : disable( 32926 );\n \n     }\n \n     //\n \n     function setFlipSided( flipSided ) {\n \n         if ( currentFlipSided !== flipSided ) {\n \n             if ( flipSided ) {\n \n                 gl.frontFace( 2304 );\n \n             } else {\n \n                 gl.frontFace( 2305 );\n \n             }\n \n             currentFlipSided = flipSided;\n \n         }\n \n     }\n \n     function setCullFace( cullFace ) {\n \n         if ( cullFace !== CullFaceNone ) {\n \n             enable( 2884 );\n \n             if ( cullFace !== currentCullFace ) {\n \n                 if ( cullFace === CullFaceBack ) {\n \n                     gl.cullFace( 1029 );\n \n                 } else if ( cullFace === CullFaceFront ) {\n \n                     gl.cullFace( 1028 );\n \n                 } else {\n \n                     gl.cullFace( 1032 );\n \n                 }\n \n             }\n \n         } else {\n \n             disable( 2884 );\n \n         }\n \n         currentCullFace = cullFace;\n \n     }\n \n     function setLineWidth( width ) {\n \n         if ( width !== currentLineWidth ) {\n \n             if ( lineWidthAvailable ) gl.lineWidth( width );\n \n             currentLineWidth = width;\n \n         }\n \n     }\n \n     function setPolygonOffset( polygonOffset, factor, units ) {\n \n         if ( polygonOffset ) {\n \n             enable( 32823 );\n \n             if ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n \n                 gl.polygonOffset( factor, units );\n \n                 currentPolygonOffsetFactor = factor;\n                 currentPolygonOffsetUnits = units;\n \n             }\n \n         } else {\n \n             disable( 32823 );\n \n         }\n \n     }\n \n     function setScissorTest( scissorTest ) {\n \n         if ( scissorTest ) {\n \n             enable( 3089 );\n \n         } else {\n \n             disable( 3089 );\n \n         }\n \n     }\n \n     // texture\n \n     function activeTexture( webglSlot ) {\n \n         if ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n \n         if ( currentTextureSlot !== webglSlot ) {\n \n             gl.activeTexture( webglSlot );\n             currentTextureSlot = webglSlot;\n \n         }\n \n     }\n \n     function bindTexture( webglType, webglTexture ) {\n \n         if ( currentTextureSlot === null ) {\n \n             activeTexture();\n \n         }\n \n         let boundTexture = currentBoundTextures[ currentTextureSlot ];\n \n         if ( boundTexture === undefined ) {\n \n             boundTexture = { type: undefined, texture: undefined };\n             currentBoundTextures[ currentTextureSlot ] = boundTexture;\n \n         }\n \n         if ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n \n             gl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n \n             boundTexture.type = webglType;\n             boundTexture.texture = webglTexture;\n \n         }\n \n     }\n \n     function unbindTexture() {\n \n         const boundTexture = currentBoundTextures[ currentTextureSlot ];\n \n         if ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n \n             gl.bindTexture( boundTexture.type, null );\n \n             boundTexture.type = undefined;\n             boundTexture.texture = undefined;\n \n         }\n \n     }\n \n     function compressedTexImage2D() {\n \n         try {\n \n             gl.compressedTexImage2D.apply( gl, arguments );\n \n         } catch ( error ) {\n \n             console.error( 'THREE.WebGLState:', error );\n \n         }\n \n     }\n \n     function texSubImage2D() {\n \n         try {\n \n             gl.texSubImage2D.apply( gl, arguments );\n \n         } catch ( error ) {\n \n             console.error( 'THREE.WebGLState:', error );\n \n         }\n \n     }\n \n     function texSubImage3D() {\n \n         try {\n \n             gl.texSubImage3D.apply( gl, arguments );\n \n         } catch ( error ) {\n \n             console.error( 'THREE.WebGLState:', error );\n \n         }\n \n     }\n \n     function compressedTexSubImage2D() {\n \n         try {\n \n             gl.compressedTexSubImage2D.apply( gl, arguments );\n \n         } catch ( error ) {\n \n             console.error( 'THREE.WebGLState:', error );\n \n         }\n \n     }\n \n     function texStorage2D() {\n \n         try {\n \n             gl.texStorage2D.apply( gl, arguments );\n \n         } catch ( error ) {\n \n             console.error( 'THREE.WebGLState:', error );\n \n         }\n \n     }\n \n     function texStorage3D() {\n \n         try {\n \n             gl.texStorage3D.apply( gl, arguments );\n \n         } catch ( error ) {\n \n             console.error( 'THREE.WebGLState:', error );\n \n         }\n \n     }\n \n     function texImage2D() {\n \n         try {\n \n             gl.texImage2D.apply( gl, arguments );\n \n         } catch ( error ) {\n \n             console.error( 'THREE.WebGLState:', error );\n \n         }\n \n     }\n \n     function texImage3D() {\n \n         try {\n \n             gl.texImage3D.apply( gl, arguments );\n \n         } catch ( error ) {\n \n             console.error( 'THREE.WebGLState:', error );\n \n         }\n \n     }\n \n     //\n \n     function scissor( scissor ) {\n \n         if ( currentScissor.equals( scissor ) === false ) {\n \n             gl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n             currentScissor.copy( scissor );\n \n         }\n \n     }\n \n     function viewport( viewport ) {\n \n         if ( currentViewport.equals( viewport ) === false ) {\n \n             gl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n             currentViewport.copy( viewport );\n \n         }\n \n     }\n \n     //\n \n     function reset() {\n \n         // reset state\n \n         gl.disable( 3042 );\n         gl.disable( 2884 );\n         gl.disable( 2929 );\n         gl.disable( 32823 );\n         gl.disable( 3089 );\n         gl.disable( 2960 );\n         gl.disable( 32926 );\n \n         gl.blendEquation( 32774 );\n         gl.blendFunc( 1, 0 );\n         gl.blendFuncSeparate( 1, 0, 1, 0 );\n \n         gl.colorMask( true, true, true, true );\n         gl.clearColor( 0, 0, 0, 0 );\n \n         gl.depthMask( true );\n         gl.depthFunc( 513 );\n         gl.clearDepth( 1 );\n \n         gl.stencilMask( 0xffffffff );\n         gl.stencilFunc( 519, 0, 0xffffffff );\n         gl.stencilOp( 7680, 7680, 7680 );\n         gl.clearStencil( 0 );\n \n         gl.cullFace( 1029 );\n         gl.frontFace( 2305 );\n \n         gl.polygonOffset( 0, 0 );\n \n         gl.activeTexture( 33984 );\n \n         gl.bindFramebuffer( 36160, null );\n \n         if ( isWebGL2 === true ) {\n \n             gl.bindFramebuffer( 36009, null );\n             gl.bindFramebuffer( 36008, null );\n \n         }\n \n         gl.useProgram( null );\n \n         gl.lineWidth( 1 );\n \n         gl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n         gl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n \n         // reset internals\n \n         enabledCapabilities = {};\n \n         currentTextureSlot = null;\n         currentBoundTextures = {};\n \n         currentBoundFramebuffers = {};\n         currentDrawbuffers = new WeakMap();\n         defaultDrawbuffers = [];\n \n         currentProgram = null;\n \n         currentBlendingEnabled = false;\n         currentBlending = null;\n         currentBlendEquation = null;\n         currentBlendSrc = null;\n         currentBlendDst = null;\n         currentBlendEquationAlpha = null;\n         currentBlendSrcAlpha = null;\n         currentBlendDstAlpha = null;\n         currentPremultipledAlpha = false;\n \n         currentFlipSided = null;\n         currentCullFace = null;\n \n         currentLineWidth = null;\n \n         currentPolygonOffsetFactor = null;\n         currentPolygonOffsetUnits = null;\n \n         currentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n         currentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n \n         colorBuffer.reset();\n         depthBuffer.reset();\n         stencilBuffer.reset();\n \n     }\n \n     return {\n \n         buffers: {\n             color: colorBuffer,\n             depth: depthBuffer,\n             stencil: stencilBuffer\n         },\n \n         enable: enable,\n         disable: disable,\n \n         bindFramebuffer: bindFramebuffer,\n         drawBuffers: drawBuffers,\n \n         useProgram: useProgram,\n \n         setBlending: setBlending,\n         setMaterial: setMaterial,\n \n         setFlipSided: setFlipSided,\n         setCullFace: setCullFace,\n \n         setLineWidth: setLineWidth,\n         setPolygonOffset: setPolygonOffset,\n \n         setScissorTest: setScissorTest,\n \n         activeTexture: activeTexture,\n         bindTexture: bindTexture,\n         unbindTexture: unbindTexture,\n         compressedTexImage2D: compressedTexImage2D,\n         texImage2D: texImage2D,\n         texImage3D: texImage3D,\n \n         texStorage2D: texStorage2D,\n         texStorage3D: texStorage3D,\n         texSubImage2D: texSubImage2D,\n         texSubImage3D: texSubImage3D,\n         compressedTexSubImage2D: compressedTexSubImage2D,\n \n         scissor: scissor,\n         viewport: viewport,\n \n         reset: reset\n \n     };\n \n }\n \n function WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n \n     const isWebGL2 = capabilities.isWebGL2;\n     const maxTextures = capabilities.maxTextures;\n     const maxCubemapSize = capabilities.maxCubemapSize;\n     const maxTextureSize = capabilities.maxTextureSize;\n     const maxSamples = capabilities.maxSamples;\n     const multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n     const supportsInvalidateFramebuffer = /OculusBrowser/g.test( navigator.userAgent );\n \n     const _videoTextures = new WeakMap();\n     let _canvas;\n \n     const _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n \n     // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n     // also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n     // Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n \n     let useOffscreenCanvas = false;\n \n     try {\n \n         useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n             // eslint-disable-next-line compat/compat\n             && ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n \n     } catch ( err ) {\n \n         // Ignore any errors\n \n     }\n \n     function createCanvas( width, height ) {\n \n         // Use OffscreenCanvas when available. Specially needed in web workers\n \n         return useOffscreenCanvas ?\n             // eslint-disable-next-line compat/compat\n             new OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n \n     }\n \n     function resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n \n         let scale = 1;\n \n         // handle case if texture exceeds max size\n \n         if ( image.width > maxSize || image.height > maxSize ) {\n \n             scale = maxSize / Math.max( image.width, image.height );\n \n         }\n \n         // only perform resize if necessary\n \n         if ( scale < 1 || needsPowerOfTwo === true ) {\n \n             // only perform resize for certain image types\n \n             if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n                 ( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n                 ( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n \n                 const floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n \n                 const width = floor( scale * image.width );\n                 const height = floor( scale * image.height );\n \n                 if ( _canvas === undefined ) _canvas = createCanvas( width, height );\n \n                 // cube textures can't reuse the same canvas\n \n                 const canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n \n                 canvas.width = width;\n                 canvas.height = height;\n \n                 const context = canvas.getContext( '2d' );\n                 context.drawImage( image, 0, 0, width, height );\n \n                 console.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n \n                 return canvas;\n \n             } else {\n \n                 if ( 'data' in image ) {\n \n                     console.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n \n                 }\n \n                 return image;\n \n             }\n \n         }\n \n         return image;\n \n     }\n \n     function isPowerOfTwo$1( image ) {\n \n         return isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n \n     }\n \n     function textureNeedsPowerOfTwo( texture ) {\n \n         if ( isWebGL2 ) return false;\n \n         return ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n             ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n \n     }\n \n     function textureNeedsGenerateMipmaps( texture, supportsMips ) {\n \n         return texture.generateMipmaps && supportsMips &&\n             texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n \n     }\n \n     function generateMipmap( target ) {\n \n         _gl.generateMipmap( target );\n \n     }\n \n     function getInternalFormat( internalFormatName, glFormat, glType, encoding, isVideoTexture = false ) {\n \n         if ( isWebGL2 === false ) return glFormat;\n \n         if ( internalFormatName !== null ) {\n \n             if ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n \n             console.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n \n         }\n \n         let internalFormat = glFormat;\n \n         if ( glFormat === 6403 ) {\n \n             if ( glType === 5126 ) internalFormat = 33326;\n             if ( glType === 5131 ) internalFormat = 33325;\n             if ( glType === 5121 ) internalFormat = 33321;\n \n         }\n \n         if ( glFormat === 33319 ) {\n \n             if ( glType === 5126 ) internalFormat = 33328;\n             if ( glType === 5131 ) internalFormat = 33327;\n             if ( glType === 5121 ) internalFormat = 33323;\n \n         }\n \n         if ( glFormat === 6408 ) {\n \n             if ( glType === 5126 ) internalFormat = 34836;\n             if ( glType === 5131 ) internalFormat = 34842;\n             if ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && isVideoTexture === false ) ? 35907 : 32856;\n             if ( glType === 32819 ) internalFormat = 32854;\n             if ( glType === 32820 ) internalFormat = 32855;\n \n         }\n \n         if ( internalFormat === 33325 || internalFormat === 33326 ||\n             internalFormat === 33327 || internalFormat === 33328 ||\n             internalFormat === 34842 || internalFormat === 34836 ) {\n \n             extensions.get( 'EXT_color_buffer_float' );\n \n         }\n \n         return internalFormat;\n \n     }\n \n     function getMipLevels( texture, image, supportsMips ) {\n \n         if ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n \n             return Math.log2( Math.max( image.width, image.height ) ) + 1;\n \n         } else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n \n             // user-defined mipmaps\n \n             return texture.mipmaps.length;\n \n         } else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n \n             return image.mipmaps.length;\n \n         } else {\n \n             // texture without mipmaps (only base level)\n \n             return 1;\n \n         }\n \n     }\n \n     // Fallback filters for non-power-of-2 textures\n \n     function filterFallback( f ) {\n \n         if ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n \n             return 9728;\n \n         }\n \n         return 9729;\n \n     }\n \n     //\n \n     function onTextureDispose( event ) {\n \n         const texture = event.target;\n \n         texture.removeEventListener( 'dispose', onTextureDispose );\n \n         deallocateTexture( texture );\n \n         if ( texture.isVideoTexture ) {\n \n             _videoTextures.delete( texture );\n \n         }\n \n     }\n \n     function onRenderTargetDispose( event ) {\n \n         const renderTarget = event.target;\n \n         renderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n \n         deallocateRenderTarget( renderTarget );\n \n     }\n \n     //\n \n     function deallocateTexture( texture ) {\n \n         const textureProperties = properties.get( texture );\n \n         if ( textureProperties.__webglInit === undefined ) return;\n \n         // check if it's necessary to remove the WebGLTexture object\n \n         const source = texture.source;\n         const webglTextures = _sources.get( source );\n \n         if ( webglTextures ) {\n \n             const webglTexture = webglTextures[ textureProperties.__cacheKey ];\n             webglTexture.usedTimes --;\n \n             // the WebGLTexture object is not used anymore, remove it\n \n             if ( webglTexture.usedTimes === 0 ) {\n \n                 deleteTexture( texture );\n \n             }\n \n             // remove the weak map entry if no WebGLTexture uses the source anymore\n \n             if ( Object.keys( webglTextures ).length === 0 ) {\n \n                 _sources.delete( source );\n \n             }\n \n         }\n \n         properties.remove( texture );\n \n     }\n \n     function deleteTexture( texture ) {\n \n         const textureProperties = properties.get( texture );\n         _gl.deleteTexture( textureProperties.__webglTexture );\n \n         const source = texture.source;\n         const webglTextures = _sources.get( source );\n         delete webglTextures[ textureProperties.__cacheKey ];\n \n         info.memory.textures --;\n \n     }\n \n     function deallocateRenderTarget( renderTarget ) {\n \n         const texture = renderTarget.texture;\n \n         const renderTargetProperties = properties.get( renderTarget );\n         const textureProperties = properties.get( texture );\n \n         if ( textureProperties.__webglTexture !== undefined ) {\n \n             _gl.deleteTexture( textureProperties.__webglTexture );\n \n             info.memory.textures --;\n \n         }\n \n         if ( renderTarget.depthTexture ) {\n \n             renderTarget.depthTexture.dispose();\n \n         }\n \n         if ( renderTarget.isWebGLCubeRenderTarget ) {\n \n             for ( let i = 0; i < 6; i ++ ) {\n \n                 _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n                 if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n \n             }\n \n         } else {\n \n             _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n             if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n             if ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n             if ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n             if ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n \n         }\n \n         if ( renderTarget.isWebGLMultipleRenderTargets ) {\n \n             for ( let i = 0, il = texture.length; i < il; i ++ ) {\n \n                 const attachmentProperties = properties.get( texture[ i ] );\n \n                 if ( attachmentProperties.__webglTexture ) {\n \n                     _gl.deleteTexture( attachmentProperties.__webglTexture );\n \n                     info.memory.textures --;\n \n                 }\n \n                 properties.remove( texture[ i ] );\n \n             }\n \n         }\n \n         properties.remove( texture );\n         properties.remove( renderTarget );\n \n     }\n \n     //\n \n     let textureUnits = 0;\n \n     function resetTextureUnits() {\n \n         textureUnits = 0;\n \n     }\n \n     function allocateTextureUnit() {\n \n         const textureUnit = textureUnits;\n \n         if ( textureUnit >= maxTextures ) {\n \n             console.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n \n         }\n \n         textureUnits += 1;\n \n         return textureUnit;\n \n     }\n \n     function getTextureCacheKey( texture ) {\n \n         const array = [];\n \n         array.push( texture.wrapS );\n         array.push( texture.wrapT );\n         array.push( texture.magFilter );\n         array.push( texture.minFilter );\n         array.push( texture.anisotropy );\n         array.push( texture.internalFormat );\n         array.push( texture.format );\n         array.push( texture.type );\n         array.push( texture.generateMipmaps );\n         array.push( texture.premultiplyAlpha );\n         array.push( texture.flipY );\n         array.push( texture.unpackAlignment );\n         array.push( texture.encoding );\n \n         return array.join();\n \n     }\n \n     //\n \n     function setTexture2D( texture, slot ) {\n \n         const textureProperties = properties.get( texture );\n \n         if ( texture.isVideoTexture ) updateVideoTexture( texture );\n \n         if ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n \n             const image = texture.image;\n \n             if ( image === null ) {\n \n                 console.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n \n             } else if ( image.complete === false ) {\n \n                 console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n \n             } else {\n \n                 uploadTexture( textureProperties, texture, slot );\n                 return;\n \n             }\n \n         }\n \n         state.activeTexture( 33984 + slot );\n         state.bindTexture( 3553, textureProperties.__webglTexture );\n \n     }\n \n     function setTexture2DArray( texture, slot ) {\n \n         const textureProperties = properties.get( texture );\n \n         if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n \n             uploadTexture( textureProperties, texture, slot );\n             return;\n \n         }\n \n         state.activeTexture( 33984 + slot );\n         state.bindTexture( 35866, textureProperties.__webglTexture );\n \n     }\n \n     function setTexture3D( texture, slot ) {\n \n         const textureProperties = properties.get( texture );\n \n         if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n \n             uploadTexture( textureProperties, texture, slot );\n             return;\n \n         }\n \n         state.activeTexture( 33984 + slot );\n         state.bindTexture( 32879, textureProperties.__webglTexture );\n \n     }\n \n     function setTextureCube( texture, slot ) {\n \n         const textureProperties = properties.get( texture );\n \n         if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n \n             uploadCubeTexture( textureProperties, texture, slot );\n             return;\n \n         }\n \n         state.activeTexture( 33984 + slot );\n         state.bindTexture( 34067, textureProperties.__webglTexture );\n \n     }\n \n     const wrappingToGL = {\n         [ RepeatWrapping ]: 10497,\n         [ ClampToEdgeWrapping ]: 33071,\n         [ MirroredRepeatWrapping ]: 33648\n     };\n \n     const filterToGL = {\n         [ NearestFilter ]: 9728,\n         [ NearestMipmapNearestFilter ]: 9984,\n         [ NearestMipmapLinearFilter ]: 9986,\n \n         [ LinearFilter ]: 9729,\n         [ LinearMipmapNearestFilter ]: 9985,\n         [ LinearMipmapLinearFilter ]: 9987\n     };\n \n     function setTextureParameters( textureType, texture, supportsMips ) {\n \n         if ( supportsMips ) {\n \n             _gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n             _gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n \n             if ( textureType === 32879 || textureType === 35866 ) {\n \n                 _gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n \n             }\n \n             _gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n             _gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n \n         } else {\n \n             _gl.texParameteri( textureType, 10242, 33071 );\n             _gl.texParameteri( textureType, 10243, 33071 );\n \n             if ( textureType === 32879 || textureType === 35866 ) {\n \n                 _gl.texParameteri( textureType, 32882, 33071 );\n \n             }\n \n             if ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n \n                 console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n \n             }\n \n             _gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n             _gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n \n             if ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n \n                 console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n \n             }\n \n         }\n \n         if ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n \n             const extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n \n             if ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n             if ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n \n             if ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n \n                 _gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n                 properties.get( texture ).__currentAnisotropy = texture.anisotropy;\n \n             }\n \n         }\n \n     }\n \n     function initTexture( textureProperties, texture ) {\n \n         let forceUpload = false;\n \n         if ( textureProperties.__webglInit === undefined ) {\n \n             textureProperties.__webglInit = true;\n \n             texture.addEventListener( 'dispose', onTextureDispose );\n \n         }\n \n         // create Source <-> WebGLTextures mapping if necessary\n \n         const source = texture.source;\n         let webglTextures = _sources.get( source );\n \n         if ( webglTextures === undefined ) {\n \n             webglTextures = {};\n             _sources.set( source, webglTextures );\n \n         }\n \n         // check if there is already a WebGLTexture object for the given texture parameters\n \n         const textureCacheKey = getTextureCacheKey( texture );\n \n         if ( textureCacheKey !== textureProperties.__cacheKey ) {\n \n             // if not, create a new instance of WebGLTexture\n \n             if ( webglTextures[ textureCacheKey ] === undefined ) {\n \n                 // create new entry\n \n                 webglTextures[ textureCacheKey ] = {\n                     texture: _gl.createTexture(),\n                     usedTimes: 0\n                 };\n \n                 info.memory.textures ++;\n \n                 // when a new instance of WebGLTexture was created, a texture upload is required\n                 // even if the image contents are identical\n \n                 forceUpload = true;\n \n             }\n \n             webglTextures[ textureCacheKey ].usedTimes ++;\n \n             // every time the texture cache key changes, it's necessary to check if an instance of\n             // WebGLTexture can be deleted in order to avoid a memory leak.\n \n             const webglTexture = webglTextures[ textureProperties.__cacheKey ];\n \n             if ( webglTexture !== undefined ) {\n \n                 webglTextures[ textureProperties.__cacheKey ].usedTimes --;\n \n                 if ( webglTexture.usedTimes === 0 ) {\n \n                     deleteTexture( texture );\n \n                 }\n \n             }\n \n             // store references to cache key and WebGLTexture object\n \n             textureProperties.__cacheKey = textureCacheKey;\n             textureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n \n         }\n \n         return forceUpload;\n \n     }\n \n     function uploadTexture( textureProperties, texture, slot ) {\n \n         let textureType = 3553;\n \n         if ( texture.isDataArrayTexture ) textureType = 35866;\n         if ( texture.isData3DTexture ) textureType = 32879;\n \n         const forceUpload = initTexture( textureProperties, texture );\n         const source = texture.source;\n \n         state.activeTexture( 33984 + slot );\n         state.bindTexture( textureType, textureProperties.__webglTexture );\n \n         if ( source.version !== source.__currentVersion || forceUpload === true ) {\n \n             _gl.pixelStorei( 37440, texture.flipY );\n             _gl.pixelStorei( 37441, texture.premultiplyAlpha );\n             _gl.pixelStorei( 3317, texture.unpackAlignment );\n             _gl.pixelStorei( 37443, 0 );\n \n             const needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n             let image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n             image = verifyColorSpace( texture, image );\n \n             const supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n                 glFormat = utils.convert( texture.format, texture.encoding );\n \n             let glType = utils.convert( texture.type ),\n                 glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n \n             setTextureParameters( textureType, texture, supportsMips );\n \n             let mipmap;\n             const mipmaps = texture.mipmaps;\n \n             const useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n             const allocateMemory = ( textureProperties.__version === undefined );\n             const levels = getMipLevels( texture, image, supportsMips );\n \n             if ( texture.isDepthTexture ) {\n \n                 // populate depth texture with dummy data\n \n                 glInternalFormat = 6402;\n \n                 if ( isWebGL2 ) {\n \n                     if ( texture.type === FloatType ) {\n \n                         glInternalFormat = 36012;\n \n                     } else if ( texture.type === UnsignedIntType ) {\n \n                         glInternalFormat = 33190;\n \n                     } else if ( texture.type === UnsignedInt248Type ) {\n \n                         glInternalFormat = 35056;\n \n                     } else {\n \n                         glInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n \n                     }\n \n                 } else {\n \n                     if ( texture.type === FloatType ) {\n \n                         console.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n \n                     }\n \n                 }\n \n                 // validation checks for WebGL 1\n \n                 if ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n \n                     // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n                     // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n                     // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n                     if ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n \n                         console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n \n                         texture.type = UnsignedShortType;\n                         glType = utils.convert( texture.type );\n \n                     }\n \n                 }\n \n                 if ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n \n                     // Depth stencil textures need the DEPTH_STENCIL internal format\n                     // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n                     glInternalFormat = 34041;\n \n                     // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n                     // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n                     // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n                     if ( texture.type !== UnsignedInt248Type ) {\n \n                         console.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n \n                         texture.type = UnsignedInt248Type;\n                         glType = utils.convert( texture.type );\n \n                     }\n \n                 }\n \n                 //\n \n                 if ( useTexStorage && allocateMemory ) {\n \n                     state.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n \n                 } else {\n \n                     state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n \n                 }\n \n             } else if ( texture.isDataTexture ) {\n \n                 // use manually created mipmaps if available\n                 // if there are no manual mipmaps\n                 // set 0 level mipmap and then use GL to generate other mipmap levels\n \n                 if ( mipmaps.length > 0 && supportsMips ) {\n \n                     if ( useTexStorage && allocateMemory ) {\n \n                         state.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n \n                     }\n \n                     for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n \n                         mipmap = mipmaps[ i ];\n \n                         if ( useTexStorage ) {\n \n                             state.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n \n                         } else {\n \n                             state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n \n                         }\n \n                     }\n \n                     texture.generateMipmaps = false;\n \n                 } else {\n \n                     if ( useTexStorage ) {\n \n                         if ( allocateMemory ) {\n \n                             state.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n \n                         }\n \n                         state.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n \n                     } else {\n \n                         state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n \n                     }\n \n                 }\n \n             } else if ( texture.isCompressedTexture ) {\n \n                 if ( useTexStorage && allocateMemory ) {\n \n                     state.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n \n                 }\n \n                 for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n \n                     mipmap = mipmaps[ i ];\n \n                     if ( texture.format !== RGBAFormat ) {\n \n                         if ( glFormat !== null ) {\n \n                             if ( useTexStorage ) {\n \n                                 state.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n \n                             } else {\n \n                                 state.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n \n                             }\n \n                         } else {\n \n                             console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n \n                         }\n \n                     } else {\n \n                         if ( useTexStorage ) {\n \n                             state.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n \n                         } else {\n \n                             state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n \n                         }\n \n                     }\n \n                 }\n \n             } else if ( texture.isDataArrayTexture ) {\n \n                 if ( useTexStorage ) {\n \n                     if ( allocateMemory ) {\n \n                         state.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n \n                     }\n \n                     state.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n \n                 } else {\n \n                     state.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n \n                 }\n \n             } else if ( texture.isData3DTexture ) {\n \n                 if ( useTexStorage ) {\n \n                     if ( allocateMemory ) {\n \n                         state.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n \n                     }\n \n                     state.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n \n                 } else {\n \n                     state.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n \n                 }\n \n             } else if ( texture.isFramebufferTexture ) {\n \n                 if ( useTexStorage && allocateMemory ) {\n \n                     state.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n \n                 } else {\n \n                     state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n \n                 }\n \n             } else {\n \n                 // regular Texture (image, video, canvas)\n \n                 // use manually created mipmaps if available\n                 // if there are no manual mipmaps\n                 // set 0 level mipmap and then use GL to generate other mipmap levels\n \n                 if ( mipmaps.length > 0 && supportsMips ) {\n \n                     if ( useTexStorage && allocateMemory ) {\n \n                         state.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n \n                     }\n \n                     for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n \n                         mipmap = mipmaps[ i ];\n \n                         if ( useTexStorage ) {\n \n                             state.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n \n                         } else {\n \n                             state.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n \n                         }\n \n                     }\n \n                     texture.generateMipmaps = false;\n \n                 } else {\n \n                     if ( useTexStorage ) {\n \n                         if ( allocateMemory ) {\n \n                             state.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n \n                         }\n \n                         state.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n \n                     } else {\n \n                         state.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n \n                     }\n \n                 }\n \n             }\n \n             if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n \n                 generateMipmap( textureType );\n \n             }\n \n             source.__currentVersion = source.version;\n \n             if ( texture.onUpdate ) texture.onUpdate( texture );\n \n         }\n \n         textureProperties.__version = texture.version;\n \n     }\n \n     function uploadCubeTexture( textureProperties, texture, slot ) {\n \n         if ( texture.image.length !== 6 ) return;\n \n         const forceUpload = initTexture( textureProperties, texture );\n         const source = texture.source;\n \n         state.activeTexture( 33984 + slot );\n         state.bindTexture( 34067, textureProperties.__webglTexture );\n \n         if ( source.version !== source.__currentVersion || forceUpload === true ) {\n \n             _gl.pixelStorei( 37440, texture.flipY );\n             _gl.pixelStorei( 37441, texture.premultiplyAlpha );\n             _gl.pixelStorei( 3317, texture.unpackAlignment );\n             _gl.pixelStorei( 37443, 0 );\n \n             const isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n             const isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n \n             const cubeImage = [];\n \n             for ( let i = 0; i < 6; i ++ ) {\n \n                 if ( ! isCompressed && ! isDataTexture ) {\n \n                     cubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n \n                 } else {\n \n                     cubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n \n                 }\n \n                 cubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n \n             }\n \n             const image = cubeImage[ 0 ],\n                 supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n                 glFormat = utils.convert( texture.format, texture.encoding ),\n                 glType = utils.convert( texture.type ),\n                 glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n \n             const useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n             const allocateMemory = ( textureProperties.__version === undefined );\n             let levels = getMipLevels( texture, image, supportsMips );\n \n             setTextureParameters( 34067, texture, supportsMips );\n \n             let mipmaps;\n \n             if ( isCompressed ) {\n \n                 if ( useTexStorage && allocateMemory ) {\n \n                     state.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n \n                 }\n \n                 for ( let i = 0; i < 6; i ++ ) {\n \n                     mipmaps = cubeImage[ i ].mipmaps;\n \n                     for ( let j = 0; j < mipmaps.length; j ++ ) {\n \n                         const mipmap = mipmaps[ j ];\n \n                         if ( texture.format !== RGBAFormat ) {\n \n                             if ( glFormat !== null ) {\n \n                                 if ( useTexStorage ) {\n \n                                     state.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n \n                                 } else {\n \n                                     state.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n \n                                 }\n \n                             } else {\n \n                                 console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n \n                             }\n \n                         } else {\n \n                             if ( useTexStorage ) {\n \n                                 state.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n \n                             } else {\n \n                                 state.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n \n                             }\n \n                         }\n \n                     }\n \n                 }\n \n             } else {\n \n                 mipmaps = texture.mipmaps;\n \n                 if ( useTexStorage && allocateMemory ) {\n \n                     // TODO: Uniformly handle mipmap definitions\n                     // Normal textures and compressed cube textures define base level + mips with their mipmap array\n                     // Uncompressed cube textures use their mipmap array only for mips (no base level)\n \n                     if ( mipmaps.length > 0 ) levels ++;\n \n                     state.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n \n                 }\n \n                 for ( let i = 0; i < 6; i ++ ) {\n \n                     if ( isDataTexture ) {\n \n                         if ( useTexStorage ) {\n \n                             state.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n \n                         } else {\n \n                             state.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n \n                         }\n \n                         for ( let j = 0; j < mipmaps.length; j ++ ) {\n \n                             const mipmap = mipmaps[ j ];\n                             const mipmapImage = mipmap.image[ i ].image;\n \n                             if ( useTexStorage ) {\n \n                                 state.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n \n                             } else {\n \n                                 state.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n \n                             }\n \n                         }\n \n                     } else {\n \n                         if ( useTexStorage ) {\n \n                             state.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n \n                         } else {\n \n                             state.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n \n                         }\n \n                         for ( let j = 0; j < mipmaps.length; j ++ ) {\n \n                             const mipmap = mipmaps[ j ];\n \n                             if ( useTexStorage ) {\n \n                                 state.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n \n                             } else {\n \n                                 state.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n \n                             }\n \n                         }\n \n                     }\n \n                 }\n \n             }\n \n             if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n \n                 // We assume images for cube map have the same size.\n                 generateMipmap( 34067 );\n \n             }\n \n             source.__currentVersion = source.version;\n \n             if ( texture.onUpdate ) texture.onUpdate( texture );\n \n         }\n \n         textureProperties.__version = texture.version;\n \n     }\n \n     // Render targets\n \n     // Setup storage for target texture and bind it to correct framebuffer\n     function setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n \n         const glFormat = utils.convert( texture.format, texture.encoding );\n         const glType = utils.convert( texture.type );\n         const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n         const renderTargetProperties = properties.get( renderTarget );\n \n         if ( ! renderTargetProperties.__hasExternalTextures ) {\n \n             if ( textureTarget === 32879 || textureTarget === 35866 ) {\n \n                 state.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n \n             } else {\n \n                 state.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n \n             }\n \n         }\n \n         state.bindFramebuffer( 36160, framebuffer );\n \n         if ( useMultisampledRTT( renderTarget ) ) {\n \n             multisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n \n         } else {\n \n             _gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n \n         }\n \n         state.bindFramebuffer( 36160, null );\n \n     }\n \n \n     // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n     function setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n \n         _gl.bindRenderbuffer( 36161, renderbuffer );\n \n         if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n \n             let glInternalFormat = 33189;\n \n             if ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n \n                 const depthTexture = renderTarget.depthTexture;\n \n                 if ( depthTexture && depthTexture.isDepthTexture ) {\n \n                     if ( depthTexture.type === FloatType ) {\n \n                         glInternalFormat = 36012;\n \n                     } else if ( depthTexture.type === UnsignedIntType ) {\n \n                         glInternalFormat = 33190;\n \n                     }\n \n                 }\n \n                 const samples = getRenderTargetSamples( renderTarget );\n \n                 if ( useMultisampledRTT( renderTarget ) ) {\n \n                     multisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n \n                 } else {\n \n                     _gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n \n                 }\n \n             } else {\n \n                 _gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n \n             }\n \n             _gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n \n         } else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n \n             const samples = getRenderTargetSamples( renderTarget );\n \n             if ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n \n                 _gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n \n             } else if ( useMultisampledRTT( renderTarget ) ) {\n \n                 multisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n \n             } else {\n \n                 _gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n \n             }\n \n \n             _gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n \n         } else {\n \n             // Use the first texture for MRT so far\n             const texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[ 0 ] : renderTarget.texture;\n \n             const glFormat = utils.convert( texture.format, texture.encoding );\n             const glType = utils.convert( texture.type );\n             const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n             const samples = getRenderTargetSamples( renderTarget );\n \n             if ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n \n                 _gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n \n             } else if ( useMultisampledRTT( renderTarget ) ) {\n \n                 multisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n \n             } else {\n \n                 _gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n \n             }\n \n         }\n \n         _gl.bindRenderbuffer( 36161, null );\n \n     }\n \n     // Setup resources for a Depth Texture for a FBO (needs an extension)\n     function setupDepthTexture( framebuffer, renderTarget ) {\n \n         const isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n         if ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n \n         state.bindFramebuffer( 36160, framebuffer );\n \n         if ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n \n             throw new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n \n         }\n \n         // upload an empty depth texture with framebuffer size\n         if ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n                 renderTarget.depthTexture.image.width !== renderTarget.width ||\n                 renderTarget.depthTexture.image.height !== renderTarget.height ) {\n \n             renderTarget.depthTexture.image.width = renderTarget.width;\n             renderTarget.depthTexture.image.height = renderTarget.height;\n             renderTarget.depthTexture.needsUpdate = true;\n \n         }\n \n         setTexture2D( renderTarget.depthTexture, 0 );\n \n         const webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n         const samples = getRenderTargetSamples( renderTarget );\n \n         if ( renderTarget.depthTexture.format === DepthFormat ) {\n \n             if ( useMultisampledRTT( renderTarget ) ) {\n \n                 multisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n \n             } else {\n \n                 _gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n \n             }\n \n         } else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n \n             if ( useMultisampledRTT( renderTarget ) ) {\n \n                 multisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n \n             } else {\n \n                 _gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n \n             }\n \n         } else {\n \n             throw new Error( 'Unknown depthTexture format' );\n \n         }\n \n     }\n \n     // Setup GL resources for a non-texture depth buffer\n     function setupDepthRenderbuffer( renderTarget ) {\n \n         const renderTargetProperties = properties.get( renderTarget );\n         const isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n \n         if ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n \n             if ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n \n             setupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n \n         } else {\n \n             if ( isCube ) {\n \n                 renderTargetProperties.__webglDepthbuffer = [];\n \n                 for ( let i = 0; i < 6; i ++ ) {\n \n                     state.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n                     renderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n                     setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n \n                 }\n \n             } else {\n \n                 state.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n                 renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n                 setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n \n             }\n \n         }\n \n         state.bindFramebuffer( 36160, null );\n \n     }\n \n     // rebind framebuffer with external textures\n     function rebindTextures( renderTarget, colorTexture, depthTexture ) {\n \n         const renderTargetProperties = properties.get( renderTarget );\n \n         if ( colorTexture !== undefined ) {\n \n             setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n \n         }\n \n         if ( depthTexture !== undefined ) {\n \n             setupDepthRenderbuffer( renderTarget );\n \n         }\n \n     }\n \n     // Set up GL resources for the render target\n     function setupRenderTarget( renderTarget ) {\n \n         const texture = renderTarget.texture;\n \n         const renderTargetProperties = properties.get( renderTarget );\n         const textureProperties = properties.get( texture );\n \n         renderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n \n         if ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n \n             if ( textureProperties.__webglTexture === undefined ) {\n \n                 textureProperties.__webglTexture = _gl.createTexture();\n \n             }\n \n             textureProperties.__version = texture.version;\n             info.memory.textures ++;\n \n         }\n \n         const isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n         const isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n         const supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n \n         // Setup framebuffer\n \n         if ( isCube ) {\n \n             renderTargetProperties.__webglFramebuffer = [];\n \n             for ( let i = 0; i < 6; i ++ ) {\n \n                 renderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n \n             }\n \n         } else {\n \n             renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n \n             if ( isMultipleRenderTargets ) {\n \n                 if ( capabilities.drawBuffers ) {\n \n                     const textures = renderTarget.texture;\n \n                     for ( let i = 0, il = textures.length; i < il; i ++ ) {\n \n                         const attachmentProperties = properties.get( textures[ i ] );\n \n                         if ( attachmentProperties.__webglTexture === undefined ) {\n \n                             attachmentProperties.__webglTexture = _gl.createTexture();\n \n                             info.memory.textures ++;\n \n                         }\n \n                     }\n \n                 } else {\n \n                     console.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n \n                 }\n \n             } else if ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n \n                 renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n                 renderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n \n                 _gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n \n                 const glFormat = utils.convert( texture.format, texture.encoding );\n                 const glType = utils.convert( texture.type );\n                 const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n                 const samples = getRenderTargetSamples( renderTarget );\n                 _gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n \n                 state.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n                 _gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n                 _gl.bindRenderbuffer( 36161, null );\n \n                 if ( renderTarget.depthBuffer ) {\n \n                     renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n                     setupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n \n                 }\n \n                 state.bindFramebuffer( 36160, null );\n \n             }\n \n         }\n \n         // Setup color buffer\n \n         if ( isCube ) {\n \n             state.bindTexture( 34067, textureProperties.__webglTexture );\n             setTextureParameters( 34067, texture, supportsMips );\n \n             for ( let i = 0; i < 6; i ++ ) {\n \n                 setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n \n             }\n \n             if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n \n                 generateMipmap( 34067 );\n \n             }\n \n             state.unbindTexture();\n \n         } else if ( isMultipleRenderTargets ) {\n \n             const textures = renderTarget.texture;\n \n             for ( let i = 0, il = textures.length; i < il; i ++ ) {\n \n                 const attachment = textures[ i ];\n                 const attachmentProperties = properties.get( attachment );\n \n                 state.bindTexture( 3553, attachmentProperties.__webglTexture );\n                 setTextureParameters( 3553, attachment, supportsMips );\n                 setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n \n                 if ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n \n                     generateMipmap( 3553 );\n \n                 }\n \n             }\n \n             state.unbindTexture();\n \n         } else {\n \n             let glTextureType = 3553;\n \n             if ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n \n                 if ( isWebGL2 ) {\n \n                     glTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n \n                 } else {\n \n                     console.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n \n                 }\n \n             }\n \n             state.bindTexture( glTextureType, textureProperties.__webglTexture );\n             setTextureParameters( glTextureType, texture, supportsMips );\n             setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n \n             if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n \n                 generateMipmap( glTextureType );\n \n             }\n \n             state.unbindTexture();\n \n         }\n \n         // Setup depth and stencil buffers\n \n         if ( renderTarget.depthBuffer ) {\n \n             setupDepthRenderbuffer( renderTarget );\n \n         }\n \n     }\n \n     function updateRenderTargetMipmap( renderTarget ) {\n \n         const supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n \n         const textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n \n         for ( let i = 0, il = textures.length; i < il; i ++ ) {\n \n             const texture = textures[ i ];\n \n             if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n \n                 const target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n                 const webglTexture = properties.get( texture ).__webglTexture;\n \n                 state.bindTexture( target, webglTexture );\n                 generateMipmap( target );\n                 state.unbindTexture();\n \n             }\n \n         }\n \n     }\n \n     function updateMultisampleRenderTarget( renderTarget ) {\n \n         if ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n \n             const width = renderTarget.width;\n             const height = renderTarget.height;\n             let mask = 16384;\n             const invalidationArray = [ 36064 ];\n             const depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n \n             if ( renderTarget.depthBuffer ) {\n \n                 invalidationArray.push( depthStyle );\n \n             }\n \n             const renderTargetProperties = properties.get( renderTarget );\n             const ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n \n             if ( ignoreDepthValues === false ) {\n \n                 if ( renderTarget.depthBuffer ) mask |= 256;\n                 if ( renderTarget.stencilBuffer ) mask |= 1024;\n \n             }\n \n             state.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n             state.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n \n             if ( ignoreDepthValues === true ) {\n \n                 _gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n                 _gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n \n             }\n \n             _gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n \n             if ( supportsInvalidateFramebuffer ) {\n \n                 _gl.invalidateFramebuffer( 36008, invalidationArray );\n \n             }\n \n             state.bindFramebuffer( 36008, null );\n             state.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n \n         }\n \n     }\n \n     function getRenderTargetSamples( renderTarget ) {\n \n         return Math.min( maxSamples, renderTarget.samples );\n \n     }\n \n     function useMultisampledRTT( renderTarget ) {\n \n         const renderTargetProperties = properties.get( renderTarget );\n \n         return isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n \n     }\n \n     function updateVideoTexture( texture ) {\n \n         const frame = info.render.frame;\n \n         // Check the last frame we updated the VideoTexture\n \n         if ( _videoTextures.get( texture ) !== frame ) {\n \n             _videoTextures.set( texture, frame );\n             texture.update();\n \n         }\n \n     }\n \n     function verifyColorSpace( texture, image ) {\n \n         const encoding = texture.encoding;\n         const format = texture.format;\n         const type = texture.type;\n \n         if ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n \n         if ( encoding !== LinearEncoding ) {\n \n             // sRGB\n \n             if ( encoding === sRGBEncoding ) {\n \n                 if ( isWebGL2 === false ) {\n \n                     // in WebGL 1, try to use EXT_sRGB extension and unsized formats\n \n                     if ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n \n                         texture.format = _SRGBAFormat;\n \n                         // it's not possible to generate mips in WebGL 1 with this extension\n \n                         texture.minFilter = LinearFilter;\n                         texture.generateMipmaps = false;\n \n                     } else {\n \n                         // slow fallback (CPU decode)\n \n                         image = ImageUtils.sRGBToLinear( image );\n \n                     }\n \n                 } else {\n \n                     // in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n \n                     if ( format !== RGBAFormat || type !== UnsignedByteType ) {\n \n                         console.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n \n                     }\n \n                 }\n \n             } else {\n \n                 console.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n \n             }\n \n         }\n \n         return image;\n \n     }\n \n     //\n \n     this.allocateTextureUnit = allocateTextureUnit;\n     this.resetTextureUnits = resetTextureUnits;\n \n     this.setTexture2D = setTexture2D;\n     this.setTexture2DArray = setTexture2DArray;\n     this.setTexture3D = setTexture3D;\n     this.setTextureCube = setTextureCube;\n     this.rebindTextures = rebindTextures;\n     this.setupRenderTarget = setupRenderTarget;\n     this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n     this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n     this.setupDepthRenderbuffer = setupDepthRenderbuffer;\n     this.setupFrameBufferTexture = setupFrameBufferTexture;\n     this.useMultisampledRTT = useMultisampledRTT;\n \n }\n \n function WebGLUtils( gl, extensions, capabilities ) {\n \n     const isWebGL2 = capabilities.isWebGL2;\n \n     function convert( p, encoding = null ) {\n \n         let extension;\n \n         if ( p === UnsignedByteType ) return 5121;\n         if ( p === UnsignedShort4444Type ) return 32819;\n         if ( p === UnsignedShort5551Type ) return 32820;\n \n         if ( p === ByteType ) return 5120;\n         if ( p === ShortType ) return 5122;\n         if ( p === UnsignedShortType ) return 5123;\n         if ( p === IntType ) return 5124;\n         if ( p === UnsignedIntType ) return 5125;\n         if ( p === FloatType ) return 5126;\n \n         if ( p === HalfFloatType ) {\n \n             if ( isWebGL2 ) return 5131;\n \n             extension = extensions.get( 'OES_texture_half_float' );\n \n             if ( extension !== null ) {\n \n                 return extension.HALF_FLOAT_OES;\n \n             } else {\n \n                 return null;\n \n             }\n \n         }\n \n         if ( p === AlphaFormat ) return 6406;\n         if ( p === RGBAFormat ) return 6408;\n         if ( p === LuminanceFormat ) return 6409;\n         if ( p === LuminanceAlphaFormat ) return 6410;\n         if ( p === DepthFormat ) return 6402;\n         if ( p === DepthStencilFormat ) return 34041;\n         if ( p === RedFormat ) return 6403;\n \n         if ( p === RGBFormat ) {\n \n             console.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n             return 6408;\n \n         }\n \n         // WebGL 1 sRGB fallback\n \n         if ( p === _SRGBAFormat ) {\n \n             extension = extensions.get( 'EXT_sRGB' );\n \n             if ( extension !== null ) {\n \n                 return extension.SRGB_ALPHA_EXT;\n \n             } else {\n \n                 return null;\n \n             }\n \n         }\n \n         // WebGL2 formats.\n \n         if ( p === RedIntegerFormat ) return 36244;\n         if ( p === RGFormat ) return 33319;\n         if ( p === RGIntegerFormat ) return 33320;\n         if ( p === RGBAIntegerFormat ) return 36249;\n \n         // S3TC\n \n         if ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n \n             if ( encoding === sRGBEncoding ) {\n \n                 extension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n \n                 if ( extension !== null ) {\n \n                     if ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n                     if ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n                     if ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n                     if ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n \n                 } else {\n \n                     return null;\n \n                 }\n \n             } else {\n \n                 extension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n \n                 if ( extension !== null ) {\n \n                     if ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n                     if ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n                     if ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n                     if ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n \n                 } else {\n \n                     return null;\n \n                 }\n \n             }\n \n         }\n \n         // PVRTC\n \n         if ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n \n             extension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n \n             if ( extension !== null ) {\n \n                 if ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n                 if ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n                 if ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n                 if ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n \n             } else {\n \n                 return null;\n \n             }\n \n         }\n \n         // ETC1\n \n         if ( p === RGB_ETC1_Format ) {\n \n             extension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n \n             if ( extension !== null ) {\n \n                 return extension.COMPRESSED_RGB_ETC1_WEBGL;\n \n             } else {\n \n                 return null;\n \n             }\n \n         }\n \n         // ETC2\n \n         if ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n \n             extension = extensions.get( 'WEBGL_compressed_texture_etc' );\n \n             if ( extension !== null ) {\n \n                 if ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n                 if ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n \n             } else {\n \n                 return null;\n \n             }\n \n         }\n \n         // ASTC\n \n         if ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n             p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n             p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n             p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n             p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n \n             extension = extensions.get( 'WEBGL_compressed_texture_astc' );\n \n             if ( extension !== null ) {\n \n                 if ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n                 if ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n                 if ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n                 if ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n                 if ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n                 if ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n                 if ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n                 if ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n                 if ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n                 if ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n                 if ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n                 if ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n                 if ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n                 if ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n \n             } else {\n \n                 return null;\n \n             }\n \n         }\n \n         // BPTC\n \n         if ( p === RGBA_BPTC_Format ) {\n \n             extension = extensions.get( 'EXT_texture_compression_bptc' );\n \n             if ( extension !== null ) {\n \n                 if ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n \n             } else {\n \n                 return null;\n \n             }\n \n         }\n \n         //\n \n         if ( p === UnsignedInt248Type ) {\n \n             if ( isWebGL2 ) return 34042;\n \n             extension = extensions.get( 'WEBGL_depth_texture' );\n \n             if ( extension !== null ) {\n \n                 return extension.UNSIGNED_INT_24_8_WEBGL;\n \n             } else {\n \n                 return null;\n \n             }\n \n         }\n \n     }\n \n     return { convert: convert };\n \n }\n \n class ArrayCamera extends PerspectiveCamera {\n \n     constructor( array = [] ) {\n \n         super();\n \n         this.cameras = array;\n \n     }\n \n }\n \n ArrayCamera.prototype.isArrayCamera = true;\n \n class Group extends Object3D {\n \n     constructor() {\n \n         super();\n \n         this.type = 'Group';\n \n     }\n \n }\n \n Group.prototype.isGroup = true;\n \n const _moveEvent = { type: 'move' };\n \n class WebXRController {\n \n     constructor() {\n \n         this._targetRay = null;\n         this._grip = null;\n         this._hand = null;\n \n     }\n \n     getHandSpace() {\n \n         if ( this._hand === null ) {\n \n             this._hand = new Group();\n             this._hand.matrixAutoUpdate = false;\n             this._hand.visible = false;\n \n             this._hand.joints = {};\n             this._hand.inputState = { pinching: false };\n \n         }\n \n         return this._hand;\n \n     }\n \n     getTargetRaySpace() {\n \n         if ( this._targetRay === null ) {\n \n             this._targetRay = new Group();\n             this._targetRay.matrixAutoUpdate = false;\n             this._targetRay.visible = false;\n             this._targetRay.hasLinearVelocity = false;\n             this._targetRay.linearVelocity = new Vector3();\n             this._targetRay.hasAngularVelocity = false;\n             this._targetRay.angularVelocity = new Vector3();\n \n         }\n \n         return this._targetRay;\n \n     }\n \n     getGripSpace() {\n \n         if ( this._grip === null ) {\n \n             this._grip = new Group();\n             this._grip.matrixAutoUpdate = false;\n             this._grip.visible = false;\n             this._grip.hasLinearVelocity = false;\n             this._grip.linearVelocity = new Vector3();\n             this._grip.hasAngularVelocity = false;\n             this._grip.angularVelocity = new Vector3();\n \n         }\n \n         return this._grip;\n \n     }\n \n     dispatchEvent( event ) {\n \n         if ( this._targetRay !== null ) {\n \n             this._targetRay.dispatchEvent( event );\n \n         }\n \n         if ( this._grip !== null ) {\n \n             this._grip.dispatchEvent( event );\n \n         }\n \n         if ( this._hand !== null ) {\n \n             this._hand.dispatchEvent( event );\n \n         }\n \n         return this;\n \n     }\n \n     disconnect( inputSource ) {\n \n         this.dispatchEvent( { type: 'disconnected', data: inputSource } );\n \n         if ( this._targetRay !== null ) {\n \n             this._targetRay.visible = false;\n \n         }\n \n         if ( this._grip !== null ) {\n \n             this._grip.visible = false;\n \n         }\n \n         if ( this._hand !== null ) {\n \n             this._hand.visible = false;\n \n         }\n \n         return this;\n \n     }\n \n     update( inputSource, frame, referenceSpace ) {\n \n         let inputPose = null;\n         let gripPose = null;\n         let handPose = null;\n \n         const targetRay = this._targetRay;\n         const grip = this._grip;\n         const hand = this._hand;\n \n         if ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n \n             if ( targetRay !== null ) {\n \n                 inputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n \n                 if ( inputPose !== null ) {\n \n                     targetRay.matrix.fromArray( inputPose.transform.matrix );\n                     targetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n \n                     if ( inputPose.linearVelocity ) {\n \n                         targetRay.hasLinearVelocity = true;\n                         targetRay.linearVelocity.copy( inputPose.linearVelocity );\n \n                     } else {\n \n                         targetRay.hasLinearVelocity = false;\n \n                     }\n \n                     if ( inputPose.angularVelocity ) {\n \n                         targetRay.hasAngularVelocity = true;\n                         targetRay.angularVelocity.copy( inputPose.angularVelocity );\n \n                     } else {\n \n                         targetRay.hasAngularVelocity = false;\n \n                     }\n \n                     this.dispatchEvent( _moveEvent );\n \n                 }\n \n             }\n \n             if ( hand && inputSource.hand ) {\n \n                 handPose = true;\n \n                 for ( const inputjoint of inputSource.hand.values() ) {\n \n                     // Update the joints groups with the XRJoint poses\n                     const jointPose = frame.getJointPose( inputjoint, referenceSpace );\n \n                     if ( hand.joints[ inputjoint.jointName ] === undefined ) {\n \n                         // The transform of this joint will be updated with the joint pose on each frame\n                         const joint = new Group();\n                         joint.matrixAutoUpdate = false;\n                         joint.visible = false;\n                         hand.joints[ inputjoint.jointName ] = joint;\n                         // ??\n                         hand.add( joint );\n \n                     }\n \n                     const joint = hand.joints[ inputjoint.jointName ];\n \n                     if ( jointPose !== null ) {\n \n                         joint.matrix.fromArray( jointPose.transform.matrix );\n                         joint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n                         joint.jointRadius = jointPose.radius;\n \n                     }\n \n                     joint.visible = jointPose !== null;\n \n                 }\n \n                 // Custom events\n \n                 // Check pinchz\n                 const indexTip = hand.joints[ 'index-finger-tip' ];\n                 const thumbTip = hand.joints[ 'thumb-tip' ];\n                 const distance = indexTip.position.distanceTo( thumbTip.position );\n \n                 const distanceToPinch = 0.02;\n                 const threshold = 0.005;\n \n                 if ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n \n                     hand.inputState.pinching = false;\n                     this.dispatchEvent( {\n                         type: 'pinchend',\n                         handedness: inputSource.handedness,\n                         target: this\n                     } );\n \n                 } else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n \n                     hand.inputState.pinching = true;\n                     this.dispatchEvent( {\n                         type: 'pinchstart',\n                         handedness: inputSource.handedness,\n                         target: this\n                     } );\n \n                 }\n \n             } else {\n \n                 if ( grip !== null && inputSource.gripSpace ) {\n \n                     gripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n \n                     if ( gripPose !== null ) {\n \n                         grip.matrix.fromArray( gripPose.transform.matrix );\n                         grip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n \n                         if ( gripPose.linearVelocity ) {\n \n                             grip.hasLinearVelocity = true;\n                             grip.linearVelocity.copy( gripPose.linearVelocity );\n \n                         } else {\n \n                             grip.hasLinearVelocity = false;\n \n                         }\n \n                         if ( gripPose.angularVelocity ) {\n \n                             grip.hasAngularVelocity = true;\n                             grip.angularVelocity.copy( gripPose.angularVelocity );\n \n                         } else {\n \n                             grip.hasAngularVelocity = false;\n \n                         }\n \n                     }\n \n                 }\n \n             }\n \n         }\n \n         if ( targetRay !== null ) {\n \n             targetRay.visible = ( inputPose !== null );\n \n         }\n \n         if ( grip !== null ) {\n \n             grip.visible = ( gripPose !== null );\n \n         }\n \n         if ( hand !== null ) {\n \n             hand.visible = ( handPose !== null );\n \n         }\n \n         return this;\n \n     }\n \n }\n \n class DepthTexture extends Texture {\n \n     constructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n \n         format = format !== undefined ? format : DepthFormat;\n \n         if ( format !== DepthFormat && format !== DepthStencilFormat ) {\n \n             throw new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n \n         }\n \n         if ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n         if ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n \n         super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n \n         this.image = { width: width, height: height };\n \n         this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n         this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n \n         this.flipY = false;\n         this.generateMipmaps\t= false;\n \n     }\n \n \n }\n \n DepthTexture.prototype.isDepthTexture = true;\n \n class WebXRManager extends EventDispatcher {\n \n     constructor( renderer, gl ) {\n \n         super();\n \n         const scope = this;\n \n         let session = null;\n         let framebufferScaleFactor = 1.0;\n \n         let referenceSpace = null;\n         let referenceSpaceType = 'local-floor';\n \n         let pose = null;\n         let glBinding = null;\n         let glProjLayer = null;\n         let glBaseLayer = null;\n         let xrFrame = null;\n         const attributes = gl.getContextAttributes();\n         let initialRenderTarget = null;\n         let newRenderTarget = null;\n \n         const controllers = [];\n         const inputSourcesMap = new Map();\n \n         //\n \n         const cameraL = new PerspectiveCamera();\n         cameraL.layers.enable( 1 );\n         cameraL.viewport = new Vector4();\n \n         const cameraR = new PerspectiveCamera();\n         cameraR.layers.enable( 2 );\n         cameraR.viewport = new Vector4();\n \n         const cameras = [ cameraL, cameraR ];\n \n         const cameraVR = new ArrayCamera();\n         cameraVR.layers.enable( 1 );\n         cameraVR.layers.enable( 2 );\n \n         let _currentDepthNear = null;\n         let _currentDepthFar = null;\n \n         //\n \n         this.cameraAutoUpdate = true;\n         this.enabled = false;\n \n         this.isPresenting = false;\n \n         this.getController = function ( index ) {\n \n             let controller = controllers[ index ];\n \n             if ( controller === undefined ) {\n \n                 controller = new WebXRController();\n                 controllers[ index ] = controller;\n \n             }\n \n             return controller.getTargetRaySpace();\n \n         };\n \n         this.getControllerGrip = function ( index ) {\n \n             let controller = controllers[ index ];\n \n             if ( controller === undefined ) {\n \n                 controller = new WebXRController();\n                 controllers[ index ] = controller;\n \n             }\n \n             return controller.getGripSpace();\n \n         };\n \n         this.getHand = function ( index ) {\n \n             let controller = controllers[ index ];\n \n             if ( controller === undefined ) {\n \n                 controller = new WebXRController();\n                 controllers[ index ] = controller;\n \n             }\n \n             return controller.getHandSpace();\n \n         };\n \n         //\n \n         function onSessionEvent( event ) {\n \n             const controller = inputSourcesMap.get( event.inputSource );\n \n             if ( controller ) {\n \n                 controller.dispatchEvent( { type: event.type, data: event.inputSource } );\n \n             }\n \n         }\n \n         function onSessionEnd() {\n \n             inputSourcesMap.forEach( function ( controller, inputSource ) {\n \n                 controller.disconnect( inputSource );\n \n             } );\n \n             inputSourcesMap.clear();\n \n             _currentDepthNear = null;\n             _currentDepthFar = null;\n \n             // restore framebuffer/rendering state\n \n             renderer.setRenderTarget( initialRenderTarget );\n \n             glBaseLayer = null;\n             glProjLayer = null;\n             glBinding = null;\n             session = null;\n             newRenderTarget = null;\n \n             //\n \n             animation.stop();\n \n             scope.isPresenting = false;\n \n             scope.dispatchEvent( { type: 'sessionend' } );\n \n         }\n \n         this.setFramebufferScaleFactor = function ( value ) {\n \n             framebufferScaleFactor = value;\n \n             if ( scope.isPresenting === true ) {\n \n                 console.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n \n             }\n \n         };\n \n         this.setReferenceSpaceType = function ( value ) {\n \n             referenceSpaceType = value;\n \n             if ( scope.isPresenting === true ) {\n \n                 console.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n \n             }\n \n         };\n \n         this.getReferenceSpace = function () {\n \n             return referenceSpace;\n \n         };\n \n         this.getBaseLayer = function () {\n \n             return glProjLayer !== null ? glProjLayer : glBaseLayer;\n \n         };\n \n         this.getBinding = function () {\n \n             return glBinding;\n \n         };\n \n         this.getFrame = function () {\n \n             return xrFrame;\n \n         };\n \n         this.getSession = function () {\n \n             return session;\n \n         };\n \n         this.setSession = async function ( value ) {\n \n             session = value;\n \n             if ( session !== null ) {\n \n                 initialRenderTarget = renderer.getRenderTarget();\n \n                 session.addEventListener( 'select', onSessionEvent );\n                 session.addEventListener( 'selectstart', onSessionEvent );\n                 session.addEventListener( 'selectend', onSessionEvent );\n                 session.addEventListener( 'squeeze', onSessionEvent );\n                 session.addEventListener( 'squeezestart', onSessionEvent );\n                 session.addEventListener( 'squeezeend', onSessionEvent );\n                 session.addEventListener( 'end', onSessionEnd );\n                 session.addEventListener( 'inputsourceschange', onInputSourcesChange );\n \n                 if ( attributes.xrCompatible !== true ) {\n \n                     await gl.makeXRCompatible();\n \n                 }\n \n                 if ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n \n                     const layerInit = {\n                         antialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n                         alpha: attributes.alpha,\n                         depth: attributes.depth,\n                         stencil: attributes.stencil,\n                         framebufferScaleFactor: framebufferScaleFactor\n                     };\n \n                     glBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n \n                     session.updateRenderState( { baseLayer: glBaseLayer } );\n \n                     newRenderTarget = new WebGLRenderTarget(\n                         glBaseLayer.framebufferWidth,\n                         glBaseLayer.framebufferHeight,\n                         {\n                             format: RGBAFormat,\n                             type: UnsignedByteType,\n                             encoding: renderer.outputEncoding\n                         }\n                     );\n \n                 } else {\n \n                     let depthFormat = null;\n                     let depthType = null;\n                     let glDepthFormat = null;\n \n                     if ( attributes.depth ) {\n \n                         glDepthFormat = attributes.stencil ? 35056 : 33190;\n                         depthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n                         depthType = attributes.stencil ? UnsignedInt248Type : UnsignedShortType;\n \n                     }\n \n                     const projectionlayerInit = {\n                         colorFormat: ( renderer.outputEncoding === sRGBEncoding ) ? 35907 : 32856,\n                         depthFormat: glDepthFormat,\n                         scaleFactor: framebufferScaleFactor\n                     };\n \n                     glBinding = new XRWebGLBinding( session, gl );\n \n                     glProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n \n                     session.updateRenderState( { layers: [ glProjLayer ] } );\n \n                     newRenderTarget = new WebGLRenderTarget(\n                         glProjLayer.textureWidth,\n                         glProjLayer.textureHeight,\n                         {\n                             format: RGBAFormat,\n                             type: UnsignedByteType,\n                             depthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n                             stencilBuffer: attributes.stencil,\n                             encoding: renderer.outputEncoding,\n                             samples: attributes.antialias ? 4 : 0\n                         } );\n \n                     const renderTargetProperties = renderer.properties.get( newRenderTarget );\n                     renderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n \n                 }\n \n                 newRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n \n                 // Set foveation to maximum.\n                 this.setFoveation( 1.0 );\n \n                 referenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n \n                 animation.setContext( session );\n                 animation.start();\n \n                 scope.isPresenting = true;\n \n                 scope.dispatchEvent( { type: 'sessionstart' } );\n \n             }\n \n         };\n \n         function onInputSourcesChange( event ) {\n \n             const inputSources = session.inputSources;\n \n             // Assign inputSources to available controllers\n \n             for ( let i = 0; i < controllers.length; i ++ ) {\n \n                 inputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n \n             }\n \n             // Notify disconnected\n \n             for ( let i = 0; i < event.removed.length; i ++ ) {\n \n                 const inputSource = event.removed[ i ];\n                 const controller = inputSourcesMap.get( inputSource );\n \n                 if ( controller ) {\n \n                     controller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n                     inputSourcesMap.delete( inputSource );\n \n                 }\n \n             }\n \n             // Notify connected\n \n             for ( let i = 0; i < event.added.length; i ++ ) {\n \n                 const inputSource = event.added[ i ];\n                 const controller = inputSourcesMap.get( inputSource );\n \n                 if ( controller ) {\n \n                     controller.dispatchEvent( { type: 'connected', data: inputSource } );\n \n                 }\n \n             }\n \n         }\n \n         //\n \n         const cameraLPos = new Vector3();\n         const cameraRPos = new Vector3();\n \n         /**\n          * Assumes 2 cameras that are parallel and share an X-axis, and that\n          * the cameras' projection and world matrices have already been set.\n          * And that near and far planes are identical for both cameras.\n          * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n          */\n         function setProjectionFromUnion( camera, cameraL, cameraR ) {\n \n             cameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n             cameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n \n             const ipd = cameraLPos.distanceTo( cameraRPos );\n \n             const projL = cameraL.projectionMatrix.elements;\n             const projR = cameraR.projectionMatrix.elements;\n \n             // VR systems will have identical far and near planes, and\n             // most likely identical top and bottom frustum extents.\n             // Use the left camera for these values.\n             const near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n             const far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n             const topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n             const bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n \n             const leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n             const rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n             const left = near * leftFov;\n             const right = near * rightFov;\n \n             // Calculate the new camera's position offset from the\n             // left camera. xOffset should be roughly half `ipd`.\n             const zOffset = ipd / ( - leftFov + rightFov );\n             const xOffset = zOffset * - leftFov;\n \n             // TODO: Better way to apply this offset?\n             cameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n             camera.translateX( xOffset );\n             camera.translateZ( zOffset );\n             camera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n             camera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n \n             // Find the union of the frustum values of the cameras and scale\n             // the values so that the near plane's position does not change in world space,\n             // although must now be relative to the new union camera.\n             const near2 = near + zOffset;\n             const far2 = far + zOffset;\n             const left2 = left - xOffset;\n             const right2 = right + ( ipd - xOffset );\n             const top2 = topFov * far / far2 * near2;\n             const bottom2 = bottomFov * far / far2 * near2;\n \n             camera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n \n         }\n \n         function updateCamera( camera, parent ) {\n \n             if ( parent === null ) {\n \n                 camera.matrixWorld.copy( camera.matrix );\n \n             } else {\n \n                 camera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n \n             }\n \n             camera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n \n         }\n \n         this.updateCamera = function ( camera ) {\n \n             if ( session === null ) return;\n \n             cameraVR.near = cameraR.near = cameraL.near = camera.near;\n             cameraVR.far = cameraR.far = cameraL.far = camera.far;\n \n             if ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n \n                 // Note that the new renderState won't apply until the next frame. See #18320\n \n                 session.updateRenderState( {\n                     depthNear: cameraVR.near,\n                     depthFar: cameraVR.far\n                 } );\n \n                 _currentDepthNear = cameraVR.near;\n                 _currentDepthFar = cameraVR.far;\n \n             }\n \n             const parent = camera.parent;\n             const cameras = cameraVR.cameras;\n \n             updateCamera( cameraVR, parent );\n \n             for ( let i = 0; i < cameras.length; i ++ ) {\n \n                 updateCamera( cameras[ i ], parent );\n \n             }\n \n             cameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n \n             // update user camera and its children\n \n             camera.position.copy( cameraVR.position );\n             camera.quaternion.copy( cameraVR.quaternion );\n             camera.scale.copy( cameraVR.scale );\n             camera.matrix.copy( cameraVR.matrix );\n             camera.matrixWorld.copy( cameraVR.matrixWorld );\n \n             const children = camera.children;\n \n             for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n                 children[ i ].updateMatrixWorld( true );\n \n             }\n \n             // update projection matrix for proper view frustum culling\n \n             if ( cameras.length === 2 ) {\n \n                 setProjectionFromUnion( cameraVR, cameraL, cameraR );\n \n             } else {\n \n                 // assume single camera setup (AR)\n \n                 cameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n \n             }\n \n         };\n \n         this.getCamera = function () {\n \n             return cameraVR;\n \n         };\n \n         this.getFoveation = function () {\n \n             if ( glProjLayer !== null ) {\n \n                 return glProjLayer.fixedFoveation;\n \n             }\n \n             if ( glBaseLayer !== null ) {\n \n                 return glBaseLayer.fixedFoveation;\n \n             }\n \n             return undefined;\n \n         };\n \n         this.setFoveation = function ( foveation ) {\n \n             // 0 = no foveation = full resolution\n             // 1 = maximum foveation = the edges render at lower resolution\n \n             if ( glProjLayer !== null ) {\n \n                 glProjLayer.fixedFoveation = foveation;\n \n             }\n \n             if ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n \n                 glBaseLayer.fixedFoveation = foveation;\n \n             }\n \n         };\n \n         // Animation Loop\n \n         let onAnimationFrameCallback = null;\n \n         function onAnimationFrame( time, frame ) {\n \n             pose = frame.getViewerPose( referenceSpace );\n             xrFrame = frame;\n \n             if ( pose !== null ) {\n \n                 const views = pose.views;\n \n                 if ( glBaseLayer !== null ) {\n \n                     renderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n                     renderer.setRenderTarget( newRenderTarget );\n \n                 }\n \n                 let cameraVRNeedsUpdate = false;\n \n                 // check if it's necessary to rebuild cameraVR's camera list\n \n                 if ( views.length !== cameraVR.cameras.length ) {\n \n                     cameraVR.cameras.length = 0;\n                     cameraVRNeedsUpdate = true;\n \n                 }\n \n                 for ( let i = 0; i < views.length; i ++ ) {\n \n                     const view = views[ i ];\n \n                     let viewport = null;\n \n                     if ( glBaseLayer !== null ) {\n \n                         viewport = glBaseLayer.getViewport( view );\n \n                     } else {\n \n                         const glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n                         viewport = glSubImage.viewport;\n \n                         // For side-by-side projection, we only produce a single texture for both eyes.\n                         if ( i === 0 ) {\n \n                             renderer.setRenderTargetTextures(\n                                 newRenderTarget,\n                                 glSubImage.colorTexture,\n                                 glProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n \n                             renderer.setRenderTarget( newRenderTarget );\n \n                         }\n \n                     }\n \n                     const camera = cameras[ i ];\n \n                     camera.matrix.fromArray( view.transform.matrix );\n                     camera.projectionMatrix.fromArray( view.projectionMatrix );\n                     camera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n \n                     if ( i === 0 ) {\n \n                         cameraVR.matrix.copy( camera.matrix );\n \n                     }\n \n                     if ( cameraVRNeedsUpdate === true ) {\n \n                         cameraVR.cameras.push( camera );\n \n                     }\n \n                 }\n \n             }\n \n             //\n \n             const inputSources = session.inputSources;\n \n             for ( let i = 0; i < controllers.length; i ++ ) {\n \n                 const controller = controllers[ i ];\n                 const inputSource = inputSources[ i ];\n \n                 controller.update( inputSource, frame, referenceSpace );\n \n             }\n \n             if ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n \n             xrFrame = null;\n \n         }\n \n         const animation = new WebGLAnimation();\n \n         animation.setAnimationLoop( onAnimationFrame );\n \n         this.setAnimationLoop = function ( callback ) {\n \n             onAnimationFrameCallback = callback;\n \n         };\n \n         this.dispose = function () {};\n \n     }\n \n }\n \n function WebGLMaterials( renderer, properties ) {\n \n     function refreshFogUniforms( uniforms, fog ) {\n \n         uniforms.fogColor.value.copy( fog.color );\n \n         if ( fog.isFog ) {\n \n             uniforms.fogNear.value = fog.near;\n             uniforms.fogFar.value = fog.far;\n \n         } else if ( fog.isFogExp2 ) {\n \n             uniforms.fogDensity.value = fog.density;\n \n         }\n \n     }\n \n     function refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n \n         if ( material.isMeshBasicMaterial ) {\n \n             refreshUniformsCommon( uniforms, material );\n \n         } else if ( material.isMeshLambertMaterial ) {\n \n             refreshUniformsCommon( uniforms, material );\n \n         } else if ( material.isMeshToonMaterial ) {\n \n             refreshUniformsCommon( uniforms, material );\n             refreshUniformsToon( uniforms, material );\n \n         } else if ( material.isMeshPhongMaterial ) {\n \n             refreshUniformsCommon( uniforms, material );\n             refreshUniformsPhong( uniforms, material );\n \n         } else if ( material.isMeshStandardMaterial ) {\n \n             refreshUniformsCommon( uniforms, material );\n             refreshUniformsStandard( uniforms, material );\n \n             if ( material.isMeshPhysicalMaterial ) {\n \n                 refreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n \n             }\n \n         } else if ( material.isMeshMatcapMaterial ) {\n \n             refreshUniformsCommon( uniforms, material );\n             refreshUniformsMatcap( uniforms, material );\n \n         } else if ( material.isMeshDepthMaterial ) {\n \n             refreshUniformsCommon( uniforms, material );\n \n         } else if ( material.isMeshDistanceMaterial ) {\n \n             refreshUniformsCommon( uniforms, material );\n             refreshUniformsDistance( uniforms, material );\n \n         } else if ( material.isMeshNormalMaterial ) {\n \n             refreshUniformsCommon( uniforms, material );\n \n         } else if ( material.isLineBasicMaterial ) {\n \n             refreshUniformsLine( uniforms, material );\n \n             if ( material.isLineDashedMaterial ) {\n \n                 refreshUniformsDash( uniforms, material );\n \n             }\n \n         } else if ( material.isPointsMaterial ) {\n \n             refreshUniformsPoints( uniforms, material, pixelRatio, height );\n \n         } else if ( material.isSpriteMaterial ) {\n \n             refreshUniformsSprites( uniforms, material );\n \n         } else if ( material.isShadowMaterial ) {\n \n             uniforms.color.value.copy( material.color );\n             uniforms.opacity.value = material.opacity;\n \n         } else if ( material.isShaderMaterial ) {\n \n             material.uniformsNeedUpdate = false; // #15581\n \n         }\n \n     }\n \n     function refreshUniformsCommon( uniforms, material ) {\n \n         uniforms.opacity.value = material.opacity;\n \n         if ( material.color ) {\n \n             uniforms.diffuse.value.copy( material.color );\n \n         }\n \n         if ( material.emissive ) {\n \n             uniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n \n         }\n \n         if ( material.map ) {\n \n             uniforms.map.value = material.map;\n \n         }\n \n         if ( material.alphaMap ) {\n \n             uniforms.alphaMap.value = material.alphaMap;\n \n         }\n \n         if ( material.bumpMap ) {\n \n             uniforms.bumpMap.value = material.bumpMap;\n             uniforms.bumpScale.value = material.bumpScale;\n             if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n \n         }\n \n         if ( material.displacementMap ) {\n \n             uniforms.displacementMap.value = material.displacementMap;\n             uniforms.displacementScale.value = material.displacementScale;\n             uniforms.displacementBias.value = material.displacementBias;\n \n         }\n \n         if ( material.emissiveMap ) {\n \n             uniforms.emissiveMap.value = material.emissiveMap;\n \n         }\n \n         if ( material.normalMap ) {\n \n             uniforms.normalMap.value = material.normalMap;\n             uniforms.normalScale.value.copy( material.normalScale );\n             if ( material.side === BackSide ) uniforms.normalScale.value.negate();\n \n         }\n \n         if ( material.specularMap ) {\n \n             uniforms.specularMap.value = material.specularMap;\n \n         }\n \n         if ( material.alphaTest > 0 ) {\n \n             uniforms.alphaTest.value = material.alphaTest;\n \n         }\n \n         const envMap = properties.get( material ).envMap;\n \n         if ( envMap ) {\n \n             uniforms.envMap.value = envMap;\n \n             uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n \n             uniforms.reflectivity.value = material.reflectivity;\n             uniforms.ior.value = material.ior;\n             uniforms.refractionRatio.value = material.refractionRatio;\n \n         }\n \n         if ( material.lightMap ) {\n \n             uniforms.lightMap.value = material.lightMap;\n \n             // artist-friendly light intensity scaling factor\n             const scaleFactor = ( renderer.physicallyCorrectLights !== true ) ? Math.PI : 1;\n \n             uniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n \n         }\n \n         if ( material.aoMap ) {\n \n             uniforms.aoMap.value = material.aoMap;\n             uniforms.aoMapIntensity.value = material.aoMapIntensity;\n \n         }\n \n         // uv repeat and offset setting priorities\n         // 1. color map\n         // 2. specular map\n         // 3. displacementMap map\n         // 4. normal map\n         // 5. bump map\n         // 6. roughnessMap map\n         // 7. metalnessMap map\n         // 8. alphaMap map\n         // 9. emissiveMap map\n         // 10. clearcoat map\n         // 11. clearcoat normal map\n         // 12. clearcoat roughnessMap map\n         // 13. specular intensity map\n         // 14. specular tint map\n         // 15. transmission map\n         // 16. thickness map\n \n         let uvScaleMap;\n \n         if ( material.map ) {\n \n             uvScaleMap = material.map;\n \n         } else if ( material.specularMap ) {\n \n             uvScaleMap = material.specularMap;\n \n         } else if ( material.displacementMap ) {\n \n             uvScaleMap = material.displacementMap;\n \n         } else if ( material.normalMap ) {\n \n             uvScaleMap = material.normalMap;\n \n         } else if ( material.bumpMap ) {\n \n             uvScaleMap = material.bumpMap;\n \n         } else if ( material.roughnessMap ) {\n \n             uvScaleMap = material.roughnessMap;\n \n         } else if ( material.metalnessMap ) {\n \n             uvScaleMap = material.metalnessMap;\n \n         } else if ( material.alphaMap ) {\n \n             uvScaleMap = material.alphaMap;\n \n         } else if ( material.emissiveMap ) {\n \n             uvScaleMap = material.emissiveMap;\n \n         } else if ( material.clearcoatMap ) {\n \n             uvScaleMap = material.clearcoatMap;\n \n         } else if ( material.clearcoatNormalMap ) {\n \n             uvScaleMap = material.clearcoatNormalMap;\n \n         } else if ( material.clearcoatRoughnessMap ) {\n \n             uvScaleMap = material.clearcoatRoughnessMap;\n \n         } else if ( material.specularIntensityMap ) {\n \n             uvScaleMap = material.specularIntensityMap;\n \n         } else if ( material.specularColorMap ) {\n \n             uvScaleMap = material.specularColorMap;\n \n         } else if ( material.transmissionMap ) {\n \n             uvScaleMap = material.transmissionMap;\n \n         } else if ( material.thicknessMap ) {\n \n             uvScaleMap = material.thicknessMap;\n \n         } else if ( material.sheenColorMap ) {\n \n             uvScaleMap = material.sheenColorMap;\n \n         } else if ( material.sheenRoughnessMap ) {\n \n             uvScaleMap = material.sheenRoughnessMap;\n \n         }\n \n         if ( uvScaleMap !== undefined ) {\n \n             // backwards compatibility\n             if ( uvScaleMap.isWebGLRenderTarget ) {\n \n                 uvScaleMap = uvScaleMap.texture;\n \n             }\n \n             if ( uvScaleMap.matrixAutoUpdate === true ) {\n \n                 uvScaleMap.updateMatrix();\n \n             }\n \n             uniforms.uvTransform.value.copy( uvScaleMap.matrix );\n \n         }\n \n         // uv repeat and offset setting priorities for uv2\n         // 1. ao map\n         // 2. light map\n \n         let uv2ScaleMap;\n \n         if ( material.aoMap ) {\n \n             uv2ScaleMap = material.aoMap;\n \n         } else if ( material.lightMap ) {\n \n             uv2ScaleMap = material.lightMap;\n \n         }\n \n         if ( uv2ScaleMap !== undefined ) {\n \n             // backwards compatibility\n             if ( uv2ScaleMap.isWebGLRenderTarget ) {\n \n                 uv2ScaleMap = uv2ScaleMap.texture;\n \n             }\n \n             if ( uv2ScaleMap.matrixAutoUpdate === true ) {\n \n                 uv2ScaleMap.updateMatrix();\n \n             }\n \n             uniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n \n         }\n \n     }\n \n     function refreshUniformsLine( uniforms, material ) {\n \n         uniforms.diffuse.value.copy( material.color );\n         uniforms.opacity.value = material.opacity;\n \n     }\n \n     function refreshUniformsDash( uniforms, material ) {\n \n         uniforms.dashSize.value = material.dashSize;\n         uniforms.totalSize.value = material.dashSize + material.gapSize;\n         uniforms.scale.value = material.scale;\n \n     }\n \n     function refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n \n         uniforms.diffuse.value.copy( material.color );\n         uniforms.opacity.value = material.opacity;\n         uniforms.size.value = material.size * pixelRatio;\n         uniforms.scale.value = height * 0.5;\n \n         if ( material.map ) {\n \n             uniforms.map.value = material.map;\n \n         }\n \n         if ( material.alphaMap ) {\n \n             uniforms.alphaMap.value = material.alphaMap;\n \n         }\n \n         if ( material.alphaTest > 0 ) {\n \n             uniforms.alphaTest.value = material.alphaTest;\n \n         }\n \n         // uv repeat and offset setting priorities\n         // 1. color map\n         // 2. alpha map\n \n         let uvScaleMap;\n \n         if ( material.map ) {\n \n             uvScaleMap = material.map;\n \n         } else if ( material.alphaMap ) {\n \n             uvScaleMap = material.alphaMap;\n \n         }\n \n         if ( uvScaleMap !== undefined ) {\n \n             if ( uvScaleMap.matrixAutoUpdate === true ) {\n \n                 uvScaleMap.updateMatrix();\n \n             }\n \n             uniforms.uvTransform.value.copy( uvScaleMap.matrix );\n \n         }\n \n     }\n \n     function refreshUniformsSprites( uniforms, material ) {\n \n         uniforms.diffuse.value.copy( material.color );\n         uniforms.opacity.value = material.opacity;\n         uniforms.rotation.value = material.rotation;\n \n         if ( material.map ) {\n \n             uniforms.map.value = material.map;\n \n         }\n \n         if ( material.alphaMap ) {\n \n             uniforms.alphaMap.value = material.alphaMap;\n \n         }\n \n         if ( material.alphaTest > 0 ) {\n \n             uniforms.alphaTest.value = material.alphaTest;\n \n         }\n \n         // uv repeat and offset setting priorities\n         // 1. color map\n         // 2. alpha map\n \n         let uvScaleMap;\n \n         if ( material.map ) {\n \n             uvScaleMap = material.map;\n \n         } else if ( material.alphaMap ) {\n \n             uvScaleMap = material.alphaMap;\n \n         }\n \n         if ( uvScaleMap !== undefined ) {\n \n             if ( uvScaleMap.matrixAutoUpdate === true ) {\n \n                 uvScaleMap.updateMatrix();\n \n             }\n \n             uniforms.uvTransform.value.copy( uvScaleMap.matrix );\n \n         }\n \n     }\n \n     function refreshUniformsPhong( uniforms, material ) {\n \n         uniforms.specular.value.copy( material.specular );\n         uniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n \n     }\n \n     function refreshUniformsToon( uniforms, material ) {\n \n         if ( material.gradientMap ) {\n \n             uniforms.gradientMap.value = material.gradientMap;\n \n         }\n \n     }\n \n     function refreshUniformsStandard( uniforms, material ) {\n \n         uniforms.roughness.value = material.roughness;\n         uniforms.metalness.value = material.metalness;\n \n         if ( material.roughnessMap ) {\n \n             uniforms.roughnessMap.value = material.roughnessMap;\n \n         }\n \n         if ( material.metalnessMap ) {\n \n             uniforms.metalnessMap.value = material.metalnessMap;\n \n         }\n \n         const envMap = properties.get( material ).envMap;\n \n         if ( envMap ) {\n \n             //uniforms.envMap.value = material.envMap; // part of uniforms common\n             uniforms.envMapIntensity.value = material.envMapIntensity;\n \n         }\n \n     }\n \n     function refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n \n         uniforms.ior.value = material.ior; // also part of uniforms common\n \n         if ( material.sheen > 0 ) {\n \n             uniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n \n             uniforms.sheenRoughness.value = material.sheenRoughness;\n \n             if ( material.sheenColorMap ) {\n \n                 uniforms.sheenColorMap.value = material.sheenColorMap;\n \n             }\n \n             if ( material.sheenRoughnessMap ) {\n \n                 uniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n \n             }\n \n         }\n \n         if ( material.clearcoat > 0 ) {\n \n             uniforms.clearcoat.value = material.clearcoat;\n             uniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n \n             if ( material.clearcoatMap ) {\n \n                 uniforms.clearcoatMap.value = material.clearcoatMap;\n \n             }\n \n             if ( material.clearcoatRoughnessMap ) {\n \n                 uniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n \n             }\n \n             if ( material.clearcoatNormalMap ) {\n \n                 uniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n                 uniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n \n                 if ( material.side === BackSide ) {\n \n                     uniforms.clearcoatNormalScale.value.negate();\n \n                 }\n \n             }\n \n         }\n \n         if ( material.transmission > 0 ) {\n \n             uniforms.transmission.value = material.transmission;\n             uniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n             uniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n \n             if ( material.transmissionMap ) {\n \n                 uniforms.transmissionMap.value = material.transmissionMap;\n \n             }\n \n             uniforms.thickness.value = material.thickness;\n \n             if ( material.thicknessMap ) {\n \n                 uniforms.thicknessMap.value = material.thicknessMap;\n \n             }\n \n             uniforms.attenuationDistance.value = material.attenuationDistance;\n             uniforms.attenuationColor.value.copy( material.attenuationColor );\n \n         }\n \n         uniforms.specularIntensity.value = material.specularIntensity;\n         uniforms.specularColor.value.copy( material.specularColor );\n \n         if ( material.specularIntensityMap ) {\n \n             uniforms.specularIntensityMap.value = material.specularIntensityMap;\n \n         }\n \n         if ( material.specularColorMap ) {\n \n             uniforms.specularColorMap.value = material.specularColorMap;\n \n         }\n \n     }\n \n     function refreshUniformsMatcap( uniforms, material ) {\n \n         if ( material.matcap ) {\n \n             uniforms.matcap.value = material.matcap;\n \n         }\n \n     }\n \n     function refreshUniformsDistance( uniforms, material ) {\n \n         uniforms.referencePosition.value.copy( material.referencePosition );\n         uniforms.nearDistance.value = material.nearDistance;\n         uniforms.farDistance.value = material.farDistance;\n \n     }\n \n     return {\n         refreshFogUniforms: refreshFogUniforms,\n         refreshMaterialUniforms: refreshMaterialUniforms\n     };\n \n }\n \n function createCanvasElement() {\n \n     const canvas = createElementNS( 'canvas' );\n     canvas.style.display = 'block';\n     return canvas;\n \n }\n \n function WebGLRenderer( parameters = {} ) {\n \n     const _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n         _context = parameters.context !== undefined ? parameters.context : null,\n \n         _depth = parameters.depth !== undefined ? parameters.depth : true,\n         _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n         _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n         _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n         _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n         _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n         _failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n \n     let _alpha;\n \n     if ( parameters.context !== undefined ) {\n \n         _alpha = _context.getContextAttributes().alpha;\n \n     } else {\n \n         _alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n \n     }\n \n     let currentRenderList = null;\n     let currentRenderState = null;\n \n     // render() can be called from within a callback triggered by another render.\n     // We track this so that the nested render call gets its list and state isolated from the parent render call.\n \n     const renderListStack = [];\n     const renderStateStack = [];\n \n     // public properties\n \n     this.domElement = _canvas;\n \n     // Debug configuration container\n     this.debug = {\n \n         /**\n          * Enables error checking and reporting when shader programs are being compiled\n          * @type {boolean}\n          */\n         checkShaderErrors: true\n     };\n \n     // clearing\n \n     this.autoClear = true;\n     this.autoClearColor = true;\n     this.autoClearDepth = true;\n     this.autoClearStencil = true;\n \n     // scene graph\n \n     this.sortObjects = true;\n \n     // user-defined clipping\n \n     this.clippingPlanes = [];\n     this.localClippingEnabled = false;\n \n     // physically based shading\n \n     this.outputEncoding = LinearEncoding;\n \n     // physical lights\n \n     this.physicallyCorrectLights = false;\n \n     // tone mapping\n \n     this.toneMapping = NoToneMapping;\n     this.toneMappingExposure = 1.0;\n \n     // internal properties\n \n     const _this = this;\n \n     let _isContextLost = false;\n \n     // internal state cache\n \n     let _currentActiveCubeFace = 0;\n     let _currentActiveMipmapLevel = 0;\n     let _currentRenderTarget = null;\n     let _currentMaterialId = - 1;\n \n     let _currentCamera = null;\n \n     const _currentViewport = new Vector4();\n     const _currentScissor = new Vector4();\n     let _currentScissorTest = null;\n \n     //\n \n     let _width = _canvas.width;\n     let _height = _canvas.height;\n \n     let _pixelRatio = 1;\n     let _opaqueSort = null;\n     let _transparentSort = null;\n \n     const _viewport = new Vector4( 0, 0, _width, _height );\n     const _scissor = new Vector4( 0, 0, _width, _height );\n     let _scissorTest = false;\n \n     // frustum\n \n     const _frustum = new Frustum();\n \n     // clipping\n \n     let _clippingEnabled = false;\n     let _localClippingEnabled = false;\n \n     // transmission\n \n     let _transmissionRenderTarget = null;\n \n     // camera matrices cache\n \n     const _projScreenMatrix = new Matrix4();\n \n     const _vector2 = new Vector2();\n     const _vector3 = new Vector3();\n \n     const _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n \n     function getTargetPixelRatio() {\n \n         return _currentRenderTarget === null ? _pixelRatio : 1;\n \n     }\n \n     // initialize\n \n     let _gl = _context;\n \n     function getContext( contextNames, contextAttributes ) {\n \n         for ( let i = 0; i < contextNames.length; i ++ ) {\n \n             const contextName = contextNames[ i ];\n             const context = _canvas.getContext( contextName, contextAttributes );\n             if ( context !== null ) return context;\n \n         }\n \n         return null;\n \n     }\n \n     try {\n \n         const contextAttributes = {\n             alpha: true,\n             depth: _depth,\n             stencil: _stencil,\n             antialias: _antialias,\n             premultipliedAlpha: _premultipliedAlpha,\n             preserveDrawingBuffer: _preserveDrawingBuffer,\n             powerPreference: _powerPreference,\n             failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n         };\n \n         // OffscreenCanvas does not have setAttribute, see #22811\n         if ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n \n         // event listeners must be registered before WebGL context is created, see #12753\n         _canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n         _canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n \n         if ( _gl === null ) {\n \n             const contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n \n             if ( _this.isWebGL1Renderer === true ) {\n \n                 contextNames.shift();\n \n             }\n \n             _gl = getContext( contextNames, contextAttributes );\n \n             if ( _gl === null ) {\n \n                 if ( getContext( contextNames ) ) {\n \n                     throw new Error( 'Error creating WebGL context with your selected attributes.' );\n \n                 } else {\n \n                     throw new Error( 'Error creating WebGL context.' );\n \n                 }\n \n             }\n \n         }\n \n         // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n \n         if ( _gl.getShaderPrecisionFormat === undefined ) {\n \n             _gl.getShaderPrecisionFormat = function () {\n \n                 return { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n \n             };\n \n         }\n \n     } catch ( error ) {\n \n         console.error( 'THREE.WebGLRenderer: ' + error.message );\n         throw error;\n \n     }\n \n     let extensions, capabilities, state, info;\n     let properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n     let programCache, materials, renderLists, renderStates, clipping, shadowMap;\n \n     let background, morphtargets, bufferRenderer, indexedBufferRenderer;\n \n     let utils, bindingStates;\n \n     function initGLContext() {\n \n         extensions = new WebGLExtensions( _gl );\n \n         capabilities = new WebGLCapabilities( _gl, extensions, parameters );\n \n         extensions.init( capabilities );\n \n         utils = new WebGLUtils( _gl, extensions, capabilities );\n \n         state = new WebGLState( _gl, extensions, capabilities );\n \n         info = new WebGLInfo( _gl );\n         properties = new WebGLProperties();\n         textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n         cubemaps = new WebGLCubeMaps( _this );\n         cubeuvmaps = new WebGLCubeUVMaps( _this );\n         attributes = new WebGLAttributes( _gl, capabilities );\n         bindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n         geometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n         objects = new WebGLObjects( _gl, geometries, attributes, info );\n         morphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n         clipping = new WebGLClipping( properties );\n         programCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n         materials = new WebGLMaterials( _this, properties );\n         renderLists = new WebGLRenderLists();\n         renderStates = new WebGLRenderStates( extensions, capabilities );\n         background = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );\n         shadowMap = new WebGLShadowMap( _this, objects, capabilities );\n \n         bufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n         indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n \n         info.programs = programCache.programs;\n \n         _this.capabilities = capabilities;\n         _this.extensions = extensions;\n         _this.properties = properties;\n         _this.renderLists = renderLists;\n         _this.shadowMap = shadowMap;\n         _this.state = state;\n         _this.info = info;\n \n     }\n \n     initGLContext();\n \n     // xr\n \n     const xr = new WebXRManager( _this, _gl );\n \n     this.xr = xr;\n \n     // API\n \n     this.getContext = function () {\n \n         return _gl;\n \n     };\n \n     this.getContextAttributes = function () {\n \n         return _gl.getContextAttributes();\n \n     };\n \n     this.forceContextLoss = function () {\n \n         const extension = extensions.get( 'WEBGL_lose_context' );\n         if ( extension ) extension.loseContext();\n \n     };\n \n     this.forceContextRestore = function () {\n \n         const extension = extensions.get( 'WEBGL_lose_context' );\n         if ( extension ) extension.restoreContext();\n \n     };\n \n     this.getPixelRatio = function () {\n \n         return _pixelRatio;\n \n     };\n \n     this.setPixelRatio = function ( value ) {\n \n         if ( value === undefined ) return;\n \n         _pixelRatio = value;\n \n         this.setSize( _width, _height, false );\n \n     };\n \n     this.getSize = function ( target ) {\n \n         return target.set( _width, _height );\n \n     };\n \n     this.setSize = function ( width, height, updateStyle ) {\n \n         if ( xr.isPresenting ) {\n \n             console.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n             return;\n \n         }\n \n         _width = width;\n         _height = height;\n \n         _canvas.width = Math.floor( width * _pixelRatio );\n         _canvas.height = Math.floor( height * _pixelRatio );\n \n         if ( updateStyle !== false ) {\n \n             _canvas.style.width = width + 'px';\n             _canvas.style.height = height + 'px';\n \n         }\n \n         this.setViewport( 0, 0, width, height );\n \n     };\n \n     this.getDrawingBufferSize = function ( target ) {\n \n         return target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n \n     };\n \n     this.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n \n         _width = width;\n         _height = height;\n \n         _pixelRatio = pixelRatio;\n \n         _canvas.width = Math.floor( width * pixelRatio );\n         _canvas.height = Math.floor( height * pixelRatio );\n \n         this.setViewport( 0, 0, width, height );\n \n     };\n \n     this.getCurrentViewport = function ( target ) {\n \n         return target.copy( _currentViewport );\n \n     };\n \n     this.getViewport = function ( target ) {\n \n         return target.copy( _viewport );\n \n     };\n \n     this.setViewport = function ( x, y, width, height ) {\n \n         if ( x.isVector4 ) {\n \n             _viewport.set( x.x, x.y, x.z, x.w );\n \n         } else {\n \n             _viewport.set( x, y, width, height );\n \n         }\n \n         state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n \n     };\n \n     this.getScissor = function ( target ) {\n \n         return target.copy( _scissor );\n \n     };\n \n     this.setScissor = function ( x, y, width, height ) {\n \n         if ( x.isVector4 ) {\n \n             _scissor.set( x.x, x.y, x.z, x.w );\n \n         } else {\n \n             _scissor.set( x, y, width, height );\n \n         }\n \n         state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n \n     };\n \n     this.getScissorTest = function () {\n \n         return _scissorTest;\n \n     };\n \n     this.setScissorTest = function ( boolean ) {\n \n         state.setScissorTest( _scissorTest = boolean );\n \n     };\n \n     this.setOpaqueSort = function ( method ) {\n \n         _opaqueSort = method;\n \n     };\n \n     this.setTransparentSort = function ( method ) {\n \n         _transparentSort = method;\n \n     };\n \n     // Clearing\n \n     this.getClearColor = function ( target ) {\n \n         return target.copy( background.getClearColor() );\n \n     };\n \n     this.setClearColor = function () {\n \n         background.setClearColor.apply( background, arguments );\n \n     };\n \n     this.getClearAlpha = function () {\n \n         return background.getClearAlpha();\n \n     };\n \n     this.setClearAlpha = function () {\n \n         background.setClearAlpha.apply( background, arguments );\n \n     };\n \n     this.clear = function ( color = true, depth = true, stencil = true ) {\n \n         let bits = 0;\n \n         if ( color ) bits |= 16384;\n         if ( depth ) bits |= 256;\n         if ( stencil ) bits |= 1024;\n \n         _gl.clear( bits );\n \n     };\n \n     this.clearColor = function () {\n \n         this.clear( true, false, false );\n \n     };\n \n     this.clearDepth = function () {\n \n         this.clear( false, true, false );\n \n     };\n \n     this.clearStencil = function () {\n \n         this.clear( false, false, true );\n \n     };\n \n     //\n \n     this.dispose = function () {\n \n         _canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n         _canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n \n         renderLists.dispose();\n         renderStates.dispose();\n         properties.dispose();\n         cubemaps.dispose();\n         cubeuvmaps.dispose();\n         objects.dispose();\n         bindingStates.dispose();\n         programCache.dispose();\n \n         xr.dispose();\n \n         xr.removeEventListener( 'sessionstart', onXRSessionStart );\n         xr.removeEventListener( 'sessionend', onXRSessionEnd );\n \n         if ( _transmissionRenderTarget ) {\n \n             _transmissionRenderTarget.dispose();\n             _transmissionRenderTarget = null;\n \n         }\n \n         animation.stop();\n \n     };\n \n     // Events\n \n     function onContextLost( event ) {\n \n         event.preventDefault();\n \n         console.log( 'THREE.WebGLRenderer: Context Lost.' );\n \n         _isContextLost = true;\n \n     }\n \n     function onContextRestore( /* event */ ) {\n \n         console.log( 'THREE.WebGLRenderer: Context Restored.' );\n \n         _isContextLost = false;\n \n         const infoAutoReset = info.autoReset;\n         const shadowMapEnabled = shadowMap.enabled;\n         const shadowMapAutoUpdate = shadowMap.autoUpdate;\n         const shadowMapNeedsUpdate = shadowMap.needsUpdate;\n         const shadowMapType = shadowMap.type;\n \n         initGLContext();\n \n         info.autoReset = infoAutoReset;\n         shadowMap.enabled = shadowMapEnabled;\n         shadowMap.autoUpdate = shadowMapAutoUpdate;\n         shadowMap.needsUpdate = shadowMapNeedsUpdate;\n         shadowMap.type = shadowMapType;\n \n     }\n \n     function onMaterialDispose( event ) {\n \n         const material = event.target;\n \n         material.removeEventListener( 'dispose', onMaterialDispose );\n \n         deallocateMaterial( material );\n \n     }\n \n     // Buffer deallocation\n \n     function deallocateMaterial( material ) {\n \n         releaseMaterialProgramReferences( material );\n \n         properties.remove( material );\n \n     }\n \n \n     function releaseMaterialProgramReferences( material ) {\n \n         const programs = properties.get( material ).programs;\n \n         if ( programs !== undefined ) {\n \n             programs.forEach( function ( program ) {\n \n                 programCache.releaseProgram( program );\n \n             } );\n \n             if ( material.isShaderMaterial ) {\n \n                 programCache.releaseShaderCache( material );\n \n             }\n \n         }\n \n     }\n \n     // Buffer rendering\n \n     this.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n \n         if ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n \n         const frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n \n         const program = setProgram( camera, scene, geometry, material, object );\n \n         state.setMaterial( material, frontFaceCW );\n \n         //\n \n         let index = geometry.index;\n         const position = geometry.attributes.position;\n \n         //\n \n         if ( index === null ) {\n \n             if ( position === undefined || position.count === 0 ) return;\n \n         } else if ( index.count === 0 ) {\n \n             return;\n \n         }\n \n         //\n \n         let rangeFactor = 1;\n \n         if ( material.wireframe === true ) {\n \n             index = geometries.getWireframeAttribute( geometry );\n             rangeFactor = 2;\n \n         }\n \n         bindingStates.setup( object, material, program, geometry, index );\n \n         let attribute;\n         let renderer = bufferRenderer;\n \n         if ( index !== null ) {\n \n             attribute = attributes.get( index );\n \n             renderer = indexedBufferRenderer;\n             renderer.setIndex( attribute );\n \n         }\n \n         //\n \n         const dataCount = ( index !== null ) ? index.count : position.count;\n \n         const rangeStart = geometry.drawRange.start * rangeFactor;\n         const rangeCount = geometry.drawRange.count * rangeFactor;\n \n         const groupStart = group !== null ? group.start * rangeFactor : 0;\n         const groupCount = group !== null ? group.count * rangeFactor : Infinity;\n \n         const drawStart = Math.max( rangeStart, groupStart );\n         const drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n \n         const drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n \n         if ( drawCount === 0 ) return;\n \n         //\n \n         if ( object.isMesh ) {\n \n             if ( material.wireframe === true ) {\n \n                 state.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n                 renderer.setMode( 1 );\n \n             } else {\n \n                 renderer.setMode( 4 );\n \n             }\n \n         } else if ( object.isLine ) {\n \n             let lineWidth = material.linewidth;\n \n             if ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n \n             state.setLineWidth( lineWidth * getTargetPixelRatio() );\n \n             if ( object.isLineSegments ) {\n \n                 renderer.setMode( 1 );\n \n             } else if ( object.isLineLoop ) {\n \n                 renderer.setMode( 2 );\n \n             } else {\n \n                 renderer.setMode( 3 );\n \n             }\n \n         } else if ( object.isPoints ) {\n \n             renderer.setMode( 0 );\n \n         } else if ( object.isSprite ) {\n \n             renderer.setMode( 4 );\n \n         }\n \n         if ( object.isInstancedMesh ) {\n \n             renderer.renderInstances( drawStart, drawCount, object.count );\n \n         } else if ( geometry.isInstancedBufferGeometry ) {\n \n             const instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n \n             renderer.renderInstances( drawStart, drawCount, instanceCount );\n \n         } else {\n \n             renderer.render( drawStart, drawCount );\n \n         }\n \n     };\n \n     // Compile\n \n     this.compile = function ( scene, camera ) {\n \n         currentRenderState = renderStates.get( scene );\n         currentRenderState.init();\n \n         renderStateStack.push( currentRenderState );\n \n         scene.traverseVisible( function ( object ) {\n \n             if ( object.isLight && object.layers.test( camera.layers ) ) {\n \n                 currentRenderState.pushLight( object );\n \n                 if ( object.castShadow ) {\n \n                     currentRenderState.pushShadow( object );\n \n                 }\n \n             }\n \n         } );\n \n         currentRenderState.setupLights( _this.physicallyCorrectLights );\n \n         scene.traverse( function ( object ) {\n \n             const material = object.material;\n \n             if ( material ) {\n \n                 if ( Array.isArray( material ) ) {\n \n                     for ( let i = 0; i < material.length; i ++ ) {\n \n                         const material2 = material[ i ];\n \n                         getProgram( material2, scene, object );\n \n                     }\n \n                 } else {\n \n                     getProgram( material, scene, object );\n \n                 }\n \n             }\n \n         } );\n \n         renderStateStack.pop();\n         currentRenderState = null;\n \n     };\n \n     // Animation Loop\n \n     let onAnimationFrameCallback = null;\n \n     function onAnimationFrame( time ) {\n \n         if ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n \n     }\n \n     function onXRSessionStart() {\n \n         animation.stop();\n \n     }\n \n     function onXRSessionEnd() {\n \n         animation.start();\n \n     }\n \n     const animation = new WebGLAnimation();\n     animation.setAnimationLoop( onAnimationFrame );\n \n     if ( typeof self !== 'undefined' ) animation.setContext( self );\n \n     this.setAnimationLoop = function ( callback ) {\n \n         onAnimationFrameCallback = callback;\n         xr.setAnimationLoop( callback );\n \n         ( callback === null ) ? animation.stop() : animation.start();\n \n     };\n \n     xr.addEventListener( 'sessionstart', onXRSessionStart );\n     xr.addEventListener( 'sessionend', onXRSessionEnd );\n \n     // Rendering\n \n     this.render = function ( scene, camera ) {\n \n         if ( camera !== undefined && camera.isCamera !== true ) {\n \n             console.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n             return;\n \n         }\n \n         if ( _isContextLost === true ) return;\n \n         // update scene graph\n \n         if ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n \n         // update camera matrices and frustum\n \n         if ( camera.parent === null ) camera.updateMatrixWorld();\n \n         if ( xr.enabled === true && xr.isPresenting === true ) {\n \n             if ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n \n             camera = xr.getCamera(); // use XR camera for rendering\n \n         }\n \n         //\n         if ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n \n         currentRenderState = renderStates.get( scene, renderStateStack.length );\n         currentRenderState.init();\n \n         renderStateStack.push( currentRenderState );\n \n         _projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n         _frustum.setFromProjectionMatrix( _projScreenMatrix );\n \n         _localClippingEnabled = this.localClippingEnabled;\n         _clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n \n         currentRenderList = renderLists.get( scene, renderListStack.length );\n         currentRenderList.init();\n \n         renderListStack.push( currentRenderList );\n \n         projectObject( scene, camera, 0, _this.sortObjects );\n \n         currentRenderList.finish();\n \n         if ( _this.sortObjects === true ) {\n \n             currentRenderList.sort( _opaqueSort, _transparentSort );\n \n         }\n \n         //\n \n         if ( _clippingEnabled === true ) clipping.beginShadows();\n \n         const shadowsArray = currentRenderState.state.shadowsArray;\n \n         shadowMap.render( shadowsArray, scene, camera );\n \n         if ( _clippingEnabled === true ) clipping.endShadows();\n \n         //\n \n         if ( this.info.autoReset === true ) this.info.reset();\n \n         //\n \n         background.render( currentRenderList, scene );\n \n         // render scene\n \n         currentRenderState.setupLights( _this.physicallyCorrectLights );\n \n         if ( camera.isArrayCamera ) {\n \n             const cameras = camera.cameras;\n \n             for ( let i = 0, l = cameras.length; i < l; i ++ ) {\n \n                 const camera2 = cameras[ i ];\n \n                 renderScene( currentRenderList, scene, camera2, camera2.viewport );\n \n             }\n \n         } else {\n \n             renderScene( currentRenderList, scene, camera );\n \n         }\n \n         //\n \n         if ( _currentRenderTarget !== null ) {\n \n             // resolve multisample renderbuffers to a single-sample texture if necessary\n \n             textures.updateMultisampleRenderTarget( _currentRenderTarget );\n \n             // Generate mipmap if we're using any kind of mipmap filtering\n \n             textures.updateRenderTargetMipmap( _currentRenderTarget );\n \n         }\n \n         //\n \n         if ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n \n         // _gl.finish();\n \n         bindingStates.resetDefaultState();\n         _currentMaterialId = - 1;\n         _currentCamera = null;\n \n         renderStateStack.pop();\n \n         if ( renderStateStack.length > 0 ) {\n \n             currentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n \n         } else {\n \n             currentRenderState = null;\n \n         }\n \n         renderListStack.pop();\n \n         if ( renderListStack.length > 0 ) {\n \n             currentRenderList = renderListStack[ renderListStack.length - 1 ];\n \n         } else {\n \n             currentRenderList = null;\n \n         }\n \n     };\n \n     function projectObject( object, camera, groupOrder, sortObjects ) {\n \n         if ( object.visible === false ) return;\n \n         const visible = object.layers.test( camera.layers );\n \n         if ( visible ) {\n \n             if ( object.isGroup ) {\n \n                 groupOrder = object.renderOrder;\n \n             } else if ( object.isLOD ) {\n \n                 if ( object.autoUpdate === true ) object.update( camera );\n \n             } else if ( object.isLight ) {\n \n                 currentRenderState.pushLight( object );\n \n                 if ( object.castShadow ) {\n \n                     currentRenderState.pushShadow( object );\n \n                 }\n \n             } else if ( object.isSprite ) {\n \n                 if ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n \n                     if ( sortObjects ) {\n \n                         _vector3.setFromMatrixPosition( object.matrixWorld )\n                             .applyMatrix4( _projScreenMatrix );\n \n                     }\n \n                     const geometry = objects.update( object );\n                     const material = object.material;\n \n                     if ( material.visible ) {\n \n                         currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n \n                     }\n \n                 }\n \n             } else if ( object.isMesh || object.isLine || object.isPoints ) {\n \n                 if ( object.isSkinnedMesh ) {\n \n                     // update skeleton only once in a frame\n \n                     if ( object.skeleton.frame !== info.render.frame ) {\n \n                         object.skeleton.update();\n                         object.skeleton.frame = info.render.frame;\n \n                     }\n \n                 }\n \n                 if ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n \n                     if ( sortObjects ) {\n \n                         _vector3.setFromMatrixPosition( object.matrixWorld )\n                             .applyMatrix4( _projScreenMatrix );\n \n                     }\n \n                     const geometry = objects.update( object );\n                     const material = object.material;\n \n                     if ( Array.isArray( material ) ) {\n \n                         const groups = geometry.groups;\n \n                         for ( let i = 0, l = groups.length; i < l; i ++ ) {\n \n                             const group = groups[ i ];\n                             const groupMaterial = material[ group.materialIndex ];\n \n                             if ( groupMaterial && groupMaterial.visible ) {\n \n                                 currentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n \n                             }\n \n                         }\n \n                     } else if ( material.visible ) {\n \n                         currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n \n                     }\n \n                 }\n \n             }\n \n         }\n \n         const children = object.children;\n \n         for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n             projectObject( children[ i ], camera, groupOrder, sortObjects );\n \n         }\n \n     }\n \n     function renderScene( currentRenderList, scene, camera, viewport ) {\n \n         const opaqueObjects = currentRenderList.opaque;\n         const transmissiveObjects = currentRenderList.transmissive;\n         const transparentObjects = currentRenderList.transparent;\n \n         currentRenderState.setupLightsView( camera );\n \n         if ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n \n         if ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n \n         if ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n         if ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n         if ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n \n         // Ensure depth buffer writing is enabled so it can be cleared on next render\n \n         state.buffers.depth.setTest( true );\n         state.buffers.depth.setMask( true );\n         state.buffers.color.setMask( true );\n \n         state.setPolygonOffset( false );\n \n     }\n \n     function renderTransmissionPass( opaqueObjects, scene, camera ) {\n \n         const isWebGL2 = capabilities.isWebGL2;\n \n         if ( _transmissionRenderTarget === null ) {\n \n             _transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n                 generateMipmaps: true,\n                 type: utils.convert( HalfFloatType ) !== null ? HalfFloatType : UnsignedByteType,\n                 minFilter: LinearMipmapLinearFilter,\n                 samples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n             } );\n \n         }\n \n         _this.getDrawingBufferSize( _vector2 );\n \n         if ( isWebGL2 ) {\n \n             _transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n \n         } else {\n \n             _transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n \n         }\n \n         //\n \n         const currentRenderTarget = _this.getRenderTarget();\n         _this.setRenderTarget( _transmissionRenderTarget );\n         _this.clear();\n \n         // Turn off the features which can affect the frag color for opaque objects pass.\n         // Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n         const currentToneMapping = _this.toneMapping;\n         _this.toneMapping = NoToneMapping;\n \n         renderObjects( opaqueObjects, scene, camera );\n \n         _this.toneMapping = currentToneMapping;\n \n         textures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n         textures.updateRenderTargetMipmap( _transmissionRenderTarget );\n \n         _this.setRenderTarget( currentRenderTarget );\n \n     }\n \n     function renderObjects( renderList, scene, camera ) {\n \n         const overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n \n         for ( let i = 0, l = renderList.length; i < l; i ++ ) {\n \n             const renderItem = renderList[ i ];\n \n             const object = renderItem.object;\n             const geometry = renderItem.geometry;\n             const material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n             const group = renderItem.group;\n \n             if ( object.layers.test( camera.layers ) ) {\n \n                 renderObject( object, scene, camera, geometry, material, group );\n \n             }\n \n         }\n \n     }\n \n     function renderObject( object, scene, camera, geometry, material, group ) {\n \n         object.onBeforeRender( _this, scene, camera, geometry, material, group );\n \n         object.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n         object.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n \n         material.onBeforeRender( _this, scene, camera, geometry, object, group );\n \n         if ( material.transparent === true && material.side === DoubleSide ) {\n \n             material.side = BackSide;\n             material.needsUpdate = true;\n             _this.renderBufferDirect( camera, scene, geometry, material, object, group );\n \n             material.side = FrontSide;\n             material.needsUpdate = true;\n             _this.renderBufferDirect( camera, scene, geometry, material, object, group );\n \n             material.side = DoubleSide;\n \n         } else {\n \n             _this.renderBufferDirect( camera, scene, geometry, material, object, group );\n \n         }\n \n         object.onAfterRender( _this, scene, camera, geometry, material, group );\n \n     }\n \n     function getProgram( material, scene, object ) {\n \n         if ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n \n         const materialProperties = properties.get( material );\n \n         const lights = currentRenderState.state.lights;\n         const shadowsArray = currentRenderState.state.shadowsArray;\n \n         const lightsStateVersion = lights.state.version;\n \n         const parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n         const programCacheKey = programCache.getProgramCacheKey( parameters );\n \n         let programs = materialProperties.programs;\n \n         // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n \n         materialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n         materialProperties.fog = scene.fog;\n         materialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n \n         if ( programs === undefined ) {\n \n             // new material\n \n             material.addEventListener( 'dispose', onMaterialDispose );\n \n             programs = new Map();\n             materialProperties.programs = programs;\n \n         }\n \n         let program = programs.get( programCacheKey );\n \n         if ( program !== undefined ) {\n \n             // early out if program and light state is identical\n \n             if ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n \n                 updateCommonMaterialProperties( material, parameters );\n \n                 return program;\n \n             }\n \n         } else {\n \n             parameters.uniforms = programCache.getUniforms( material );\n \n             material.onBuild( object, parameters, _this );\n \n             material.onBeforeCompile( parameters, _this );\n \n             program = programCache.acquireProgram( parameters, programCacheKey );\n             programs.set( programCacheKey, program );\n \n             materialProperties.uniforms = parameters.uniforms;\n \n         }\n \n         const uniforms = materialProperties.uniforms;\n \n         if ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n \n             uniforms.clippingPlanes = clipping.uniform;\n \n         }\n \n         updateCommonMaterialProperties( material, parameters );\n \n         // store the light setup it was created for\n \n         materialProperties.needsLights = materialNeedsLights( material );\n         materialProperties.lightsStateVersion = lightsStateVersion;\n \n         if ( materialProperties.needsLights ) {\n \n             // wire up the material to this renderer's lighting state\n \n             uniforms.ambientLightColor.value = lights.state.ambient;\n             uniforms.lightProbe.value = lights.state.probe;\n             uniforms.directionalLights.value = lights.state.directional;\n             uniforms.directionalLightShadows.value = lights.state.directionalShadow;\n             uniforms.spotLights.value = lights.state.spot;\n             uniforms.spotLightShadows.value = lights.state.spotShadow;\n             uniforms.rectAreaLights.value = lights.state.rectArea;\n             uniforms.ltc_1.value = lights.state.rectAreaLTC1;\n             uniforms.ltc_2.value = lights.state.rectAreaLTC2;\n             uniforms.pointLights.value = lights.state.point;\n             uniforms.pointLightShadows.value = lights.state.pointShadow;\n             uniforms.hemisphereLights.value = lights.state.hemi;\n \n             uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n             uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n             uniforms.spotShadowMap.value = lights.state.spotShadowMap;\n             uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n             uniforms.pointShadowMap.value = lights.state.pointShadowMap;\n             uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n             // TODO (abelnation): add area lights shadow info to uniforms\n \n         }\n \n         const progUniforms = program.getUniforms();\n         const uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n \n         materialProperties.currentProgram = program;\n         materialProperties.uniformsList = uniformsList;\n \n         return program;\n \n     }\n \n     function updateCommonMaterialProperties( material, parameters ) {\n \n         const materialProperties = properties.get( material );\n \n         materialProperties.outputEncoding = parameters.outputEncoding;\n         materialProperties.instancing = parameters.instancing;\n         materialProperties.skinning = parameters.skinning;\n         materialProperties.morphTargets = parameters.morphTargets;\n         materialProperties.morphNormals = parameters.morphNormals;\n         materialProperties.morphColors = parameters.morphColors;\n         materialProperties.morphTargetsCount = parameters.morphTargetsCount;\n         materialProperties.numClippingPlanes = parameters.numClippingPlanes;\n         materialProperties.numIntersection = parameters.numClipIntersection;\n         materialProperties.vertexAlphas = parameters.vertexAlphas;\n         materialProperties.vertexTangents = parameters.vertexTangents;\n         materialProperties.toneMapping = parameters.toneMapping;\n \n     }\n \n     function setProgram( camera, scene, geometry, material, object ) {\n \n         if ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n \n         textures.resetTextureUnits();\n \n         const fog = scene.fog;\n         const environment = material.isMeshStandardMaterial ? scene.environment : null;\n         const encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n         const envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n         const vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n         const vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n         const morphTargets = !! geometry.morphAttributes.position;\n         const morphNormals = !! geometry.morphAttributes.normal;\n         const morphColors = !! geometry.morphAttributes.color;\n         const toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n \n         const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n         const morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n \n         const materialProperties = properties.get( material );\n         const lights = currentRenderState.state.lights;\n \n         if ( _clippingEnabled === true ) {\n \n             if ( _localClippingEnabled === true || camera !== _currentCamera ) {\n \n                 const useCache =\n                     camera === _currentCamera &&\n                     material.id === _currentMaterialId;\n \n                 // we might want to call this function with some ClippingGroup\n                 // object instead of the material, once it becomes feasible\n                 // (#8465, #8379)\n                 clipping.setState( material, camera, useCache );\n \n             }\n \n         }\n \n         //\n \n         let needsProgramChange = false;\n \n         if ( material.version === materialProperties.__version ) {\n \n             if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n \n                 needsProgramChange = true;\n \n             } else if ( materialProperties.outputEncoding !== encoding ) {\n \n                 needsProgramChange = true;\n \n             } else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n \n                 needsProgramChange = true;\n \n             } else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n \n                 needsProgramChange = true;\n \n             } else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n \n                 needsProgramChange = true;\n \n             } else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n \n                 needsProgramChange = true;\n \n             } else if ( materialProperties.envMap !== envMap ) {\n \n                 needsProgramChange = true;\n \n             } else if ( material.fog && materialProperties.fog !== fog ) {\n \n                 needsProgramChange = true;\n \n             } else if ( materialProperties.numClippingPlanes !== undefined &&\n                 ( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n                 materialProperties.numIntersection !== clipping.numIntersection ) ) {\n \n                 needsProgramChange = true;\n \n             } else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n \n                 needsProgramChange = true;\n \n             } else if ( materialProperties.vertexTangents !== vertexTangents ) {\n \n                 needsProgramChange = true;\n \n             } else if ( materialProperties.morphTargets !== morphTargets ) {\n \n                 needsProgramChange = true;\n \n             } else if ( materialProperties.morphNormals !== morphNormals ) {\n \n                 needsProgramChange = true;\n \n             } else if ( materialProperties.morphColors !== morphColors ) {\n \n                 needsProgramChange = true;\n \n             } else if ( materialProperties.toneMapping !== toneMapping ) {\n \n                 needsProgramChange = true;\n \n             } else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n \n                 needsProgramChange = true;\n \n             }\n \n         } else {\n \n             needsProgramChange = true;\n             materialProperties.__version = material.version;\n \n         }\n \n         //\n \n         let program = materialProperties.currentProgram;\n \n         if ( needsProgramChange === true ) {\n \n             program = getProgram( material, scene, object );\n \n         }\n \n         let refreshProgram = false;\n         let refreshMaterial = false;\n         let refreshLights = false;\n \n         const p_uniforms = program.getUniforms(),\n             m_uniforms = materialProperties.uniforms;\n \n         if ( state.useProgram( program.program ) ) {\n \n             refreshProgram = true;\n             refreshMaterial = true;\n             refreshLights = true;\n \n         }\n \n         if ( material.id !== _currentMaterialId ) {\n \n             _currentMaterialId = material.id;\n \n             refreshMaterial = true;\n \n         }\n \n         if ( refreshProgram || _currentCamera !== camera ) {\n \n             p_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n \n             if ( capabilities.logarithmicDepthBuffer ) {\n \n                 p_uniforms.setValue( _gl, 'logDepthBufFC',\n                     2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n \n             }\n \n             if ( _currentCamera !== camera ) {\n \n                 _currentCamera = camera;\n \n                 // lighting uniforms depend on the camera so enforce an update\n                 // now, in case this material supports lights - or later, when\n                 // the next material that does gets activated:\n \n                 refreshMaterial = true;\t\t// set to true on material change\n                 refreshLights = true;\t\t// remains set until update done\n \n             }\n \n             // load material specific uniforms\n             // (shader material also gets them for the sake of genericity)\n \n             if ( material.isShaderMaterial ||\n                 material.isMeshPhongMaterial ||\n                 material.isMeshToonMaterial ||\n                 material.isMeshStandardMaterial ||\n                 material.envMap ) {\n \n                 const uCamPos = p_uniforms.map.cameraPosition;\n \n                 if ( uCamPos !== undefined ) {\n \n                     uCamPos.setValue( _gl,\n                         _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n \n                 }\n \n             }\n \n             if ( material.isMeshPhongMaterial ||\n                 material.isMeshToonMaterial ||\n                 material.isMeshLambertMaterial ||\n                 material.isMeshBasicMaterial ||\n                 material.isMeshStandardMaterial ||\n                 material.isShaderMaterial ) {\n \n                 p_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n \n             }\n \n             if ( material.isMeshPhongMaterial ||\n                 material.isMeshToonMaterial ||\n                 material.isMeshLambertMaterial ||\n                 material.isMeshBasicMaterial ||\n                 material.isMeshStandardMaterial ||\n                 material.isShaderMaterial ||\n                 material.isShadowMaterial ||\n                 object.isSkinnedMesh ) {\n \n                 p_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n \n             }\n \n         }\n \n         // skinning and morph target uniforms must be set even if material didn't change\n         // auto-setting of texture unit for bone and morph texture must go before other textures\n         // otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n \n         if ( object.isSkinnedMesh ) {\n \n             p_uniforms.setOptional( _gl, object, 'bindMatrix' );\n             p_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n \n             const skeleton = object.skeleton;\n \n             if ( skeleton ) {\n \n                 if ( capabilities.floatVertexTextures ) {\n \n                     if ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n \n                     p_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n                     p_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n \n                 } else {\n \n                     p_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n \n                 }\n \n             }\n \n         }\n \n         const morphAttributes = geometry.morphAttributes;\n \n         if ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n \n             morphtargets.update( object, geometry, material, program );\n \n         }\n \n \n         if ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n \n             materialProperties.receiveShadow = object.receiveShadow;\n             p_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n \n         }\n \n         if ( refreshMaterial ) {\n \n             p_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n \n             if ( materialProperties.needsLights ) {\n \n                 // the current material requires lighting info\n \n                 // note: all lighting uniforms are always set correctly\n                 // they simply reference the renderer's state for their\n                 // values\n                 //\n                 // use the current material's .needsUpdate flags to set\n                 // the GL state when required\n \n                 markUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n \n             }\n \n             // refresh uniforms common to several materials\n \n             if ( fog && material.fog ) {\n \n                 materials.refreshFogUniforms( m_uniforms, fog );\n \n             }\n \n             materials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n \n             WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n \n         }\n \n         if ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n \n             WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n             material.uniformsNeedUpdate = false;\n \n         }\n \n         if ( material.isSpriteMaterial ) {\n \n             p_uniforms.setValue( _gl, 'center', object.center );\n \n         }\n \n         // common matrices\n \n         p_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n         p_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n         p_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n \n         return program;\n \n     }\n \n     // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n \n     function markUniformsLightsNeedsUpdate( uniforms, value ) {\n \n         uniforms.ambientLightColor.needsUpdate = value;\n         uniforms.lightProbe.needsUpdate = value;\n \n         uniforms.directionalLights.needsUpdate = value;\n         uniforms.directionalLightShadows.needsUpdate = value;\n         uniforms.pointLights.needsUpdate = value;\n         uniforms.pointLightShadows.needsUpdate = value;\n         uniforms.spotLights.needsUpdate = value;\n         uniforms.spotLightShadows.needsUpdate = value;\n         uniforms.rectAreaLights.needsUpdate = value;\n         uniforms.hemisphereLights.needsUpdate = value;\n \n     }\n \n     function materialNeedsLights( material ) {\n \n         return material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n             material.isMeshStandardMaterial || material.isShadowMaterial ||\n             ( material.isShaderMaterial && material.lights === true );\n \n     }\n \n     this.getActiveCubeFace = function () {\n \n         return _currentActiveCubeFace;\n \n     };\n \n     this.getActiveMipmapLevel = function () {\n \n         return _currentActiveMipmapLevel;\n \n     };\n \n     this.getRenderTarget = function () {\n \n         return _currentRenderTarget;\n \n     };\n \n     this.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n \n         properties.get( renderTarget.texture ).__webglTexture = colorTexture;\n         properties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n \n         const renderTargetProperties = properties.get( renderTarget );\n         renderTargetProperties.__hasExternalTextures = true;\n \n         if ( renderTargetProperties.__hasExternalTextures ) {\n \n             renderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n \n             if ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n \n                 // The multisample_render_to_texture extension doesn't work properly if there\n                 // are midframe flushes and an external depth buffer. Disable use of the extension.\n                 if ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n \n                     console.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n                     renderTargetProperties.__useRenderToTexture = false;\n \n                 }\n \n             }\n \n         }\n \n     };\n \n     this.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n \n         const renderTargetProperties = properties.get( renderTarget );\n         renderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n         renderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n \n     };\n \n     this.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n \n         _currentRenderTarget = renderTarget;\n         _currentActiveCubeFace = activeCubeFace;\n         _currentActiveMipmapLevel = activeMipmapLevel;\n \n         let useDefaultFramebuffer = true;\n \n         if ( renderTarget ) {\n \n             const renderTargetProperties = properties.get( renderTarget );\n \n             if ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n \n                 // We need to make sure to rebind the framebuffer.\n                 state.bindFramebuffer( 36160, null );\n                 useDefaultFramebuffer = false;\n \n             } else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n \n                 textures.setupRenderTarget( renderTarget );\n \n             } else if ( renderTargetProperties.__hasExternalTextures ) {\n \n                 // Color and depth texture must be rebound in order for the swapchain to update.\n                 textures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n \n             }\n \n         }\n \n         let framebuffer = null;\n         let isCube = false;\n         let isRenderTarget3D = false;\n \n         if ( renderTarget ) {\n \n             const texture = renderTarget.texture;\n \n             if ( texture.isData3DTexture || texture.isDataArrayTexture ) {\n \n                 isRenderTarget3D = true;\n \n             }\n \n             const __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n \n             if ( renderTarget.isWebGLCubeRenderTarget ) {\n \n                 framebuffer = __webglFramebuffer[ activeCubeFace ];\n                 isCube = true;\n \n             } else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n \n                 framebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n \n             } else {\n \n                 framebuffer = __webglFramebuffer;\n \n             }\n \n             _currentViewport.copy( renderTarget.viewport );\n             _currentScissor.copy( renderTarget.scissor );\n             _currentScissorTest = renderTarget.scissorTest;\n \n         } else {\n \n             _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n             _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n             _currentScissorTest = _scissorTest;\n \n         }\n \n         const framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n \n         if ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n \n             state.drawBuffers( renderTarget, framebuffer );\n \n         }\n \n         state.viewport( _currentViewport );\n         state.scissor( _currentScissor );\n         state.setScissorTest( _currentScissorTest );\n \n         if ( isCube ) {\n \n             const textureProperties = properties.get( renderTarget.texture );\n             _gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n \n         } else if ( isRenderTarget3D ) {\n \n             const textureProperties = properties.get( renderTarget.texture );\n             const layer = activeCubeFace || 0;\n             _gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n \n         }\n \n         _currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n \n     };\n \n     this.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n \n         if ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n \n             console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n             return;\n \n         }\n \n         let framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n \n         if ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n \n             framebuffer = framebuffer[ activeCubeFaceIndex ];\n \n         }\n \n         if ( framebuffer ) {\n \n             state.bindFramebuffer( 36160, framebuffer );\n \n             try {\n \n                 const texture = renderTarget.texture;\n                 const textureFormat = texture.format;\n                 const textureType = texture.type;\n \n                 if ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n \n                     console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n                     return;\n \n                 }\n \n                 const halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n \n                 if ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n                     ! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n                     ! halfFloatSupportedByExt ) {\n \n                     console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n                     return;\n \n                 }\n \n                 // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n \n                 if ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n \n                     _gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n \n                 }\n \n             } finally {\n \n                 // restore framebuffer of current render target if necessary\n \n                 const framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n                 state.bindFramebuffer( 36160, framebuffer );\n \n             }\n \n         }\n \n     };\n \n     this.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n \n         if ( texture.isFramebufferTexture !== true ) {\n \n             console.error( 'THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.' );\n             return;\n \n         }\n \n         const levelScale = Math.pow( 2, - level );\n         const width = Math.floor( texture.image.width * levelScale );\n         const height = Math.floor( texture.image.height * levelScale );\n \n         textures.setTexture2D( texture, 0 );\n \n         _gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n \n         state.unbindTexture();\n \n     };\n \n     this.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n \n         const width = srcTexture.image.width;\n         const height = srcTexture.image.height;\n         const glFormat = utils.convert( dstTexture.format );\n         const glType = utils.convert( dstTexture.type );\n \n         textures.setTexture2D( dstTexture, 0 );\n \n         // As another texture upload may have changed pixelStorei\n         // parameters, make sure they are correct for the dstTexture\n         _gl.pixelStorei( 37440, dstTexture.flipY );\n         _gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n         _gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n \n         if ( srcTexture.isDataTexture ) {\n \n             _gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n \n         } else {\n \n             if ( srcTexture.isCompressedTexture ) {\n \n                 _gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n \n             } else {\n \n                 _gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n \n             }\n \n         }\n \n         // Generate mipmaps only when copying level 0\n         if ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n \n         state.unbindTexture();\n \n     };\n \n     this.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n \n         if ( _this.isWebGL1Renderer ) {\n \n             console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n             return;\n \n         }\n \n         const width = sourceBox.max.x - sourceBox.min.x + 1;\n         const height = sourceBox.max.y - sourceBox.min.y + 1;\n         const depth = sourceBox.max.z - sourceBox.min.z + 1;\n         const glFormat = utils.convert( dstTexture.format );\n         const glType = utils.convert( dstTexture.type );\n         let glTarget;\n \n         if ( dstTexture.isData3DTexture ) {\n \n             textures.setTexture3D( dstTexture, 0 );\n             glTarget = 32879;\n \n         } else if ( dstTexture.isDataArrayTexture ) {\n \n             textures.setTexture2DArray( dstTexture, 0 );\n             glTarget = 35866;\n \n         } else {\n \n             console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n             return;\n \n         }\n \n         _gl.pixelStorei( 37440, dstTexture.flipY );\n         _gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n         _gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n \n         const unpackRowLen = _gl.getParameter( 3314 );\n         const unpackImageHeight = _gl.getParameter( 32878 );\n         const unpackSkipPixels = _gl.getParameter( 3316 );\n         const unpackSkipRows = _gl.getParameter( 3315 );\n         const unpackSkipImages = _gl.getParameter( 32877 );\n \n         const image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n \n         _gl.pixelStorei( 3314, image.width );\n         _gl.pixelStorei( 32878, image.height );\n         _gl.pixelStorei( 3316, sourceBox.min.x );\n         _gl.pixelStorei( 3315, sourceBox.min.y );\n         _gl.pixelStorei( 32877, sourceBox.min.z );\n \n         if ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n \n             _gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n \n         } else {\n \n             if ( srcTexture.isCompressedTexture ) {\n \n                 console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n                 _gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n \n             } else {\n \n                 _gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n \n             }\n \n         }\n \n         _gl.pixelStorei( 3314, unpackRowLen );\n         _gl.pixelStorei( 32878, unpackImageHeight );\n         _gl.pixelStorei( 3316, unpackSkipPixels );\n         _gl.pixelStorei( 3315, unpackSkipRows );\n         _gl.pixelStorei( 32877, unpackSkipImages );\n \n         // Generate mipmaps only when copying level 0\n         if ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n \n         state.unbindTexture();\n \n     };\n \n     this.initTexture = function ( texture ) {\n \n         textures.setTexture2D( texture, 0 );\n \n         state.unbindTexture();\n \n     };\n \n     this.resetState = function () {\n \n         _currentActiveCubeFace = 0;\n         _currentActiveMipmapLevel = 0;\n         _currentRenderTarget = null;\n \n         state.reset();\n         bindingStates.reset();\n \n     };\n \n     if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n \n         __THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n \n     }\n \n }\n \n WebGLRenderer.prototype.isWebGLRenderer = true;\n \n class WebGL1Renderer extends WebGLRenderer {}\n \n WebGL1Renderer.prototype.isWebGL1Renderer = true;\n \n class FogExp2 {\n \n     constructor( color, density = 0.00025 ) {\n \n         this.name = '';\n \n         this.color = new Color( color );\n         this.density = density;\n \n     }\n \n     clone() {\n \n         return new FogExp2( this.color, this.density );\n \n     }\n \n     toJSON( /* meta */ ) {\n \n         return {\n             type: 'FogExp2',\n             color: this.color.getHex(),\n             density: this.density\n         };\n \n     }\n \n }\n \n FogExp2.prototype.isFogExp2 = true;\n \n class Fog {\n \n     constructor( color, near = 1, far = 1000 ) {\n \n         this.name = '';\n \n         this.color = new Color( color );\n \n         this.near = near;\n         this.far = far;\n \n     }\n \n     clone() {\n \n         return new Fog( this.color, this.near, this.far );\n \n     }\n \n     toJSON( /* meta */ ) {\n \n         return {\n             type: 'Fog',\n             color: this.color.getHex(),\n             near: this.near,\n             far: this.far\n         };\n \n     }\n \n }\n \n Fog.prototype.isFog = true;\n \n class Scene extends Object3D {\n \n     constructor() {\n \n         super();\n \n         this.type = 'Scene';\n \n         this.background = null;\n         this.environment = null;\n         this.fog = null;\n \n         this.overrideMaterial = null;\n \n         this.autoUpdate = true; // checked by the renderer\n \n         if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n \n             __THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n \n         }\n \n     }\n \n     copy( source, recursive ) {\n \n         super.copy( source, recursive );\n \n         if ( source.background !== null ) this.background = source.background.clone();\n         if ( source.environment !== null ) this.environment = source.environment.clone();\n         if ( source.fog !== null ) this.fog = source.fog.clone();\n \n         if ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n \n         this.autoUpdate = source.autoUpdate;\n         this.matrixAutoUpdate = source.matrixAutoUpdate;\n \n         return this;\n \n     }\n \n     toJSON( meta ) {\n \n         const data = super.toJSON( meta );\n \n         if ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n \n         return data;\n \n     }\n \n }\n \n Scene.prototype.isScene = true;\n \n class InterleavedBuffer {\n \n     constructor( array, stride ) {\n \n         this.array = array;\n         this.stride = stride;\n         this.count = array !== undefined ? array.length / stride : 0;\n \n         this.usage = StaticDrawUsage;\n         this.updateRange = { offset: 0, count: - 1 };\n \n         this.version = 0;\n \n         this.uuid = generateUUID();\n \n     }\n \n     onUploadCallback() {}\n \n     set needsUpdate( value ) {\n \n         if ( value === true ) this.version ++;\n \n     }\n \n     setUsage( value ) {\n \n         this.usage = value;\n \n         return this;\n \n     }\n \n     copy( source ) {\n \n         this.array = new source.array.constructor( source.array );\n         this.count = source.count;\n         this.stride = source.stride;\n         this.usage = source.usage;\n \n         return this;\n \n     }\n \n     copyAt( index1, attribute, index2 ) {\n \n         index1 *= this.stride;\n         index2 *= attribute.stride;\n \n         for ( let i = 0, l = this.stride; i < l; i ++ ) {\n \n             this.array[ index1 + i ] = attribute.array[ index2 + i ];\n \n         }\n \n         return this;\n \n     }\n \n     set( value, offset = 0 ) {\n \n         this.array.set( value, offset );\n \n         return this;\n \n     }\n \n     clone( data ) {\n \n         if ( data.arrayBuffers === undefined ) {\n \n             data.arrayBuffers = {};\n \n         }\n \n         if ( this.array.buffer._uuid === undefined ) {\n \n             this.array.buffer._uuid = generateUUID();\n \n         }\n \n         if ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n \n             data.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n \n         }\n \n         const array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n \n         const ib = new this.constructor( array, this.stride );\n         ib.setUsage( this.usage );\n \n         return ib;\n \n     }\n \n     onUpload( callback ) {\n \n         this.onUploadCallback = callback;\n \n         return this;\n \n     }\n \n     toJSON( data ) {\n \n         if ( data.arrayBuffers === undefined ) {\n \n             data.arrayBuffers = {};\n \n         }\n \n         // generate UUID for array buffer if necessary\n \n         if ( this.array.buffer._uuid === undefined ) {\n \n             this.array.buffer._uuid = generateUUID();\n \n         }\n \n         if ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n \n             data.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n \n         }\n \n         //\n \n         return {\n             uuid: this.uuid,\n             buffer: this.array.buffer._uuid,\n             type: this.array.constructor.name,\n             stride: this.stride\n         };\n \n     }\n \n }\n \n InterleavedBuffer.prototype.isInterleavedBuffer = true;\n \n const _vector$6 = /*@__PURE__*/ new Vector3();\n \n class InterleavedBufferAttribute {\n \n     constructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n \n         this.name = '';\n \n         this.data = interleavedBuffer;\n         this.itemSize = itemSize;\n         this.offset = offset;\n \n         this.normalized = normalized === true;\n \n     }\n \n     get count() {\n \n         return this.data.count;\n \n     }\n \n     get array() {\n \n         return this.data.array;\n \n     }\n \n     set needsUpdate( value ) {\n \n         this.data.needsUpdate = value;\n \n     }\n \n     applyMatrix4( m ) {\n \n         for ( let i = 0, l = this.data.count; i < l; i ++ ) {\n \n             _vector$6.fromBufferAttribute( this, i );\n \n             _vector$6.applyMatrix4( m );\n \n             this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n \n         }\n \n         return this;\n \n     }\n \n     applyNormalMatrix( m ) {\n \n         for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n             _vector$6.fromBufferAttribute( this, i );\n \n             _vector$6.applyNormalMatrix( m );\n \n             this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n \n         }\n \n         return this;\n \n     }\n \n     transformDirection( m ) {\n \n         for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n             _vector$6.fromBufferAttribute( this, i );\n \n             _vector$6.transformDirection( m );\n \n             this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n \n         }\n \n         return this;\n \n     }\n \n     setX( index, x ) {\n \n         this.data.array[ index * this.data.stride + this.offset ] = x;\n \n         return this;\n \n     }\n \n     setY( index, y ) {\n \n         this.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n \n         return this;\n \n     }\n \n     setZ( index, z ) {\n \n         this.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n \n         return this;\n \n     }\n \n     setW( index, w ) {\n \n         this.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n \n         return this;\n \n     }\n \n     getX( index ) {\n \n         return this.data.array[ index * this.data.stride + this.offset ];\n \n     }\n \n     getY( index ) {\n \n         return this.data.array[ index * this.data.stride + this.offset + 1 ];\n \n     }\n \n     getZ( index ) {\n \n         return this.data.array[ index * this.data.stride + this.offset + 2 ];\n \n     }\n \n     getW( index ) {\n \n         return this.data.array[ index * this.data.stride + this.offset + 3 ];\n \n     }\n \n     setXY( index, x, y ) {\n \n         index = index * this.data.stride + this.offset;\n \n         this.data.array[ index + 0 ] = x;\n         this.data.array[ index + 1 ] = y;\n \n         return this;\n \n     }\n \n     setXYZ( index, x, y, z ) {\n \n         index = index * this.data.stride + this.offset;\n \n         this.data.array[ index + 0 ] = x;\n         this.data.array[ index + 1 ] = y;\n         this.data.array[ index + 2 ] = z;\n \n         return this;\n \n     }\n \n     setXYZW( index, x, y, z, w ) {\n \n         index = index * this.data.stride + this.offset;\n \n         this.data.array[ index + 0 ] = x;\n         this.data.array[ index + 1 ] = y;\n         this.data.array[ index + 2 ] = z;\n         this.data.array[ index + 3 ] = w;\n \n         return this;\n \n     }\n \n     clone( data ) {\n \n         if ( data === undefined ) {\n \n             console.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n \n             const array = [];\n \n             for ( let i = 0; i < this.count; i ++ ) {\n \n                 const index = i * this.data.stride + this.offset;\n \n                 for ( let j = 0; j < this.itemSize; j ++ ) {\n \n                     array.push( this.data.array[ index + j ] );\n \n                 }\n \n             }\n \n             return new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n \n         } else {\n \n             if ( data.interleavedBuffers === undefined ) {\n \n                 data.interleavedBuffers = {};\n \n             }\n \n             if ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n \n                 data.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n \n             }\n \n             return new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n \n         }\n \n     }\n \n     toJSON( data ) {\n \n         if ( data === undefined ) {\n \n             console.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n \n             const array = [];\n \n             for ( let i = 0; i < this.count; i ++ ) {\n \n                 const index = i * this.data.stride + this.offset;\n \n                 for ( let j = 0; j < this.itemSize; j ++ ) {\n \n                     array.push( this.data.array[ index + j ] );\n \n                 }\n \n             }\n \n             // deinterleave data and save it as an ordinary buffer attribute for now\n \n             return {\n                 itemSize: this.itemSize,\n                 type: this.array.constructor.name,\n                 array: array,\n                 normalized: this.normalized\n             };\n \n         } else {\n \n             // save as true interlaved attribtue\n \n             if ( data.interleavedBuffers === undefined ) {\n \n                 data.interleavedBuffers = {};\n \n             }\n \n             if ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n \n                 data.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n \n             }\n \n             return {\n                 isInterleavedBufferAttribute: true,\n                 itemSize: this.itemSize,\n                 data: this.data.uuid,\n                 offset: this.offset,\n                 normalized: this.normalized\n             };\n \n         }\n \n     }\n \n }\n \n InterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n \n class SpriteMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.type = 'SpriteMaterial';\n \n         this.color = new Color( 0xffffff );\n \n         this.map = null;\n \n         this.alphaMap = null;\n \n         this.rotation = 0;\n \n         this.sizeAttenuation = true;\n \n         this.transparent = true;\n \n         this.setValues( parameters );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.color.copy( source.color );\n \n         this.map = source.map;\n \n         this.alphaMap = source.alphaMap;\n \n         this.rotation = source.rotation;\n \n         this.sizeAttenuation = source.sizeAttenuation;\n \n         return this;\n \n     }\n \n }\n \n SpriteMaterial.prototype.isSpriteMaterial = true;\n \n let _geometry;\n \n const _intersectPoint = /*@__PURE__*/ new Vector3();\n const _worldScale = /*@__PURE__*/ new Vector3();\n const _mvPosition = /*@__PURE__*/ new Vector3();\n \n const _alignedPosition = /*@__PURE__*/ new Vector2();\n const _rotatedPosition = /*@__PURE__*/ new Vector2();\n const _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n \n const _vA = /*@__PURE__*/ new Vector3();\n const _vB = /*@__PURE__*/ new Vector3();\n const _vC = /*@__PURE__*/ new Vector3();\n \n const _uvA = /*@__PURE__*/ new Vector2();\n const _uvB = /*@__PURE__*/ new Vector2();\n const _uvC = /*@__PURE__*/ new Vector2();\n \n class Sprite extends Object3D {\n \n     constructor( material ) {\n \n         super();\n \n         this.type = 'Sprite';\n \n         if ( _geometry === undefined ) {\n \n             _geometry = new BufferGeometry();\n \n             const float32Array = new Float32Array( [\n                 - 0.5, - 0.5, 0, 0, 0,\n                 0.5, - 0.5, 0, 1, 0,\n                 0.5, 0.5, 0, 1, 1,\n                 - 0.5, 0.5, 0, 0, 1\n             ] );\n \n             const interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n \n             _geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n             _geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n             _geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n \n         }\n \n         this.geometry = _geometry;\n         this.material = ( material !== undefined ) ? material : new SpriteMaterial();\n \n         this.center = new Vector2( 0.5, 0.5 );\n \n     }\n \n     raycast( raycaster, intersects ) {\n \n         if ( raycaster.camera === null ) {\n \n             console.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n \n         }\n \n         _worldScale.setFromMatrixScale( this.matrixWorld );\n \n         _viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n         this.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n \n         _mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n \n         if ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n \n             _worldScale.multiplyScalar( - _mvPosition.z );\n \n         }\n \n         const rotation = this.material.rotation;\n         let sin, cos;\n \n         if ( rotation !== 0 ) {\n \n             cos = Math.cos( rotation );\n             sin = Math.sin( rotation );\n \n         }\n \n         const center = this.center;\n \n         transformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n         transformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n         transformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n \n         _uvA.set( 0, 0 );\n         _uvB.set( 1, 0 );\n         _uvC.set( 1, 1 );\n \n         // check first triangle\n         let intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n \n         if ( intersect === null ) {\n \n             // check second triangle\n             transformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n             _uvB.set( 0, 1 );\n \n             intersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n             if ( intersect === null ) {\n \n                 return;\n \n             }\n \n         }\n \n         const distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n \n         if ( distance < raycaster.near || distance > raycaster.far ) return;\n \n         intersects.push( {\n \n             distance: distance,\n             point: _intersectPoint.clone(),\n             uv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n             face: null,\n             object: this\n \n         } );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         if ( source.center !== undefined ) this.center.copy( source.center );\n \n         this.material = source.material;\n \n         return this;\n \n     }\n \n }\n \n Sprite.prototype.isSprite = true;\n \n function transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n \n     // compute position in camera space\n     _alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n \n     // to check if rotation is not zero\n     if ( sin !== undefined ) {\n \n         _rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n         _rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n \n     } else {\n \n         _rotatedPosition.copy( _alignedPosition );\n \n     }\n \n \n     vertexPosition.copy( mvPosition );\n     vertexPosition.x += _rotatedPosition.x;\n     vertexPosition.y += _rotatedPosition.y;\n \n     // transform to world space\n     vertexPosition.applyMatrix4( _viewWorldMatrix );\n \n }\n \n const _v1$2 = /*@__PURE__*/ new Vector3();\n const _v2$1 = /*@__PURE__*/ new Vector3();\n \n class LOD extends Object3D {\n \n     constructor() {\n \n         super();\n \n         this._currentLevel = 0;\n \n         this.type = 'LOD';\n \n         Object.defineProperties( this, {\n             levels: {\n                 enumerable: true,\n                 value: []\n             },\n             isLOD: {\n                 value: true,\n             }\n         } );\n \n         this.autoUpdate = true;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source, false );\n \n         const levels = source.levels;\n \n         for ( let i = 0, l = levels.length; i < l; i ++ ) {\n \n             const level = levels[ i ];\n \n             this.addLevel( level.object.clone(), level.distance );\n \n         }\n \n         this.autoUpdate = source.autoUpdate;\n \n         return this;\n \n     }\n \n     addLevel( object, distance = 0 ) {\n \n         distance = Math.abs( distance );\n \n         const levels = this.levels;\n \n         let l;\n \n         for ( l = 0; l < levels.length; l ++ ) {\n \n             if ( distance < levels[ l ].distance ) {\n \n                 break;\n \n             }\n \n         }\n \n         levels.splice( l, 0, { distance: distance, object: object } );\n \n         this.add( object );\n \n         return this;\n \n     }\n \n     getCurrentLevel() {\n \n         return this._currentLevel;\n \n     }\n \n     getObjectForDistance( distance ) {\n \n         const levels = this.levels;\n \n         if ( levels.length > 0 ) {\n \n             let i, l;\n \n             for ( i = 1, l = levels.length; i < l; i ++ ) {\n \n                 if ( distance < levels[ i ].distance ) {\n \n                     break;\n \n                 }\n \n             }\n \n             return levels[ i - 1 ].object;\n \n         }\n \n         return null;\n \n     }\n \n     raycast( raycaster, intersects ) {\n \n         const levels = this.levels;\n \n         if ( levels.length > 0 ) {\n \n             _v1$2.setFromMatrixPosition( this.matrixWorld );\n \n             const distance = raycaster.ray.origin.distanceTo( _v1$2 );\n \n             this.getObjectForDistance( distance ).raycast( raycaster, intersects );\n \n         }\n \n     }\n \n     update( camera ) {\n \n         const levels = this.levels;\n \n         if ( levels.length > 1 ) {\n \n             _v1$2.setFromMatrixPosition( camera.matrixWorld );\n             _v2$1.setFromMatrixPosition( this.matrixWorld );\n \n             const distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n \n             levels[ 0 ].object.visible = true;\n \n             let i, l;\n \n             for ( i = 1, l = levels.length; i < l; i ++ ) {\n \n                 if ( distance >= levels[ i ].distance ) {\n \n                     levels[ i - 1 ].object.visible = false;\n                     levels[ i ].object.visible = true;\n \n                 } else {\n \n                     break;\n \n                 }\n \n             }\n \n             this._currentLevel = i - 1;\n \n             for ( ; i < l; i ++ ) {\n \n                 levels[ i ].object.visible = false;\n \n             }\n \n         }\n \n     }\n \n     toJSON( meta ) {\n \n         const data = super.toJSON( meta );\n \n         if ( this.autoUpdate === false ) data.object.autoUpdate = false;\n \n         data.object.levels = [];\n \n         const levels = this.levels;\n \n         for ( let i = 0, l = levels.length; i < l; i ++ ) {\n \n             const level = levels[ i ];\n \n             data.object.levels.push( {\n                 object: level.object.uuid,\n                 distance: level.distance\n             } );\n \n         }\n \n         return data;\n \n     }\n \n }\n \n const _basePosition = /*@__PURE__*/ new Vector3();\n \n const _skinIndex = /*@__PURE__*/ new Vector4();\n const _skinWeight = /*@__PURE__*/ new Vector4();\n \n const _vector$5 = /*@__PURE__*/ new Vector3();\n const _matrix = /*@__PURE__*/ new Matrix4();\n \n class SkinnedMesh extends Mesh {\n \n     constructor( geometry, material ) {\n \n         super( geometry, material );\n \n         this.type = 'SkinnedMesh';\n \n         this.bindMode = 'attached';\n         this.bindMatrix = new Matrix4();\n         this.bindMatrixInverse = new Matrix4();\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.bindMode = source.bindMode;\n         this.bindMatrix.copy( source.bindMatrix );\n         this.bindMatrixInverse.copy( source.bindMatrixInverse );\n \n         this.skeleton = source.skeleton;\n \n         return this;\n \n     }\n \n     bind( skeleton, bindMatrix ) {\n \n         this.skeleton = skeleton;\n \n         if ( bindMatrix === undefined ) {\n \n             this.updateMatrixWorld( true );\n \n             this.skeleton.calculateInverses();\n \n             bindMatrix = this.matrixWorld;\n \n         }\n \n         this.bindMatrix.copy( bindMatrix );\n         this.bindMatrixInverse.copy( bindMatrix ).invert();\n \n     }\n \n     pose() {\n \n         this.skeleton.pose();\n \n     }\n \n     normalizeSkinWeights() {\n \n         const vector = new Vector4();\n \n         const skinWeight = this.geometry.attributes.skinWeight;\n \n         for ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n \n             vector.fromBufferAttribute( skinWeight, i );\n \n             const scale = 1.0 / vector.manhattanLength();\n \n             if ( scale !== Infinity ) {\n \n                 vector.multiplyScalar( scale );\n \n             } else {\n \n                 vector.set( 1, 0, 0, 0 ); // do something reasonable\n \n             }\n \n             skinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n \n         }\n \n     }\n \n     updateMatrixWorld( force ) {\n \n         super.updateMatrixWorld( force );\n \n         if ( this.bindMode === 'attached' ) {\n \n             this.bindMatrixInverse.copy( this.matrixWorld ).invert();\n \n         } else if ( this.bindMode === 'detached' ) {\n \n             this.bindMatrixInverse.copy( this.bindMatrix ).invert();\n \n         } else {\n \n             console.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n \n         }\n \n     }\n \n     boneTransform( index, target ) {\n \n         const skeleton = this.skeleton;\n         const geometry = this.geometry;\n \n         _skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n         _skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n \n         _basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n \n         target.set( 0, 0, 0 );\n \n         for ( let i = 0; i < 4; i ++ ) {\n \n             const weight = _skinWeight.getComponent( i );\n \n             if ( weight !== 0 ) {\n \n                 const boneIndex = _skinIndex.getComponent( i );\n \n                 _matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n \n                 target.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n \n             }\n \n         }\n \n         return target.applyMatrix4( this.bindMatrixInverse );\n \n     }\n \n }\n \n SkinnedMesh.prototype.isSkinnedMesh = true;\n \n class Bone extends Object3D {\n \n     constructor() {\n \n         super();\n \n         this.type = 'Bone';\n \n     }\n \n }\n \n Bone.prototype.isBone = true;\n \n class DataTexture extends Texture {\n \n     constructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n \n         super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n \n         this.image = { data: data, width: width, height: height };\n \n         this.generateMipmaps = false;\n         this.flipY = false;\n         this.unpackAlignment = 1;\n \n     }\n \n }\n \n DataTexture.prototype.isDataTexture = true;\n \n const _offsetMatrix = /*@__PURE__*/ new Matrix4();\n const _identityMatrix = /*@__PURE__*/ new Matrix4();\n \n class Skeleton {\n \n     constructor( bones = [], boneInverses = [] ) {\n \n         this.uuid = generateUUID();\n \n         this.bones = bones.slice( 0 );\n         this.boneInverses = boneInverses;\n         this.boneMatrices = null;\n \n         this.boneTexture = null;\n         this.boneTextureSize = 0;\n \n         this.frame = - 1;\n \n         this.init();\n \n     }\n \n     init() {\n \n         const bones = this.bones;\n         const boneInverses = this.boneInverses;\n \n         this.boneMatrices = new Float32Array( bones.length * 16 );\n \n         // calculate inverse bone matrices if necessary\n \n         if ( boneInverses.length === 0 ) {\n \n             this.calculateInverses();\n \n         } else {\n \n             // handle special case\n \n             if ( bones.length !== boneInverses.length ) {\n \n                 console.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n \n                 this.boneInverses = [];\n \n                 for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n \n                     this.boneInverses.push( new Matrix4() );\n \n                 }\n \n             }\n \n         }\n \n     }\n \n     calculateInverses() {\n \n         this.boneInverses.length = 0;\n \n         for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n \n             const inverse = new Matrix4();\n \n             if ( this.bones[ i ] ) {\n \n                 inverse.copy( this.bones[ i ].matrixWorld ).invert();\n \n             }\n \n             this.boneInverses.push( inverse );\n \n         }\n \n     }\n \n     pose() {\n \n         // recover the bind-time world matrices\n \n         for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n \n             const bone = this.bones[ i ];\n \n             if ( bone ) {\n \n                 bone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n \n             }\n \n         }\n \n         // compute the local matrices, positions, rotations and scales\n \n         for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n \n             const bone = this.bones[ i ];\n \n             if ( bone ) {\n \n                 if ( bone.parent && bone.parent.isBone ) {\n \n                     bone.matrix.copy( bone.parent.matrixWorld ).invert();\n                     bone.matrix.multiply( bone.matrixWorld );\n \n                 } else {\n \n                     bone.matrix.copy( bone.matrixWorld );\n \n                 }\n \n                 bone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n \n             }\n \n         }\n \n     }\n \n     update() {\n \n         const bones = this.bones;\n         const boneInverses = this.boneInverses;\n         const boneMatrices = this.boneMatrices;\n         const boneTexture = this.boneTexture;\n \n         // flatten bone matrices to array\n \n         for ( let i = 0, il = bones.length; i < il; i ++ ) {\n \n             // compute the offset between the current and the original transform\n \n             const matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n \n             _offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n             _offsetMatrix.toArray( boneMatrices, i * 16 );\n \n         }\n \n         if ( boneTexture !== null ) {\n \n             boneTexture.needsUpdate = true;\n \n         }\n \n     }\n \n     clone() {\n \n         return new Skeleton( this.bones, this.boneInverses );\n \n     }\n \n     computeBoneTexture() {\n \n         // layout (1 matrix = 4 pixels)\n         //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n         //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n         //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n         //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n         //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n \n         let size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n         size = ceilPowerOfTwo( size );\n         size = Math.max( size, 4 );\n \n         const boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n         boneMatrices.set( this.boneMatrices ); // copy current values\n \n         const boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n         boneTexture.needsUpdate = true;\n \n         this.boneMatrices = boneMatrices;\n         this.boneTexture = boneTexture;\n         this.boneTextureSize = size;\n \n         return this;\n \n     }\n \n     getBoneByName( name ) {\n \n         for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n \n             const bone = this.bones[ i ];\n \n             if ( bone.name === name ) {\n \n                 return bone;\n \n             }\n \n         }\n \n         return undefined;\n \n     }\n \n     dispose( ) {\n \n         if ( this.boneTexture !== null ) {\n \n             this.boneTexture.dispose();\n \n             this.boneTexture = null;\n \n         }\n \n     }\n \n     fromJSON( json, bones ) {\n \n         this.uuid = json.uuid;\n \n         for ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n \n             const uuid = json.bones[ i ];\n             let bone = bones[ uuid ];\n \n             if ( bone === undefined ) {\n \n                 console.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n                 bone = new Bone();\n \n             }\n \n             this.bones.push( bone );\n             this.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n \n         }\n \n         this.init();\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = {\n             metadata: {\n                 version: 4.5,\n                 type: 'Skeleton',\n                 generator: 'Skeleton.toJSON'\n             },\n             bones: [],\n             boneInverses: []\n         };\n \n         data.uuid = this.uuid;\n \n         const bones = this.bones;\n         const boneInverses = this.boneInverses;\n \n         for ( let i = 0, l = bones.length; i < l; i ++ ) {\n \n             const bone = bones[ i ];\n             data.bones.push( bone.uuid );\n \n             const boneInverse = boneInverses[ i ];\n             data.boneInverses.push( boneInverse.toArray() );\n \n         }\n \n         return data;\n \n     }\n \n }\n \n class InstancedBufferAttribute extends BufferAttribute {\n \n     constructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n \n         if ( typeof normalized === 'number' ) {\n \n             meshPerAttribute = normalized;\n \n             normalized = false;\n \n             console.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n \n         }\n \n         super( array, itemSize, normalized );\n \n         this.meshPerAttribute = meshPerAttribute;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.meshPerAttribute = source.meshPerAttribute;\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.meshPerAttribute = this.meshPerAttribute;\n \n         data.isInstancedBufferAttribute = true;\n \n         return data;\n \n     }\n \n }\n \n InstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n \n const _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\n const _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n \n const _instanceIntersects = [];\n \n const _mesh = /*@__PURE__*/ new Mesh();\n \n class InstancedMesh extends Mesh {\n \n     constructor( geometry, material, count ) {\n \n         super( geometry, material );\n \n         this.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n         this.instanceColor = null;\n \n         this.count = count;\n \n         this.frustumCulled = false;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.instanceMatrix.copy( source.instanceMatrix );\n \n         if ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n \n         this.count = source.count;\n \n         return this;\n \n     }\n \n     getColorAt( index, color ) {\n \n         color.fromArray( this.instanceColor.array, index * 3 );\n \n     }\n \n     getMatrixAt( index, matrix ) {\n \n         matrix.fromArray( this.instanceMatrix.array, index * 16 );\n \n     }\n \n     raycast( raycaster, intersects ) {\n \n         const matrixWorld = this.matrixWorld;\n         const raycastTimes = this.count;\n \n         _mesh.geometry = this.geometry;\n         _mesh.material = this.material;\n \n         if ( _mesh.material === undefined ) return;\n \n         for ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n \n             // calculate the world matrix for each instance\n \n             this.getMatrixAt( instanceId, _instanceLocalMatrix );\n \n             _instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n \n             // the mesh represents this single instance\n \n             _mesh.matrixWorld = _instanceWorldMatrix;\n \n             _mesh.raycast( raycaster, _instanceIntersects );\n \n             // process the result of raycast\n \n             for ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n \n                 const intersect = _instanceIntersects[ i ];\n                 intersect.instanceId = instanceId;\n                 intersect.object = this;\n                 intersects.push( intersect );\n \n             }\n \n             _instanceIntersects.length = 0;\n \n         }\n \n     }\n \n     setColorAt( index, color ) {\n \n         if ( this.instanceColor === null ) {\n \n             this.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n \n         }\n \n         color.toArray( this.instanceColor.array, index * 3 );\n \n     }\n \n     setMatrixAt( index, matrix ) {\n \n         matrix.toArray( this.instanceMatrix.array, index * 16 );\n \n     }\n \n     updateMorphTargets() {\n \n     }\n \n     dispose() {\n \n         this.dispatchEvent( { type: 'dispose' } );\n \n     }\n \n }\n \n InstancedMesh.prototype.isInstancedMesh = true;\n \n class LineBasicMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.type = 'LineBasicMaterial';\n \n         this.color = new Color( 0xffffff );\n \n         this.linewidth = 1;\n         this.linecap = 'round';\n         this.linejoin = 'round';\n \n         this.setValues( parameters );\n \n     }\n \n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.color.copy( source.color );\n \n         this.linewidth = source.linewidth;\n         this.linecap = source.linecap;\n         this.linejoin = source.linejoin;\n \n         return this;\n \n     }\n \n }\n \n LineBasicMaterial.prototype.isLineBasicMaterial = true;\n \n const _start$1 = /*@__PURE__*/ new Vector3();\n const _end$1 = /*@__PURE__*/ new Vector3();\n const _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\n const _ray$1 = /*@__PURE__*/ new Ray();\n const _sphere$1 = /*@__PURE__*/ new Sphere();\n \n class Line extends Object3D {\n \n     constructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n \n         super();\n \n         this.type = 'Line';\n \n         this.geometry = geometry;\n         this.material = material;\n \n         this.updateMorphTargets();\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.material = source.material;\n         this.geometry = source.geometry;\n \n         return this;\n \n     }\n \n     computeLineDistances() {\n \n         const geometry = this.geometry;\n \n         if ( geometry.isBufferGeometry ) {\n \n             // we assume non-indexed geometry\n \n             if ( geometry.index === null ) {\n \n                 const positionAttribute = geometry.attributes.position;\n                 const lineDistances = [ 0 ];\n \n                 for ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n \n                     _start$1.fromBufferAttribute( positionAttribute, i - 1 );\n                     _end$1.fromBufferAttribute( positionAttribute, i );\n \n                     lineDistances[ i ] = lineDistances[ i - 1 ];\n                     lineDistances[ i ] += _start$1.distanceTo( _end$1 );\n \n                 }\n \n                 geometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n \n             } else {\n \n                 console.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n \n             }\n \n         } else if ( geometry.isGeometry ) {\n \n             console.error( 'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n         }\n \n         return this;\n \n     }\n \n     raycast( raycaster, intersects ) {\n \n         const geometry = this.geometry;\n         const matrixWorld = this.matrixWorld;\n         const threshold = raycaster.params.Line.threshold;\n         const drawRange = geometry.drawRange;\n \n         // Checking boundingSphere distance to ray\n \n         if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n \n         _sphere$1.copy( geometry.boundingSphere );\n         _sphere$1.applyMatrix4( matrixWorld );\n         _sphere$1.radius += threshold;\n \n         if ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n \n         //\n \n         _inverseMatrix$1.copy( matrixWorld ).invert();\n         _ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n \n         const localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n         const localThresholdSq = localThreshold * localThreshold;\n \n         const vStart = new Vector3();\n         const vEnd = new Vector3();\n         const interSegment = new Vector3();\n         const interRay = new Vector3();\n         const step = this.isLineSegments ? 2 : 1;\n \n         if ( geometry.isBufferGeometry ) {\n \n             const index = geometry.index;\n             const attributes = geometry.attributes;\n             const positionAttribute = attributes.position;\n \n             if ( index !== null ) {\n \n                 const start = Math.max( 0, drawRange.start );\n                 const end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n \n                 for ( let i = start, l = end - 1; i < l; i += step ) {\n \n                     const a = index.getX( i );\n                     const b = index.getX( i + 1 );\n \n                     vStart.fromBufferAttribute( positionAttribute, a );\n                     vEnd.fromBufferAttribute( positionAttribute, b );\n \n                     const distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n \n                     if ( distSq > localThresholdSq ) continue;\n \n                     interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n \n                     const distance = raycaster.ray.origin.distanceTo( interRay );\n \n                     if ( distance < raycaster.near || distance > raycaster.far ) continue;\n \n                     intersects.push( {\n \n                         distance: distance,\n                         // What do we want? intersection point on the ray or on the segment??\n                         // point: raycaster.ray.at( distance ),\n                         point: interSegment.clone().applyMatrix4( this.matrixWorld ),\n                         index: i,\n                         face: null,\n                         faceIndex: null,\n                         object: this\n \n                     } );\n \n                 }\n \n             } else {\n \n                 const start = Math.max( 0, drawRange.start );\n                 const end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n \n                 for ( let i = start, l = end - 1; i < l; i += step ) {\n \n                     vStart.fromBufferAttribute( positionAttribute, i );\n                     vEnd.fromBufferAttribute( positionAttribute, i + 1 );\n \n                     const distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n \n                     if ( distSq > localThresholdSq ) continue;\n \n                     interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n \n                     const distance = raycaster.ray.origin.distanceTo( interRay );\n \n                     if ( distance < raycaster.near || distance > raycaster.far ) continue;\n \n                     intersects.push( {\n \n                         distance: distance,\n                         // What do we want? intersection point on the ray or on the segment??\n                         // point: raycaster.ray.at( distance ),\n                         point: interSegment.clone().applyMatrix4( this.matrixWorld ),\n                         index: i,\n                         face: null,\n                         faceIndex: null,\n                         object: this\n \n                     } );\n \n                 }\n \n             }\n \n         } else if ( geometry.isGeometry ) {\n \n             console.error( 'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n         }\n \n     }\n \n     updateMorphTargets() {\n \n         const geometry = this.geometry;\n \n         if ( geometry.isBufferGeometry ) {\n \n             const morphAttributes = geometry.morphAttributes;\n             const keys = Object.keys( morphAttributes );\n \n             if ( keys.length > 0 ) {\n \n                 const morphAttribute = morphAttributes[ keys[ 0 ] ];\n \n                 if ( morphAttribute !== undefined ) {\n \n                     this.morphTargetInfluences = [];\n                     this.morphTargetDictionary = {};\n \n                     for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n \n                         const name = morphAttribute[ m ].name || String( m );\n \n                         this.morphTargetInfluences.push( 0 );\n                         this.morphTargetDictionary[ name ] = m;\n \n                     }\n \n                 }\n \n             }\n \n         } else {\n \n             const morphTargets = geometry.morphTargets;\n \n             if ( morphTargets !== undefined && morphTargets.length > 0 ) {\n \n                 console.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n             }\n \n         }\n \n     }\n \n }\n \n Line.prototype.isLine = true;\n \n const _start = /*@__PURE__*/ new Vector3();\n const _end = /*@__PURE__*/ new Vector3();\n \n class LineSegments extends Line {\n \n     constructor( geometry, material ) {\n \n         super( geometry, material );\n \n         this.type = 'LineSegments';\n \n     }\n \n     computeLineDistances() {\n \n         const geometry = this.geometry;\n \n         if ( geometry.isBufferGeometry ) {\n \n             // we assume non-indexed geometry\n \n             if ( geometry.index === null ) {\n \n                 const positionAttribute = geometry.attributes.position;\n                 const lineDistances = [];\n \n                 for ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n \n                     _start.fromBufferAttribute( positionAttribute, i );\n                     _end.fromBufferAttribute( positionAttribute, i + 1 );\n \n                     lineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n                     lineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n \n                 }\n \n                 geometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n \n             } else {\n \n                 console.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n \n             }\n \n         } else if ( geometry.isGeometry ) {\n \n             console.error( 'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n         }\n \n         return this;\n \n     }\n \n }\n \n LineSegments.prototype.isLineSegments = true;\n \n class LineLoop extends Line {\n \n     constructor( geometry, material ) {\n \n         super( geometry, material );\n \n         this.type = 'LineLoop';\n \n     }\n \n }\n \n LineLoop.prototype.isLineLoop = true;\n \n class PointsMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.type = 'PointsMaterial';\n \n         this.color = new Color( 0xffffff );\n \n         this.map = null;\n \n         this.alphaMap = null;\n \n         this.size = 1;\n         this.sizeAttenuation = true;\n \n         this.setValues( parameters );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.color.copy( source.color );\n \n         this.map = source.map;\n \n         this.alphaMap = source.alphaMap;\n \n         this.size = source.size;\n         this.sizeAttenuation = source.sizeAttenuation;\n \n         return this;\n \n     }\n \n }\n \n PointsMaterial.prototype.isPointsMaterial = true;\n \n const _inverseMatrix = /*@__PURE__*/ new Matrix4();\n const _ray = /*@__PURE__*/ new Ray();\n const _sphere = /*@__PURE__*/ new Sphere();\n const _position$2 = /*@__PURE__*/ new Vector3();\n \n class Points extends Object3D {\n \n     constructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n \n         super();\n \n         this.type = 'Points';\n \n         this.geometry = geometry;\n         this.material = material;\n \n         this.updateMorphTargets();\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.material = source.material;\n         this.geometry = source.geometry;\n \n         return this;\n \n     }\n \n     raycast( raycaster, intersects ) {\n \n         const geometry = this.geometry;\n         const matrixWorld = this.matrixWorld;\n         const threshold = raycaster.params.Points.threshold;\n         const drawRange = geometry.drawRange;\n \n         // Checking boundingSphere distance to ray\n \n         if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n \n         _sphere.copy( geometry.boundingSphere );\n         _sphere.applyMatrix4( matrixWorld );\n         _sphere.radius += threshold;\n \n         if ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n \n         //\n \n         _inverseMatrix.copy( matrixWorld ).invert();\n         _ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n \n         const localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n         const localThresholdSq = localThreshold * localThreshold;\n \n         if ( geometry.isBufferGeometry ) {\n \n             const index = geometry.index;\n             const attributes = geometry.attributes;\n             const positionAttribute = attributes.position;\n \n             if ( index !== null ) {\n \n                 const start = Math.max( 0, drawRange.start );\n                 const end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n \n                 for ( let i = start, il = end; i < il; i ++ ) {\n \n                     const a = index.getX( i );\n \n                     _position$2.fromBufferAttribute( positionAttribute, a );\n \n                     testPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n \n                 }\n \n             } else {\n \n                 const start = Math.max( 0, drawRange.start );\n                 const end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n \n                 for ( let i = start, l = end; i < l; i ++ ) {\n \n                     _position$2.fromBufferAttribute( positionAttribute, i );\n \n                     testPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n \n                 }\n \n             }\n \n         } else {\n \n             console.error( 'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n         }\n \n     }\n \n     updateMorphTargets() {\n \n         const geometry = this.geometry;\n \n         if ( geometry.isBufferGeometry ) {\n \n             const morphAttributes = geometry.morphAttributes;\n             const keys = Object.keys( morphAttributes );\n \n             if ( keys.length > 0 ) {\n \n                 const morphAttribute = morphAttributes[ keys[ 0 ] ];\n \n                 if ( morphAttribute !== undefined ) {\n \n                     this.morphTargetInfluences = [];\n                     this.morphTargetDictionary = {};\n \n                     for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n \n                         const name = morphAttribute[ m ].name || String( m );\n \n                         this.morphTargetInfluences.push( 0 );\n                         this.morphTargetDictionary[ name ] = m;\n \n                     }\n \n                 }\n \n             }\n \n         } else {\n \n             const morphTargets = geometry.morphTargets;\n \n             if ( morphTargets !== undefined && morphTargets.length > 0 ) {\n \n                 console.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n             }\n \n         }\n \n     }\n \n }\n \n Points.prototype.isPoints = true;\n \n function testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n \n     const rayPointDistanceSq = _ray.distanceSqToPoint( point );\n \n     if ( rayPointDistanceSq < localThresholdSq ) {\n \n         const intersectPoint = new Vector3();\n \n         _ray.closestPointToPoint( point, intersectPoint );\n         intersectPoint.applyMatrix4( matrixWorld );\n \n         const distance = raycaster.ray.origin.distanceTo( intersectPoint );\n \n         if ( distance < raycaster.near || distance > raycaster.far ) return;\n \n         intersects.push( {\n \n             distance: distance,\n             distanceToRay: Math.sqrt( rayPointDistanceSq ),\n             point: intersectPoint,\n             index: index,\n             face: null,\n             object: object\n \n         } );\n \n     }\n \n }\n \n class VideoTexture extends Texture {\n \n     constructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n \n         super( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n \n         this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n         this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n \n         this.generateMipmaps = false;\n \n         const scope = this;\n \n         function updateVideo() {\n \n             scope.needsUpdate = true;\n             video.requestVideoFrameCallback( updateVideo );\n \n         }\n \n         if ( 'requestVideoFrameCallback' in video ) {\n \n             video.requestVideoFrameCallback( updateVideo );\n \n         }\n \n     }\n \n     clone() {\n \n         return new this.constructor( this.image ).copy( this );\n \n     }\n \n     update() {\n \n         const video = this.image;\n         const hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n \n         if ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n \n             this.needsUpdate = true;\n \n         }\n \n     }\n \n }\n \n VideoTexture.prototype.isVideoTexture = true;\n \n class FramebufferTexture extends Texture {\n \n     constructor( width, height, format ) {\n \n         super( { width, height } );\n \n         this.format = format;\n \n         this.magFilter = NearestFilter;\n         this.minFilter = NearestFilter;\n \n         this.generateMipmaps = false;\n \n         this.needsUpdate = true;\n \n     }\n \n }\n \n FramebufferTexture.prototype.isFramebufferTexture = true;\n \n class CompressedTexture extends Texture {\n \n     constructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n \n         super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n \n         this.image = { width: width, height: height };\n         this.mipmaps = mipmaps;\n \n         // no flipping for cube textures\n         // (also flipping doesn't work for compressed textures )\n \n         this.flipY = false;\n \n         // can't generate mipmaps for compressed textures\n         // mips must be embedded in DDS files\n \n         this.generateMipmaps = false;\n \n     }\n \n }\n \n CompressedTexture.prototype.isCompressedTexture = true;\n \n class CanvasTexture extends Texture {\n \n     constructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n \n         super( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n \n         this.needsUpdate = true;\n \n     }\n \n }\n \n CanvasTexture.prototype.isCanvasTexture = true;\n \n /**\n  * Extensible curve object.\n  *\n  * Some common of curve methods:\n  * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n  * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n  * .getPoints(), .getSpacedPoints()\n  * .getLength()\n  * .updateArcLengths()\n  *\n  * This following curves inherit from THREE.Curve:\n  *\n  * -- 2D curves --\n  * THREE.ArcCurve\n  * THREE.CubicBezierCurve\n  * THREE.EllipseCurve\n  * THREE.LineCurve\n  * THREE.QuadraticBezierCurve\n  * THREE.SplineCurve\n  *\n  * -- 3D curves --\n  * THREE.CatmullRomCurve3\n  * THREE.CubicBezierCurve3\n  * THREE.LineCurve3\n  * THREE.QuadraticBezierCurve3\n  *\n  * A series of curves can be represented as a THREE.CurvePath.\n  *\n  **/\n \n class Curve {\n \n     constructor() {\n \n         this.type = 'Curve';\n \n         this.arcLengthDivisions = 200;\n \n     }\n \n     // Virtual base class method to overwrite and implement in subclasses\n     //\t- t [0 .. 1]\n \n     getPoint( /* t, optionalTarget */ ) {\n \n         console.warn( 'THREE.Curve: .getPoint() not implemented.' );\n         return null;\n \n     }\n \n     // Get point at relative position in curve according to arc length\n     // - u [0 .. 1]\n \n     getPointAt( u, optionalTarget ) {\n \n         const t = this.getUtoTmapping( u );\n         return this.getPoint( t, optionalTarget );\n \n     }\n \n     // Get sequence of points using getPoint( t )\n \n     getPoints( divisions = 5 ) {\n \n         const points = [];\n \n         for ( let d = 0; d <= divisions; d ++ ) {\n \n             points.push( this.getPoint( d / divisions ) );\n \n         }\n \n         return points;\n \n     }\n \n     // Get sequence of points using getPointAt( u )\n \n     getSpacedPoints( divisions = 5 ) {\n \n         const points = [];\n \n         for ( let d = 0; d <= divisions; d ++ ) {\n \n             points.push( this.getPointAt( d / divisions ) );\n \n         }\n \n         return points;\n \n     }\n \n     // Get total curve arc length\n \n     getLength() {\n \n         const lengths = this.getLengths();\n         return lengths[ lengths.length - 1 ];\n \n     }\n \n     // Get list of cumulative segment lengths\n \n     getLengths( divisions = this.arcLengthDivisions ) {\n \n         if ( this.cacheArcLengths &&\n             ( this.cacheArcLengths.length === divisions + 1 ) &&\n             ! this.needsUpdate ) {\n \n             return this.cacheArcLengths;\n \n         }\n \n         this.needsUpdate = false;\n \n         const cache = [];\n         let current, last = this.getPoint( 0 );\n         let sum = 0;\n \n         cache.push( 0 );\n \n         for ( let p = 1; p <= divisions; p ++ ) {\n \n             current = this.getPoint( p / divisions );\n             sum += current.distanceTo( last );\n             cache.push( sum );\n             last = current;\n \n         }\n \n         this.cacheArcLengths = cache;\n \n         return cache; // { sums: cache, sum: sum }; Sum is in the last element.\n \n     }\n \n     updateArcLengths() {\n \n         this.needsUpdate = true;\n         this.getLengths();\n \n     }\n \n     // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n \n     getUtoTmapping( u, distance ) {\n \n         const arcLengths = this.getLengths();\n \n         let i = 0;\n         const il = arcLengths.length;\n \n         let targetArcLength; // The targeted u distance value to get\n \n         if ( distance ) {\n \n             targetArcLength = distance;\n \n         } else {\n \n             targetArcLength = u * arcLengths[ il - 1 ];\n \n         }\n \n         // binary search for the index with largest value smaller than target u distance\n \n         let low = 0, high = il - 1, comparison;\n \n         while ( low <= high ) {\n \n             i = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n \n             comparison = arcLengths[ i ] - targetArcLength;\n \n             if ( comparison < 0 ) {\n \n                 low = i + 1;\n \n             } else if ( comparison > 0 ) {\n \n                 high = i - 1;\n \n             } else {\n \n                 high = i;\n                 break;\n \n                 // DONE\n \n             }\n \n         }\n \n         i = high;\n \n         if ( arcLengths[ i ] === targetArcLength ) {\n \n             return i / ( il - 1 );\n \n         }\n \n         // we could get finer grain at lengths, or use simple interpolation between two points\n \n         const lengthBefore = arcLengths[ i ];\n         const lengthAfter = arcLengths[ i + 1 ];\n \n         const segmentLength = lengthAfter - lengthBefore;\n \n         // determine where we are between the 'before' and 'after' points\n \n         const segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n \n         // add that fractional amount to t\n \n         const t = ( i + segmentFraction ) / ( il - 1 );\n \n         return t;\n \n     }\n \n     // Returns a unit vector tangent at t\n     // In case any sub curve does not implement its tangent derivation,\n     // 2 points a small delta apart will be used to find its gradient\n     // which seems to give a reasonable approximation\n \n     getTangent( t, optionalTarget ) {\n \n         const delta = 0.0001;\n         let t1 = t - delta;\n         let t2 = t + delta;\n \n         // Capping in case of danger\n \n         if ( t1 < 0 ) t1 = 0;\n         if ( t2 > 1 ) t2 = 1;\n \n         const pt1 = this.getPoint( t1 );\n         const pt2 = this.getPoint( t2 );\n \n         const tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n \n         tangent.copy( pt2 ).sub( pt1 ).normalize();\n \n         return tangent;\n \n     }\n \n     getTangentAt( u, optionalTarget ) {\n \n         const t = this.getUtoTmapping( u );\n         return this.getTangent( t, optionalTarget );\n \n     }\n \n     computeFrenetFrames( segments, closed ) {\n \n         // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n \n         const normal = new Vector3();\n \n         const tangents = [];\n         const normals = [];\n         const binormals = [];\n \n         const vec = new Vector3();\n         const mat = new Matrix4();\n \n         // compute the tangent vectors for each segment on the curve\n \n         for ( let i = 0; i <= segments; i ++ ) {\n \n             const u = i / segments;\n \n             tangents[ i ] = this.getTangentAt( u, new Vector3() );\n \n         }\n \n         // select an initial normal vector perpendicular to the first tangent vector,\n         // and in the direction of the minimum tangent xyz component\n \n         normals[ 0 ] = new Vector3();\n         binormals[ 0 ] = new Vector3();\n         let min = Number.MAX_VALUE;\n         const tx = Math.abs( tangents[ 0 ].x );\n         const ty = Math.abs( tangents[ 0 ].y );\n         const tz = Math.abs( tangents[ 0 ].z );\n \n         if ( tx <= min ) {\n \n             min = tx;\n             normal.set( 1, 0, 0 );\n \n         }\n \n         if ( ty <= min ) {\n \n             min = ty;\n             normal.set( 0, 1, 0 );\n \n         }\n \n         if ( tz <= min ) {\n \n             normal.set( 0, 0, 1 );\n \n         }\n \n         vec.crossVectors( tangents[ 0 ], normal ).normalize();\n \n         normals[ 0 ].crossVectors( tangents[ 0 ], vec );\n         binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n \n \n         // compute the slowly-varying normal and binormal vectors for each segment on the curve\n \n         for ( let i = 1; i <= segments; i ++ ) {\n \n             normals[ i ] = normals[ i - 1 ].clone();\n \n             binormals[ i ] = binormals[ i - 1 ].clone();\n \n             vec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n \n             if ( vec.length() > Number.EPSILON ) {\n \n                 vec.normalize();\n \n                 const theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n \n                 normals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n \n             }\n \n             binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n \n         }\n \n         // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n \n         if ( closed === true ) {\n \n             let theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n             theta /= segments;\n \n             if ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n \n                 theta = - theta;\n \n             }\n \n             for ( let i = 1; i <= segments; i ++ ) {\n \n                 // twist a little...\n                 normals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n                 binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n \n             }\n \n         }\n \n         return {\n             tangents: tangents,\n             normals: normals,\n             binormals: binormals\n         };\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n     copy( source ) {\n \n         this.arcLengthDivisions = source.arcLengthDivisions;\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = {\n             metadata: {\n                 version: 4.5,\n                 type: 'Curve',\n                 generator: 'Curve.toJSON'\n             }\n         };\n \n         data.arcLengthDivisions = this.arcLengthDivisions;\n         data.type = this.type;\n \n         return data;\n \n     }\n \n     fromJSON( json ) {\n \n         this.arcLengthDivisions = json.arcLengthDivisions;\n \n         return this;\n \n     }\n \n }\n \n class EllipseCurve extends Curve {\n \n     constructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n \n         super();\n \n         this.type = 'EllipseCurve';\n \n         this.aX = aX;\n         this.aY = aY;\n \n         this.xRadius = xRadius;\n         this.yRadius = yRadius;\n \n         this.aStartAngle = aStartAngle;\n         this.aEndAngle = aEndAngle;\n \n         this.aClockwise = aClockwise;\n \n         this.aRotation = aRotation;\n \n     }\n \n     getPoint( t, optionalTarget ) {\n \n         const point = optionalTarget || new Vector2();\n \n         const twoPi = Math.PI * 2;\n         let deltaAngle = this.aEndAngle - this.aStartAngle;\n         const samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n \n         // ensures that deltaAngle is 0 .. 2 PI\n         while ( deltaAngle < 0 ) deltaAngle += twoPi;\n         while ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n \n         if ( deltaAngle < Number.EPSILON ) {\n \n             if ( samePoints ) {\n \n                 deltaAngle = 0;\n \n             } else {\n \n                 deltaAngle = twoPi;\n \n             }\n \n         }\n \n         if ( this.aClockwise === true && ! samePoints ) {\n \n             if ( deltaAngle === twoPi ) {\n \n                 deltaAngle = - twoPi;\n \n             } else {\n \n                 deltaAngle = deltaAngle - twoPi;\n \n             }\n \n         }\n \n         const angle = this.aStartAngle + t * deltaAngle;\n         let x = this.aX + this.xRadius * Math.cos( angle );\n         let y = this.aY + this.yRadius * Math.sin( angle );\n \n         if ( this.aRotation !== 0 ) {\n \n             const cos = Math.cos( this.aRotation );\n             const sin = Math.sin( this.aRotation );\n \n             const tx = x - this.aX;\n             const ty = y - this.aY;\n \n             // Rotate the point about the center of the ellipse.\n             x = tx * cos - ty * sin + this.aX;\n             y = tx * sin + ty * cos + this.aY;\n \n         }\n \n         return point.set( x, y );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.aX = source.aX;\n         this.aY = source.aY;\n \n         this.xRadius = source.xRadius;\n         this.yRadius = source.yRadius;\n \n         this.aStartAngle = source.aStartAngle;\n         this.aEndAngle = source.aEndAngle;\n \n         this.aClockwise = source.aClockwise;\n \n         this.aRotation = source.aRotation;\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.aX = this.aX;\n         data.aY = this.aY;\n \n         data.xRadius = this.xRadius;\n         data.yRadius = this.yRadius;\n \n         data.aStartAngle = this.aStartAngle;\n         data.aEndAngle = this.aEndAngle;\n \n         data.aClockwise = this.aClockwise;\n \n         data.aRotation = this.aRotation;\n \n         return data;\n \n     }\n \n     fromJSON( json ) {\n \n         super.fromJSON( json );\n \n         this.aX = json.aX;\n         this.aY = json.aY;\n \n         this.xRadius = json.xRadius;\n         this.yRadius = json.yRadius;\n \n         this.aStartAngle = json.aStartAngle;\n         this.aEndAngle = json.aEndAngle;\n \n         this.aClockwise = json.aClockwise;\n \n         this.aRotation = json.aRotation;\n \n         return this;\n \n     }\n \n }\n \n EllipseCurve.prototype.isEllipseCurve = true;\n \n class ArcCurve extends EllipseCurve {\n \n     constructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n \n         super( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n \n         this.type = 'ArcCurve';\n \n     }\n \n }\n \n ArcCurve.prototype.isArcCurve = true;\n \n /**\n  * Centripetal CatmullRom Curve - which is useful for avoiding\n  * cusps and self-intersections in non-uniform catmull rom curves.\n  * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n  *\n  * curve.type accepts centripetal(default), chordal and catmullrom\n  * curve.tension is used for catmullrom which defaults to 0.5\n  */\n \n \n /*\n Based on an optimized c++ solution in\n  - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n  - http://ideone.com/NoEbVM\n \n This CubicPoly class could be used for reusing some variables and calculations,\n but for three.js curve use, it could be possible inlined and flatten into a single function call\n which can be placed in CurveUtils.\n */\n \n function CubicPoly() {\n \n     let c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n \n     /*\n      * Compute coefficients for a cubic polynomial\n      *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n      * such that\n      *   p(0) = x0, p(1) = x1\n      *  and\n      *   p'(0) = t0, p'(1) = t1.\n      */\n     function init( x0, x1, t0, t1 ) {\n \n         c0 = x0;\n         c1 = t0;\n         c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n         c3 = 2 * x0 - 2 * x1 + t0 + t1;\n \n     }\n \n     return {\n \n         initCatmullRom: function ( x0, x1, x2, x3, tension ) {\n \n             init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n \n         },\n \n         initNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n \n             // compute tangents when parameterized in [t1,t2]\n             let t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n             let t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n \n             // rescale tangents for parametrization in [0,1]\n             t1 *= dt1;\n             t2 *= dt1;\n \n             init( x1, x2, t1, t2 );\n \n         },\n \n         calc: function ( t ) {\n \n             const t2 = t * t;\n             const t3 = t2 * t;\n             return c0 + c1 * t + c2 * t2 + c3 * t3;\n \n         }\n \n     };\n \n }\n \n //\n \n const tmp = new Vector3();\n const px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n \n class CatmullRomCurve3 extends Curve {\n \n     constructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n \n         super();\n \n         this.type = 'CatmullRomCurve3';\n \n         this.points = points;\n         this.closed = closed;\n         this.curveType = curveType;\n         this.tension = tension;\n \n     }\n \n     getPoint( t, optionalTarget = new Vector3() ) {\n \n         const point = optionalTarget;\n \n         const points = this.points;\n         const l = points.length;\n \n         const p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n         let intPoint = Math.floor( p );\n         let weight = p - intPoint;\n \n         if ( this.closed ) {\n \n             intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n \n         } else if ( weight === 0 && intPoint === l - 1 ) {\n \n             intPoint = l - 2;\n             weight = 1;\n \n         }\n \n         let p0, p3; // 4 points (p1 & p2 defined below)\n \n         if ( this.closed || intPoint > 0 ) {\n \n             p0 = points[ ( intPoint - 1 ) % l ];\n \n         } else {\n \n             // extrapolate first point\n             tmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n             p0 = tmp;\n \n         }\n \n         const p1 = points[ intPoint % l ];\n         const p2 = points[ ( intPoint + 1 ) % l ];\n \n         if ( this.closed || intPoint + 2 < l ) {\n \n             p3 = points[ ( intPoint + 2 ) % l ];\n \n         } else {\n \n             // extrapolate last point\n             tmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n             p3 = tmp;\n \n         }\n \n         if ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n \n             // init Centripetal / Chordal Catmull-Rom\n             const pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n             let dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n             let dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n             let dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n \n             // safety check for repeated points\n             if ( dt1 < 1e-4 ) dt1 = 1.0;\n             if ( dt0 < 1e-4 ) dt0 = dt1;\n             if ( dt2 < 1e-4 ) dt2 = dt1;\n \n             px.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n             py.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n             pz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n \n         } else if ( this.curveType === 'catmullrom' ) {\n \n             px.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n             py.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n             pz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n \n         }\n \n         point.set(\n             px.calc( weight ),\n             py.calc( weight ),\n             pz.calc( weight )\n         );\n \n         return point;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.points = [];\n \n         for ( let i = 0, l = source.points.length; i < l; i ++ ) {\n \n             const point = source.points[ i ];\n \n             this.points.push( point.clone() );\n \n         }\n \n         this.closed = source.closed;\n         this.curveType = source.curveType;\n         this.tension = source.tension;\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.points = [];\n \n         for ( let i = 0, l = this.points.length; i < l; i ++ ) {\n \n             const point = this.points[ i ];\n             data.points.push( point.toArray() );\n \n         }\n \n         data.closed = this.closed;\n         data.curveType = this.curveType;\n         data.tension = this.tension;\n \n         return data;\n \n     }\n \n     fromJSON( json ) {\n \n         super.fromJSON( json );\n \n         this.points = [];\n \n         for ( let i = 0, l = json.points.length; i < l; i ++ ) {\n \n             const point = json.points[ i ];\n             this.points.push( new Vector3().fromArray( point ) );\n \n         }\n \n         this.closed = json.closed;\n         this.curveType = json.curveType;\n         this.tension = json.tension;\n \n         return this;\n \n     }\n \n }\n \n CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n \n /**\n  * Bezier Curves formulas obtained from\n  * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n  */\n \n function CatmullRom( t, p0, p1, p2, p3 ) {\n \n     const v0 = ( p2 - p0 ) * 0.5;\n     const v1 = ( p3 - p1 ) * 0.5;\n     const t2 = t * t;\n     const t3 = t * t2;\n     return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n \n }\n \n //\n \n function QuadraticBezierP0( t, p ) {\n \n     const k = 1 - t;\n     return k * k * p;\n \n }\n \n function QuadraticBezierP1( t, p ) {\n \n     return 2 * ( 1 - t ) * t * p;\n \n }\n \n function QuadraticBezierP2( t, p ) {\n \n     return t * t * p;\n \n }\n \n function QuadraticBezier( t, p0, p1, p2 ) {\n \n     return QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n         QuadraticBezierP2( t, p2 );\n \n }\n \n //\n \n function CubicBezierP0( t, p ) {\n \n     const k = 1 - t;\n     return k * k * k * p;\n \n }\n \n function CubicBezierP1( t, p ) {\n \n     const k = 1 - t;\n     return 3 * k * k * t * p;\n \n }\n \n function CubicBezierP2( t, p ) {\n \n     return 3 * ( 1 - t ) * t * t * p;\n \n }\n \n function CubicBezierP3( t, p ) {\n \n     return t * t * t * p;\n \n }\n \n function CubicBezier( t, p0, p1, p2, p3 ) {\n \n     return CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n         CubicBezierP3( t, p3 );\n \n }\n \n class CubicBezierCurve extends Curve {\n \n     constructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n \n         super();\n \n         this.type = 'CubicBezierCurve';\n \n         this.v0 = v0;\n         this.v1 = v1;\n         this.v2 = v2;\n         this.v3 = v3;\n \n     }\n \n     getPoint( t, optionalTarget = new Vector2() ) {\n \n         const point = optionalTarget;\n \n         const v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n \n         point.set(\n             CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n             CubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n         );\n \n         return point;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.v0.copy( source.v0 );\n         this.v1.copy( source.v1 );\n         this.v2.copy( source.v2 );\n         this.v3.copy( source.v3 );\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.v0 = this.v0.toArray();\n         data.v1 = this.v1.toArray();\n         data.v2 = this.v2.toArray();\n         data.v3 = this.v3.toArray();\n \n         return data;\n \n     }\n \n     fromJSON( json ) {\n \n         super.fromJSON( json );\n \n         this.v0.fromArray( json.v0 );\n         this.v1.fromArray( json.v1 );\n         this.v2.fromArray( json.v2 );\n         this.v3.fromArray( json.v3 );\n \n         return this;\n \n     }\n \n }\n \n CubicBezierCurve.prototype.isCubicBezierCurve = true;\n \n class CubicBezierCurve3 extends Curve {\n \n     constructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n \n         super();\n \n         this.type = 'CubicBezierCurve3';\n \n         this.v0 = v0;\n         this.v1 = v1;\n         this.v2 = v2;\n         this.v3 = v3;\n \n     }\n \n     getPoint( t, optionalTarget = new Vector3() ) {\n \n         const point = optionalTarget;\n \n         const v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n \n         point.set(\n             CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n             CubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n             CubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n         );\n \n         return point;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.v0.copy( source.v0 );\n         this.v1.copy( source.v1 );\n         this.v2.copy( source.v2 );\n         this.v3.copy( source.v3 );\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.v0 = this.v0.toArray();\n         data.v1 = this.v1.toArray();\n         data.v2 = this.v2.toArray();\n         data.v3 = this.v3.toArray();\n \n         return data;\n \n     }\n \n     fromJSON( json ) {\n \n         super.fromJSON( json );\n \n         this.v0.fromArray( json.v0 );\n         this.v1.fromArray( json.v1 );\n         this.v2.fromArray( json.v2 );\n         this.v3.fromArray( json.v3 );\n \n         return this;\n \n     }\n \n }\n \n CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n \n class LineCurve extends Curve {\n \n     constructor( v1 = new Vector2(), v2 = new Vector2() ) {\n \n         super();\n \n         this.type = 'LineCurve';\n \n         this.v1 = v1;\n         this.v2 = v2;\n \n     }\n \n     getPoint( t, optionalTarget = new Vector2() ) {\n \n         const point = optionalTarget;\n \n         if ( t === 1 ) {\n \n             point.copy( this.v2 );\n \n         } else {\n \n             point.copy( this.v2 ).sub( this.v1 );\n             point.multiplyScalar( t ).add( this.v1 );\n \n         }\n \n         return point;\n \n     }\n \n     // Line curve is linear, so we can overwrite default getPointAt\n     getPointAt( u, optionalTarget ) {\n \n         return this.getPoint( u, optionalTarget );\n \n     }\n \n     getTangent( t, optionalTarget ) {\n \n         const tangent = optionalTarget || new Vector2();\n \n         tangent.copy( this.v2 ).sub( this.v1 ).normalize();\n \n         return tangent;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.v1.copy( source.v1 );\n         this.v2.copy( source.v2 );\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.v1 = this.v1.toArray();\n         data.v2 = this.v2.toArray();\n \n         return data;\n \n     }\n \n     fromJSON( json ) {\n \n         super.fromJSON( json );\n \n         this.v1.fromArray( json.v1 );\n         this.v2.fromArray( json.v2 );\n \n         return this;\n \n     }\n \n }\n \n LineCurve.prototype.isLineCurve = true;\n \n class LineCurve3 extends Curve {\n \n     constructor( v1 = new Vector3(), v2 = new Vector3() ) {\n \n         super();\n \n         this.type = 'LineCurve3';\n         this.isLineCurve3 = true;\n \n         this.v1 = v1;\n         this.v2 = v2;\n \n     }\n     getPoint( t, optionalTarget = new Vector3() ) {\n \n         const point = optionalTarget;\n \n         if ( t === 1 ) {\n \n             point.copy( this.v2 );\n \n         } else {\n \n             point.copy( this.v2 ).sub( this.v1 );\n             point.multiplyScalar( t ).add( this.v1 );\n \n         }\n \n         return point;\n \n     }\n     // Line curve is linear, so we can overwrite default getPointAt\n     getPointAt( u, optionalTarget ) {\n \n         return this.getPoint( u, optionalTarget );\n \n     }\n     copy( source ) {\n \n         super.copy( source );\n \n         this.v1.copy( source.v1 );\n         this.v2.copy( source.v2 );\n \n         return this;\n \n     }\n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.v1 = this.v1.toArray();\n         data.v2 = this.v2.toArray();\n \n         return data;\n \n     }\n     fromJSON( json ) {\n \n         super.fromJSON( json );\n \n         this.v1.fromArray( json.v1 );\n         this.v2.fromArray( json.v2 );\n \n         return this;\n \n     }\n \n }\n \n class QuadraticBezierCurve extends Curve {\n \n     constructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n \n         super();\n \n         this.type = 'QuadraticBezierCurve';\n \n         this.v0 = v0;\n         this.v1 = v1;\n         this.v2 = v2;\n \n     }\n \n     getPoint( t, optionalTarget = new Vector2() ) {\n \n         const point = optionalTarget;\n \n         const v0 = this.v0, v1 = this.v1, v2 = this.v2;\n \n         point.set(\n             QuadraticBezier( t, v0.x, v1.x, v2.x ),\n             QuadraticBezier( t, v0.y, v1.y, v2.y )\n         );\n \n         return point;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.v0.copy( source.v0 );\n         this.v1.copy( source.v1 );\n         this.v2.copy( source.v2 );\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.v0 = this.v0.toArray();\n         data.v1 = this.v1.toArray();\n         data.v2 = this.v2.toArray();\n \n         return data;\n \n     }\n \n     fromJSON( json ) {\n \n         super.fromJSON( json );\n \n         this.v0.fromArray( json.v0 );\n         this.v1.fromArray( json.v1 );\n         this.v2.fromArray( json.v2 );\n \n         return this;\n \n     }\n \n }\n \n QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n \n class QuadraticBezierCurve3 extends Curve {\n \n     constructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n \n         super();\n \n         this.type = 'QuadraticBezierCurve3';\n \n         this.v0 = v0;\n         this.v1 = v1;\n         this.v2 = v2;\n \n     }\n \n     getPoint( t, optionalTarget = new Vector3() ) {\n \n         const point = optionalTarget;\n \n         const v0 = this.v0, v1 = this.v1, v2 = this.v2;\n \n         point.set(\n             QuadraticBezier( t, v0.x, v1.x, v2.x ),\n             QuadraticBezier( t, v0.y, v1.y, v2.y ),\n             QuadraticBezier( t, v0.z, v1.z, v2.z )\n         );\n \n         return point;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.v0.copy( source.v0 );\n         this.v1.copy( source.v1 );\n         this.v2.copy( source.v2 );\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.v0 = this.v0.toArray();\n         data.v1 = this.v1.toArray();\n         data.v2 = this.v2.toArray();\n \n         return data;\n \n     }\n \n     fromJSON( json ) {\n \n         super.fromJSON( json );\n \n         this.v0.fromArray( json.v0 );\n         this.v1.fromArray( json.v1 );\n         this.v2.fromArray( json.v2 );\n \n         return this;\n \n     }\n \n }\n \n QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n \n class SplineCurve extends Curve {\n \n     constructor( points = [] ) {\n \n         super();\n \n         this.type = 'SplineCurve';\n \n         this.points = points;\n \n     }\n \n     getPoint( t, optionalTarget = new Vector2() ) {\n \n         const point = optionalTarget;\n \n         const points = this.points;\n         const p = ( points.length - 1 ) * t;\n \n         const intPoint = Math.floor( p );\n         const weight = p - intPoint;\n \n         const p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n         const p1 = points[ intPoint ];\n         const p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n         const p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n \n         point.set(\n             CatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n             CatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n         );\n \n         return point;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.points = [];\n \n         for ( let i = 0, l = source.points.length; i < l; i ++ ) {\n \n             const point = source.points[ i ];\n \n             this.points.push( point.clone() );\n \n         }\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.points = [];\n \n         for ( let i = 0, l = this.points.length; i < l; i ++ ) {\n \n             const point = this.points[ i ];\n             data.points.push( point.toArray() );\n \n         }\n \n         return data;\n \n     }\n \n     fromJSON( json ) {\n \n         super.fromJSON( json );\n \n         this.points = [];\n \n         for ( let i = 0, l = json.points.length; i < l; i ++ ) {\n \n             const point = json.points[ i ];\n             this.points.push( new Vector2().fromArray( point ) );\n \n         }\n \n         return this;\n \n     }\n \n }\n \n SplineCurve.prototype.isSplineCurve = true;\n \n var Curves = /*#__PURE__*/Object.freeze({\n     __proto__: null,\n     ArcCurve: ArcCurve,\n     CatmullRomCurve3: CatmullRomCurve3,\n     CubicBezierCurve: CubicBezierCurve,\n     CubicBezierCurve3: CubicBezierCurve3,\n     EllipseCurve: EllipseCurve,\n     LineCurve: LineCurve,\n     LineCurve3: LineCurve3,\n     QuadraticBezierCurve: QuadraticBezierCurve,\n     QuadraticBezierCurve3: QuadraticBezierCurve3,\n     SplineCurve: SplineCurve\n });\n \n /**************************************************************\n  *\tCurved Path - a curve path is simply a array of connected\n  *  curves, but retains the api of a curve\n  **************************************************************/\n \n class CurvePath extends Curve {\n \n     constructor() {\n \n         super();\n \n         this.type = 'CurvePath';\n \n         this.curves = [];\n         this.autoClose = false; // Automatically closes the path\n \n     }\n \n     add( curve ) {\n \n         this.curves.push( curve );\n \n     }\n \n     closePath() {\n \n         // Add a line curve if start and end of lines are not connected\n         const startPoint = this.curves[ 0 ].getPoint( 0 );\n         const endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n \n         if ( ! startPoint.equals( endPoint ) ) {\n \n             this.curves.push( new LineCurve( endPoint, startPoint ) );\n \n         }\n \n     }\n \n     // To get accurate point with reference to\n     // entire path distance at time t,\n     // following has to be done:\n \n     // 1. Length of each sub path have to be known\n     // 2. Locate and identify type of curve\n     // 3. Get t for the curve\n     // 4. Return curve.getPointAt(t')\n \n     getPoint( t, optionalTarget ) {\n \n         const d = t * this.getLength();\n         const curveLengths = this.getCurveLengths();\n         let i = 0;\n \n         // To think about boundaries points.\n \n         while ( i < curveLengths.length ) {\n \n             if ( curveLengths[ i ] >= d ) {\n \n                 const diff = curveLengths[ i ] - d;\n                 const curve = this.curves[ i ];\n \n                 const segmentLength = curve.getLength();\n                 const u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n \n                 return curve.getPointAt( u, optionalTarget );\n \n             }\n \n             i ++;\n \n         }\n \n         return null;\n \n         // loop where sum != 0, sum > d , sum+1 <d\n \n     }\n \n     // We cannot use the default THREE.Curve getPoint() with getLength() because in\n     // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n     // getPoint() depends on getLength\n \n     getLength() {\n \n         const lens = this.getCurveLengths();\n         return lens[ lens.length - 1 ];\n \n     }\n \n     // cacheLengths must be recalculated.\n     updateArcLengths() {\n \n         this.needsUpdate = true;\n         this.cacheLengths = null;\n         this.getCurveLengths();\n \n     }\n \n     // Compute lengths and cache them\n     // We cannot overwrite getLengths() because UtoT mapping uses it.\n \n     getCurveLengths() {\n \n         // We use cache values if curves and cache array are same length\n \n         if ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n \n             return this.cacheLengths;\n \n         }\n \n         // Get length of sub-curve\n         // Push sums into cached array\n \n         const lengths = [];\n         let sums = 0;\n \n         for ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n \n             sums += this.curves[ i ].getLength();\n             lengths.push( sums );\n \n         }\n \n         this.cacheLengths = lengths;\n \n         return lengths;\n \n     }\n \n     getSpacedPoints( divisions = 40 ) {\n \n         const points = [];\n \n         for ( let i = 0; i <= divisions; i ++ ) {\n \n             points.push( this.getPoint( i / divisions ) );\n \n         }\n \n         if ( this.autoClose ) {\n \n             points.push( points[ 0 ] );\n \n         }\n \n         return points;\n \n     }\n \n     getPoints( divisions = 12 ) {\n \n         const points = [];\n         let last;\n \n         for ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n \n             const curve = curves[ i ];\n             const resolution = curve.isEllipseCurve ? divisions * 2\n                 : ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n                     : curve.isSplineCurve ? divisions * curve.points.length\n                         : divisions;\n \n             const pts = curve.getPoints( resolution );\n \n             for ( let j = 0; j < pts.length; j ++ ) {\n \n                 const point = pts[ j ];\n \n                 if ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n \n                 points.push( point );\n                 last = point;\n \n             }\n \n         }\n \n         if ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n \n             points.push( points[ 0 ] );\n \n         }\n \n         return points;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.curves = [];\n \n         for ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n \n             const curve = source.curves[ i ];\n \n             this.curves.push( curve.clone() );\n \n         }\n \n         this.autoClose = source.autoClose;\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.autoClose = this.autoClose;\n         data.curves = [];\n \n         for ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n \n             const curve = this.curves[ i ];\n             data.curves.push( curve.toJSON() );\n \n         }\n \n         return data;\n \n     }\n \n     fromJSON( json ) {\n \n         super.fromJSON( json );\n \n         this.autoClose = json.autoClose;\n         this.curves = [];\n \n         for ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n \n             const curve = json.curves[ i ];\n             this.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n \n         }\n \n         return this;\n \n     }\n \n }\n \n class Path extends CurvePath {\n \n     constructor( points ) {\n \n         super();\n         this.type = 'Path';\n \n         this.currentPoint = new Vector2();\n \n         if ( points ) {\n \n             this.setFromPoints( points );\n \n         }\n \n     }\n \n     setFromPoints( points ) {\n \n         this.moveTo( points[ 0 ].x, points[ 0 ].y );\n \n         for ( let i = 1, l = points.length; i < l; i ++ ) {\n \n             this.lineTo( points[ i ].x, points[ i ].y );\n \n         }\n \n         return this;\n \n     }\n \n     moveTo( x, y ) {\n \n         this.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n \n         return this;\n \n     }\n \n     lineTo( x, y ) {\n \n         const curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n         this.curves.push( curve );\n \n         this.currentPoint.set( x, y );\n \n         return this;\n \n     }\n \n     quadraticCurveTo( aCPx, aCPy, aX, aY ) {\n \n         const curve = new QuadraticBezierCurve(\n             this.currentPoint.clone(),\n             new Vector2( aCPx, aCPy ),\n             new Vector2( aX, aY )\n         );\n \n         this.curves.push( curve );\n \n         this.currentPoint.set( aX, aY );\n \n         return this;\n \n     }\n \n     bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n \n         const curve = new CubicBezierCurve(\n             this.currentPoint.clone(),\n             new Vector2( aCP1x, aCP1y ),\n             new Vector2( aCP2x, aCP2y ),\n             new Vector2( aX, aY )\n         );\n \n         this.curves.push( curve );\n \n         this.currentPoint.set( aX, aY );\n \n         return this;\n \n     }\n \n     splineThru( pts /*Array of Vector*/ ) {\n \n         const npts = [ this.currentPoint.clone() ].concat( pts );\n \n         const curve = new SplineCurve( npts );\n         this.curves.push( curve );\n \n         this.currentPoint.copy( pts[ pts.length - 1 ] );\n \n         return this;\n \n     }\n \n     arc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n \n         const x0 = this.currentPoint.x;\n         const y0 = this.currentPoint.y;\n \n         this.absarc( aX + x0, aY + y0, aRadius,\n             aStartAngle, aEndAngle, aClockwise );\n \n         return this;\n \n     }\n \n     absarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n \n         this.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n \n         return this;\n \n     }\n \n     ellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n \n         const x0 = this.currentPoint.x;\n         const y0 = this.currentPoint.y;\n \n         this.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n \n         return this;\n \n     }\n \n     absellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n \n         const curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n \n         if ( this.curves.length > 0 ) {\n \n             // if a previous curve is present, attempt to join\n             const firstPoint = curve.getPoint( 0 );\n \n             if ( ! firstPoint.equals( this.currentPoint ) ) {\n \n                 this.lineTo( firstPoint.x, firstPoint.y );\n \n             }\n \n         }\n \n         this.curves.push( curve );\n \n         const lastPoint = curve.getPoint( 1 );\n         this.currentPoint.copy( lastPoint );\n \n         return this;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.currentPoint.copy( source.currentPoint );\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.currentPoint = this.currentPoint.toArray();\n \n         return data;\n \n     }\n \n     fromJSON( json ) {\n \n         super.fromJSON( json );\n \n         this.currentPoint.fromArray( json.currentPoint );\n \n         return this;\n \n     }\n \n }\n \n class LatheGeometry extends BufferGeometry {\n \n     constructor( points = [ new Vector2( 0, 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, - 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n \n         super();\n \n         this.type = 'LatheGeometry';\n \n         this.parameters = {\n             points: points,\n             segments: segments,\n             phiStart: phiStart,\n             phiLength: phiLength\n         };\n \n         segments = Math.floor( segments );\n \n         // clamp phiLength so it's in range of [ 0, 2PI ]\n \n         phiLength = clamp( phiLength, 0, Math.PI * 2 );\n \n         // buffers\n \n         const indices = [];\n         const vertices = [];\n         const uvs = [];\n         const initNormals = [];\n         const normals = [];\n \n         // helper variables\n \n         const inverseSegments = 1.0 / segments;\n         const vertex = new Vector3();\n         const uv = new Vector2();\n         const normal = new Vector3();\n         const curNormal = new Vector3();\n         const prevNormal = new Vector3();\n         let dx = 0;\n         let dy = 0;\n \n         // pre-compute normals for initial \"meridian\"\n \n         for ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n \n             switch ( j ) {\n \n                 case 0:\t\t\t\t// special handling for 1st vertex on path\n \n                     dx = points[ j + 1 ].x - points[ j ].x;\n                     dy = points[ j + 1 ].y - points[ j ].y;\n \n                     normal.x = dy * 1.0;\n                     normal.y = - dx;\n                     normal.z = dy * 0.0;\n \n                     prevNormal.copy( normal );\n \n                     normal.normalize();\n \n                     initNormals.push( normal.x, normal.y, normal.z );\n \n                     break;\n \n                 case ( points.length - 1 ):\t// special handling for last Vertex on path\n \n                     initNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n \n                     break;\n \n                 default:\t\t\t// default handling for all vertices in between\n \n                     dx = points[ j + 1 ].x - points[ j ].x;\n                     dy = points[ j + 1 ].y - points[ j ].y;\n \n                     normal.x = dy * 1.0;\n                     normal.y = - dx;\n                     normal.z = dy * 0.0;\n \n                     curNormal.copy( normal );\n \n                     normal.x += prevNormal.x;\n                     normal.y += prevNormal.y;\n                     normal.z += prevNormal.z;\n \n                     normal.normalize();\n \n                     initNormals.push( normal.x, normal.y, normal.z );\n \n                     prevNormal.copy( curNormal );\n \n             }\n \n         }\n \n         // generate vertices, uvs and normals\n \n         for ( let i = 0; i <= segments; i ++ ) {\n \n             const phi = phiStart + i * inverseSegments * phiLength;\n \n             const sin = Math.sin( phi );\n             const cos = Math.cos( phi );\n \n             for ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n \n                 // vertex\n \n                 vertex.x = points[ j ].x * sin;\n                 vertex.y = points[ j ].y;\n                 vertex.z = points[ j ].x * cos;\n \n                 vertices.push( vertex.x, vertex.y, vertex.z );\n \n                 // uv\n \n                 uv.x = i / segments;\n                 uv.y = j / ( points.length - 1 );\n \n                 uvs.push( uv.x, uv.y );\n \n                 // normal\n \n                 const x = initNormals[ 3 * j + 0 ] * sin;\n                 const y = initNormals[ 3 * j + 1 ];\n                 const z = initNormals[ 3 * j + 0 ] * cos;\n \n                 normals.push( x, y, z );\n \n             }\n \n         }\n \n         // indices\n \n         for ( let i = 0; i < segments; i ++ ) {\n \n             for ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n \n                 const base = j + i * points.length;\n \n                 const a = base;\n                 const b = base + points.length;\n                 const c = base + points.length + 1;\n                 const d = base + 1;\n \n                 // faces\n \n                 indices.push( a, b, d );\n                 indices.push( c, d, b );\n \n             }\n \n         }\n \n         // build geometry\n \n         this.setIndex( indices );\n         this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n         this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n \n     }\n \n     static fromJSON( data ) {\n \n         return new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n \n     }\n \n }\n \n class CapsuleGeometry extends LatheGeometry {\n \n     constructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n \n         const path = new Path();\n         path.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n         path.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n \n         super( path.getPoints( capSegments ), radialSegments );\n \n         this.type = 'CapsuleGeometry';\n \n         this.parameters = {\n             radius: radius,\n             height: length,\n             capSegments: capSegments,\n             radialSegments: radialSegments,\n         };\n \n     }\n \n     static fromJSON( data ) {\n \n         return new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n \n     }\n \n }\n \n class CircleGeometry extends BufferGeometry {\n \n     constructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n \n         super();\n \n         this.type = 'CircleGeometry';\n \n         this.parameters = {\n             radius: radius,\n             segments: segments,\n             thetaStart: thetaStart,\n             thetaLength: thetaLength\n         };\n \n         segments = Math.max( 3, segments );\n \n         // buffers\n \n         const indices = [];\n         const vertices = [];\n         const normals = [];\n         const uvs = [];\n \n         // helper variables\n \n         const vertex = new Vector3();\n         const uv = new Vector2();\n \n         // center point\n \n         vertices.push( 0, 0, 0 );\n         normals.push( 0, 0, 1 );\n         uvs.push( 0.5, 0.5 );\n \n         for ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n \n             const segment = thetaStart + s / segments * thetaLength;\n \n             // vertex\n \n             vertex.x = radius * Math.cos( segment );\n             vertex.y = radius * Math.sin( segment );\n \n             vertices.push( vertex.x, vertex.y, vertex.z );\n \n             // normal\n \n             normals.push( 0, 0, 1 );\n \n             // uvs\n \n             uv.x = ( vertices[ i ] / radius + 1 ) / 2;\n             uv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n \n             uvs.push( uv.x, uv.y );\n \n         }\n \n         // indices\n \n         for ( let i = 1; i <= segments; i ++ ) {\n \n             indices.push( i, i + 1, 0 );\n \n         }\n \n         // build geometry\n \n         this.setIndex( indices );\n         this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n         this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n     }\n \n     static fromJSON( data ) {\n \n         return new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n \n     }\n \n }\n \n class CylinderGeometry extends BufferGeometry {\n \n     constructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n \n         super();\n         this.type = 'CylinderGeometry';\n \n         this.parameters = {\n             radiusTop: radiusTop,\n             radiusBottom: radiusBottom,\n             height: height,\n             radialSegments: radialSegments,\n             heightSegments: heightSegments,\n             openEnded: openEnded,\n             thetaStart: thetaStart,\n             thetaLength: thetaLength\n         };\n \n         const scope = this;\n \n         radialSegments = Math.floor( radialSegments );\n         heightSegments = Math.floor( heightSegments );\n \n         // buffers\n \n         const indices = [];\n         const vertices = [];\n         const normals = [];\n         const uvs = [];\n \n         // helper variables\n \n         let index = 0;\n         const indexArray = [];\n         const halfHeight = height / 2;\n         let groupStart = 0;\n \n         // generate geometry\n \n         generateTorso();\n \n         if ( openEnded === false ) {\n \n             if ( radiusTop > 0 ) generateCap( true );\n             if ( radiusBottom > 0 ) generateCap( false );\n \n         }\n \n         // build geometry\n \n         this.setIndex( indices );\n         this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n         this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n         function generateTorso() {\n \n             const normal = new Vector3();\n             const vertex = new Vector3();\n \n             let groupCount = 0;\n \n             // this will be used to calculate the normal\n             const slope = ( radiusBottom - radiusTop ) / height;\n \n             // generate vertices, normals and uvs\n \n             for ( let y = 0; y <= heightSegments; y ++ ) {\n \n                 const indexRow = [];\n \n                 const v = y / heightSegments;\n \n                 // calculate the radius of the current row\n \n                 const radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n \n                 for ( let x = 0; x <= radialSegments; x ++ ) {\n \n                     const u = x / radialSegments;\n \n                     const theta = u * thetaLength + thetaStart;\n \n                     const sinTheta = Math.sin( theta );\n                     const cosTheta = Math.cos( theta );\n \n                     // vertex\n \n                     vertex.x = radius * sinTheta;\n                     vertex.y = - v * height + halfHeight;\n                     vertex.z = radius * cosTheta;\n                     vertices.push( vertex.x, vertex.y, vertex.z );\n \n                     // normal\n \n                     normal.set( sinTheta, slope, cosTheta ).normalize();\n                     normals.push( normal.x, normal.y, normal.z );\n \n                     // uv\n \n                     uvs.push( u, 1 - v );\n \n                     // save index of vertex in respective row\n \n                     indexRow.push( index ++ );\n \n                 }\n \n                 // now save vertices of the row in our index array\n \n                 indexArray.push( indexRow );\n \n             }\n \n             // generate indices\n \n             for ( let x = 0; x < radialSegments; x ++ ) {\n \n                 for ( let y = 0; y < heightSegments; y ++ ) {\n \n                     // we use the index array to access the correct indices\n \n                     const a = indexArray[ y ][ x ];\n                     const b = indexArray[ y + 1 ][ x ];\n                     const c = indexArray[ y + 1 ][ x + 1 ];\n                     const d = indexArray[ y ][ x + 1 ];\n \n                     // faces\n \n                     indices.push( a, b, d );\n                     indices.push( b, c, d );\n \n                     // update group counter\n \n                     groupCount += 6;\n \n                 }\n \n             }\n \n             // add a group to the geometry. this will ensure multi material support\n \n             scope.addGroup( groupStart, groupCount, 0 );\n \n             // calculate new start value for groups\n \n             groupStart += groupCount;\n \n         }\n \n         function generateCap( top ) {\n \n             // save the index of the first center vertex\n             const centerIndexStart = index;\n \n             const uv = new Vector2();\n             const vertex = new Vector3();\n \n             let groupCount = 0;\n \n             const radius = ( top === true ) ? radiusTop : radiusBottom;\n             const sign = ( top === true ) ? 1 : - 1;\n \n             // first we generate the center vertex data of the cap.\n             // because the geometry needs one set of uvs per face,\n             // we must generate a center vertex per face/segment\n \n             for ( let x = 1; x <= radialSegments; x ++ ) {\n \n                 // vertex\n \n                 vertices.push( 0, halfHeight * sign, 0 );\n \n                 // normal\n \n                 normals.push( 0, sign, 0 );\n \n                 // uv\n \n                 uvs.push( 0.5, 0.5 );\n \n                 // increase index\n \n                 index ++;\n \n             }\n \n             // save the index of the last center vertex\n             const centerIndexEnd = index;\n \n             // now we generate the surrounding vertices, normals and uvs\n \n             for ( let x = 0; x <= radialSegments; x ++ ) {\n \n                 const u = x / radialSegments;\n                 const theta = u * thetaLength + thetaStart;\n \n                 const cosTheta = Math.cos( theta );\n                 const sinTheta = Math.sin( theta );\n \n                 // vertex\n \n                 vertex.x = radius * sinTheta;\n                 vertex.y = halfHeight * sign;\n                 vertex.z = radius * cosTheta;\n                 vertices.push( vertex.x, vertex.y, vertex.z );\n \n                 // normal\n \n                 normals.push( 0, sign, 0 );\n \n                 // uv\n \n                 uv.x = ( cosTheta * 0.5 ) + 0.5;\n                 uv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n                 uvs.push( uv.x, uv.y );\n \n                 // increase index\n \n                 index ++;\n \n             }\n \n             // generate indices\n \n             for ( let x = 0; x < radialSegments; x ++ ) {\n \n                 const c = centerIndexStart + x;\n                 const i = centerIndexEnd + x;\n \n                 if ( top === true ) {\n \n                     // face top\n \n                     indices.push( i, i + 1, c );\n \n                 } else {\n \n                     // face bottom\n \n                     indices.push( i + 1, i, c );\n \n                 }\n \n                 groupCount += 3;\n \n             }\n \n             // add a group to the geometry. this will ensure multi material support\n \n             scope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n \n             // calculate new start value for groups\n \n             groupStart += groupCount;\n \n         }\n \n     }\n \n     static fromJSON( data ) {\n \n         return new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n \n     }\n \n }\n \n class ConeGeometry extends CylinderGeometry {\n \n     constructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n \n         super( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n \n         this.type = 'ConeGeometry';\n \n         this.parameters = {\n             radius: radius,\n             height: height,\n             radialSegments: radialSegments,\n             heightSegments: heightSegments,\n             openEnded: openEnded,\n             thetaStart: thetaStart,\n             thetaLength: thetaLength\n         };\n \n     }\n \n     static fromJSON( data ) {\n \n         return new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n \n     }\n \n }\n \n class PolyhedronGeometry extends BufferGeometry {\n \n     constructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n \n         super();\n \n         this.type = 'PolyhedronGeometry';\n \n         this.parameters = {\n             vertices: vertices,\n             indices: indices,\n             radius: radius,\n             detail: detail\n         };\n \n         // default buffer data\n \n         const vertexBuffer = [];\n         const uvBuffer = [];\n \n         // the subdivision creates the vertex buffer data\n \n         subdivide( detail );\n \n         // all vertices should lie on a conceptual sphere with a given radius\n \n         applyRadius( radius );\n \n         // finally, create the uv data\n \n         generateUVs();\n \n         // build non-indexed geometry\n \n         this.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n         this.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n         this.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n \n         if ( detail === 0 ) {\n \n             this.computeVertexNormals(); // flat normals\n \n         } else {\n \n             this.normalizeNormals(); // smooth normals\n \n         }\n \n         // helper functions\n \n         function subdivide( detail ) {\n \n             const a = new Vector3();\n             const b = new Vector3();\n             const c = new Vector3();\n \n             // iterate over all faces and apply a subdivison with the given detail value\n \n             for ( let i = 0; i < indices.length; i += 3 ) {\n \n                 // get the vertices of the face\n \n                 getVertexByIndex( indices[ i + 0 ], a );\n                 getVertexByIndex( indices[ i + 1 ], b );\n                 getVertexByIndex( indices[ i + 2 ], c );\n \n                 // perform subdivision\n \n                 subdivideFace( a, b, c, detail );\n \n             }\n \n         }\n \n         function subdivideFace( a, b, c, detail ) {\n \n             const cols = detail + 1;\n \n             // we use this multidimensional array as a data structure for creating the subdivision\n \n             const v = [];\n \n             // construct all of the vertices for this subdivision\n \n             for ( let i = 0; i <= cols; i ++ ) {\n \n                 v[ i ] = [];\n \n                 const aj = a.clone().lerp( c, i / cols );\n                 const bj = b.clone().lerp( c, i / cols );\n \n                 const rows = cols - i;\n \n                 for ( let j = 0; j <= rows; j ++ ) {\n \n                     if ( j === 0 && i === cols ) {\n \n                         v[ i ][ j ] = aj;\n \n                     } else {\n \n                         v[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n \n                     }\n \n                 }\n \n             }\n \n             // construct all of the faces\n \n             for ( let i = 0; i < cols; i ++ ) {\n \n                 for ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n \n                     const k = Math.floor( j / 2 );\n \n                     if ( j % 2 === 0 ) {\n \n                         pushVertex( v[ i ][ k + 1 ] );\n                         pushVertex( v[ i + 1 ][ k ] );\n                         pushVertex( v[ i ][ k ] );\n \n                     } else {\n \n                         pushVertex( v[ i ][ k + 1 ] );\n                         pushVertex( v[ i + 1 ][ k + 1 ] );\n                         pushVertex( v[ i + 1 ][ k ] );\n \n                     }\n \n                 }\n \n             }\n \n         }\n \n         function applyRadius( radius ) {\n \n             const vertex = new Vector3();\n \n             // iterate over the entire buffer and apply the radius to each vertex\n \n             for ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n \n                 vertex.x = vertexBuffer[ i + 0 ];\n                 vertex.y = vertexBuffer[ i + 1 ];\n                 vertex.z = vertexBuffer[ i + 2 ];\n \n                 vertex.normalize().multiplyScalar( radius );\n \n                 vertexBuffer[ i + 0 ] = vertex.x;\n                 vertexBuffer[ i + 1 ] = vertex.y;\n                 vertexBuffer[ i + 2 ] = vertex.z;\n \n             }\n \n         }\n \n         function generateUVs() {\n \n             const vertex = new Vector3();\n \n             for ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n \n                 vertex.x = vertexBuffer[ i + 0 ];\n                 vertex.y = vertexBuffer[ i + 1 ];\n                 vertex.z = vertexBuffer[ i + 2 ];\n \n                 const u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n                 const v = inclination( vertex ) / Math.PI + 0.5;\n                 uvBuffer.push( u, 1 - v );\n \n             }\n \n             correctUVs();\n \n             correctSeam();\n \n         }\n \n         function correctSeam() {\n \n             // handle case when face straddles the seam, see #3269\n \n             for ( let i = 0; i < uvBuffer.length; i += 6 ) {\n \n                 // uv data of a single face\n \n                 const x0 = uvBuffer[ i + 0 ];\n                 const x1 = uvBuffer[ i + 2 ];\n                 const x2 = uvBuffer[ i + 4 ];\n \n                 const max = Math.max( x0, x1, x2 );\n                 const min = Math.min( x0, x1, x2 );\n \n                 // 0.9 is somewhat arbitrary\n \n                 if ( max > 0.9 && min < 0.1 ) {\n \n                     if ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n                     if ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n                     if ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n \n                 }\n \n             }\n \n         }\n \n         function pushVertex( vertex ) {\n \n             vertexBuffer.push( vertex.x, vertex.y, vertex.z );\n \n         }\n \n         function getVertexByIndex( index, vertex ) {\n \n             const stride = index * 3;\n \n             vertex.x = vertices[ stride + 0 ];\n             vertex.y = vertices[ stride + 1 ];\n             vertex.z = vertices[ stride + 2 ];\n \n         }\n \n         function correctUVs() {\n \n             const a = new Vector3();\n             const b = new Vector3();\n             const c = new Vector3();\n \n             const centroid = new Vector3();\n \n             const uvA = new Vector2();\n             const uvB = new Vector2();\n             const uvC = new Vector2();\n \n             for ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n \n                 a.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n                 b.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n                 c.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n \n                 uvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n                 uvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n                 uvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n \n                 centroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n \n                 const azi = azimuth( centroid );\n \n                 correctUV( uvA, j + 0, a, azi );\n                 correctUV( uvB, j + 2, b, azi );\n                 correctUV( uvC, j + 4, c, azi );\n \n             }\n \n         }\n \n         function correctUV( uv, stride, vector, azimuth ) {\n \n             if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n \n                 uvBuffer[ stride ] = uv.x - 1;\n \n             }\n \n             if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n \n                 uvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n \n             }\n \n         }\n \n         // Angle around the Y axis, counter-clockwise when looking from above.\n \n         function azimuth( vector ) {\n \n             return Math.atan2( vector.z, - vector.x );\n \n         }\n \n \n         // Angle above the XZ plane.\n \n         function inclination( vector ) {\n \n             return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n \n         }\n \n     }\n \n     static fromJSON( data ) {\n \n         return new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n \n     }\n \n }\n \n class DodecahedronGeometry extends PolyhedronGeometry {\n \n     constructor( radius = 1, detail = 0 ) {\n \n         const t = ( 1 + Math.sqrt( 5 ) ) / 2;\n         const r = 1 / t;\n \n         const vertices = [\n \n             // (±1, ±1, ±1)\n             - 1, - 1, - 1,\t- 1, - 1, 1,\n             - 1, 1, - 1, - 1, 1, 1,\n             1, - 1, - 1, 1, - 1, 1,\n             1, 1, - 1, 1, 1, 1,\n \n             // (0, ±1/φ, ±φ)\n             0, - r, - t, 0, - r, t,\n             0, r, - t, 0, r, t,\n \n             // (±1/φ, ±φ, 0)\n             - r, - t, 0, - r, t, 0,\n             r, - t, 0, r, t, 0,\n \n             // (±φ, 0, ±1/φ)\n             - t, 0, - r, t, 0, - r,\n             - t, 0, r, t, 0, r\n         ];\n \n         const indices = [\n             3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n             7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n             17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n             8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n             0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n             6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n             2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n             18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n             4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n             11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n             19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n             1, 12, 14, \t1, 14, 5, \t1, 5, 9\n         ];\n \n         super( vertices, indices, radius, detail );\n \n         this.type = 'DodecahedronGeometry';\n \n         this.parameters = {\n             radius: radius,\n             detail: detail\n         };\n \n     }\n \n     static fromJSON( data ) {\n \n         return new DodecahedronGeometry( data.radius, data.detail );\n \n     }\n \n }\n \n const _v0 = new Vector3();\n const _v1$1 = new Vector3();\n const _normal = new Vector3();\n const _triangle = new Triangle();\n \n class EdgesGeometry extends BufferGeometry {\n \n     constructor( geometry = null, thresholdAngle = 1 ) {\n \n         super();\n         this.type = 'EdgesGeometry';\n \n         this.parameters = {\n             geometry: geometry,\n             thresholdAngle: thresholdAngle\n         };\n \n         if ( geometry !== null ) {\n \n             const precisionPoints = 4;\n             const precision = Math.pow( 10, precisionPoints );\n             const thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n \n             const indexAttr = geometry.getIndex();\n             const positionAttr = geometry.getAttribute( 'position' );\n             const indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n \n             const indexArr = [ 0, 0, 0 ];\n             const vertKeys = [ 'a', 'b', 'c' ];\n             const hashes = new Array( 3 );\n \n             const edgeData = {};\n             const vertices = [];\n             for ( let i = 0; i < indexCount; i += 3 ) {\n \n                 if ( indexAttr ) {\n \n                     indexArr[ 0 ] = indexAttr.getX( i );\n                     indexArr[ 1 ] = indexAttr.getX( i + 1 );\n                     indexArr[ 2 ] = indexAttr.getX( i + 2 );\n \n                 } else {\n \n                     indexArr[ 0 ] = i;\n                     indexArr[ 1 ] = i + 1;\n                     indexArr[ 2 ] = i + 2;\n \n                 }\n \n                 const { a, b, c } = _triangle;\n                 a.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n                 b.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n                 c.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n                 _triangle.getNormal( _normal );\n \n                 // create hashes for the edge from the vertices\n                 hashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n                 hashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n                 hashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n \n                 // skip degenerate triangles\n                 if ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n \n                     continue;\n \n                 }\n \n                 // iterate over every edge\n                 for ( let j = 0; j < 3; j ++ ) {\n \n                     // get the first and next vertex making up the edge\n                     const jNext = ( j + 1 ) % 3;\n                     const vecHash0 = hashes[ j ];\n                     const vecHash1 = hashes[ jNext ];\n                     const v0 = _triangle[ vertKeys[ j ] ];\n                     const v1 = _triangle[ vertKeys[ jNext ] ];\n \n                     const hash = `${ vecHash0 }_${ vecHash1 }`;\n                     const reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n \n                     if ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n \n                         // if we found a sibling edge add it into the vertex array if\n                         // it meets the angle threshold and delete the edge from the map.\n                         if ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n \n                             vertices.push( v0.x, v0.y, v0.z );\n                             vertices.push( v1.x, v1.y, v1.z );\n \n                         }\n \n                         edgeData[ reverseHash ] = null;\n \n                     } else if ( ! ( hash in edgeData ) ) {\n \n                         // if we've already got an edge here then skip adding a new one\n                         edgeData[ hash ] = {\n \n                             index0: indexArr[ j ],\n                             index1: indexArr[ jNext ],\n                             normal: _normal.clone(),\n \n                         };\n \n                     }\n \n                 }\n \n             }\n \n             // iterate over all remaining, unmatched edges and add them to the vertex array\n             for ( const key in edgeData ) {\n \n                 if ( edgeData[ key ] ) {\n \n                     const { index0, index1 } = edgeData[ key ];\n                     _v0.fromBufferAttribute( positionAttr, index0 );\n                     _v1$1.fromBufferAttribute( positionAttr, index1 );\n \n                     vertices.push( _v0.x, _v0.y, _v0.z );\n                     vertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n \n                 }\n \n             }\n \n             this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n \n         }\n \n     }\n \n }\n \n class Shape extends Path {\n \n     constructor( points ) {\n \n         super( points );\n \n         this.uuid = generateUUID();\n \n         this.type = 'Shape';\n \n         this.holes = [];\n \n     }\n \n     getPointsHoles( divisions ) {\n \n         const holesPts = [];\n \n         for ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n \n             holesPts[ i ] = this.holes[ i ].getPoints( divisions );\n \n         }\n \n         return holesPts;\n \n     }\n \n     // get points of shape and holes (keypoints based on segments parameter)\n \n     extractPoints( divisions ) {\n \n         return {\n \n             shape: this.getPoints( divisions ),\n             holes: this.getPointsHoles( divisions )\n \n         };\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.holes = [];\n \n         for ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n \n             const hole = source.holes[ i ];\n \n             this.holes.push( hole.clone() );\n \n         }\n \n         return this;\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.uuid = this.uuid;\n         data.holes = [];\n \n         for ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n \n             const hole = this.holes[ i ];\n             data.holes.push( hole.toJSON() );\n \n         }\n \n         return data;\n \n     }\n \n     fromJSON( json ) {\n \n         super.fromJSON( json );\n \n         this.uuid = json.uuid;\n         this.holes = [];\n \n         for ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n \n             const hole = json.holes[ i ];\n             this.holes.push( new Path().fromJSON( hole ) );\n \n         }\n \n         return this;\n \n     }\n \n }\n \n /**\n  * Port from https://github.com/mapbox/earcut (v2.2.2)\n  */\n \n const Earcut = {\n \n     triangulate: function ( data, holeIndices, dim = 2 ) {\n \n         const hasHoles = holeIndices && holeIndices.length;\n         const outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n         let outerNode = linkedList( data, 0, outerLen, dim, true );\n         const triangles = [];\n \n         if ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n \n         let minX, minY, maxX, maxY, x, y, invSize;\n \n         if ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n \n         // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n         if ( data.length > 80 * dim ) {\n \n             minX = maxX = data[ 0 ];\n             minY = maxY = data[ 1 ];\n \n             for ( let i = dim; i < outerLen; i += dim ) {\n \n                 x = data[ i ];\n                 y = data[ i + 1 ];\n                 if ( x < minX ) minX = x;\n                 if ( y < minY ) minY = y;\n                 if ( x > maxX ) maxX = x;\n                 if ( y > maxY ) maxY = y;\n \n             }\n \n             // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n             invSize = Math.max( maxX - minX, maxY - minY );\n             invSize = invSize !== 0 ? 1 / invSize : 0;\n \n         }\n \n         earcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n \n         return triangles;\n \n     }\n \n };\n \n // create a circular doubly linked list from polygon points in the specified winding order\n function linkedList( data, start, end, dim, clockwise ) {\n \n     let i, last;\n \n     if ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n \n         for ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n \n     } else {\n \n         for ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n \n     }\n \n     if ( last && equals( last, last.next ) ) {\n \n         removeNode( last );\n         last = last.next;\n \n     }\n \n     return last;\n \n }\n \n // eliminate colinear or duplicate points\n function filterPoints( start, end ) {\n \n     if ( ! start ) return start;\n     if ( ! end ) end = start;\n \n     let p = start,\n         again;\n     do {\n \n         again = false;\n \n         if ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n \n             removeNode( p );\n             p = end = p.prev;\n             if ( p === p.next ) break;\n             again = true;\n \n         } else {\n \n             p = p.next;\n \n         }\n \n     } while ( again || p !== end );\n \n     return end;\n \n }\n \n // main ear slicing loop which triangulates a polygon (given as a linked list)\n function earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n \n     if ( ! ear ) return;\n \n     // interlink polygon nodes in z-order\n     if ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n \n     let stop = ear,\n         prev, next;\n \n     // iterate through ears, slicing them one by one\n     while ( ear.prev !== ear.next ) {\n \n         prev = ear.prev;\n         next = ear.next;\n \n         if ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n \n             // cut off the triangle\n             triangles.push( prev.i / dim );\n             triangles.push( ear.i / dim );\n             triangles.push( next.i / dim );\n \n             removeNode( ear );\n \n             // skipping the next vertex leads to less sliver triangles\n             ear = next.next;\n             stop = next.next;\n \n             continue;\n \n         }\n \n         ear = next;\n \n         // if we looped through the whole remaining polygon and can't find any more ears\n         if ( ear === stop ) {\n \n             // try filtering points and slicing again\n             if ( ! pass ) {\n \n                 earcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n \n                 // if this didn't work, try curing all small self-intersections locally\n \n             } else if ( pass === 1 ) {\n \n                 ear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n                 earcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n \n                 // as a last resort, try splitting the remaining polygon into two\n \n             } else if ( pass === 2 ) {\n \n                 splitEarcut( ear, triangles, dim, minX, minY, invSize );\n \n             }\n \n             break;\n \n         }\n \n     }\n \n }\n \n // check whether a polygon node forms a valid ear with adjacent nodes\n function isEar( ear ) {\n \n     const a = ear.prev,\n         b = ear,\n         c = ear.next;\n \n     if ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n \n     // now make sure we don't have other points inside the potential ear\n     let p = ear.next.next;\n \n     while ( p !== ear.prev ) {\n \n         if ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n             area( p.prev, p, p.next ) >= 0 ) return false;\n         p = p.next;\n \n     }\n \n     return true;\n \n }\n \n function isEarHashed( ear, minX, minY, invSize ) {\n \n     const a = ear.prev,\n         b = ear,\n         c = ear.next;\n \n     if ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n \n     // triangle bbox; min & max are calculated like this for speed\n     const minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n         minTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n         maxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n         maxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n \n     // z-order range for the current triangle bbox;\n     const minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n         maxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n \n     let p = ear.prevZ,\n         n = ear.nextZ;\n \n     // look for points inside the triangle in both directions\n     while ( p && p.z >= minZ && n && n.z <= maxZ ) {\n \n         if ( p !== ear.prev && p !== ear.next &&\n             pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n             area( p.prev, p, p.next ) >= 0 ) return false;\n         p = p.prevZ;\n \n         if ( n !== ear.prev && n !== ear.next &&\n             pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n             area( n.prev, n, n.next ) >= 0 ) return false;\n         n = n.nextZ;\n \n     }\n \n     // look for remaining points in decreasing z-order\n     while ( p && p.z >= minZ ) {\n \n         if ( p !== ear.prev && p !== ear.next &&\n             pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n             area( p.prev, p, p.next ) >= 0 ) return false;\n         p = p.prevZ;\n \n     }\n \n     // look for remaining points in increasing z-order\n     while ( n && n.z <= maxZ ) {\n \n         if ( n !== ear.prev && n !== ear.next &&\n             pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n             area( n.prev, n, n.next ) >= 0 ) return false;\n         n = n.nextZ;\n \n     }\n \n     return true;\n \n }\n \n // go through all polygon nodes and cure small local self-intersections\n function cureLocalIntersections( start, triangles, dim ) {\n \n     let p = start;\n     do {\n \n         const a = p.prev,\n             b = p.next.next;\n \n         if ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n \n             triangles.push( a.i / dim );\n             triangles.push( p.i / dim );\n             triangles.push( b.i / dim );\n \n             // remove two nodes involved\n             removeNode( p );\n             removeNode( p.next );\n \n             p = start = b;\n \n         }\n \n         p = p.next;\n \n     } while ( p !== start );\n \n     return filterPoints( p );\n \n }\n \n // try splitting polygon into two and triangulate them independently\n function splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n \n     // look for a valid diagonal that divides the polygon into two\n     let a = start;\n     do {\n \n         let b = a.next.next;\n         while ( b !== a.prev ) {\n \n             if ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n \n                 // split the polygon in two by the diagonal\n                 let c = splitPolygon( a, b );\n \n                 // filter colinear points around the cuts\n                 a = filterPoints( a, a.next );\n                 c = filterPoints( c, c.next );\n \n                 // run earcut on each half\n                 earcutLinked( a, triangles, dim, minX, minY, invSize );\n                 earcutLinked( c, triangles, dim, minX, minY, invSize );\n                 return;\n \n             }\n \n             b = b.next;\n \n         }\n \n         a = a.next;\n \n     } while ( a !== start );\n \n }\n \n // link every hole into the outer loop, producing a single-ring polygon without holes\n function eliminateHoles( data, holeIndices, outerNode, dim ) {\n \n     const queue = [];\n     let i, len, start, end, list;\n \n     for ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n \n         start = holeIndices[ i ] * dim;\n         end = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n         list = linkedList( data, start, end, dim, false );\n         if ( list === list.next ) list.steiner = true;\n         queue.push( getLeftmost( list ) );\n \n     }\n \n     queue.sort( compareX );\n \n     // process holes from left to right\n     for ( i = 0; i < queue.length; i ++ ) {\n \n         eliminateHole( queue[ i ], outerNode );\n         outerNode = filterPoints( outerNode, outerNode.next );\n \n     }\n \n     return outerNode;\n \n }\n \n function compareX( a, b ) {\n \n     return a.x - b.x;\n \n }\n \n // find a bridge between vertices that connects hole with an outer ring and link it\n function eliminateHole( hole, outerNode ) {\n \n     outerNode = findHoleBridge( hole, outerNode );\n     if ( outerNode ) {\n \n         const b = splitPolygon( outerNode, hole );\n \n         // filter collinear points around the cuts\n         filterPoints( outerNode, outerNode.next );\n         filterPoints( b, b.next );\n \n     }\n \n }\n \n // David Eberly's algorithm for finding a bridge between hole and outer polygon\n function findHoleBridge( hole, outerNode ) {\n \n     let p = outerNode;\n     const hx = hole.x;\n     const hy = hole.y;\n     let qx = - Infinity, m;\n \n     // find a segment intersected by a ray from the hole's leftmost point to the left;\n     // segment's endpoint with lesser x will be potential connection point\n     do {\n \n         if ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n \n             const x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n             if ( x <= hx && x > qx ) {\n \n                 qx = x;\n                 if ( x === hx ) {\n \n                     if ( hy === p.y ) return p;\n                     if ( hy === p.next.y ) return p.next;\n \n                 }\n \n                 m = p.x < p.next.x ? p : p.next;\n \n             }\n \n         }\n \n         p = p.next;\n \n     } while ( p !== outerNode );\n \n     if ( ! m ) return null;\n \n     if ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n \n     // look for points inside the triangle of hole point, segment intersection and endpoint;\n     // if there are no points found, we have a valid connection;\n     // otherwise choose the point of the minimum angle with the ray as connection point\n \n     const stop = m,\n         mx = m.x,\n         my = m.y;\n     let tanMin = Infinity, tan;\n \n     p = m;\n \n     do {\n \n         if ( hx >= p.x && p.x >= mx && hx !== p.x &&\n                 pointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n \n             tan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n \n             if ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n \n                 m = p;\n                 tanMin = tan;\n \n             }\n \n         }\n \n         p = p.next;\n \n     } while ( p !== stop );\n \n     return m;\n \n }\n \n // whether sector in vertex m contains sector in vertex p in the same coordinates\n function sectorContainsSector( m, p ) {\n \n     return area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n \n }\n \n // interlink polygon nodes in z-order\n function indexCurve( start, minX, minY, invSize ) {\n \n     let p = start;\n     do {\n \n         if ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n         p.prevZ = p.prev;\n         p.nextZ = p.next;\n         p = p.next;\n \n     } while ( p !== start );\n \n     p.prevZ.nextZ = null;\n     p.prevZ = null;\n \n     sortLinked( p );\n \n }\n \n // Simon Tatham's linked list merge sort algorithm\n // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n function sortLinked( list ) {\n \n     let i, p, q, e, tail, numMerges, pSize, qSize,\n         inSize = 1;\n \n     do {\n \n         p = list;\n         list = null;\n         tail = null;\n         numMerges = 0;\n \n         while ( p ) {\n \n             numMerges ++;\n             q = p;\n             pSize = 0;\n             for ( i = 0; i < inSize; i ++ ) {\n \n                 pSize ++;\n                 q = q.nextZ;\n                 if ( ! q ) break;\n \n             }\n \n             qSize = inSize;\n \n             while ( pSize > 0 || ( qSize > 0 && q ) ) {\n \n                 if ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n \n                     e = p;\n                     p = p.nextZ;\n                     pSize --;\n \n                 } else {\n \n                     e = q;\n                     q = q.nextZ;\n                     qSize --;\n \n                 }\n \n                 if ( tail ) tail.nextZ = e;\n                 else list = e;\n \n                 e.prevZ = tail;\n                 tail = e;\n \n             }\n \n             p = q;\n \n         }\n \n         tail.nextZ = null;\n         inSize *= 2;\n \n     } while ( numMerges > 1 );\n \n     return list;\n \n }\n \n // z-order of a point given coords and inverse of the longer side of data bbox\n function zOrder( x, y, minX, minY, invSize ) {\n \n     // coords are transformed into non-negative 15-bit integer range\n     x = 32767 * ( x - minX ) * invSize;\n     y = 32767 * ( y - minY ) * invSize;\n \n     x = ( x | ( x << 8 ) ) & 0x00FF00FF;\n     x = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n     x = ( x | ( x << 2 ) ) & 0x33333333;\n     x = ( x | ( x << 1 ) ) & 0x55555555;\n \n     y = ( y | ( y << 8 ) ) & 0x00FF00FF;\n     y = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n     y = ( y | ( y << 2 ) ) & 0x33333333;\n     y = ( y | ( y << 1 ) ) & 0x55555555;\n \n     return x | ( y << 1 );\n \n }\n \n // find the leftmost node of a polygon ring\n function getLeftmost( start ) {\n \n     let p = start,\n         leftmost = start;\n     do {\n \n         if ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n         p = p.next;\n \n     } while ( p !== start );\n \n     return leftmost;\n \n }\n \n // check if a point lies within a convex triangle\n function pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n \n     return ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n             ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n             ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n \n }\n \n // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n function isValidDiagonal( a, b ) {\n \n     return a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n         ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n         ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n         equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n \n }\n \n // signed area of a triangle\n function area( p, q, r ) {\n \n     return ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n \n }\n \n // check if two points are equal\n function equals( p1, p2 ) {\n \n     return p1.x === p2.x && p1.y === p2.y;\n \n }\n \n // check if two segments intersect\n function intersects( p1, q1, p2, q2 ) {\n \n     const o1 = sign( area( p1, q1, p2 ) );\n     const o2 = sign( area( p1, q1, q2 ) );\n     const o3 = sign( area( p2, q2, p1 ) );\n     const o4 = sign( area( p2, q2, q1 ) );\n \n     if ( o1 !== o2 && o3 !== o4 ) return true; // general case\n \n     if ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n     if ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n     if ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n     if ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n \n     return false;\n \n }\n \n // for collinear points p, q, r, check if point q lies on segment pr\n function onSegment( p, q, r ) {\n \n     return q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n \n }\n \n function sign( num ) {\n \n     return num > 0 ? 1 : num < 0 ? - 1 : 0;\n \n }\n \n // check if a polygon diagonal intersects any polygon segments\n function intersectsPolygon( a, b ) {\n \n     let p = a;\n     do {\n \n         if ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                 intersects( p, p.next, a, b ) ) return true;\n         p = p.next;\n \n     } while ( p !== a );\n \n     return false;\n \n }\n \n // check if a polygon diagonal is locally inside the polygon\n function locallyInside( a, b ) {\n \n     return area( a.prev, a, a.next ) < 0 ?\n         area( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n         area( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n \n }\n \n // check if the middle point of a polygon diagonal is inside the polygon\n function middleInside( a, b ) {\n \n     let p = a,\n         inside = false;\n     const px = ( a.x + b.x ) / 2,\n         py = ( a.y + b.y ) / 2;\n     do {\n \n         if ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n                 ( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n             inside = ! inside;\n         p = p.next;\n \n     } while ( p !== a );\n \n     return inside;\n \n }\n \n // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n // if one belongs to the outer ring and another to a hole, it merges it into a single ring\n function splitPolygon( a, b ) {\n \n     const a2 = new Node( a.i, a.x, a.y ),\n         b2 = new Node( b.i, b.x, b.y ),\n         an = a.next,\n         bp = b.prev;\n \n     a.next = b;\n     b.prev = a;\n \n     a2.next = an;\n     an.prev = a2;\n \n     b2.next = a2;\n     a2.prev = b2;\n \n     bp.next = b2;\n     b2.prev = bp;\n \n     return b2;\n \n }\n \n // create a node and optionally link it with previous one (in a circular doubly linked list)\n function insertNode( i, x, y, last ) {\n \n     const p = new Node( i, x, y );\n \n     if ( ! last ) {\n \n         p.prev = p;\n         p.next = p;\n \n     } else {\n \n         p.next = last.next;\n         p.prev = last;\n         last.next.prev = p;\n         last.next = p;\n \n     }\n \n     return p;\n \n }\n \n function removeNode( p ) {\n \n     p.next.prev = p.prev;\n     p.prev.next = p.next;\n \n     if ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n     if ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n \n }\n \n function Node( i, x, y ) {\n \n     // vertex index in coordinates array\n     this.i = i;\n \n     // vertex coordinates\n     this.x = x;\n     this.y = y;\n \n     // previous and next vertex nodes in a polygon ring\n     this.prev = null;\n     this.next = null;\n \n     // z-order curve value\n     this.z = null;\n \n     // previous and next nodes in z-order\n     this.prevZ = null;\n     this.nextZ = null;\n \n     // indicates whether this is a steiner point\n     this.steiner = false;\n \n }\n \n function signedArea( data, start, end, dim ) {\n \n     let sum = 0;\n     for ( let i = start, j = end - dim; i < end; i += dim ) {\n \n         sum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n         j = i;\n \n     }\n \n     return sum;\n \n }\n \n class ShapeUtils {\n \n     // calculate area of the contour polygon\n \n     static area( contour ) {\n \n         const n = contour.length;\n         let a = 0.0;\n \n         for ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n \n             a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n \n         }\n \n         return a * 0.5;\n \n     }\n \n     static isClockWise( pts ) {\n \n         return ShapeUtils.area( pts ) < 0;\n \n     }\n \n     static triangulateShape( contour, holes ) {\n \n         const vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n         const holeIndices = []; // array of hole indices\n         const faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n \n         removeDupEndPts( contour );\n         addContour( vertices, contour );\n \n         //\n \n         let holeIndex = contour.length;\n \n         holes.forEach( removeDupEndPts );\n \n         for ( let i = 0; i < holes.length; i ++ ) {\n \n             holeIndices.push( holeIndex );\n             holeIndex += holes[ i ].length;\n             addContour( vertices, holes[ i ] );\n \n         }\n \n         //\n \n         const triangles = Earcut.triangulate( vertices, holeIndices );\n \n         //\n \n         for ( let i = 0; i < triangles.length; i += 3 ) {\n \n             faces.push( triangles.slice( i, i + 3 ) );\n \n         }\n \n         return faces;\n \n     }\n \n }\n \n function removeDupEndPts( points ) {\n \n     const l = points.length;\n \n     if ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n \n         points.pop();\n \n     }\n \n }\n \n function addContour( vertices, contour ) {\n \n     for ( let i = 0; i < contour.length; i ++ ) {\n \n         vertices.push( contour[ i ].x );\n         vertices.push( contour[ i ].y );\n \n     }\n \n }\n \n /**\n  * Creates extruded geometry from a path shape.\n  *\n  * parameters = {\n  *\n  *  curveSegments: <int>, // number of points on the curves\n  *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n  *  depth: <float>, // Depth to extrude the shape\n  *\n  *  bevelEnabled: <bool>, // turn on bevel\n  *  bevelThickness: <float>, // how deep into the original shape bevel goes\n  *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n  *  bevelOffset: <float>, // how far from shape outline does bevel start\n  *  bevelSegments: <int>, // number of bevel layers\n  *\n  *  extrudePath: <THREE.Curve> // curve to extrude shape along\n  *\n  *  UVGenerator: <Object> // object that provides UV generator functions\n  *\n  * }\n  */\n \n class ExtrudeGeometry extends BufferGeometry {\n \n     constructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n \n         super();\n \n         this.type = 'ExtrudeGeometry';\n \n         this.parameters = {\n             shapes: shapes,\n             options: options\n         };\n \n         shapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n \n         const scope = this;\n \n         const verticesArray = [];\n         const uvArray = [];\n \n         for ( let i = 0, l = shapes.length; i < l; i ++ ) {\n \n             const shape = shapes[ i ];\n             addShape( shape );\n \n         }\n \n         // build geometry\n \n         this.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n         this.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n \n         this.computeVertexNormals();\n \n         // functions\n \n         function addShape( shape ) {\n \n             const placeholder = [];\n \n             // options\n \n             const curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n             const steps = options.steps !== undefined ? options.steps : 1;\n             let depth = options.depth !== undefined ? options.depth : 1;\n \n             let bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n             let bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n             let bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n             let bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n             let bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n \n             const extrudePath = options.extrudePath;\n \n             const uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n \n             // deprecated options\n \n             if ( options.amount !== undefined ) {\n \n                 console.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n                 depth = options.amount;\n \n             }\n \n             //\n \n             let extrudePts, extrudeByPath = false;\n             let splineTube, binormal, normal, position2;\n \n             if ( extrudePath ) {\n \n                 extrudePts = extrudePath.getSpacedPoints( steps );\n \n                 extrudeByPath = true;\n                 bevelEnabled = false; // bevels not supported for path extrusion\n \n                 // SETUP TNB variables\n \n                 // TODO1 - have a .isClosed in spline?\n \n                 splineTube = extrudePath.computeFrenetFrames( steps, false );\n \n                 // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n \n                 binormal = new Vector3();\n                 normal = new Vector3();\n                 position2 = new Vector3();\n \n             }\n \n             // Safeguards if bevels are not enabled\n \n             if ( ! bevelEnabled ) {\n \n                 bevelSegments = 0;\n                 bevelThickness = 0;\n                 bevelSize = 0;\n                 bevelOffset = 0;\n \n             }\n \n             // Variables initialization\n \n             const shapePoints = shape.extractPoints( curveSegments );\n \n             let vertices = shapePoints.shape;\n             const holes = shapePoints.holes;\n \n             const reverse = ! ShapeUtils.isClockWise( vertices );\n \n             if ( reverse ) {\n \n                 vertices = vertices.reverse();\n \n                 // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n \n                 for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n \n                     const ahole = holes[ h ];\n \n                     if ( ShapeUtils.isClockWise( ahole ) ) {\n \n                         holes[ h ] = ahole.reverse();\n \n                     }\n \n                 }\n \n             }\n \n \n             const faces = ShapeUtils.triangulateShape( vertices, holes );\n \n             /* Vertices */\n \n             const contour = vertices; // vertices has all points but contour has only points of circumference\n \n             for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n \n                 const ahole = holes[ h ];\n \n                 vertices = vertices.concat( ahole );\n \n             }\n \n \n             function scalePt2( pt, vec, size ) {\n \n                 if ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n \n                 return vec.clone().multiplyScalar( size ).add( pt );\n \n             }\n \n             const vlen = vertices.length, flen = faces.length;\n \n \n             // Find directions for point movement\n \n \n             function getBevelVec( inPt, inPrev, inNext ) {\n \n                 // computes for inPt the corresponding point inPt' on a new contour\n                 //   shifted by 1 unit (length of normalized vector) to the left\n                 // if we walk along contour clockwise, this new contour is outside the old one\n                 //\n                 // inPt' is the intersection of the two lines parallel to the two\n                 //  adjacent edges of inPt at a distance of 1 unit on the left side.\n \n                 let v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n \n                 // good reading for geometry algorithms (here: line-line intersection)\n                 // http://geomalgorithms.com/a05-_intersect-1.html\n \n                 const v_prev_x = inPt.x - inPrev.x,\n                     v_prev_y = inPt.y - inPrev.y;\n                 const v_next_x = inNext.x - inPt.x,\n                     v_next_y = inNext.y - inPt.y;\n \n                 const v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n \n                 // check for collinear edges\n                 const collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n \n                 if ( Math.abs( collinear0 ) > Number.EPSILON ) {\n \n                     // not collinear\n \n                     // length of vectors for normalizing\n \n                     const v_prev_len = Math.sqrt( v_prev_lensq );\n                     const v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n \n                     // shift adjacent points by unit vectors to the left\n \n                     const ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n                     const ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n \n                     const ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n                     const ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n \n                     // scaling factor for v_prev to intersection point\n \n                     const sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n                             ( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n                         ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n \n                     // vector from inPt to intersection point\n \n                     v_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n                     v_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n \n                     // Don't normalize!, otherwise sharp corners become ugly\n                     //  but prevent crazy spikes\n                     const v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n                     if ( v_trans_lensq <= 2 ) {\n \n                         return new Vector2( v_trans_x, v_trans_y );\n \n                     } else {\n \n                         shrink_by = Math.sqrt( v_trans_lensq / 2 );\n \n                     }\n \n                 } else {\n \n                     // handle special case of collinear edges\n \n                     let direction_eq = false; // assumes: opposite\n \n                     if ( v_prev_x > Number.EPSILON ) {\n \n                         if ( v_next_x > Number.EPSILON ) {\n \n                             direction_eq = true;\n \n                         }\n \n                     } else {\n \n                         if ( v_prev_x < - Number.EPSILON ) {\n \n                             if ( v_next_x < - Number.EPSILON ) {\n \n                                 direction_eq = true;\n \n                             }\n \n                         } else {\n \n                             if ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n \n                                 direction_eq = true;\n \n                             }\n \n                         }\n \n                     }\n \n                     if ( direction_eq ) {\n \n                         // console.log(\"Warning: lines are a straight sequence\");\n                         v_trans_x = - v_prev_y;\n                         v_trans_y = v_prev_x;\n                         shrink_by = Math.sqrt( v_prev_lensq );\n \n                     } else {\n \n                         // console.log(\"Warning: lines are a straight spike\");\n                         v_trans_x = v_prev_x;\n                         v_trans_y = v_prev_y;\n                         shrink_by = Math.sqrt( v_prev_lensq / 2 );\n \n                     }\n \n                 }\n \n                 return new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n \n             }\n \n \n             const contourMovements = [];\n \n             for ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n \n                 if ( j === il ) j = 0;\n                 if ( k === il ) k = 0;\n \n                 //  (j)---(i)---(k)\n                 // console.log('i,j,k', i, j , k)\n \n                 contourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n \n             }\n \n             const holesMovements = [];\n             let oneHoleMovements, verticesMovements = contourMovements.concat();\n \n             for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n \n                 const ahole = holes[ h ];\n \n                 oneHoleMovements = [];\n \n                 for ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n \n                     if ( j === il ) j = 0;\n                     if ( k === il ) k = 0;\n \n                     //  (j)---(i)---(k)\n                     oneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n \n                 }\n \n                 holesMovements.push( oneHoleMovements );\n                 verticesMovements = verticesMovements.concat( oneHoleMovements );\n \n             }\n \n \n             // Loop bevelSegments, 1 for the front, 1 for the back\n \n             for ( let b = 0; b < bevelSegments; b ++ ) {\n \n                 //for ( b = bevelSegments; b > 0; b -- ) {\n \n                 const t = b / bevelSegments;\n                 const z = bevelThickness * Math.cos( t * Math.PI / 2 );\n                 const bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n \n                 // contract shape\n \n                 for ( let i = 0, il = contour.length; i < il; i ++ ) {\n \n                     const vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n \n                     v( vert.x, vert.y, - z );\n \n                 }\n \n                 // expand holes\n \n                 for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n \n                     const ahole = holes[ h ];\n                     oneHoleMovements = holesMovements[ h ];\n \n                     for ( let i = 0, il = ahole.length; i < il; i ++ ) {\n \n                         const vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n \n                         v( vert.x, vert.y, - z );\n \n                     }\n \n                 }\n \n             }\n \n             const bs = bevelSize + bevelOffset;\n \n             // Back facing vertices\n \n             for ( let i = 0; i < vlen; i ++ ) {\n \n                 const vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n \n                 if ( ! extrudeByPath ) {\n \n                     v( vert.x, vert.y, 0 );\n \n                 } else {\n \n                     // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n \n                     normal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n                     binormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n \n                     position2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n \n                     v( position2.x, position2.y, position2.z );\n \n                 }\n \n             }\n \n             // Add stepped vertices...\n             // Including front facing vertices\n \n             for ( let s = 1; s <= steps; s ++ ) {\n \n                 for ( let i = 0; i < vlen; i ++ ) {\n \n                     const vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n \n                     if ( ! extrudeByPath ) {\n \n                         v( vert.x, vert.y, depth / steps * s );\n \n                     } else {\n \n                         // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n \n                         normal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n                         binormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n \n                         position2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n \n                         v( position2.x, position2.y, position2.z );\n \n                     }\n \n                 }\n \n             }\n \n \n             // Add bevel segments planes\n \n             //for ( b = 1; b <= bevelSegments; b ++ ) {\n             for ( let b = bevelSegments - 1; b >= 0; b -- ) {\n \n                 const t = b / bevelSegments;\n                 const z = bevelThickness * Math.cos( t * Math.PI / 2 );\n                 const bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n \n                 // contract shape\n \n                 for ( let i = 0, il = contour.length; i < il; i ++ ) {\n \n                     const vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n                     v( vert.x, vert.y, depth + z );\n \n                 }\n \n                 // expand holes\n \n                 for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n \n                     const ahole = holes[ h ];\n                     oneHoleMovements = holesMovements[ h ];\n \n                     for ( let i = 0, il = ahole.length; i < il; i ++ ) {\n \n                         const vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n \n                         if ( ! extrudeByPath ) {\n \n                             v( vert.x, vert.y, depth + z );\n \n                         } else {\n \n                             v( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n \n                         }\n \n                     }\n \n                 }\n \n             }\n \n             /* Faces */\n \n             // Top and bottom faces\n \n             buildLidFaces();\n \n             // Sides faces\n \n             buildSideFaces();\n \n \n             /////  Internal functions\n \n             function buildLidFaces() {\n \n                 const start = verticesArray.length / 3;\n \n                 if ( bevelEnabled ) {\n \n                     let layer = 0; // steps + 1\n                     let offset = vlen * layer;\n \n                     // Bottom faces\n \n                     for ( let i = 0; i < flen; i ++ ) {\n \n                         const face = faces[ i ];\n                         f3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n \n                     }\n \n                     layer = steps + bevelSegments * 2;\n                     offset = vlen * layer;\n \n                     // Top faces\n \n                     for ( let i = 0; i < flen; i ++ ) {\n \n                         const face = faces[ i ];\n                         f3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n \n                     }\n \n                 } else {\n \n                     // Bottom faces\n \n                     for ( let i = 0; i < flen; i ++ ) {\n \n                         const face = faces[ i ];\n                         f3( face[ 2 ], face[ 1 ], face[ 0 ] );\n \n                     }\n \n                     // Top faces\n \n                     for ( let i = 0; i < flen; i ++ ) {\n \n                         const face = faces[ i ];\n                         f3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n \n                     }\n \n                 }\n \n                 scope.addGroup( start, verticesArray.length / 3 - start, 0 );\n \n             }\n \n             // Create faces for the z-sides of the shape\n \n             function buildSideFaces() {\n \n                 const start = verticesArray.length / 3;\n                 let layeroffset = 0;\n                 sidewalls( contour, layeroffset );\n                 layeroffset += contour.length;\n \n                 for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n \n                     const ahole = holes[ h ];\n                     sidewalls( ahole, layeroffset );\n \n                     //, true\n                     layeroffset += ahole.length;\n \n                 }\n \n \n                 scope.addGroup( start, verticesArray.length / 3 - start, 1 );\n \n \n             }\n \n             function sidewalls( contour, layeroffset ) {\n \n                 let i = contour.length;\n \n                 while ( -- i >= 0 ) {\n \n                     const j = i;\n                     let k = i - 1;\n                     if ( k < 0 ) k = contour.length - 1;\n \n                     //console.log('b', i,j, i-1, k,vertices.length);\n \n                     for ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n \n                         const slen1 = vlen * s;\n                         const slen2 = vlen * ( s + 1 );\n \n                         const a = layeroffset + j + slen1,\n                             b = layeroffset + k + slen1,\n                             c = layeroffset + k + slen2,\n                             d = layeroffset + j + slen2;\n \n                         f4( a, b, c, d );\n \n                     }\n \n                 }\n \n             }\n \n             function v( x, y, z ) {\n \n                 placeholder.push( x );\n                 placeholder.push( y );\n                 placeholder.push( z );\n \n             }\n \n \n             function f3( a, b, c ) {\n \n                 addVertex( a );\n                 addVertex( b );\n                 addVertex( c );\n \n                 const nextIndex = verticesArray.length / 3;\n                 const uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n \n                 addUV( uvs[ 0 ] );\n                 addUV( uvs[ 1 ] );\n                 addUV( uvs[ 2 ] );\n \n             }\n \n             function f4( a, b, c, d ) {\n \n                 addVertex( a );\n                 addVertex( b );\n                 addVertex( d );\n \n                 addVertex( b );\n                 addVertex( c );\n                 addVertex( d );\n \n \n                 const nextIndex = verticesArray.length / 3;\n                 const uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n \n                 addUV( uvs[ 0 ] );\n                 addUV( uvs[ 1 ] );\n                 addUV( uvs[ 3 ] );\n \n                 addUV( uvs[ 1 ] );\n                 addUV( uvs[ 2 ] );\n                 addUV( uvs[ 3 ] );\n \n             }\n \n             function addVertex( index ) {\n \n                 verticesArray.push( placeholder[ index * 3 + 0 ] );\n                 verticesArray.push( placeholder[ index * 3 + 1 ] );\n                 verticesArray.push( placeholder[ index * 3 + 2 ] );\n \n             }\n \n \n             function addUV( vector2 ) {\n \n                 uvArray.push( vector2.x );\n                 uvArray.push( vector2.y );\n \n             }\n \n         }\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         const shapes = this.parameters.shapes;\n         const options = this.parameters.options;\n \n         return toJSON$1( shapes, options, data );\n \n     }\n \n     static fromJSON( data, shapes ) {\n \n         const geometryShapes = [];\n \n         for ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n \n             const shape = shapes[ data.shapes[ j ] ];\n \n             geometryShapes.push( shape );\n \n         }\n \n         const extrudePath = data.options.extrudePath;\n \n         if ( extrudePath !== undefined ) {\n \n             data.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n \n         }\n \n         return new ExtrudeGeometry( geometryShapes, data.options );\n \n     }\n \n }\n \n const WorldUVGenerator = {\n \n     generateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n \n         const a_x = vertices[ indexA * 3 ];\n         const a_y = vertices[ indexA * 3 + 1 ];\n         const b_x = vertices[ indexB * 3 ];\n         const b_y = vertices[ indexB * 3 + 1 ];\n         const c_x = vertices[ indexC * 3 ];\n         const c_y = vertices[ indexC * 3 + 1 ];\n \n         return [\n             new Vector2( a_x, a_y ),\n             new Vector2( b_x, b_y ),\n             new Vector2( c_x, c_y )\n         ];\n \n     },\n \n     generateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n \n         const a_x = vertices[ indexA * 3 ];\n         const a_y = vertices[ indexA * 3 + 1 ];\n         const a_z = vertices[ indexA * 3 + 2 ];\n         const b_x = vertices[ indexB * 3 ];\n         const b_y = vertices[ indexB * 3 + 1 ];\n         const b_z = vertices[ indexB * 3 + 2 ];\n         const c_x = vertices[ indexC * 3 ];\n         const c_y = vertices[ indexC * 3 + 1 ];\n         const c_z = vertices[ indexC * 3 + 2 ];\n         const d_x = vertices[ indexD * 3 ];\n         const d_y = vertices[ indexD * 3 + 1 ];\n         const d_z = vertices[ indexD * 3 + 2 ];\n \n         if ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n \n             return [\n                 new Vector2( a_x, 1 - a_z ),\n                 new Vector2( b_x, 1 - b_z ),\n                 new Vector2( c_x, 1 - c_z ),\n                 new Vector2( d_x, 1 - d_z )\n             ];\n \n         } else {\n \n             return [\n                 new Vector2( a_y, 1 - a_z ),\n                 new Vector2( b_y, 1 - b_z ),\n                 new Vector2( c_y, 1 - c_z ),\n                 new Vector2( d_y, 1 - d_z )\n             ];\n \n         }\n \n     }\n \n };\n \n function toJSON$1( shapes, options, data ) {\n \n     data.shapes = [];\n \n     if ( Array.isArray( shapes ) ) {\n \n         for ( let i = 0, l = shapes.length; i < l; i ++ ) {\n \n             const shape = shapes[ i ];\n \n             data.shapes.push( shape.uuid );\n \n         }\n \n     } else {\n \n         data.shapes.push( shapes.uuid );\n \n     }\n \n     if ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n \n     return data;\n \n }\n \n class IcosahedronGeometry extends PolyhedronGeometry {\n \n     constructor( radius = 1, detail = 0 ) {\n \n         const t = ( 1 + Math.sqrt( 5 ) ) / 2;\n \n         const vertices = [\n             - 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n             0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n             t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n         ];\n \n         const indices = [\n             0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n             1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n             3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n             4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n         ];\n \n         super( vertices, indices, radius, detail );\n \n         this.type = 'IcosahedronGeometry';\n \n         this.parameters = {\n             radius: radius,\n             detail: detail\n         };\n \n     }\n \n     static fromJSON( data ) {\n \n         return new IcosahedronGeometry( data.radius, data.detail );\n \n     }\n \n }\n \n class OctahedronGeometry extends PolyhedronGeometry {\n \n     constructor( radius = 1, detail = 0 ) {\n \n         const vertices = [\n             1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n             0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n         ];\n \n         const indices = [\n             0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n             0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n             1, 3, 4,\t1, 4, 2\n         ];\n \n         super( vertices, indices, radius, detail );\n \n         this.type = 'OctahedronGeometry';\n \n         this.parameters = {\n             radius: radius,\n             detail: detail\n         };\n \n     }\n \n     static fromJSON( data ) {\n \n         return new OctahedronGeometry( data.radius, data.detail );\n \n     }\n \n }\n \n class RingGeometry extends BufferGeometry {\n \n     constructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n \n         super();\n \n         this.type = 'RingGeometry';\n \n         this.parameters = {\n             innerRadius: innerRadius,\n             outerRadius: outerRadius,\n             thetaSegments: thetaSegments,\n             phiSegments: phiSegments,\n             thetaStart: thetaStart,\n             thetaLength: thetaLength\n         };\n \n         thetaSegments = Math.max( 3, thetaSegments );\n         phiSegments = Math.max( 1, phiSegments );\n \n         // buffers\n \n         const indices = [];\n         const vertices = [];\n         const normals = [];\n         const uvs = [];\n \n         // some helper variables\n \n         let radius = innerRadius;\n         const radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n         const vertex = new Vector3();\n         const uv = new Vector2();\n \n         // generate vertices, normals and uvs\n \n         for ( let j = 0; j <= phiSegments; j ++ ) {\n \n             for ( let i = 0; i <= thetaSegments; i ++ ) {\n \n                 // values are generate from the inside of the ring to the outside\n \n                 const segment = thetaStart + i / thetaSegments * thetaLength;\n \n                 // vertex\n \n                 vertex.x = radius * Math.cos( segment );\n                 vertex.y = radius * Math.sin( segment );\n \n                 vertices.push( vertex.x, vertex.y, vertex.z );\n \n                 // normal\n \n                 normals.push( 0, 0, 1 );\n \n                 // uv\n \n                 uv.x = ( vertex.x / outerRadius + 1 ) / 2;\n                 uv.y = ( vertex.y / outerRadius + 1 ) / 2;\n \n                 uvs.push( uv.x, uv.y );\n \n             }\n \n             // increase the radius for next row of vertices\n \n             radius += radiusStep;\n \n         }\n \n         // indices\n \n         for ( let j = 0; j < phiSegments; j ++ ) {\n \n             const thetaSegmentLevel = j * ( thetaSegments + 1 );\n \n             for ( let i = 0; i < thetaSegments; i ++ ) {\n \n                 const segment = i + thetaSegmentLevel;\n \n                 const a = segment;\n                 const b = segment + thetaSegments + 1;\n                 const c = segment + thetaSegments + 2;\n                 const d = segment + 1;\n \n                 // faces\n \n                 indices.push( a, b, d );\n                 indices.push( b, c, d );\n \n             }\n \n         }\n \n         // build geometry\n \n         this.setIndex( indices );\n         this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n         this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n     }\n \n     static fromJSON( data ) {\n \n         return new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n \n     }\n \n }\n \n class ShapeGeometry extends BufferGeometry {\n \n     constructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n \n         super();\n         this.type = 'ShapeGeometry';\n \n         this.parameters = {\n             shapes: shapes,\n             curveSegments: curveSegments\n         };\n \n         // buffers\n \n         const indices = [];\n         const vertices = [];\n         const normals = [];\n         const uvs = [];\n \n         // helper variables\n \n         let groupStart = 0;\n         let groupCount = 0;\n \n         // allow single and array values for \"shapes\" parameter\n \n         if ( Array.isArray( shapes ) === false ) {\n \n             addShape( shapes );\n \n         } else {\n \n             for ( let i = 0; i < shapes.length; i ++ ) {\n \n                 addShape( shapes[ i ] );\n \n                 this.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n \n                 groupStart += groupCount;\n                 groupCount = 0;\n \n             }\n \n         }\n \n         // build geometry\n \n         this.setIndex( indices );\n         this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n         this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n \n         // helper functions\n \n         function addShape( shape ) {\n \n             const indexOffset = vertices.length / 3;\n             const points = shape.extractPoints( curveSegments );\n \n             let shapeVertices = points.shape;\n             const shapeHoles = points.holes;\n \n             // check direction of vertices\n \n             if ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n \n                 shapeVertices = shapeVertices.reverse();\n \n             }\n \n             for ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n \n                 const shapeHole = shapeHoles[ i ];\n \n                 if ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n \n                     shapeHoles[ i ] = shapeHole.reverse();\n \n                 }\n \n             }\n \n             const faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n \n             // join vertices of inner and outer paths to a single array\n \n             for ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n \n                 const shapeHole = shapeHoles[ i ];\n                 shapeVertices = shapeVertices.concat( shapeHole );\n \n             }\n \n             // vertices, normals, uvs\n \n             for ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n \n                 const vertex = shapeVertices[ i ];\n \n                 vertices.push( vertex.x, vertex.y, 0 );\n                 normals.push( 0, 0, 1 );\n                 uvs.push( vertex.x, vertex.y ); // world uvs\n \n             }\n \n             // incides\n \n             for ( let i = 0, l = faces.length; i < l; i ++ ) {\n \n                 const face = faces[ i ];\n \n                 const a = face[ 0 ] + indexOffset;\n                 const b = face[ 1 ] + indexOffset;\n                 const c = face[ 2 ] + indexOffset;\n \n                 indices.push( a, b, c );\n                 groupCount += 3;\n \n             }\n \n         }\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         const shapes = this.parameters.shapes;\n \n         return toJSON( shapes, data );\n \n     }\n \n     static fromJSON( data, shapes ) {\n \n         const geometryShapes = [];\n \n         for ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n \n             const shape = shapes[ data.shapes[ j ] ];\n \n             geometryShapes.push( shape );\n \n         }\n \n         return new ShapeGeometry( geometryShapes, data.curveSegments );\n \n     }\n \n }\n \n function toJSON( shapes, data ) {\n \n     data.shapes = [];\n \n     if ( Array.isArray( shapes ) ) {\n \n         for ( let i = 0, l = shapes.length; i < l; i ++ ) {\n \n             const shape = shapes[ i ];\n \n             data.shapes.push( shape.uuid );\n \n         }\n \n     } else {\n \n         data.shapes.push( shapes.uuid );\n \n     }\n \n     return data;\n \n }\n \n class SphereGeometry extends BufferGeometry {\n \n     constructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n \n         super();\n         this.type = 'SphereGeometry';\n \n         this.parameters = {\n             radius: radius,\n             widthSegments: widthSegments,\n             heightSegments: heightSegments,\n             phiStart: phiStart,\n             phiLength: phiLength,\n             thetaStart: thetaStart,\n             thetaLength: thetaLength\n         };\n \n         widthSegments = Math.max( 3, Math.floor( widthSegments ) );\n         heightSegments = Math.max( 2, Math.floor( heightSegments ) );\n \n         const thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n \n         let index = 0;\n         const grid = [];\n \n         const vertex = new Vector3();\n         const normal = new Vector3();\n \n         // buffers\n \n         const indices = [];\n         const vertices = [];\n         const normals = [];\n         const uvs = [];\n \n         // generate vertices, normals and uvs\n \n         for ( let iy = 0; iy <= heightSegments; iy ++ ) {\n \n             const verticesRow = [];\n \n             const v = iy / heightSegments;\n \n             // special case for the poles\n \n             let uOffset = 0;\n \n             if ( iy == 0 && thetaStart == 0 ) {\n \n                 uOffset = 0.5 / widthSegments;\n \n             } else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n \n                 uOffset = - 0.5 / widthSegments;\n \n             }\n \n             for ( let ix = 0; ix <= widthSegments; ix ++ ) {\n \n                 const u = ix / widthSegments;\n \n                 // vertex\n \n                 vertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n                 vertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n                 vertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n \n                 vertices.push( vertex.x, vertex.y, vertex.z );\n \n                 // normal\n \n                 normal.copy( vertex ).normalize();\n                 normals.push( normal.x, normal.y, normal.z );\n \n                 // uv\n \n                 uvs.push( u + uOffset, 1 - v );\n \n                 verticesRow.push( index ++ );\n \n             }\n \n             grid.push( verticesRow );\n \n         }\n \n         // indices\n \n         for ( let iy = 0; iy < heightSegments; iy ++ ) {\n \n             for ( let ix = 0; ix < widthSegments; ix ++ ) {\n \n                 const a = grid[ iy ][ ix + 1 ];\n                 const b = grid[ iy ][ ix ];\n                 const c = grid[ iy + 1 ][ ix ];\n                 const d = grid[ iy + 1 ][ ix + 1 ];\n \n                 if ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n                 if ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n \n             }\n \n         }\n \n         // build geometry\n \n         this.setIndex( indices );\n         this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n         this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n     }\n \n     static fromJSON( data ) {\n \n         return new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n \n     }\n \n }\n \n class TetrahedronGeometry extends PolyhedronGeometry {\n \n     constructor( radius = 1, detail = 0 ) {\n \n         const vertices = [\n             1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n         ];\n \n         const indices = [\n             2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n         ];\n \n         super( vertices, indices, radius, detail );\n \n         this.type = 'TetrahedronGeometry';\n \n         this.parameters = {\n             radius: radius,\n             detail: detail\n         };\n \n     }\n \n     static fromJSON( data ) {\n \n         return new TetrahedronGeometry( data.radius, data.detail );\n \n     }\n \n }\n \n class TorusGeometry extends BufferGeometry {\n \n     constructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n \n         super();\n         this.type = 'TorusGeometry';\n \n         this.parameters = {\n             radius: radius,\n             tube: tube,\n             radialSegments: radialSegments,\n             tubularSegments: tubularSegments,\n             arc: arc\n         };\n \n         radialSegments = Math.floor( radialSegments );\n         tubularSegments = Math.floor( tubularSegments );\n \n         // buffers\n \n         const indices = [];\n         const vertices = [];\n         const normals = [];\n         const uvs = [];\n \n         // helper variables\n \n         const center = new Vector3();\n         const vertex = new Vector3();\n         const normal = new Vector3();\n \n         // generate vertices, normals and uvs\n \n         for ( let j = 0; j <= radialSegments; j ++ ) {\n \n             for ( let i = 0; i <= tubularSegments; i ++ ) {\n \n                 const u = i / tubularSegments * arc;\n                 const v = j / radialSegments * Math.PI * 2;\n \n                 // vertex\n \n                 vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n                 vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n                 vertex.z = tube * Math.sin( v );\n \n                 vertices.push( vertex.x, vertex.y, vertex.z );\n \n                 // normal\n \n                 center.x = radius * Math.cos( u );\n                 center.y = radius * Math.sin( u );\n                 normal.subVectors( vertex, center ).normalize();\n \n                 normals.push( normal.x, normal.y, normal.z );\n \n                 // uv\n \n                 uvs.push( i / tubularSegments );\n                 uvs.push( j / radialSegments );\n \n             }\n \n         }\n \n         // generate indices\n \n         for ( let j = 1; j <= radialSegments; j ++ ) {\n \n             for ( let i = 1; i <= tubularSegments; i ++ ) {\n \n                 // indices\n \n                 const a = ( tubularSegments + 1 ) * j + i - 1;\n                 const b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n                 const c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n                 const d = ( tubularSegments + 1 ) * j + i;\n \n                 // faces\n \n                 indices.push( a, b, d );\n                 indices.push( b, c, d );\n \n             }\n \n         }\n \n         // build geometry\n \n         this.setIndex( indices );\n         this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n         this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n     }\n \n     static fromJSON( data ) {\n \n         return new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n \n     }\n \n }\n \n class TorusKnotGeometry extends BufferGeometry {\n \n     constructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n \n         super();\n         this.type = 'TorusKnotGeometry';\n \n         this.parameters = {\n             radius: radius,\n             tube: tube,\n             tubularSegments: tubularSegments,\n             radialSegments: radialSegments,\n             p: p,\n             q: q\n         };\n \n         tubularSegments = Math.floor( tubularSegments );\n         radialSegments = Math.floor( radialSegments );\n \n         // buffers\n \n         const indices = [];\n         const vertices = [];\n         const normals = [];\n         const uvs = [];\n \n         // helper variables\n \n         const vertex = new Vector3();\n         const normal = new Vector3();\n \n         const P1 = new Vector3();\n         const P2 = new Vector3();\n \n         const B = new Vector3();\n         const T = new Vector3();\n         const N = new Vector3();\n \n         // generate vertices, normals and uvs\n \n         for ( let i = 0; i <= tubularSegments; ++ i ) {\n \n             // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n \n             const u = i / tubularSegments * p * Math.PI * 2;\n \n             // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n             // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n \n             calculatePositionOnCurve( u, p, q, radius, P1 );\n             calculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n \n             // calculate orthonormal basis\n \n             T.subVectors( P2, P1 );\n             N.addVectors( P2, P1 );\n             B.crossVectors( T, N );\n             N.crossVectors( B, T );\n \n             // normalize B, N. T can be ignored, we don't use it\n \n             B.normalize();\n             N.normalize();\n \n             for ( let j = 0; j <= radialSegments; ++ j ) {\n \n                 // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n                 // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n \n                 const v = j / radialSegments * Math.PI * 2;\n                 const cx = - tube * Math.cos( v );\n                 const cy = tube * Math.sin( v );\n \n                 // now calculate the final vertex position.\n                 // first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n \n                 vertex.x = P1.x + ( cx * N.x + cy * B.x );\n                 vertex.y = P1.y + ( cx * N.y + cy * B.y );\n                 vertex.z = P1.z + ( cx * N.z + cy * B.z );\n \n                 vertices.push( vertex.x, vertex.y, vertex.z );\n \n                 // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n \n                 normal.subVectors( vertex, P1 ).normalize();\n \n                 normals.push( normal.x, normal.y, normal.z );\n \n                 // uv\n \n                 uvs.push( i / tubularSegments );\n                 uvs.push( j / radialSegments );\n \n             }\n \n         }\n \n         // generate indices\n \n         for ( let j = 1; j <= tubularSegments; j ++ ) {\n \n             for ( let i = 1; i <= radialSegments; i ++ ) {\n \n                 // indices\n \n                 const a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n                 const b = ( radialSegments + 1 ) * j + ( i - 1 );\n                 const c = ( radialSegments + 1 ) * j + i;\n                 const d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n \n                 // faces\n \n                 indices.push( a, b, d );\n                 indices.push( b, c, d );\n \n             }\n \n         }\n \n         // build geometry\n \n         this.setIndex( indices );\n         this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n         this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n         // this function calculates the current position on the torus curve\n \n         function calculatePositionOnCurve( u, p, q, radius, position ) {\n \n             const cu = Math.cos( u );\n             const su = Math.sin( u );\n             const quOverP = q / p * u;\n             const cs = Math.cos( quOverP );\n \n             position.x = radius * ( 2 + cs ) * 0.5 * cu;\n             position.y = radius * ( 2 + cs ) * su * 0.5;\n             position.z = radius * Math.sin( quOverP ) * 0.5;\n \n         }\n \n     }\n \n     static fromJSON( data ) {\n \n         return new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n \n     }\n \n }\n \n class TubeGeometry extends BufferGeometry {\n \n     constructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n \n         super();\n         this.type = 'TubeGeometry';\n \n         this.parameters = {\n             path: path,\n             tubularSegments: tubularSegments,\n             radius: radius,\n             radialSegments: radialSegments,\n             closed: closed\n         };\n \n         const frames = path.computeFrenetFrames( tubularSegments, closed );\n \n         // expose internals\n \n         this.tangents = frames.tangents;\n         this.normals = frames.normals;\n         this.binormals = frames.binormals;\n \n         // helper variables\n \n         const vertex = new Vector3();\n         const normal = new Vector3();\n         const uv = new Vector2();\n         let P = new Vector3();\n \n         // buffer\n \n         const vertices = [];\n         const normals = [];\n         const uvs = [];\n         const indices = [];\n \n         // create buffer data\n \n         generateBufferData();\n \n         // build geometry\n \n         this.setIndex( indices );\n         this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n         this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n         // functions\n \n         function generateBufferData() {\n \n             for ( let i = 0; i < tubularSegments; i ++ ) {\n \n                 generateSegment( i );\n \n             }\n \n             // if the geometry is not closed, generate the last row of vertices and normals\n             // at the regular position on the given path\n             //\n             // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n \n             generateSegment( ( closed === false ) ? tubularSegments : 0 );\n \n             // uvs are generated in a separate function.\n             // this makes it easy compute correct values for closed geometries\n \n             generateUVs();\n \n             // finally create faces\n \n             generateIndices();\n \n         }\n \n         function generateSegment( i ) {\n \n             // we use getPointAt to sample evenly distributed points from the given path\n \n             P = path.getPointAt( i / tubularSegments, P );\n \n             // retrieve corresponding normal and binormal\n \n             const N = frames.normals[ i ];\n             const B = frames.binormals[ i ];\n \n             // generate normals and vertices for the current segment\n \n             for ( let j = 0; j <= radialSegments; j ++ ) {\n \n                 const v = j / radialSegments * Math.PI * 2;\n \n                 const sin = Math.sin( v );\n                 const cos = - Math.cos( v );\n \n                 // normal\n \n                 normal.x = ( cos * N.x + sin * B.x );\n                 normal.y = ( cos * N.y + sin * B.y );\n                 normal.z = ( cos * N.z + sin * B.z );\n                 normal.normalize();\n \n                 normals.push( normal.x, normal.y, normal.z );\n \n                 // vertex\n \n                 vertex.x = P.x + radius * normal.x;\n                 vertex.y = P.y + radius * normal.y;\n                 vertex.z = P.z + radius * normal.z;\n \n                 vertices.push( vertex.x, vertex.y, vertex.z );\n \n             }\n \n         }\n \n         function generateIndices() {\n \n             for ( let j = 1; j <= tubularSegments; j ++ ) {\n \n                 for ( let i = 1; i <= radialSegments; i ++ ) {\n \n                     const a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n                     const b = ( radialSegments + 1 ) * j + ( i - 1 );\n                     const c = ( radialSegments + 1 ) * j + i;\n                     const d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n \n                     // faces\n \n                     indices.push( a, b, d );\n                     indices.push( b, c, d );\n \n                 }\n \n             }\n \n         }\n \n         function generateUVs() {\n \n             for ( let i = 0; i <= tubularSegments; i ++ ) {\n \n                 for ( let j = 0; j <= radialSegments; j ++ ) {\n \n                     uv.x = i / tubularSegments;\n                     uv.y = j / radialSegments;\n \n                     uvs.push( uv.x, uv.y );\n \n                 }\n \n             }\n \n         }\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON();\n \n         data.path = this.parameters.path.toJSON();\n \n         return data;\n \n     }\n \n     static fromJSON( data ) {\n \n         // This only works for built-in curves (e.g. CatmullRomCurve3).\n         // User defined curves or instances of CurvePath will not be deserialized.\n         return new TubeGeometry(\n             new Curves[ data.path.type ]().fromJSON( data.path ),\n             data.tubularSegments,\n             data.radius,\n             data.radialSegments,\n             data.closed\n         );\n \n     }\n \n }\n \n class WireframeGeometry extends BufferGeometry {\n \n     constructor( geometry = null ) {\n \n         super();\n         this.type = 'WireframeGeometry';\n \n         this.parameters = {\n             geometry: geometry\n         };\n \n         if ( geometry !== null ) {\n \n             // buffer\n \n             const vertices = [];\n             const edges = new Set();\n \n             // helper variables\n \n             const start = new Vector3();\n             const end = new Vector3();\n \n             if ( geometry.index !== null ) {\n \n                 // indexed BufferGeometry\n \n                 const position = geometry.attributes.position;\n                 const indices = geometry.index;\n                 let groups = geometry.groups;\n \n                 if ( groups.length === 0 ) {\n \n                     groups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n \n                 }\n \n                 // create a data structure that contains all edges without duplicates\n \n                 for ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n \n                     const group = groups[ o ];\n \n                     const groupStart = group.start;\n                     const groupCount = group.count;\n \n                     for ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n \n                         for ( let j = 0; j < 3; j ++ ) {\n \n                             const index1 = indices.getX( i + j );\n                             const index2 = indices.getX( i + ( j + 1 ) % 3 );\n \n                             start.fromBufferAttribute( position, index1 );\n                             end.fromBufferAttribute( position, index2 );\n \n                             if ( isUniqueEdge( start, end, edges ) === true ) {\n \n                                 vertices.push( start.x, start.y, start.z );\n                                 vertices.push( end.x, end.y, end.z );\n \n                             }\n \n                         }\n \n                     }\n \n                 }\n \n             } else {\n \n                 // non-indexed BufferGeometry\n \n                 const position = geometry.attributes.position;\n \n                 for ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n \n                     for ( let j = 0; j < 3; j ++ ) {\n \n                         // three edges per triangle, an edge is represented as (index1, index2)\n                         // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n \n                         const index1 = 3 * i + j;\n                         const index2 = 3 * i + ( ( j + 1 ) % 3 );\n \n                         start.fromBufferAttribute( position, index1 );\n                         end.fromBufferAttribute( position, index2 );\n \n                         if ( isUniqueEdge( start, end, edges ) === true ) {\n \n                             vertices.push( start.x, start.y, start.z );\n                             vertices.push( end.x, end.y, end.z );\n \n                         }\n \n                     }\n \n                 }\n \n             }\n \n             // build geometry\n \n             this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n \n         }\n \n     }\n \n }\n \n function isUniqueEdge( start, end, edges ) {\n \n     const hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n     const hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n \n     if ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n \n         return false;\n \n     } else {\n \n         edges.add( hash1 );\n         edges.add( hash2 );\n         return true;\n \n     }\n \n }\n \n var Geometries = /*#__PURE__*/Object.freeze({\n     __proto__: null,\n     BoxGeometry: BoxGeometry,\n     BoxBufferGeometry: BoxGeometry,\n     CapsuleGeometry: CapsuleGeometry,\n     CapsuleBufferGeometry: CapsuleGeometry,\n     CircleGeometry: CircleGeometry,\n     CircleBufferGeometry: CircleGeometry,\n     ConeGeometry: ConeGeometry,\n     ConeBufferGeometry: ConeGeometry,\n     CylinderGeometry: CylinderGeometry,\n     CylinderBufferGeometry: CylinderGeometry,\n     DodecahedronGeometry: DodecahedronGeometry,\n     DodecahedronBufferGeometry: DodecahedronGeometry,\n     EdgesGeometry: EdgesGeometry,\n     ExtrudeGeometry: ExtrudeGeometry,\n     ExtrudeBufferGeometry: ExtrudeGeometry,\n     IcosahedronGeometry: IcosahedronGeometry,\n     IcosahedronBufferGeometry: IcosahedronGeometry,\n     LatheGeometry: LatheGeometry,\n     LatheBufferGeometry: LatheGeometry,\n     OctahedronGeometry: OctahedronGeometry,\n     OctahedronBufferGeometry: OctahedronGeometry,\n     PlaneGeometry: PlaneGeometry,\n     PlaneBufferGeometry: PlaneGeometry,\n     PolyhedronGeometry: PolyhedronGeometry,\n     PolyhedronBufferGeometry: PolyhedronGeometry,\n     RingGeometry: RingGeometry,\n     RingBufferGeometry: RingGeometry,\n     ShapeGeometry: ShapeGeometry,\n     ShapeBufferGeometry: ShapeGeometry,\n     SphereGeometry: SphereGeometry,\n     SphereBufferGeometry: SphereGeometry,\n     TetrahedronGeometry: TetrahedronGeometry,\n     TetrahedronBufferGeometry: TetrahedronGeometry,\n     TorusGeometry: TorusGeometry,\n     TorusBufferGeometry: TorusGeometry,\n     TorusKnotGeometry: TorusKnotGeometry,\n     TorusKnotBufferGeometry: TorusKnotGeometry,\n     TubeGeometry: TubeGeometry,\n     TubeBufferGeometry: TubeGeometry,\n     WireframeGeometry: WireframeGeometry\n });\n \n class ShadowMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.type = 'ShadowMaterial';\n \n         this.color = new Color( 0x000000 );\n         this.transparent = true;\n \n         this.setValues( parameters );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.color.copy( source.color );\n \n         return this;\n \n     }\n \n }\n \n ShadowMaterial.prototype.isShadowMaterial = true;\n \n class RawShaderMaterial extends ShaderMaterial {\n \n     constructor( parameters ) {\n \n         super( parameters );\n \n         this.type = 'RawShaderMaterial';\n \n     }\n \n }\n \n RawShaderMaterial.prototype.isRawShaderMaterial = true;\n \n class MeshStandardMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.defines = { 'STANDARD': '' };\n \n         this.type = 'MeshStandardMaterial';\n \n         this.color = new Color( 0xffffff ); // diffuse\n         this.roughness = 1.0;\n         this.metalness = 0.0;\n \n         this.map = null;\n \n         this.lightMap = null;\n         this.lightMapIntensity = 1.0;\n \n         this.aoMap = null;\n         this.aoMapIntensity = 1.0;\n \n         this.emissive = new Color( 0x000000 );\n         this.emissiveIntensity = 1.0;\n         this.emissiveMap = null;\n \n         this.bumpMap = null;\n         this.bumpScale = 1;\n \n         this.normalMap = null;\n         this.normalMapType = TangentSpaceNormalMap;\n         this.normalScale = new Vector2( 1, 1 );\n \n         this.displacementMap = null;\n         this.displacementScale = 1;\n         this.displacementBias = 0;\n \n         this.roughnessMap = null;\n \n         this.metalnessMap = null;\n \n         this.alphaMap = null;\n \n         this.envMap = null;\n         this.envMapIntensity = 1.0;\n \n         this.wireframe = false;\n         this.wireframeLinewidth = 1;\n         this.wireframeLinecap = 'round';\n         this.wireframeLinejoin = 'round';\n \n         this.flatShading = false;\n \n         this.setValues( parameters );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.defines = { 'STANDARD': '' };\n \n         this.color.copy( source.color );\n         this.roughness = source.roughness;\n         this.metalness = source.metalness;\n \n         this.map = source.map;\n \n         this.lightMap = source.lightMap;\n         this.lightMapIntensity = source.lightMapIntensity;\n \n         this.aoMap = source.aoMap;\n         this.aoMapIntensity = source.aoMapIntensity;\n \n         this.emissive.copy( source.emissive );\n         this.emissiveMap = source.emissiveMap;\n         this.emissiveIntensity = source.emissiveIntensity;\n \n         this.bumpMap = source.bumpMap;\n         this.bumpScale = source.bumpScale;\n \n         this.normalMap = source.normalMap;\n         this.normalMapType = source.normalMapType;\n         this.normalScale.copy( source.normalScale );\n \n         this.displacementMap = source.displacementMap;\n         this.displacementScale = source.displacementScale;\n         this.displacementBias = source.displacementBias;\n \n         this.roughnessMap = source.roughnessMap;\n \n         this.metalnessMap = source.metalnessMap;\n \n         this.alphaMap = source.alphaMap;\n \n         this.envMap = source.envMap;\n         this.envMapIntensity = source.envMapIntensity;\n \n         this.wireframe = source.wireframe;\n         this.wireframeLinewidth = source.wireframeLinewidth;\n         this.wireframeLinecap = source.wireframeLinecap;\n         this.wireframeLinejoin = source.wireframeLinejoin;\n \n         this.flatShading = source.flatShading;\n \n         return this;\n \n     }\n \n }\n \n MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n \n class MeshPhysicalMaterial extends MeshStandardMaterial {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.defines = {\n \n             'STANDARD': '',\n             'PHYSICAL': ''\n \n         };\n \n         this.type = 'MeshPhysicalMaterial';\n \n         this.clearcoatMap = null;\n         this.clearcoatRoughness = 0.0;\n         this.clearcoatRoughnessMap = null;\n         this.clearcoatNormalScale = new Vector2( 1, 1 );\n         this.clearcoatNormalMap = null;\n \n         this.ior = 1.5;\n \n         Object.defineProperty( this, 'reflectivity', {\n             get: function () {\n \n                 return ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n \n             },\n             set: function ( reflectivity ) {\n \n                 this.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n \n             }\n         } );\n \n         this.sheenColor = new Color( 0x000000 );\n         this.sheenColorMap = null;\n         this.sheenRoughness = 1.0;\n         this.sheenRoughnessMap = null;\n \n         this.transmissionMap = null;\n \n         this.thickness = 0;\n         this.thicknessMap = null;\n         this.attenuationDistance = 0.0;\n         this.attenuationColor = new Color( 1, 1, 1 );\n \n         this.specularIntensity = 1.0;\n         this.specularIntensityMap = null;\n         this.specularColor = new Color( 1, 1, 1 );\n         this.specularColorMap = null;\n \n         this._sheen = 0.0;\n         this._clearcoat = 0;\n         this._transmission = 0;\n \n         this.setValues( parameters );\n \n     }\n \n     get sheen() {\n \n         return this._sheen;\n \n     }\n \n     set sheen( value ) {\n \n         if ( this._sheen > 0 !== value > 0 ) {\n \n             this.version ++;\n \n         }\n \n         this._sheen = value;\n \n     }\n \n     get clearcoat() {\n \n         return this._clearcoat;\n \n     }\n \n     set clearcoat( value ) {\n \n         if ( this._clearcoat > 0 !== value > 0 ) {\n \n             this.version ++;\n \n         }\n \n         this._clearcoat = value;\n \n     }\n \n     get transmission() {\n \n         return this._transmission;\n \n     }\n \n     set transmission( value ) {\n \n         if ( this._transmission > 0 !== value > 0 ) {\n \n             this.version ++;\n \n         }\n \n         this._transmission = value;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.defines = {\n \n             'STANDARD': '',\n             'PHYSICAL': ''\n \n         };\n \n         this.clearcoat = source.clearcoat;\n         this.clearcoatMap = source.clearcoatMap;\n         this.clearcoatRoughness = source.clearcoatRoughness;\n         this.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n         this.clearcoatNormalMap = source.clearcoatNormalMap;\n         this.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n \n         this.ior = source.ior;\n \n         this.sheen = source.sheen;\n         this.sheenColor.copy( source.sheenColor );\n         this.sheenColorMap = source.sheenColorMap;\n         this.sheenRoughness = source.sheenRoughness;\n         this.sheenRoughnessMap = source.sheenRoughnessMap;\n \n         this.transmission = source.transmission;\n         this.transmissionMap = source.transmissionMap;\n \n         this.thickness = source.thickness;\n         this.thicknessMap = source.thicknessMap;\n         this.attenuationDistance = source.attenuationDistance;\n         this.attenuationColor.copy( source.attenuationColor );\n \n         this.specularIntensity = source.specularIntensity;\n         this.specularIntensityMap = source.specularIntensityMap;\n         this.specularColor.copy( source.specularColor );\n         this.specularColorMap = source.specularColorMap;\n \n         return this;\n \n     }\n \n }\n \n MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n \n class MeshPhongMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.type = 'MeshPhongMaterial';\n \n         this.color = new Color( 0xffffff ); // diffuse\n         this.specular = new Color( 0x111111 );\n         this.shininess = 30;\n \n         this.map = null;\n \n         this.lightMap = null;\n         this.lightMapIntensity = 1.0;\n \n         this.aoMap = null;\n         this.aoMapIntensity = 1.0;\n \n         this.emissive = new Color( 0x000000 );\n         this.emissiveIntensity = 1.0;\n         this.emissiveMap = null;\n \n         this.bumpMap = null;\n         this.bumpScale = 1;\n \n         this.normalMap = null;\n         this.normalMapType = TangentSpaceNormalMap;\n         this.normalScale = new Vector2( 1, 1 );\n \n         this.displacementMap = null;\n         this.displacementScale = 1;\n         this.displacementBias = 0;\n \n         this.specularMap = null;\n \n         this.alphaMap = null;\n \n         this.envMap = null;\n         this.combine = MultiplyOperation;\n         this.reflectivity = 1;\n         this.refractionRatio = 0.98;\n \n         this.wireframe = false;\n         this.wireframeLinewidth = 1;\n         this.wireframeLinecap = 'round';\n         this.wireframeLinejoin = 'round';\n \n         this.flatShading = false;\n \n         this.setValues( parameters );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.color.copy( source.color );\n         this.specular.copy( source.specular );\n         this.shininess = source.shininess;\n \n         this.map = source.map;\n \n         this.lightMap = source.lightMap;\n         this.lightMapIntensity = source.lightMapIntensity;\n \n         this.aoMap = source.aoMap;\n         this.aoMapIntensity = source.aoMapIntensity;\n \n         this.emissive.copy( source.emissive );\n         this.emissiveMap = source.emissiveMap;\n         this.emissiveIntensity = source.emissiveIntensity;\n \n         this.bumpMap = source.bumpMap;\n         this.bumpScale = source.bumpScale;\n \n         this.normalMap = source.normalMap;\n         this.normalMapType = source.normalMapType;\n         this.normalScale.copy( source.normalScale );\n \n         this.displacementMap = source.displacementMap;\n         this.displacementScale = source.displacementScale;\n         this.displacementBias = source.displacementBias;\n \n         this.specularMap = source.specularMap;\n \n         this.alphaMap = source.alphaMap;\n \n         this.envMap = source.envMap;\n         this.combine = source.combine;\n         this.reflectivity = source.reflectivity;\n         this.refractionRatio = source.refractionRatio;\n \n         this.wireframe = source.wireframe;\n         this.wireframeLinewidth = source.wireframeLinewidth;\n         this.wireframeLinecap = source.wireframeLinecap;\n         this.wireframeLinejoin = source.wireframeLinejoin;\n \n         this.flatShading = source.flatShading;\n \n         return this;\n \n     }\n \n }\n \n MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n \n class MeshToonMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.defines = { 'TOON': '' };\n \n         this.type = 'MeshToonMaterial';\n \n         this.color = new Color( 0xffffff );\n \n         this.map = null;\n         this.gradientMap = null;\n \n         this.lightMap = null;\n         this.lightMapIntensity = 1.0;\n \n         this.aoMap = null;\n         this.aoMapIntensity = 1.0;\n \n         this.emissive = new Color( 0x000000 );\n         this.emissiveIntensity = 1.0;\n         this.emissiveMap = null;\n \n         this.bumpMap = null;\n         this.bumpScale = 1;\n \n         this.normalMap = null;\n         this.normalMapType = TangentSpaceNormalMap;\n         this.normalScale = new Vector2( 1, 1 );\n \n         this.displacementMap = null;\n         this.displacementScale = 1;\n         this.displacementBias = 0;\n \n         this.alphaMap = null;\n \n         this.wireframe = false;\n         this.wireframeLinewidth = 1;\n         this.wireframeLinecap = 'round';\n         this.wireframeLinejoin = 'round';\n \n         this.setValues( parameters );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.color.copy( source.color );\n \n         this.map = source.map;\n         this.gradientMap = source.gradientMap;\n \n         this.lightMap = source.lightMap;\n         this.lightMapIntensity = source.lightMapIntensity;\n \n         this.aoMap = source.aoMap;\n         this.aoMapIntensity = source.aoMapIntensity;\n \n         this.emissive.copy( source.emissive );\n         this.emissiveMap = source.emissiveMap;\n         this.emissiveIntensity = source.emissiveIntensity;\n \n         this.bumpMap = source.bumpMap;\n         this.bumpScale = source.bumpScale;\n \n         this.normalMap = source.normalMap;\n         this.normalMapType = source.normalMapType;\n         this.normalScale.copy( source.normalScale );\n \n         this.displacementMap = source.displacementMap;\n         this.displacementScale = source.displacementScale;\n         this.displacementBias = source.displacementBias;\n \n         this.alphaMap = source.alphaMap;\n \n         this.wireframe = source.wireframe;\n         this.wireframeLinewidth = source.wireframeLinewidth;\n         this.wireframeLinecap = source.wireframeLinecap;\n         this.wireframeLinejoin = source.wireframeLinejoin;\n \n         return this;\n \n     }\n \n }\n \n MeshToonMaterial.prototype.isMeshToonMaterial = true;\n \n class MeshNormalMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.type = 'MeshNormalMaterial';\n \n         this.bumpMap = null;\n         this.bumpScale = 1;\n \n         this.normalMap = null;\n         this.normalMapType = TangentSpaceNormalMap;\n         this.normalScale = new Vector2( 1, 1 );\n \n         this.displacementMap = null;\n         this.displacementScale = 1;\n         this.displacementBias = 0;\n \n         this.wireframe = false;\n         this.wireframeLinewidth = 1;\n \n         this.fog = false;\n \n         this.flatShading = false;\n \n         this.setValues( parameters );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.bumpMap = source.bumpMap;\n         this.bumpScale = source.bumpScale;\n \n         this.normalMap = source.normalMap;\n         this.normalMapType = source.normalMapType;\n         this.normalScale.copy( source.normalScale );\n \n         this.displacementMap = source.displacementMap;\n         this.displacementScale = source.displacementScale;\n         this.displacementBias = source.displacementBias;\n \n         this.wireframe = source.wireframe;\n         this.wireframeLinewidth = source.wireframeLinewidth;\n \n         this.flatShading = source.flatShading;\n \n         return this;\n \n     }\n \n }\n \n MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n \n class MeshLambertMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.type = 'MeshLambertMaterial';\n \n         this.color = new Color( 0xffffff ); // diffuse\n \n         this.map = null;\n \n         this.lightMap = null;\n         this.lightMapIntensity = 1.0;\n \n         this.aoMap = null;\n         this.aoMapIntensity = 1.0;\n \n         this.emissive = new Color( 0x000000 );\n         this.emissiveIntensity = 1.0;\n         this.emissiveMap = null;\n \n         this.specularMap = null;\n \n         this.alphaMap = null;\n \n         this.envMap = null;\n         this.combine = MultiplyOperation;\n         this.reflectivity = 1;\n         this.refractionRatio = 0.98;\n \n         this.wireframe = false;\n         this.wireframeLinewidth = 1;\n         this.wireframeLinecap = 'round';\n         this.wireframeLinejoin = 'round';\n \n         this.setValues( parameters );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.color.copy( source.color );\n \n         this.map = source.map;\n \n         this.lightMap = source.lightMap;\n         this.lightMapIntensity = source.lightMapIntensity;\n \n         this.aoMap = source.aoMap;\n         this.aoMapIntensity = source.aoMapIntensity;\n \n         this.emissive.copy( source.emissive );\n         this.emissiveMap = source.emissiveMap;\n         this.emissiveIntensity = source.emissiveIntensity;\n \n         this.specularMap = source.specularMap;\n \n         this.alphaMap = source.alphaMap;\n \n         this.envMap = source.envMap;\n         this.combine = source.combine;\n         this.reflectivity = source.reflectivity;\n         this.refractionRatio = source.refractionRatio;\n \n         this.wireframe = source.wireframe;\n         this.wireframeLinewidth = source.wireframeLinewidth;\n         this.wireframeLinecap = source.wireframeLinecap;\n         this.wireframeLinejoin = source.wireframeLinejoin;\n \n         return this;\n \n     }\n \n }\n \n MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n \n class MeshMatcapMaterial extends Material {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.defines = { 'MATCAP': '' };\n \n         this.type = 'MeshMatcapMaterial';\n \n         this.color = new Color( 0xffffff ); // diffuse\n \n         this.matcap = null;\n \n         this.map = null;\n \n         this.bumpMap = null;\n         this.bumpScale = 1;\n \n         this.normalMap = null;\n         this.normalMapType = TangentSpaceNormalMap;\n         this.normalScale = new Vector2( 1, 1 );\n \n         this.displacementMap = null;\n         this.displacementScale = 1;\n         this.displacementBias = 0;\n \n         this.alphaMap = null;\n \n         this.flatShading = false;\n \n         this.setValues( parameters );\n \n     }\n \n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.defines = { 'MATCAP': '' };\n \n         this.color.copy( source.color );\n \n         this.matcap = source.matcap;\n \n         this.map = source.map;\n \n         this.bumpMap = source.bumpMap;\n         this.bumpScale = source.bumpScale;\n \n         this.normalMap = source.normalMap;\n         this.normalMapType = source.normalMapType;\n         this.normalScale.copy( source.normalScale );\n \n         this.displacementMap = source.displacementMap;\n         this.displacementScale = source.displacementScale;\n         this.displacementBias = source.displacementBias;\n \n         this.alphaMap = source.alphaMap;\n \n         this.flatShading = source.flatShading;\n \n         return this;\n \n     }\n \n }\n \n MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n \n class LineDashedMaterial extends LineBasicMaterial {\n \n     constructor( parameters ) {\n \n         super();\n \n         this.type = 'LineDashedMaterial';\n \n         this.scale = 1;\n         this.dashSize = 3;\n         this.gapSize = 1;\n \n         this.setValues( parameters );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.scale = source.scale;\n         this.dashSize = source.dashSize;\n         this.gapSize = source.gapSize;\n \n         return this;\n \n     }\n \n }\n \n LineDashedMaterial.prototype.isLineDashedMaterial = true;\n \n const materialLib = {\n     ShadowMaterial,\n     SpriteMaterial,\n     RawShaderMaterial,\n     ShaderMaterial,\n     PointsMaterial,\n     MeshPhysicalMaterial,\n     MeshStandardMaterial,\n     MeshPhongMaterial,\n     MeshToonMaterial,\n     MeshNormalMaterial,\n     MeshLambertMaterial,\n     MeshDepthMaterial,\n     MeshDistanceMaterial,\n     MeshBasicMaterial,\n     MeshMatcapMaterial,\n     LineDashedMaterial,\n     LineBasicMaterial,\n     Material\n };\n \n Material.fromType = function ( type ) {\n \n     return new materialLib[ type ]();\n \n };\n \n const AnimationUtils = {\n \n     // same as Array.prototype.slice, but also works on typed arrays\n     arraySlice: function ( array, from, to ) {\n \n         if ( AnimationUtils.isTypedArray( array ) ) {\n \n             // in ios9 array.subarray(from, undefined) will return empty array\n             // but array.subarray(from) or array.subarray(from, len) is correct\n             return new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n \n         }\n \n         return array.slice( from, to );\n \n     },\n \n     // converts an array to a specific type\n     convertArray: function ( array, type, forceClone ) {\n \n         if ( ! array || // let 'undefined' and 'null' pass\n             ! forceClone && array.constructor === type ) return array;\n \n         if ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n \n             return new type( array ); // create typed array\n \n         }\n \n         return Array.prototype.slice.call( array ); // create Array\n \n     },\n \n     isTypedArray: function ( object ) {\n \n         return ArrayBuffer.isView( object ) &&\n             ! ( object instanceof DataView );\n \n     },\n \n     // returns an array by which times and values can be sorted\n     getKeyframeOrder: function ( times ) {\n \n         function compareTime( i, j ) {\n \n             return times[ i ] - times[ j ];\n \n         }\n \n         const n = times.length;\n         const result = new Array( n );\n         for ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n \n         result.sort( compareTime );\n \n         return result;\n \n     },\n \n     // uses the array previously returned by 'getKeyframeOrder' to sort data\n     sortedArray: function ( values, stride, order ) {\n \n         const nValues = values.length;\n         const result = new values.constructor( nValues );\n \n         for ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n \n             const srcOffset = order[ i ] * stride;\n \n             for ( let j = 0; j !== stride; ++ j ) {\n \n                 result[ dstOffset ++ ] = values[ srcOffset + j ];\n \n             }\n \n         }\n \n         return result;\n \n     },\n \n     // function for parsing AOS keyframe formats\n     flattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n \n         let i = 1, key = jsonKeys[ 0 ];\n \n         while ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n \n             key = jsonKeys[ i ++ ];\n \n         }\n \n         if ( key === undefined ) return; // no data\n \n         let value = key[ valuePropertyName ];\n         if ( value === undefined ) return; // no data\n \n         if ( Array.isArray( value ) ) {\n \n             do {\n \n                 value = key[ valuePropertyName ];\n \n                 if ( value !== undefined ) {\n \n                     times.push( key.time );\n                     values.push.apply( values, value ); // push all elements\n \n                 }\n \n                 key = jsonKeys[ i ++ ];\n \n             } while ( key !== undefined );\n \n         } else if ( value.toArray !== undefined ) {\n \n             // ...assume THREE.Math-ish\n \n             do {\n \n                 value = key[ valuePropertyName ];\n \n                 if ( value !== undefined ) {\n \n                     times.push( key.time );\n                     value.toArray( values, values.length );\n \n                 }\n \n                 key = jsonKeys[ i ++ ];\n \n             } while ( key !== undefined );\n \n         } else {\n \n             // otherwise push as-is\n \n             do {\n \n                 value = key[ valuePropertyName ];\n \n                 if ( value !== undefined ) {\n \n                     times.push( key.time );\n                     values.push( value );\n \n                 }\n \n                 key = jsonKeys[ i ++ ];\n \n             } while ( key !== undefined );\n \n         }\n \n     },\n \n     subclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n \n         const clip = sourceClip.clone();\n \n         clip.name = name;\n \n         const tracks = [];\n \n         for ( let i = 0; i < clip.tracks.length; ++ i ) {\n \n             const track = clip.tracks[ i ];\n             const valueSize = track.getValueSize();\n \n             const times = [];\n             const values = [];\n \n             for ( let j = 0; j < track.times.length; ++ j ) {\n \n                 const frame = track.times[ j ] * fps;\n \n                 if ( frame < startFrame || frame >= endFrame ) continue;\n \n                 times.push( track.times[ j ] );\n \n                 for ( let k = 0; k < valueSize; ++ k ) {\n \n                     values.push( track.values[ j * valueSize + k ] );\n \n                 }\n \n             }\n \n             if ( times.length === 0 ) continue;\n \n             track.times = AnimationUtils.convertArray( times, track.times.constructor );\n             track.values = AnimationUtils.convertArray( values, track.values.constructor );\n \n             tracks.push( track );\n \n         }\n \n         clip.tracks = tracks;\n \n         // find minimum .times value across all tracks in the trimmed clip\n \n         let minStartTime = Infinity;\n \n         for ( let i = 0; i < clip.tracks.length; ++ i ) {\n \n             if ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n \n                 minStartTime = clip.tracks[ i ].times[ 0 ];\n \n             }\n \n         }\n \n         // shift all tracks such that clip begins at t=0\n \n         for ( let i = 0; i < clip.tracks.length; ++ i ) {\n \n             clip.tracks[ i ].shift( - 1 * minStartTime );\n \n         }\n \n         clip.resetDuration();\n \n         return clip;\n \n     },\n \n     makeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n \n         if ( fps <= 0 ) fps = 30;\n \n         const numTracks = referenceClip.tracks.length;\n         const referenceTime = referenceFrame / fps;\n \n         // Make each track's values relative to the values at the reference frame\n         for ( let i = 0; i < numTracks; ++ i ) {\n \n             const referenceTrack = referenceClip.tracks[ i ];\n             const referenceTrackType = referenceTrack.ValueTypeName;\n \n             // Skip this track if it's non-numeric\n             if ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n \n             // Find the track in the target clip whose name and type matches the reference track\n             const targetTrack = targetClip.tracks.find( function ( track ) {\n \n                 return track.name === referenceTrack.name\n                     && track.ValueTypeName === referenceTrackType;\n \n             } );\n \n             if ( targetTrack === undefined ) continue;\n \n             let referenceOffset = 0;\n             const referenceValueSize = referenceTrack.getValueSize();\n \n             if ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n \n                 referenceOffset = referenceValueSize / 3;\n \n             }\n \n             let targetOffset = 0;\n             const targetValueSize = targetTrack.getValueSize();\n \n             if ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n \n                 targetOffset = targetValueSize / 3;\n \n             }\n \n             const lastIndex = referenceTrack.times.length - 1;\n             let referenceValue;\n \n             // Find the value to subtract out of the track\n             if ( referenceTime <= referenceTrack.times[ 0 ] ) {\n \n                 // Reference frame is earlier than the first keyframe, so just use the first keyframe\n                 const startIndex = referenceOffset;\n                 const endIndex = referenceValueSize - referenceOffset;\n                 referenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n \n             } else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n \n                 // Reference frame is after the last keyframe, so just use the last keyframe\n                 const startIndex = lastIndex * referenceValueSize + referenceOffset;\n                 const endIndex = startIndex + referenceValueSize - referenceOffset;\n                 referenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n \n             } else {\n \n                 // Interpolate to the reference value\n                 const interpolant = referenceTrack.createInterpolant();\n                 const startIndex = referenceOffset;\n                 const endIndex = referenceValueSize - referenceOffset;\n                 interpolant.evaluate( referenceTime );\n                 referenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n \n             }\n \n             // Conjugate the quaternion\n             if ( referenceTrackType === 'quaternion' ) {\n \n                 const referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n                 referenceQuat.toArray( referenceValue );\n \n             }\n \n             // Subtract the reference value from all of the track values\n \n             const numTimes = targetTrack.times.length;\n             for ( let j = 0; j < numTimes; ++ j ) {\n \n                 const valueStart = j * targetValueSize + targetOffset;\n \n                 if ( referenceTrackType === 'quaternion' ) {\n \n                     // Multiply the conjugate for quaternion track types\n                     Quaternion.multiplyQuaternionsFlat(\n                         targetTrack.values,\n                         valueStart,\n                         referenceValue,\n                         0,\n                         targetTrack.values,\n                         valueStart\n                     );\n \n                 } else {\n \n                     const valueEnd = targetValueSize - targetOffset * 2;\n \n                     // Subtract each value for all other numeric track types\n                     for ( let k = 0; k < valueEnd; ++ k ) {\n \n                         targetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n \n                     }\n \n                 }\n \n             }\n \n         }\n \n         targetClip.blendMode = AdditiveAnimationBlendMode;\n \n         return targetClip;\n \n     }\n \n };\n \n /**\n  * Abstract base class of interpolants over parametric samples.\n  *\n  * The parameter domain is one dimensional, typically the time or a path\n  * along a curve defined by the data.\n  *\n  * The sample values can have any dimensionality and derived classes may\n  * apply special interpretations to the data.\n  *\n  * This class provides the interval seek in a Template Method, deferring\n  * the actual interpolation to derived classes.\n  *\n  * Time complexity is O(1) for linear access crossing at most two points\n  * and O(log N) for random access, where N is the number of positions.\n  *\n  * References:\n  *\n  * \t\thttp://www.oodesign.com/template-method-pattern.html\n  *\n  */\n \n class Interpolant {\n \n     constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n \n         this.parameterPositions = parameterPositions;\n         this._cachedIndex = 0;\n \n         this.resultBuffer = resultBuffer !== undefined ?\n             resultBuffer : new sampleValues.constructor( sampleSize );\n         this.sampleValues = sampleValues;\n         this.valueSize = sampleSize;\n \n         this.settings = null;\n         this.DefaultSettings_ = {};\n \n     }\n \n     evaluate( t ) {\n \n         const pp = this.parameterPositions;\n         let i1 = this._cachedIndex,\n             t1 = pp[ i1 ],\n             t0 = pp[ i1 - 1 ];\n \n         validate_interval: {\n \n             seek: {\n \n                 let right;\n \n                 linear_scan: {\n \n                     //- See http://jsperf.com/comparison-to-undefined/3\n                     //- slower code:\n                     //-\n                     //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n                     forward_scan: if ( ! ( t < t1 ) ) {\n \n                         for ( let giveUpAt = i1 + 2; ; ) {\n \n                             if ( t1 === undefined ) {\n \n                                 if ( t < t0 ) break forward_scan;\n \n                                 // after end\n \n                                 i1 = pp.length;\n                                 this._cachedIndex = i1;\n                                 return this.afterEnd_( i1 - 1, t, t0 );\n \n                             }\n \n                             if ( i1 === giveUpAt ) break; // this loop\n \n                             t0 = t1;\n                             t1 = pp[ ++ i1 ];\n \n                             if ( t < t1 ) {\n \n                                 // we have arrived at the sought interval\n                                 break seek;\n \n                             }\n \n                         }\n \n                         // prepare binary search on the right side of the index\n                         right = pp.length;\n                         break linear_scan;\n \n                     }\n \n                     //- slower code:\n                     //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n                     if ( ! ( t >= t0 ) ) {\n \n                         // looping?\n \n                         const t1global = pp[ 1 ];\n \n                         if ( t < t1global ) {\n \n                             i1 = 2; // + 1, using the scan for the details\n                             t0 = t1global;\n \n                         }\n \n                         // linear reverse scan\n \n                         for ( let giveUpAt = i1 - 2; ; ) {\n \n                             if ( t0 === undefined ) {\n \n                                 // before start\n \n                                 this._cachedIndex = 0;\n                                 return this.beforeStart_( 0, t, t1 );\n \n                             }\n \n                             if ( i1 === giveUpAt ) break; // this loop\n \n                             t1 = t0;\n                             t0 = pp[ -- i1 - 1 ];\n \n                             if ( t >= t0 ) {\n \n                                 // we have arrived at the sought interval\n                                 break seek;\n \n                             }\n \n                         }\n \n                         // prepare binary search on the left side of the index\n                         right = i1;\n                         i1 = 0;\n                         break linear_scan;\n \n                     }\n \n                     // the interval is valid\n \n                     break validate_interval;\n \n                 } // linear scan\n \n                 // binary search\n \n                 while ( i1 < right ) {\n \n                     const mid = ( i1 + right ) >>> 1;\n \n                     if ( t < pp[ mid ] ) {\n \n                         right = mid;\n \n                     } else {\n \n                         i1 = mid + 1;\n \n                     }\n \n                 }\n \n                 t1 = pp[ i1 ];\n                 t0 = pp[ i1 - 1 ];\n \n                 // check boundary cases, again\n \n                 if ( t0 === undefined ) {\n \n                     this._cachedIndex = 0;\n                     return this.beforeStart_( 0, t, t1 );\n \n                 }\n \n                 if ( t1 === undefined ) {\n \n                     i1 = pp.length;\n                     this._cachedIndex = i1;\n                     return this.afterEnd_( i1 - 1, t0, t );\n \n                 }\n \n             } // seek\n \n             this._cachedIndex = i1;\n \n             this.intervalChanged_( i1, t0, t1 );\n \n         } // validate_interval\n \n         return this.interpolate_( i1, t0, t, t1 );\n \n     }\n \n     getSettings_() {\n \n         return this.settings || this.DefaultSettings_;\n \n     }\n \n     copySampleValue_( index ) {\n \n         // copies a sample value to the result buffer\n \n         const result = this.resultBuffer,\n             values = this.sampleValues,\n             stride = this.valueSize,\n             offset = index * stride;\n \n         for ( let i = 0; i !== stride; ++ i ) {\n \n             result[ i ] = values[ offset + i ];\n \n         }\n \n         return result;\n \n     }\n \n     // Template methods for derived classes:\n \n     interpolate_( /* i1, t0, t, t1 */ ) {\n \n         throw new Error( 'call to abstract method' );\n         // implementations shall return this.resultBuffer\n \n     }\n \n     intervalChanged_( /* i1, t0, t1 */ ) {\n \n         // empty\n \n     }\n \n }\n \n // ALIAS DEFINITIONS\n \n Interpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\n Interpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n \n /**\n  * Fast and simple cubic spline interpolant.\n  *\n  * It was derived from a Hermitian construction setting the first derivative\n  * at each sample position to the linear slope between neighboring positions\n  * over their parameter interval.\n  */\n \n class CubicInterpolant extends Interpolant {\n \n     constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n \n         super( parameterPositions, sampleValues, sampleSize, resultBuffer );\n \n         this._weightPrev = - 0;\n         this._offsetPrev = - 0;\n         this._weightNext = - 0;\n         this._offsetNext = - 0;\n \n         this.DefaultSettings_ = {\n \n             endingStart: ZeroCurvatureEnding,\n             endingEnd: ZeroCurvatureEnding\n \n         };\n \n     }\n \n     intervalChanged_( i1, t0, t1 ) {\n \n         const pp = this.parameterPositions;\n         let iPrev = i1 - 2,\n             iNext = i1 + 1,\n \n             tPrev = pp[ iPrev ],\n             tNext = pp[ iNext ];\n \n         if ( tPrev === undefined ) {\n \n             switch ( this.getSettings_().endingStart ) {\n \n                 case ZeroSlopeEnding:\n \n                     // f'(t0) = 0\n                     iPrev = i1;\n                     tPrev = 2 * t0 - t1;\n \n                     break;\n \n                 case WrapAroundEnding:\n \n                     // use the other end of the curve\n                     iPrev = pp.length - 2;\n                     tPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n \n                     break;\n \n                 default: // ZeroCurvatureEnding\n \n                     // f''(t0) = 0 a.k.a. Natural Spline\n                     iPrev = i1;\n                     tPrev = t1;\n \n             }\n \n         }\n \n         if ( tNext === undefined ) {\n \n             switch ( this.getSettings_().endingEnd ) {\n \n                 case ZeroSlopeEnding:\n \n                     // f'(tN) = 0\n                     iNext = i1;\n                     tNext = 2 * t1 - t0;\n \n                     break;\n \n                 case WrapAroundEnding:\n \n                     // use the other end of the curve\n                     iNext = 1;\n                     tNext = t1 + pp[ 1 ] - pp[ 0 ];\n \n                     break;\n \n                 default: // ZeroCurvatureEnding\n \n                     // f''(tN) = 0, a.k.a. Natural Spline\n                     iNext = i1 - 1;\n                     tNext = t0;\n \n             }\n \n         }\n \n         const halfDt = ( t1 - t0 ) * 0.5,\n             stride = this.valueSize;\n \n         this._weightPrev = halfDt / ( t0 - tPrev );\n         this._weightNext = halfDt / ( tNext - t1 );\n         this._offsetPrev = iPrev * stride;\n         this._offsetNext = iNext * stride;\n \n     }\n \n     interpolate_( i1, t0, t, t1 ) {\n \n         const result = this.resultBuffer,\n             values = this.sampleValues,\n             stride = this.valueSize,\n \n             o1 = i1 * stride,\t\to0 = o1 - stride,\n             oP = this._offsetPrev, \toN = this._offsetNext,\n             wP = this._weightPrev,\twN = this._weightNext,\n \n             p = ( t - t0 ) / ( t1 - t0 ),\n             pp = p * p,\n             ppp = pp * p;\n \n         // evaluate polynomials\n \n         const sP = - wP * ppp + 2 * wP * pp - wP * p;\n         const s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n         const s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n         const sN = wN * ppp - wN * pp;\n \n         // combine data linearly\n \n         for ( let i = 0; i !== stride; ++ i ) {\n \n             result[ i ] =\n                     sP * values[ oP + i ] +\n                     s0 * values[ o0 + i ] +\n                     s1 * values[ o1 + i ] +\n                     sN * values[ oN + i ];\n \n         }\n \n         return result;\n \n     }\n \n }\n \n class LinearInterpolant extends Interpolant {\n \n     constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n \n         super( parameterPositions, sampleValues, sampleSize, resultBuffer );\n \n     }\n \n     interpolate_( i1, t0, t, t1 ) {\n \n         const result = this.resultBuffer,\n             values = this.sampleValues,\n             stride = this.valueSize,\n \n             offset1 = i1 * stride,\n             offset0 = offset1 - stride,\n \n             weight1 = ( t - t0 ) / ( t1 - t0 ),\n             weight0 = 1 - weight1;\n \n         for ( let i = 0; i !== stride; ++ i ) {\n \n             result[ i ] =\n                     values[ offset0 + i ] * weight0 +\n                     values[ offset1 + i ] * weight1;\n \n         }\n \n         return result;\n \n     }\n \n }\n \n /**\n  *\n  * Interpolant that evaluates to the sample value at the position preceding\n  * the parameter.\n  */\n \n class DiscreteInterpolant extends Interpolant {\n \n     constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n \n         super( parameterPositions, sampleValues, sampleSize, resultBuffer );\n \n     }\n \n     interpolate_( i1 /*, t0, t, t1 */ ) {\n \n         return this.copySampleValue_( i1 - 1 );\n \n     }\n \n }\n \n class KeyframeTrack {\n \n     constructor( name, times, values, interpolation ) {\n \n         if ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n         if ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n \n         this.name = name;\n \n         this.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n         this.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n \n         this.setInterpolation( interpolation || this.DefaultInterpolation );\n \n     }\n \n     // Serialization (in static context, because of constructor invocation\n     // and automatic invocation of .toJSON):\n \n     static toJSON( track ) {\n \n         const trackType = track.constructor;\n \n         let json;\n \n         // derived classes can define a static toJSON method\n         if ( trackType.toJSON !== this.toJSON ) {\n \n             json = trackType.toJSON( track );\n \n         } else {\n \n             // by default, we assume the data can be serialized as-is\n             json = {\n \n                 'name': track.name,\n                 'times': AnimationUtils.convertArray( track.times, Array ),\n                 'values': AnimationUtils.convertArray( track.values, Array )\n \n             };\n \n             const interpolation = track.getInterpolation();\n \n             if ( interpolation !== track.DefaultInterpolation ) {\n \n                 json.interpolation = interpolation;\n \n             }\n \n         }\n \n         json.type = track.ValueTypeName; // mandatory\n \n         return json;\n \n     }\n \n     InterpolantFactoryMethodDiscrete( result ) {\n \n         return new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n \n     }\n \n     InterpolantFactoryMethodLinear( result ) {\n \n         return new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n \n     }\n \n     InterpolantFactoryMethodSmooth( result ) {\n \n         return new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n \n     }\n \n     setInterpolation( interpolation ) {\n \n         let factoryMethod;\n \n         switch ( interpolation ) {\n \n             case InterpolateDiscrete:\n \n                 factoryMethod = this.InterpolantFactoryMethodDiscrete;\n \n                 break;\n \n             case InterpolateLinear:\n \n                 factoryMethod = this.InterpolantFactoryMethodLinear;\n \n                 break;\n \n             case InterpolateSmooth:\n \n                 factoryMethod = this.InterpolantFactoryMethodSmooth;\n \n                 break;\n \n         }\n \n         if ( factoryMethod === undefined ) {\n \n             const message = 'unsupported interpolation for ' +\n                 this.ValueTypeName + ' keyframe track named ' + this.name;\n \n             if ( this.createInterpolant === undefined ) {\n \n                 // fall back to default, unless the default itself is messed up\n                 if ( interpolation !== this.DefaultInterpolation ) {\n \n                     this.setInterpolation( this.DefaultInterpolation );\n \n                 } else {\n \n                     throw new Error( message ); // fatal, in this case\n \n                 }\n \n             }\n \n             console.warn( 'THREE.KeyframeTrack:', message );\n             return this;\n \n         }\n \n         this.createInterpolant = factoryMethod;\n \n         return this;\n \n     }\n \n     getInterpolation() {\n \n         switch ( this.createInterpolant ) {\n \n             case this.InterpolantFactoryMethodDiscrete:\n \n                 return InterpolateDiscrete;\n \n             case this.InterpolantFactoryMethodLinear:\n \n                 return InterpolateLinear;\n \n             case this.InterpolantFactoryMethodSmooth:\n \n                 return InterpolateSmooth;\n \n         }\n \n     }\n \n     getValueSize() {\n \n         return this.values.length / this.times.length;\n \n     }\n \n     // move all keyframes either forwards or backwards in time\n     shift( timeOffset ) {\n \n         if ( timeOffset !== 0.0 ) {\n \n             const times = this.times;\n \n             for ( let i = 0, n = times.length; i !== n; ++ i ) {\n \n                 times[ i ] += timeOffset;\n \n             }\n \n         }\n \n         return this;\n \n     }\n \n     // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n     scale( timeScale ) {\n \n         if ( timeScale !== 1.0 ) {\n \n             const times = this.times;\n \n             for ( let i = 0, n = times.length; i !== n; ++ i ) {\n \n                 times[ i ] *= timeScale;\n \n             }\n \n         }\n \n         return this;\n \n     }\n \n     // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n     // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n     trim( startTime, endTime ) {\n \n         const times = this.times,\n             nKeys = times.length;\n \n         let from = 0,\n             to = nKeys - 1;\n \n         while ( from !== nKeys && times[ from ] < startTime ) {\n \n             ++ from;\n \n         }\n \n         while ( to !== - 1 && times[ to ] > endTime ) {\n \n             -- to;\n \n         }\n \n         ++ to; // inclusive -> exclusive bound\n \n         if ( from !== 0 || to !== nKeys ) {\n \n             // empty tracks are forbidden, so keep at least one keyframe\n             if ( from >= to ) {\n \n                 to = Math.max( to, 1 );\n                 from = to - 1;\n \n             }\n \n             const stride = this.getValueSize();\n             this.times = AnimationUtils.arraySlice( times, from, to );\n             this.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n \n         }\n \n         return this;\n \n     }\n \n     // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n     validate() {\n \n         let valid = true;\n \n         const valueSize = this.getValueSize();\n         if ( valueSize - Math.floor( valueSize ) !== 0 ) {\n \n             console.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n             valid = false;\n \n         }\n \n         const times = this.times,\n             values = this.values,\n \n             nKeys = times.length;\n \n         if ( nKeys === 0 ) {\n \n             console.error( 'THREE.KeyframeTrack: Track is empty.', this );\n             valid = false;\n \n         }\n \n         let prevTime = null;\n \n         for ( let i = 0; i !== nKeys; i ++ ) {\n \n             const currTime = times[ i ];\n \n             if ( typeof currTime === 'number' && isNaN( currTime ) ) {\n \n                 console.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n                 valid = false;\n                 break;\n \n             }\n \n             if ( prevTime !== null && prevTime > currTime ) {\n \n                 console.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n                 valid = false;\n                 break;\n \n             }\n \n             prevTime = currTime;\n \n         }\n \n         if ( values !== undefined ) {\n \n             if ( AnimationUtils.isTypedArray( values ) ) {\n \n                 for ( let i = 0, n = values.length; i !== n; ++ i ) {\n \n                     const value = values[ i ];\n \n                     if ( isNaN( value ) ) {\n \n                         console.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n                         valid = false;\n                         break;\n \n                     }\n \n                 }\n \n             }\n \n         }\n \n         return valid;\n \n     }\n \n     // removes equivalent sequential keys as common in morph target sequences\n     // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n     optimize() {\n \n         // times or values may be shared with other tracks, so overwriting is unsafe\n         const times = AnimationUtils.arraySlice( this.times ),\n             values = AnimationUtils.arraySlice( this.values ),\n             stride = this.getValueSize(),\n \n             smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n \n             lastIndex = times.length - 1;\n \n         let writeIndex = 1;\n \n         for ( let i = 1; i < lastIndex; ++ i ) {\n \n             let keep = false;\n \n             const time = times[ i ];\n             const timeNext = times[ i + 1 ];\n \n             // remove adjacent keyframes scheduled at the same time\n \n             if ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n \n                 if ( ! smoothInterpolation ) {\n \n                     // remove unnecessary keyframes same as their neighbors\n \n                     const offset = i * stride,\n                         offsetP = offset - stride,\n                         offsetN = offset + stride;\n \n                     for ( let j = 0; j !== stride; ++ j ) {\n \n                         const value = values[ offset + j ];\n \n                         if ( value !== values[ offsetP + j ] ||\n                             value !== values[ offsetN + j ] ) {\n \n                             keep = true;\n                             break;\n \n                         }\n \n                     }\n \n                 } else {\n \n                     keep = true;\n \n                 }\n \n             }\n \n             // in-place compaction\n \n             if ( keep ) {\n \n                 if ( i !== writeIndex ) {\n \n                     times[ writeIndex ] = times[ i ];\n \n                     const readOffset = i * stride,\n                         writeOffset = writeIndex * stride;\n \n                     for ( let j = 0; j !== stride; ++ j ) {\n \n                         values[ writeOffset + j ] = values[ readOffset + j ];\n \n                     }\n \n                 }\n \n                 ++ writeIndex;\n \n             }\n \n         }\n \n         // flush last keyframe (compaction looks ahead)\n \n         if ( lastIndex > 0 ) {\n \n             times[ writeIndex ] = times[ lastIndex ];\n \n             for ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n \n                 values[ writeOffset + j ] = values[ readOffset + j ];\n \n             }\n \n             ++ writeIndex;\n \n         }\n \n         if ( writeIndex !== times.length ) {\n \n             this.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n             this.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n \n         } else {\n \n             this.times = times;\n             this.values = values;\n \n         }\n \n         return this;\n \n     }\n \n     clone() {\n \n         const times = AnimationUtils.arraySlice( this.times, 0 );\n         const values = AnimationUtils.arraySlice( this.values, 0 );\n \n         const TypedKeyframeTrack = this.constructor;\n         const track = new TypedKeyframeTrack( this.name, times, values );\n \n         // Interpolant argument to constructor is not saved, so copy the factory method directly.\n         track.createInterpolant = this.createInterpolant;\n \n         return track;\n \n     }\n \n }\n \n KeyframeTrack.prototype.TimeBufferType = Float32Array;\n KeyframeTrack.prototype.ValueBufferType = Float32Array;\n KeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n \n /**\n  * A Track of Boolean keyframe values.\n  */\n class BooleanKeyframeTrack extends KeyframeTrack {}\n \n BooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\n BooleanKeyframeTrack.prototype.ValueBufferType = Array;\n BooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n \n /**\n  * A Track of keyframe values that represent color.\n  */\n class ColorKeyframeTrack extends KeyframeTrack {}\n \n ColorKeyframeTrack.prototype.ValueTypeName = 'color';\n \n /**\n  * A Track of numeric keyframe values.\n  */\n class NumberKeyframeTrack extends KeyframeTrack {}\n \n NumberKeyframeTrack.prototype.ValueTypeName = 'number';\n \n /**\n  * Spherical linear unit quaternion interpolant.\n  */\n \n class QuaternionLinearInterpolant extends Interpolant {\n \n     constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n \n         super( parameterPositions, sampleValues, sampleSize, resultBuffer );\n \n     }\n \n     interpolate_( i1, t0, t, t1 ) {\n \n         const result = this.resultBuffer,\n             values = this.sampleValues,\n             stride = this.valueSize,\n \n             alpha = ( t - t0 ) / ( t1 - t0 );\n \n         let offset = i1 * stride;\n \n         for ( let end = offset + stride; offset !== end; offset += 4 ) {\n \n             Quaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n \n         }\n \n         return result;\n \n     }\n \n }\n \n /**\n  * A Track of quaternion keyframe values.\n  */\n class QuaternionKeyframeTrack extends KeyframeTrack {\n \n     InterpolantFactoryMethodLinear( result ) {\n \n         return new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n \n     }\n \n }\n \n QuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n // ValueBufferType is inherited\n QuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n \n /**\n  * A Track that interpolates Strings\n  */\n class StringKeyframeTrack extends KeyframeTrack {}\n \n StringKeyframeTrack.prototype.ValueTypeName = 'string';\n StringKeyframeTrack.prototype.ValueBufferType = Array;\n StringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n \n /**\n  * A Track of vectored keyframe values.\n  */\n class VectorKeyframeTrack extends KeyframeTrack {}\n \n VectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n \n class AnimationClip {\n \n     constructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n \n         this.name = name;\n         this.tracks = tracks;\n         this.duration = duration;\n         this.blendMode = blendMode;\n \n         this.uuid = generateUUID();\n \n         // this means it should figure out its duration by scanning the tracks\n         if ( this.duration < 0 ) {\n \n             this.resetDuration();\n \n         }\n \n     }\n \n \n     static parse( json ) {\n \n         const tracks = [],\n             jsonTracks = json.tracks,\n             frameTime = 1.0 / ( json.fps || 1.0 );\n \n         for ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n \n             tracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n \n         }\n \n         const clip = new this( json.name, json.duration, tracks, json.blendMode );\n         clip.uuid = json.uuid;\n \n         return clip;\n \n     }\n \n     static toJSON( clip ) {\n \n         const tracks = [],\n             clipTracks = clip.tracks;\n \n         const json = {\n \n             'name': clip.name,\n             'duration': clip.duration,\n             'tracks': tracks,\n             'uuid': clip.uuid,\n             'blendMode': clip.blendMode\n \n         };\n \n         for ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n \n             tracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n \n         }\n \n         return json;\n \n     }\n \n     static CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n \n         const numMorphTargets = morphTargetSequence.length;\n         const tracks = [];\n \n         for ( let i = 0; i < numMorphTargets; i ++ ) {\n \n             let times = [];\n             let values = [];\n \n             times.push(\n                 ( i + numMorphTargets - 1 ) % numMorphTargets,\n                 i,\n                 ( i + 1 ) % numMorphTargets );\n \n             values.push( 0, 1, 0 );\n \n             const order = AnimationUtils.getKeyframeOrder( times );\n             times = AnimationUtils.sortedArray( times, 1, order );\n             values = AnimationUtils.sortedArray( values, 1, order );\n \n             // if there is a key at the first frame, duplicate it as the\n             // last frame as well for perfect loop.\n             if ( ! noLoop && times[ 0 ] === 0 ) {\n \n                 times.push( numMorphTargets );\n                 values.push( values[ 0 ] );\n \n             }\n \n             tracks.push(\n                 new NumberKeyframeTrack(\n                     '.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n                     times, values\n                 ).scale( 1.0 / fps ) );\n \n         }\n \n         return new this( name, - 1, tracks );\n \n     }\n \n     static findByName( objectOrClipArray, name ) {\n \n         let clipArray = objectOrClipArray;\n \n         if ( ! Array.isArray( objectOrClipArray ) ) {\n \n             const o = objectOrClipArray;\n             clipArray = o.geometry && o.geometry.animations || o.animations;\n \n         }\n \n         for ( let i = 0; i < clipArray.length; i ++ ) {\n \n             if ( clipArray[ i ].name === name ) {\n \n                 return clipArray[ i ];\n \n             }\n \n         }\n \n         return null;\n \n     }\n \n     static CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n \n         const animationToMorphTargets = {};\n \n         // tested with https://regex101.com/ on trick sequences\n         // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n         const pattern = /^([\\w-]*?)([\\d]+)$/;\n \n         // sort morph target names into animation groups based\n         // patterns like Walk_001, Walk_002, Run_001, Run_002\n         for ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n \n             const morphTarget = morphTargets[ i ];\n             const parts = morphTarget.name.match( pattern );\n \n             if ( parts && parts.length > 1 ) {\n \n                 const name = parts[ 1 ];\n \n                 let animationMorphTargets = animationToMorphTargets[ name ];\n \n                 if ( ! animationMorphTargets ) {\n \n                     animationToMorphTargets[ name ] = animationMorphTargets = [];\n \n                 }\n \n                 animationMorphTargets.push( morphTarget );\n \n             }\n \n         }\n \n         const clips = [];\n \n         for ( const name in animationToMorphTargets ) {\n \n             clips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n \n         }\n \n         return clips;\n \n     }\n \n     // parse the animation.hierarchy format\n     static parseAnimation( animation, bones ) {\n \n         if ( ! animation ) {\n \n             console.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n             return null;\n \n         }\n \n         const addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n \n             // only return track if there are actually keys.\n             if ( animationKeys.length !== 0 ) {\n \n                 const times = [];\n                 const values = [];\n \n                 AnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n \n                 // empty keys are filtered out, so check again\n                 if ( times.length !== 0 ) {\n \n                     destTracks.push( new trackType( trackName, times, values ) );\n \n                 }\n \n             }\n \n         };\n \n         const tracks = [];\n \n         const clipName = animation.name || 'default';\n         const fps = animation.fps || 30;\n         const blendMode = animation.blendMode;\n \n         // automatic length determination in AnimationClip.\n         let duration = animation.length || - 1;\n \n         const hierarchyTracks = animation.hierarchy || [];\n \n         for ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n \n             const animationKeys = hierarchyTracks[ h ].keys;\n \n             // skip empty tracks\n             if ( ! animationKeys || animationKeys.length === 0 ) continue;\n \n             // process morph targets\n             if ( animationKeys[ 0 ].morphTargets ) {\n \n                 // figure out all morph targets used in this track\n                 const morphTargetNames = {};\n \n                 let k;\n \n                 for ( k = 0; k < animationKeys.length; k ++ ) {\n \n                     if ( animationKeys[ k ].morphTargets ) {\n \n                         for ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n \n                             morphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n \n                         }\n \n                     }\n \n                 }\n \n                 // create a track for each morph target with all zero\n                 // morphTargetInfluences except for the keys in which\n                 // the morphTarget is named.\n                 for ( const morphTargetName in morphTargetNames ) {\n \n                     const times = [];\n                     const values = [];\n \n                     for ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n \n                         const animationKey = animationKeys[ k ];\n \n                         times.push( animationKey.time );\n                         values.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n \n                     }\n \n                     tracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n \n                 }\n \n                 duration = morphTargetNames.length * fps;\n \n             } else {\n \n                 // ...assume skeletal animation\n \n                 const boneName = '.bones[' + bones[ h ].name + ']';\n \n                 addNonemptyTrack(\n                     VectorKeyframeTrack, boneName + '.position',\n                     animationKeys, 'pos', tracks );\n \n                 addNonemptyTrack(\n                     QuaternionKeyframeTrack, boneName + '.quaternion',\n                     animationKeys, 'rot', tracks );\n \n                 addNonemptyTrack(\n                     VectorKeyframeTrack, boneName + '.scale',\n                     animationKeys, 'scl', tracks );\n \n             }\n \n         }\n \n         if ( tracks.length === 0 ) {\n \n             return null;\n \n         }\n \n         const clip = new this( clipName, duration, tracks, blendMode );\n \n         return clip;\n \n     }\n \n     resetDuration() {\n \n         const tracks = this.tracks;\n         let duration = 0;\n \n         for ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n \n             const track = this.tracks[ i ];\n \n             duration = Math.max( duration, track.times[ track.times.length - 1 ] );\n \n         }\n \n         this.duration = duration;\n \n         return this;\n \n     }\n \n     trim() {\n \n         for ( let i = 0; i < this.tracks.length; i ++ ) {\n \n             this.tracks[ i ].trim( 0, this.duration );\n \n         }\n \n         return this;\n \n     }\n \n     validate() {\n \n         let valid = true;\n \n         for ( let i = 0; i < this.tracks.length; i ++ ) {\n \n             valid = valid && this.tracks[ i ].validate();\n \n         }\n \n         return valid;\n \n     }\n \n     optimize() {\n \n         for ( let i = 0; i < this.tracks.length; i ++ ) {\n \n             this.tracks[ i ].optimize();\n \n         }\n \n         return this;\n \n     }\n \n     clone() {\n \n         const tracks = [];\n \n         for ( let i = 0; i < this.tracks.length; i ++ ) {\n \n             tracks.push( this.tracks[ i ].clone() );\n \n         }\n \n         return new this.constructor( this.name, this.duration, tracks, this.blendMode );\n \n     }\n \n     toJSON() {\n \n         return this.constructor.toJSON( this );\n \n     }\n \n }\n \n function getTrackTypeForValueTypeName( typeName ) {\n \n     switch ( typeName.toLowerCase() ) {\n \n         case 'scalar':\n         case 'double':\n         case 'float':\n         case 'number':\n         case 'integer':\n \n             return NumberKeyframeTrack;\n \n         case 'vector':\n         case 'vector2':\n         case 'vector3':\n         case 'vector4':\n \n             return VectorKeyframeTrack;\n \n         case 'color':\n \n             return ColorKeyframeTrack;\n \n         case 'quaternion':\n \n             return QuaternionKeyframeTrack;\n \n         case 'bool':\n         case 'boolean':\n \n             return BooleanKeyframeTrack;\n \n         case 'string':\n \n             return StringKeyframeTrack;\n \n     }\n \n     throw new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n \n }\n \n function parseKeyframeTrack( json ) {\n \n     if ( json.type === undefined ) {\n \n         throw new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n \n     }\n \n     const trackType = getTrackTypeForValueTypeName( json.type );\n \n     if ( json.times === undefined ) {\n \n         const times = [], values = [];\n \n         AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n \n         json.times = times;\n         json.values = values;\n \n     }\n \n     // derived classes can define a static parse method\n     if ( trackType.parse !== undefined ) {\n \n         return trackType.parse( json );\n \n     } else {\n \n         // by default, we assume a constructor compatible with the base\n         return new trackType( json.name, json.times, json.values, json.interpolation );\n \n     }\n \n }\n \n const Cache = {\n \n     enabled: false,\n \n     files: {},\n \n     add: function ( key, file ) {\n \n         if ( this.enabled === false ) return;\n \n         // console.log( 'THREE.Cache', 'Adding key:', key );\n \n         this.files[ key ] = file;\n \n     },\n \n     get: function ( key ) {\n \n         if ( this.enabled === false ) return;\n \n         // console.log( 'THREE.Cache', 'Checking key:', key );\n \n         return this.files[ key ];\n \n     },\n \n     remove: function ( key ) {\n \n         delete this.files[ key ];\n \n     },\n \n     clear: function () {\n \n         this.files = {};\n \n     }\n \n };\n \n class LoadingManager {\n \n     constructor( onLoad, onProgress, onError ) {\n \n         const scope = this;\n \n         let isLoading = false;\n         let itemsLoaded = 0;\n         let itemsTotal = 0;\n         let urlModifier = undefined;\n         const handlers = [];\n \n         // Refer to #5689 for the reason why we don't set .onStart\n         // in the constructor\n \n         this.onStart = undefined;\n         this.onLoad = onLoad;\n         this.onProgress = onProgress;\n         this.onError = onError;\n \n         this.itemStart = function ( url ) {\n \n             itemsTotal ++;\n \n             if ( isLoading === false ) {\n \n                 if ( scope.onStart !== undefined ) {\n \n                     scope.onStart( url, itemsLoaded, itemsTotal );\n \n                 }\n \n             }\n \n             isLoading = true;\n \n         };\n \n         this.itemEnd = function ( url ) {\n \n             itemsLoaded ++;\n \n             if ( scope.onProgress !== undefined ) {\n \n                 scope.onProgress( url, itemsLoaded, itemsTotal );\n \n             }\n \n             if ( itemsLoaded === itemsTotal ) {\n \n                 isLoading = false;\n \n                 if ( scope.onLoad !== undefined ) {\n \n                     scope.onLoad();\n \n                 }\n \n             }\n \n         };\n \n         this.itemError = function ( url ) {\n \n             if ( scope.onError !== undefined ) {\n \n                 scope.onError( url );\n \n             }\n \n         };\n \n         this.resolveURL = function ( url ) {\n \n             if ( urlModifier ) {\n \n                 return urlModifier( url );\n \n             }\n \n             return url;\n \n         };\n \n         this.setURLModifier = function ( transform ) {\n \n             urlModifier = transform;\n \n             return this;\n \n         };\n \n         this.addHandler = function ( regex, loader ) {\n \n             handlers.push( regex, loader );\n \n             return this;\n \n         };\n \n         this.removeHandler = function ( regex ) {\n \n             const index = handlers.indexOf( regex );\n \n             if ( index !== - 1 ) {\n \n                 handlers.splice( index, 2 );\n \n             }\n \n             return this;\n \n         };\n \n         this.getHandler = function ( file ) {\n \n             for ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n \n                 const regex = handlers[ i ];\n                 const loader = handlers[ i + 1 ];\n \n                 if ( regex.global ) regex.lastIndex = 0; // see #17920\n \n                 if ( regex.test( file ) ) {\n \n                     return loader;\n \n                 }\n \n             }\n \n             return null;\n \n         };\n \n     }\n \n }\n \n const DefaultLoadingManager = new LoadingManager();\n \n class Loader {\n \n     constructor( manager ) {\n \n         this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n \n         this.crossOrigin = 'anonymous';\n         this.withCredentials = false;\n         this.path = '';\n         this.resourcePath = '';\n         this.requestHeader = {};\n \n     }\n \n     load( /* url, onLoad, onProgress, onError */ ) {}\n \n     loadAsync( url, onProgress ) {\n \n         const scope = this;\n \n         return new Promise( function ( resolve, reject ) {\n \n             scope.load( url, resolve, onProgress, reject );\n \n         } );\n \n     }\n \n     parse( /* data */ ) {}\n \n     setCrossOrigin( crossOrigin ) {\n \n         this.crossOrigin = crossOrigin;\n         return this;\n \n     }\n \n     setWithCredentials( value ) {\n \n         this.withCredentials = value;\n         return this;\n \n     }\n \n     setPath( path ) {\n \n         this.path = path;\n         return this;\n \n     }\n \n     setResourcePath( resourcePath ) {\n \n         this.resourcePath = resourcePath;\n         return this;\n \n     }\n \n     setRequestHeader( requestHeader ) {\n \n         this.requestHeader = requestHeader;\n         return this;\n \n     }\n \n }\n \n const loading = {};\n \n class FileLoader extends Loader {\n \n     constructor( manager ) {\n \n         super( manager );\n \n     }\n \n     load( url, onLoad, onProgress, onError ) {\n \n         if ( url === undefined ) url = '';\n \n         if ( this.path !== undefined ) url = this.path + url;\n \n         url = this.manager.resolveURL( url );\n \n         const cached = Cache.get( url );\n \n         if ( cached !== undefined ) {\n \n             this.manager.itemStart( url );\n \n             setTimeout( () => {\n \n                 if ( onLoad ) onLoad( cached );\n \n                 this.manager.itemEnd( url );\n \n             }, 0 );\n \n             return cached;\n \n         }\n \n         // Check if request is duplicate\n \n         if ( loading[ url ] !== undefined ) {\n \n             loading[ url ].push( {\n \n                 onLoad: onLoad,\n                 onProgress: onProgress,\n                 onError: onError\n \n             } );\n \n             return;\n \n         }\n \n         // Initialise array for duplicate requests\n         loading[ url ] = [];\n \n         loading[ url ].push( {\n             onLoad: onLoad,\n             onProgress: onProgress,\n             onError: onError,\n         } );\n \n         // create request\n         const req = new Request( url, {\n             headers: new Headers( this.requestHeader ),\n             credentials: this.withCredentials ? 'include' : 'same-origin',\n             // An abort controller could be added within a future PR\n         } );\n \n         // record states ( avoid data race )\n         const mimeType = this.mimeType;\n         const responseType = this.responseType;\n \n         // start the fetch\n         fetch( req )\n             .then( response => {\n \n                 if ( response.status === 200 || response.status === 0 ) {\n \n                     // Some browsers return HTTP Status 0 when using non-http protocol\n                     // e.g. 'file://' or 'data://'. Handle as success.\n \n                     if ( response.status === 0 ) {\n \n                         console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n \n                     }\n \n                     // Workaround: Checking if response.body === undefined for Alipay browser #23548\n \n                     if ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n \n                         return response;\n \n                     }\n \n                     const callbacks = loading[ url ];\n                     const reader = response.body.getReader();\n                     const contentLength = response.headers.get( 'Content-Length' );\n                     const total = contentLength ? parseInt( contentLength ) : 0;\n                     const lengthComputable = total !== 0;\n                     let loaded = 0;\n \n                     // periodically read data into the new stream tracking while download progress\n                     const stream = new ReadableStream( {\n                         start( controller ) {\n \n                             readData();\n \n                             function readData() {\n \n                                 reader.read().then( ( { done, value } ) => {\n \n                                     if ( done ) {\n \n                                         controller.close();\n \n                                     } else {\n \n                                         loaded += value.byteLength;\n \n                                         const event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n                                         for ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n \n                                             const callback = callbacks[ i ];\n                                             if ( callback.onProgress ) callback.onProgress( event );\n \n                                         }\n \n                                         controller.enqueue( value );\n                                         readData();\n \n                                     }\n \n                                 } );\n \n                             }\n \n                         }\n \n                     } );\n \n                     return new Response( stream );\n \n                 } else {\n \n                     throw Error( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}` );\n \n                 }\n \n             } )\n             .then( response => {\n \n                 switch ( responseType ) {\n \n                     case 'arraybuffer':\n \n                         return response.arrayBuffer();\n \n                     case 'blob':\n \n                         return response.blob();\n \n                     case 'document':\n \n                         return response.text()\n                             .then( text => {\n \n                                 const parser = new DOMParser();\n                                 return parser.parseFromString( text, mimeType );\n \n                             } );\n \n                     case 'json':\n \n                         return response.json();\n \n                     default:\n \n                         if ( mimeType === undefined ) {\n \n                             return response.text();\n \n                         } else {\n \n                             // sniff encoding\n                             const re = /charset=\"?([^;\"\\s]*)\"?/i;\n                             const exec = re.exec( mimeType );\n                             const label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n                             const decoder = new TextDecoder( label );\n                             return response.arrayBuffer().then( ab => decoder.decode( ab ) );\n \n                         }\n \n                 }\n \n             } )\n             .then( data => {\n \n                 // Add to cache only on HTTP success, so that we do not cache\n                 // error response bodies as proper responses to requests.\n                 Cache.add( url, data );\n \n                 const callbacks = loading[ url ];\n                 delete loading[ url ];\n \n                 for ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n \n                     const callback = callbacks[ i ];\n                     if ( callback.onLoad ) callback.onLoad( data );\n \n                 }\n \n             } )\n             .catch( err => {\n \n                 // Abort errors and other errors are handled the same\n \n                 const callbacks = loading[ url ];\n \n                 if ( callbacks === undefined ) {\n \n                     // When onLoad was called and url was deleted in `loading`\n                     this.manager.itemError( url );\n                     throw err;\n \n                 }\n \n                 delete loading[ url ];\n \n                 for ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n \n                     const callback = callbacks[ i ];\n                     if ( callback.onError ) callback.onError( err );\n \n                 }\n \n                 this.manager.itemError( url );\n \n             } )\n             .finally( () => {\n \n                 this.manager.itemEnd( url );\n \n             } );\n \n         this.manager.itemStart( url );\n \n     }\n \n     setResponseType( value ) {\n \n         this.responseType = value;\n         return this;\n \n     }\n \n     setMimeType( value ) {\n \n         this.mimeType = value;\n         return this;\n \n     }\n \n }\n \n class AnimationLoader extends Loader {\n \n     constructor( manager ) {\n \n         super( manager );\n \n     }\n \n     load( url, onLoad, onProgress, onError ) {\n \n         const scope = this;\n \n         const loader = new FileLoader( this.manager );\n         loader.setPath( this.path );\n         loader.setRequestHeader( this.requestHeader );\n         loader.setWithCredentials( this.withCredentials );\n         loader.load( url, function ( text ) {\n \n             try {\n \n                 onLoad( scope.parse( JSON.parse( text ) ) );\n \n             } catch ( e ) {\n \n                 if ( onError ) {\n \n                     onError( e );\n \n                 } else {\n \n                     console.error( e );\n \n                 }\n \n                 scope.manager.itemError( url );\n \n             }\n \n         }, onProgress, onError );\n \n     }\n \n     parse( json ) {\n \n         const animations = [];\n \n         for ( let i = 0; i < json.length; i ++ ) {\n \n             const clip = AnimationClip.parse( json[ i ] );\n \n             animations.push( clip );\n \n         }\n \n         return animations;\n \n     }\n \n }\n \n /**\n  * Abstract Base class to block based textures loader (dds, pvr, ...)\n  *\n  * Sub classes have to implement the parse() method which will be used in load().\n  */\n \n class CompressedTextureLoader extends Loader {\n \n     constructor( manager ) {\n \n         super( manager );\n \n     }\n \n     load( url, onLoad, onProgress, onError ) {\n \n         const scope = this;\n \n         const images = [];\n \n         const texture = new CompressedTexture();\n \n         const loader = new FileLoader( this.manager );\n         loader.setPath( this.path );\n         loader.setResponseType( 'arraybuffer' );\n         loader.setRequestHeader( this.requestHeader );\n         loader.setWithCredentials( scope.withCredentials );\n \n         let loaded = 0;\n \n         function loadTexture( i ) {\n \n             loader.load( url[ i ], function ( buffer ) {\n \n                 const texDatas = scope.parse( buffer, true );\n \n                 images[ i ] = {\n                     width: texDatas.width,\n                     height: texDatas.height,\n                     format: texDatas.format,\n                     mipmaps: texDatas.mipmaps\n                 };\n \n                 loaded += 1;\n \n                 if ( loaded === 6 ) {\n \n                     if ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n \n                     texture.image = images;\n                     texture.format = texDatas.format;\n                     texture.needsUpdate = true;\n \n                     if ( onLoad ) onLoad( texture );\n \n                 }\n \n             }, onProgress, onError );\n \n         }\n \n         if ( Array.isArray( url ) ) {\n \n             for ( let i = 0, il = url.length; i < il; ++ i ) {\n \n                 loadTexture( i );\n \n             }\n \n         } else {\n \n             // compressed cubemap texture stored in a single DDS file\n \n             loader.load( url, function ( buffer ) {\n \n                 const texDatas = scope.parse( buffer, true );\n \n                 if ( texDatas.isCubemap ) {\n \n                     const faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n \n                     for ( let f = 0; f < faces; f ++ ) {\n \n                         images[ f ] = { mipmaps: [] };\n \n                         for ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n \n                             images[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n                             images[ f ].format = texDatas.format;\n                             images[ f ].width = texDatas.width;\n                             images[ f ].height = texDatas.height;\n \n                         }\n \n                     }\n \n                     texture.image = images;\n \n                 } else {\n \n                     texture.image.width = texDatas.width;\n                     texture.image.height = texDatas.height;\n                     texture.mipmaps = texDatas.mipmaps;\n \n                 }\n \n                 if ( texDatas.mipmapCount === 1 ) {\n \n                     texture.minFilter = LinearFilter;\n \n                 }\n \n                 texture.format = texDatas.format;\n                 texture.needsUpdate = true;\n \n                 if ( onLoad ) onLoad( texture );\n \n             }, onProgress, onError );\n \n         }\n \n         return texture;\n \n     }\n \n }\n \n class ImageLoader extends Loader {\n \n     constructor( manager ) {\n \n         super( manager );\n \n     }\n \n     load( url, onLoad, onProgress, onError ) {\n \n         if ( this.path !== undefined ) url = this.path + url;\n \n         url = this.manager.resolveURL( url );\n \n         const scope = this;\n \n         const cached = Cache.get( url );\n \n         if ( cached !== undefined ) {\n \n             scope.manager.itemStart( url );\n \n             setTimeout( function () {\n \n                 if ( onLoad ) onLoad( cached );\n \n                 scope.manager.itemEnd( url );\n \n             }, 0 );\n \n             return cached;\n \n         }\n \n         const image = createElementNS( 'img' );\n \n         function onImageLoad() {\n \n             removeEventListeners();\n \n             Cache.add( url, this );\n \n             if ( onLoad ) onLoad( this );\n \n             scope.manager.itemEnd( url );\n \n         }\n \n         function onImageError( event ) {\n \n             removeEventListeners();\n \n             if ( onError ) onError( event );\n \n             scope.manager.itemError( url );\n             scope.manager.itemEnd( url );\n \n         }\n \n         function removeEventListeners() {\n \n             image.removeEventListener( 'load', onImageLoad, false );\n             image.removeEventListener( 'error', onImageError, false );\n \n         }\n \n         image.addEventListener( 'load', onImageLoad, false );\n         image.addEventListener( 'error', onImageError, false );\n \n         if ( url.slice( 0, 5 ) !== 'data:' ) {\n \n             if ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n \n         }\n \n         scope.manager.itemStart( url );\n \n         image.src = url;\n \n         return image;\n \n     }\n \n }\n \n class CubeTextureLoader extends Loader {\n \n     constructor( manager ) {\n \n         super( manager );\n \n     }\n \n     load( urls, onLoad, onProgress, onError ) {\n \n         const texture = new CubeTexture();\n \n         const loader = new ImageLoader( this.manager );\n         loader.setCrossOrigin( this.crossOrigin );\n         loader.setPath( this.path );\n \n         let loaded = 0;\n \n         function loadTexture( i ) {\n \n             loader.load( urls[ i ], function ( image ) {\n \n                 texture.images[ i ] = image;\n \n                 loaded ++;\n \n                 if ( loaded === 6 ) {\n \n                     texture.needsUpdate = true;\n \n                     if ( onLoad ) onLoad( texture );\n \n                 }\n \n             }, undefined, onError );\n \n         }\n \n         for ( let i = 0; i < urls.length; ++ i ) {\n \n             loadTexture( i );\n \n         }\n \n         return texture;\n \n     }\n \n }\n \n /**\n  * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n  *\n  * Sub classes have to implement the parse() method which will be used in load().\n  */\n \n class DataTextureLoader extends Loader {\n \n     constructor( manager ) {\n \n         super( manager );\n \n     }\n \n     load( url, onLoad, onProgress, onError ) {\n \n         const scope = this;\n \n         const texture = new DataTexture();\n \n         const loader = new FileLoader( this.manager );\n         loader.setResponseType( 'arraybuffer' );\n         loader.setRequestHeader( this.requestHeader );\n         loader.setPath( this.path );\n         loader.setWithCredentials( scope.withCredentials );\n         loader.load( url, function ( buffer ) {\n \n             const texData = scope.parse( buffer );\n \n             if ( ! texData ) return;\n \n             if ( texData.image !== undefined ) {\n \n                 texture.image = texData.image;\n \n             } else if ( texData.data !== undefined ) {\n \n                 texture.image.width = texData.width;\n                 texture.image.height = texData.height;\n                 texture.image.data = texData.data;\n \n             }\n \n             texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n             texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n \n             texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n             texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n \n             texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n \n             if ( texData.encoding !== undefined ) {\n \n                 texture.encoding = texData.encoding;\n \n             }\n \n             if ( texData.flipY !== undefined ) {\n \n                 texture.flipY = texData.flipY;\n \n             }\n \n             if ( texData.format !== undefined ) {\n \n                 texture.format = texData.format;\n \n             }\n \n             if ( texData.type !== undefined ) {\n \n                 texture.type = texData.type;\n \n             }\n \n             if ( texData.mipmaps !== undefined ) {\n \n                 texture.mipmaps = texData.mipmaps;\n                 texture.minFilter = LinearMipmapLinearFilter; // presumably...\n \n             }\n \n             if ( texData.mipmapCount === 1 ) {\n \n                 texture.minFilter = LinearFilter;\n \n             }\n \n             if ( texData.generateMipmaps !== undefined ) {\n \n                 texture.generateMipmaps = texData.generateMipmaps;\n \n             }\n \n             texture.needsUpdate = true;\n \n             if ( onLoad ) onLoad( texture, texData );\n \n         }, onProgress, onError );\n \n \n         return texture;\n \n     }\n \n }\n \n class TextureLoader extends Loader {\n \n     constructor( manager ) {\n \n         super( manager );\n \n     }\n \n     load( url, onLoad, onProgress, onError ) {\n \n         const texture = new Texture();\n \n         const loader = new ImageLoader( this.manager );\n         loader.setCrossOrigin( this.crossOrigin );\n         loader.setPath( this.path );\n \n         loader.load( url, function ( image ) {\n \n             texture.image = image;\n             texture.needsUpdate = true;\n \n             if ( onLoad !== undefined ) {\n \n                 onLoad( texture );\n \n             }\n \n         }, onProgress, onError );\n \n         return texture;\n \n     }\n \n }\n \n class Light extends Object3D {\n \n     constructor( color, intensity = 1 ) {\n \n         super();\n \n         this.type = 'Light';\n \n         this.color = new Color( color );\n         this.intensity = intensity;\n \n     }\n \n     dispose() {\n \n         // Empty here in base class; some subclasses override.\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.color.copy( source.color );\n         this.intensity = source.intensity;\n \n         return this;\n \n     }\n \n     toJSON( meta ) {\n \n         const data = super.toJSON( meta );\n \n         data.object.color = this.color.getHex();\n         data.object.intensity = this.intensity;\n \n         if ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n \n         if ( this.distance !== undefined ) data.object.distance = this.distance;\n         if ( this.angle !== undefined ) data.object.angle = this.angle;\n         if ( this.decay !== undefined ) data.object.decay = this.decay;\n         if ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n \n         if ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n \n         return data;\n \n     }\n \n }\n \n Light.prototype.isLight = true;\n \n class HemisphereLight extends Light {\n \n     constructor( skyColor, groundColor, intensity ) {\n \n         super( skyColor, intensity );\n \n         this.type = 'HemisphereLight';\n \n         this.position.copy( Object3D.DefaultUp );\n         this.updateMatrix();\n \n         this.groundColor = new Color( groundColor );\n \n     }\n \n     copy( source ) {\n \n         Light.prototype.copy.call( this, source );\n \n         this.groundColor.copy( source.groundColor );\n \n         return this;\n \n     }\n \n }\n \n HemisphereLight.prototype.isHemisphereLight = true;\n \n const _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\n const _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\n const _lookTarget$1 = /*@__PURE__*/ new Vector3();\n \n class LightShadow {\n \n     constructor( camera ) {\n \n         this.camera = camera;\n \n         this.bias = 0;\n         this.normalBias = 0;\n         this.radius = 1;\n         this.blurSamples = 8;\n \n         this.mapSize = new Vector2( 512, 512 );\n \n         this.map = null;\n         this.mapPass = null;\n         this.matrix = new Matrix4();\n \n         this.autoUpdate = true;\n         this.needsUpdate = false;\n \n         this._frustum = new Frustum();\n         this._frameExtents = new Vector2( 1, 1 );\n \n         this._viewportCount = 1;\n \n         this._viewports = [\n \n             new Vector4( 0, 0, 1, 1 )\n \n         ];\n \n     }\n \n     getViewportCount() {\n \n         return this._viewportCount;\n \n     }\n \n     getFrustum() {\n \n         return this._frustum;\n \n     }\n \n     updateMatrices( light ) {\n \n         const shadowCamera = this.camera;\n         const shadowMatrix = this.matrix;\n \n         _lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n         shadowCamera.position.copy( _lightPositionWorld$1 );\n \n         _lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n         shadowCamera.lookAt( _lookTarget$1 );\n         shadowCamera.updateMatrixWorld();\n \n         _projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n         this._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n \n         shadowMatrix.set(\n             0.5, 0.0, 0.0, 0.5,\n             0.0, 0.5, 0.0, 0.5,\n             0.0, 0.0, 0.5, 0.5,\n             0.0, 0.0, 0.0, 1.0\n         );\n \n         shadowMatrix.multiply( shadowCamera.projectionMatrix );\n         shadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n \n     }\n \n     getViewport( viewportIndex ) {\n \n         return this._viewports[ viewportIndex ];\n \n     }\n \n     getFrameExtents() {\n \n         return this._frameExtents;\n \n     }\n \n     dispose() {\n \n         if ( this.map ) {\n \n             this.map.dispose();\n \n         }\n \n         if ( this.mapPass ) {\n \n             this.mapPass.dispose();\n \n         }\n \n     }\n \n     copy( source ) {\n \n         this.camera = source.camera.clone();\n \n         this.bias = source.bias;\n         this.radius = source.radius;\n \n         this.mapSize.copy( source.mapSize );\n \n         return this;\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n     toJSON() {\n \n         const object = {};\n \n         if ( this.bias !== 0 ) object.bias = this.bias;\n         if ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n         if ( this.radius !== 1 ) object.radius = this.radius;\n         if ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n \n         object.camera = this.camera.toJSON( false ).object;\n         delete object.camera.matrix;\n \n         return object;\n \n     }\n \n }\n \n class SpotLightShadow extends LightShadow {\n \n     constructor() {\n \n         super( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n \n         this.focus = 1;\n \n     }\n \n     updateMatrices( light ) {\n \n         const camera = this.camera;\n \n         const fov = RAD2DEG * 2 * light.angle * this.focus;\n         const aspect = this.mapSize.width / this.mapSize.height;\n         const far = light.distance || camera.far;\n \n         if ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n \n             camera.fov = fov;\n             camera.aspect = aspect;\n             camera.far = far;\n             camera.updateProjectionMatrix();\n \n         }\n \n         super.updateMatrices( light );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.focus = source.focus;\n \n         return this;\n \n     }\n \n }\n \n SpotLightShadow.prototype.isSpotLightShadow = true;\n \n class SpotLight extends Light {\n \n     constructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n \n         super( color, intensity );\n \n         this.type = 'SpotLight';\n \n         this.position.copy( Object3D.DefaultUp );\n         this.updateMatrix();\n \n         this.target = new Object3D();\n \n         this.distance = distance;\n         this.angle = angle;\n         this.penumbra = penumbra;\n         this.decay = decay; // for physically correct lights, should be 2.\n \n         this.shadow = new SpotLightShadow();\n \n     }\n \n     get power() {\n \n         // compute the light's luminous power (in lumens) from its intensity (in candela)\n         // by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n         return this.intensity * Math.PI;\n \n     }\n \n     set power( power ) {\n \n         // set the light's intensity (in candela) from the desired luminous power (in lumens)\n         this.intensity = power / Math.PI;\n \n     }\n \n     dispose() {\n \n         this.shadow.dispose();\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.distance = source.distance;\n         this.angle = source.angle;\n         this.penumbra = source.penumbra;\n         this.decay = source.decay;\n \n         this.target = source.target.clone();\n \n         this.shadow = source.shadow.clone();\n \n         return this;\n \n     }\n \n }\n \n SpotLight.prototype.isSpotLight = true;\n \n const _projScreenMatrix = /*@__PURE__*/ new Matrix4();\n const _lightPositionWorld = /*@__PURE__*/ new Vector3();\n const _lookTarget = /*@__PURE__*/ new Vector3();\n \n class PointLightShadow extends LightShadow {\n \n     constructor() {\n \n         super( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n \n         this._frameExtents = new Vector2( 4, 2 );\n \n         this._viewportCount = 6;\n \n         this._viewports = [\n             // These viewports map a cube-map onto a 2D texture with the\n             // following orientation:\n             //\n             //  xzXZ\n             //   y Y\n             //\n             // X - Positive x direction\n             // x - Negative x direction\n             // Y - Positive y direction\n             // y - Negative y direction\n             // Z - Positive z direction\n             // z - Negative z direction\n \n             // positive X\n             new Vector4( 2, 1, 1, 1 ),\n             // negative X\n             new Vector4( 0, 1, 1, 1 ),\n             // positive Z\n             new Vector4( 3, 1, 1, 1 ),\n             // negative Z\n             new Vector4( 1, 1, 1, 1 ),\n             // positive Y\n             new Vector4( 3, 0, 1, 1 ),\n             // negative Y\n             new Vector4( 1, 0, 1, 1 )\n         ];\n \n         this._cubeDirections = [\n             new Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n             new Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n         ];\n \n         this._cubeUps = [\n             new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n             new Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n         ];\n \n     }\n \n     updateMatrices( light, viewportIndex = 0 ) {\n \n         const camera = this.camera;\n         const shadowMatrix = this.matrix;\n \n         const far = light.distance || camera.far;\n \n         if ( far !== camera.far ) {\n \n             camera.far = far;\n             camera.updateProjectionMatrix();\n \n         }\n \n         _lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n         camera.position.copy( _lightPositionWorld );\n \n         _lookTarget.copy( camera.position );\n         _lookTarget.add( this._cubeDirections[ viewportIndex ] );\n         camera.up.copy( this._cubeUps[ viewportIndex ] );\n         camera.lookAt( _lookTarget );\n         camera.updateMatrixWorld();\n \n         shadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n \n         _projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n         this._frustum.setFromProjectionMatrix( _projScreenMatrix );\n \n     }\n \n }\n \n PointLightShadow.prototype.isPointLightShadow = true;\n \n class PointLight extends Light {\n \n     constructor( color, intensity, distance = 0, decay = 1 ) {\n \n         super( color, intensity );\n \n         this.type = 'PointLight';\n \n         this.distance = distance;\n         this.decay = decay; // for physically correct lights, should be 2.\n \n         this.shadow = new PointLightShadow();\n \n     }\n \n     get power() {\n \n         // compute the light's luminous power (in lumens) from its intensity (in candela)\n         // for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n         return this.intensity * 4 * Math.PI;\n \n     }\n \n     set power( power ) {\n \n         // set the light's intensity (in candela) from the desired luminous power (in lumens)\n         this.intensity = power / ( 4 * Math.PI );\n \n     }\n \n     dispose() {\n \n         this.shadow.dispose();\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.distance = source.distance;\n         this.decay = source.decay;\n \n         this.shadow = source.shadow.clone();\n \n         return this;\n \n     }\n \n }\n \n PointLight.prototype.isPointLight = true;\n \n class DirectionalLightShadow extends LightShadow {\n \n     constructor() {\n \n         super( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n \n     }\n \n }\n \n DirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n \n class DirectionalLight extends Light {\n \n     constructor( color, intensity ) {\n \n         super( color, intensity );\n \n         this.type = 'DirectionalLight';\n \n         this.position.copy( Object3D.DefaultUp );\n         this.updateMatrix();\n \n         this.target = new Object3D();\n \n         this.shadow = new DirectionalLightShadow();\n \n     }\n \n     dispose() {\n \n         this.shadow.dispose();\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.target = source.target.clone();\n         this.shadow = source.shadow.clone();\n \n         return this;\n \n     }\n \n }\n \n DirectionalLight.prototype.isDirectionalLight = true;\n \n class AmbientLight extends Light {\n \n     constructor( color, intensity ) {\n \n         super( color, intensity );\n \n         this.type = 'AmbientLight';\n \n     }\n \n }\n \n AmbientLight.prototype.isAmbientLight = true;\n \n class RectAreaLight extends Light {\n \n     constructor( color, intensity, width = 10, height = 10 ) {\n \n         super( color, intensity );\n \n         this.type = 'RectAreaLight';\n \n         this.width = width;\n         this.height = height;\n \n     }\n \n     get power() {\n \n         // compute the light's luminous power (in lumens) from its intensity (in nits)\n         return this.intensity * this.width * this.height * Math.PI;\n \n     }\n \n     set power( power ) {\n \n         // set the light's intensity (in nits) from the desired luminous power (in lumens)\n         this.intensity = power / ( this.width * this.height * Math.PI );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.width = source.width;\n         this.height = source.height;\n \n         return this;\n \n     }\n \n     toJSON( meta ) {\n \n         const data = super.toJSON( meta );\n \n         data.object.width = this.width;\n         data.object.height = this.height;\n \n         return data;\n \n     }\n \n }\n \n RectAreaLight.prototype.isRectAreaLight = true;\n \n /**\n  * Primary reference:\n  *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n  *\n  * Secondary reference:\n  *   https://www.ppsloan.org/publications/StupidSH36.pdf\n  */\n \n // 3-band SH defined by 9 coefficients\n \n class SphericalHarmonics3 {\n \n     constructor() {\n \n         this.coefficients = [];\n \n         for ( let i = 0; i < 9; i ++ ) {\n \n             this.coefficients.push( new Vector3() );\n \n         }\n \n     }\n \n     set( coefficients ) {\n \n         for ( let i = 0; i < 9; i ++ ) {\n \n             this.coefficients[ i ].copy( coefficients[ i ] );\n \n         }\n \n         return this;\n \n     }\n \n     zero() {\n \n         for ( let i = 0; i < 9; i ++ ) {\n \n             this.coefficients[ i ].set( 0, 0, 0 );\n \n         }\n \n         return this;\n \n     }\n \n     // get the radiance in the direction of the normal\n     // target is a Vector3\n     getAt( normal, target ) {\n \n         // normal is assumed to be unit length\n \n         const x = normal.x, y = normal.y, z = normal.z;\n \n         const coeff = this.coefficients;\n \n         // band 0\n         target.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n \n         // band 1\n         target.addScaledVector( coeff[ 1 ], 0.488603 * y );\n         target.addScaledVector( coeff[ 2 ], 0.488603 * z );\n         target.addScaledVector( coeff[ 3 ], 0.488603 * x );\n \n         // band 2\n         target.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n         target.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n         target.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n         target.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n         target.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n \n         return target;\n \n     }\n \n     // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n     // target is a Vector3\n     // https://graphics.stanford.edu/papers/envmap/envmap.pdf\n     getIrradianceAt( normal, target ) {\n \n         // normal is assumed to be unit length\n \n         const x = normal.x, y = normal.y, z = normal.z;\n \n         const coeff = this.coefficients;\n \n         // band 0\n         target.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n \n         // band 1\n         target.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n         target.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n         target.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n \n         // band 2\n         target.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n         target.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n         target.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n         target.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n         target.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n \n         return target;\n \n     }\n \n     add( sh ) {\n \n         for ( let i = 0; i < 9; i ++ ) {\n \n             this.coefficients[ i ].add( sh.coefficients[ i ] );\n \n         }\n \n         return this;\n \n     }\n \n     addScaledSH( sh, s ) {\n \n         for ( let i = 0; i < 9; i ++ ) {\n \n             this.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n \n         }\n \n         return this;\n \n     }\n \n     scale( s ) {\n \n         for ( let i = 0; i < 9; i ++ ) {\n \n             this.coefficients[ i ].multiplyScalar( s );\n \n         }\n \n         return this;\n \n     }\n \n     lerp( sh, alpha ) {\n \n         for ( let i = 0; i < 9; i ++ ) {\n \n             this.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n \n         }\n \n         return this;\n \n     }\n \n     equals( sh ) {\n \n         for ( let i = 0; i < 9; i ++ ) {\n \n             if ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n \n                 return false;\n \n             }\n \n         }\n \n         return true;\n \n     }\n \n     copy( sh ) {\n \n         return this.set( sh.coefficients );\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n     fromArray( array, offset = 0 ) {\n \n         const coefficients = this.coefficients;\n \n         for ( let i = 0; i < 9; i ++ ) {\n \n             coefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n \n         }\n \n         return this;\n \n     }\n \n     toArray( array = [], offset = 0 ) {\n \n         const coefficients = this.coefficients;\n \n         for ( let i = 0; i < 9; i ++ ) {\n \n             coefficients[ i ].toArray( array, offset + ( i * 3 ) );\n \n         }\n \n         return array;\n \n     }\n \n     // evaluate the basis functions\n     // shBasis is an Array[ 9 ]\n     static getBasisAt( normal, shBasis ) {\n \n         // normal is assumed to be unit length\n \n         const x = normal.x, y = normal.y, z = normal.z;\n \n         // band 0\n         shBasis[ 0 ] = 0.282095;\n \n         // band 1\n         shBasis[ 1 ] = 0.488603 * y;\n         shBasis[ 2 ] = 0.488603 * z;\n         shBasis[ 3 ] = 0.488603 * x;\n \n         // band 2\n         shBasis[ 4 ] = 1.092548 * x * y;\n         shBasis[ 5 ] = 1.092548 * y * z;\n         shBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n         shBasis[ 7 ] = 1.092548 * x * z;\n         shBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n \n     }\n \n }\n \n SphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n \n class LightProbe extends Light {\n \n     constructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n \n         super( undefined, intensity );\n \n         this.sh = sh;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.sh.copy( source.sh );\n \n         return this;\n \n     }\n \n     fromJSON( json ) {\n \n         this.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n         this.sh.fromArray( json.sh );\n \n         return this;\n \n     }\n \n     toJSON( meta ) {\n \n         const data = super.toJSON( meta );\n \n         data.object.sh = this.sh.toArray();\n \n         return data;\n \n     }\n \n }\n \n LightProbe.prototype.isLightProbe = true;\n \n class MaterialLoader extends Loader {\n \n     constructor( manager ) {\n \n         super( manager );\n         this.textures = {};\n \n     }\n \n     load( url, onLoad, onProgress, onError ) {\n \n         const scope = this;\n \n         const loader = new FileLoader( scope.manager );\n         loader.setPath( scope.path );\n         loader.setRequestHeader( scope.requestHeader );\n         loader.setWithCredentials( scope.withCredentials );\n         loader.load( url, function ( text ) {\n \n             try {\n \n                 onLoad( scope.parse( JSON.parse( text ) ) );\n \n             } catch ( e ) {\n \n                 if ( onError ) {\n \n                     onError( e );\n \n                 } else {\n \n                     console.error( e );\n \n                 }\n \n                 scope.manager.itemError( url );\n \n             }\n \n         }, onProgress, onError );\n \n     }\n \n     parse( json ) {\n \n         const textures = this.textures;\n \n         function getTexture( name ) {\n \n             if ( textures[ name ] === undefined ) {\n \n                 console.warn( 'THREE.MaterialLoader: Undefined texture', name );\n \n             }\n \n             return textures[ name ];\n \n         }\n \n         const material = Material.fromType( json.type );\n \n         if ( json.uuid !== undefined ) material.uuid = json.uuid;\n         if ( json.name !== undefined ) material.name = json.name;\n         if ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n         if ( json.roughness !== undefined ) material.roughness = json.roughness;\n         if ( json.metalness !== undefined ) material.metalness = json.metalness;\n         if ( json.sheen !== undefined ) material.sheen = json.sheen;\n         if ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n         if ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n         if ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n         if ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n         if ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n         if ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n         if ( json.shininess !== undefined ) material.shininess = json.shininess;\n         if ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n         if ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n         if ( json.transmission !== undefined ) material.transmission = json.transmission;\n         if ( json.thickness !== undefined ) material.thickness = json.thickness;\n         if ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n         if ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n         if ( json.fog !== undefined ) material.fog = json.fog;\n         if ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n         if ( json.blending !== undefined ) material.blending = json.blending;\n         if ( json.combine !== undefined ) material.combine = json.combine;\n         if ( json.side !== undefined ) material.side = json.side;\n         if ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n         if ( json.opacity !== undefined ) material.opacity = json.opacity;\n         if ( json.transparent !== undefined ) material.transparent = json.transparent;\n         if ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n         if ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n         if ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n         if ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n \n         if ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n         if ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n         if ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n         if ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n         if ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n         if ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n         if ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n         if ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n \n         if ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n         if ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n         if ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n         if ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n \n         if ( json.rotation !== undefined ) material.rotation = json.rotation;\n \n         if ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n         if ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n         if ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n         if ( json.scale !== undefined ) material.scale = json.scale;\n \n         if ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n         if ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n         if ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n \n         if ( json.dithering !== undefined ) material.dithering = json.dithering;\n \n         if ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n         if ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n \n         if ( json.visible !== undefined ) material.visible = json.visible;\n \n         if ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n \n         if ( json.userData !== undefined ) material.userData = json.userData;\n \n         if ( json.vertexColors !== undefined ) {\n \n             if ( typeof json.vertexColors === 'number' ) {\n \n                 material.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n \n             } else {\n \n                 material.vertexColors = json.vertexColors;\n \n             }\n \n         }\n \n         // Shader Material\n \n         if ( json.uniforms !== undefined ) {\n \n             for ( const name in json.uniforms ) {\n \n                 const uniform = json.uniforms[ name ];\n \n                 material.uniforms[ name ] = {};\n \n                 switch ( uniform.type ) {\n \n                     case 't':\n                         material.uniforms[ name ].value = getTexture( uniform.value );\n                         break;\n \n                     case 'c':\n                         material.uniforms[ name ].value = new Color().setHex( uniform.value );\n                         break;\n \n                     case 'v2':\n                         material.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n                         break;\n \n                     case 'v3':\n                         material.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n                         break;\n \n                     case 'v4':\n                         material.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n                         break;\n \n                     case 'm3':\n                         material.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n                         break;\n \n                     case 'm4':\n                         material.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n                         break;\n \n                     default:\n                         material.uniforms[ name ].value = uniform.value;\n \n                 }\n \n             }\n \n         }\n \n         if ( json.defines !== undefined ) material.defines = json.defines;\n         if ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n         if ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n \n         if ( json.extensions !== undefined ) {\n \n             for ( const key in json.extensions ) {\n \n                 material.extensions[ key ] = json.extensions[ key ];\n \n             }\n \n         }\n \n         // Deprecated\n \n         if ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n \n         // for PointsMaterial\n \n         if ( json.size !== undefined ) material.size = json.size;\n         if ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n \n         // maps\n \n         if ( json.map !== undefined ) material.map = getTexture( json.map );\n         if ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n \n         if ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n \n         if ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n         if ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n \n         if ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n         if ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n         if ( json.normalScale !== undefined ) {\n \n             let normalScale = json.normalScale;\n \n             if ( Array.isArray( normalScale ) === false ) {\n \n                 // Blender exporter used to export a scalar. See #7459\n \n                 normalScale = [ normalScale, normalScale ];\n \n             }\n \n             material.normalScale = new Vector2().fromArray( normalScale );\n \n         }\n \n         if ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n         if ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n         if ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n \n         if ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n         if ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n \n         if ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n         if ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n \n         if ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n         if ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n         if ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n \n         if ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n         if ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n \n         if ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n         if ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n \n         if ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n         if ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n \n         if ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n         if ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n \n         if ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n \n         if ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n         if ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n         if ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n         if ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n \n         if ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n         if ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n \n         if ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n         if ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n \n         return material;\n \n     }\n \n     setTextures( value ) {\n \n         this.textures = value;\n         return this;\n \n     }\n \n }\n \n class LoaderUtils {\n \n     static decodeText( array ) {\n \n         if ( typeof TextDecoder !== 'undefined' ) {\n \n             return new TextDecoder().decode( array );\n \n         }\n \n         // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n         // throws a \"maximum call stack size exceeded\" error for large arrays.\n \n         let s = '';\n \n         for ( let i = 0, il = array.length; i < il; i ++ ) {\n \n             // Implicitly assumes little-endian.\n             s += String.fromCharCode( array[ i ] );\n \n         }\n \n         try {\n \n             // merges multi-byte utf-8 characters.\n \n             return decodeURIComponent( escape( s ) );\n \n         } catch ( e ) { // see #16358\n \n             return s;\n \n         }\n \n     }\n \n     static extractUrlBase( url ) {\n \n         const index = url.lastIndexOf( '/' );\n \n         if ( index === - 1 ) return './';\n \n         return url.slice( 0, index + 1 );\n \n     }\n \n     static resolveURL( url, path ) {\n \n         // Invalid URL\n         if ( typeof url !== 'string' || url === '' ) return '';\n \n         // Host Relative URL\n         if ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n \n             path = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n \n         }\n \n         // Absolute URL http://,https://,//\n         if ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n \n         // Data URI\n         if ( /^data:.*,.*$/i.test( url ) ) return url;\n \n         // Blob URL\n         if ( /^blob:.*$/i.test( url ) ) return url;\n \n         // Relative URL\n         return path + url;\n \n     }\n \n }\n \n class InstancedBufferGeometry extends BufferGeometry {\n \n     constructor() {\n \n         super();\n \n         this.type = 'InstancedBufferGeometry';\n         this.instanceCount = Infinity;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.instanceCount = source.instanceCount;\n \n         return this;\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n     toJSON() {\n \n         const data = super.toJSON( this );\n \n         data.instanceCount = this.instanceCount;\n \n         data.isInstancedBufferGeometry = true;\n \n         return data;\n \n     }\n \n }\n \n InstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n \n class BufferGeometryLoader extends Loader {\n \n     constructor( manager ) {\n \n         super( manager );\n \n     }\n \n     load( url, onLoad, onProgress, onError ) {\n \n         const scope = this;\n \n         const loader = new FileLoader( scope.manager );\n         loader.setPath( scope.path );\n         loader.setRequestHeader( scope.requestHeader );\n         loader.setWithCredentials( scope.withCredentials );\n         loader.load( url, function ( text ) {\n \n             try {\n \n                 onLoad( scope.parse( JSON.parse( text ) ) );\n \n             } catch ( e ) {\n \n                 if ( onError ) {\n \n                     onError( e );\n \n                 } else {\n \n                     console.error( e );\n \n                 }\n \n                 scope.manager.itemError( url );\n \n             }\n \n         }, onProgress, onError );\n \n     }\n \n     parse( json ) {\n \n         const interleavedBufferMap = {};\n         const arrayBufferMap = {};\n \n         function getInterleavedBuffer( json, uuid ) {\n \n             if ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n \n             const interleavedBuffers = json.interleavedBuffers;\n             const interleavedBuffer = interleavedBuffers[ uuid ];\n \n             const buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n \n             const array = getTypedArray( interleavedBuffer.type, buffer );\n             const ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n             ib.uuid = interleavedBuffer.uuid;\n \n             interleavedBufferMap[ uuid ] = ib;\n \n             return ib;\n \n         }\n \n         function getArrayBuffer( json, uuid ) {\n \n             if ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n \n             const arrayBuffers = json.arrayBuffers;\n             const arrayBuffer = arrayBuffers[ uuid ];\n \n             const ab = new Uint32Array( arrayBuffer ).buffer;\n \n             arrayBufferMap[ uuid ] = ab;\n \n             return ab;\n \n         }\n \n         const geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n \n         const index = json.data.index;\n \n         if ( index !== undefined ) {\n \n             const typedArray = getTypedArray( index.type, index.array );\n             geometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n \n         }\n \n         const attributes = json.data.attributes;\n \n         for ( const key in attributes ) {\n \n             const attribute = attributes[ key ];\n             let bufferAttribute;\n \n             if ( attribute.isInterleavedBufferAttribute ) {\n \n                 const interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n                 bufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n \n             } else {\n \n                 const typedArray = getTypedArray( attribute.type, attribute.array );\n                 const bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n                 bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n \n             }\n \n             if ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n             if ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n \n             if ( attribute.updateRange !== undefined ) {\n \n                 bufferAttribute.updateRange.offset = attribute.updateRange.offset;\n                 bufferAttribute.updateRange.count = attribute.updateRange.count;\n \n             }\n \n             geometry.setAttribute( key, bufferAttribute );\n \n         }\n \n         const morphAttributes = json.data.morphAttributes;\n \n         if ( morphAttributes ) {\n \n             for ( const key in morphAttributes ) {\n \n                 const attributeArray = morphAttributes[ key ];\n \n                 const array = [];\n \n                 for ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n \n                     const attribute = attributeArray[ i ];\n                     let bufferAttribute;\n \n                     if ( attribute.isInterleavedBufferAttribute ) {\n \n                         const interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n                         bufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n \n                     } else {\n \n                         const typedArray = getTypedArray( attribute.type, attribute.array );\n                         bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n \n                     }\n \n                     if ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n                     array.push( bufferAttribute );\n \n                 }\n \n                 geometry.morphAttributes[ key ] = array;\n \n             }\n \n         }\n \n         const morphTargetsRelative = json.data.morphTargetsRelative;\n \n         if ( morphTargetsRelative ) {\n \n             geometry.morphTargetsRelative = true;\n \n         }\n \n         const groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n \n         if ( groups !== undefined ) {\n \n             for ( let i = 0, n = groups.length; i !== n; ++ i ) {\n \n                 const group = groups[ i ];\n \n                 geometry.addGroup( group.start, group.count, group.materialIndex );\n \n             }\n \n         }\n \n         const boundingSphere = json.data.boundingSphere;\n \n         if ( boundingSphere !== undefined ) {\n \n             const center = new Vector3();\n \n             if ( boundingSphere.center !== undefined ) {\n \n                 center.fromArray( boundingSphere.center );\n \n             }\n \n             geometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n \n         }\n \n         if ( json.name ) geometry.name = json.name;\n         if ( json.userData ) geometry.userData = json.userData;\n \n         return geometry;\n \n     }\n \n }\n \n class ObjectLoader extends Loader {\n \n     constructor( manager ) {\n \n         super( manager );\n \n     }\n \n     load( url, onLoad, onProgress, onError ) {\n \n         const scope = this;\n \n         const path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n         this.resourcePath = this.resourcePath || path;\n \n         const loader = new FileLoader( this.manager );\n         loader.setPath( this.path );\n         loader.setRequestHeader( this.requestHeader );\n         loader.setWithCredentials( this.withCredentials );\n         loader.load( url, function ( text ) {\n \n             let json = null;\n \n             try {\n \n                 json = JSON.parse( text );\n \n             } catch ( error ) {\n \n                 if ( onError !== undefined ) onError( error );\n \n                 console.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n \n                 return;\n \n             }\n \n             const metadata = json.metadata;\n \n             if ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n \n                 console.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n                 return;\n \n             }\n \n             scope.parse( json, onLoad );\n \n         }, onProgress, onError );\n \n     }\n \n     async loadAsync( url, onProgress ) {\n \n         const scope = this;\n \n         const path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n         this.resourcePath = this.resourcePath || path;\n \n         const loader = new FileLoader( this.manager );\n         loader.setPath( this.path );\n         loader.setRequestHeader( this.requestHeader );\n         loader.setWithCredentials( this.withCredentials );\n \n         const text = await loader.loadAsync( url, onProgress );\n \n         const json = JSON.parse( text );\n \n         const metadata = json.metadata;\n \n         if ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n \n             throw new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n \n         }\n \n         return await scope.parseAsync( json );\n \n     }\n \n     parse( json, onLoad ) {\n \n         const animations = this.parseAnimations( json.animations );\n         const shapes = this.parseShapes( json.shapes );\n         const geometries = this.parseGeometries( json.geometries, shapes );\n \n         const images = this.parseImages( json.images, function () {\n \n             if ( onLoad !== undefined ) onLoad( object );\n \n         } );\n \n         const textures = this.parseTextures( json.textures, images );\n         const materials = this.parseMaterials( json.materials, textures );\n \n         const object = this.parseObject( json.object, geometries, materials, textures, animations );\n         const skeletons = this.parseSkeletons( json.skeletons, object );\n \n         this.bindSkeletons( object, skeletons );\n \n         //\n \n         if ( onLoad !== undefined ) {\n \n             let hasImages = false;\n \n             for ( const uuid in images ) {\n \n                 if ( images[ uuid ] instanceof HTMLImageElement ) {\n \n                     hasImages = true;\n                     break;\n \n                 }\n \n             }\n \n             if ( hasImages === false ) onLoad( object );\n \n         }\n \n         return object;\n \n     }\n \n     async parseAsync( json ) {\n \n         const animations = this.parseAnimations( json.animations );\n         const shapes = this.parseShapes( json.shapes );\n         const geometries = this.parseGeometries( json.geometries, shapes );\n \n         const images = await this.parseImagesAsync( json.images );\n \n         const textures = this.parseTextures( json.textures, images );\n         const materials = this.parseMaterials( json.materials, textures );\n \n         const object = this.parseObject( json.object, geometries, materials, textures, animations );\n         const skeletons = this.parseSkeletons( json.skeletons, object );\n \n         this.bindSkeletons( object, skeletons );\n \n         return object;\n \n     }\n \n     parseShapes( json ) {\n \n         const shapes = {};\n \n         if ( json !== undefined ) {\n \n             for ( let i = 0, l = json.length; i < l; i ++ ) {\n \n                 const shape = new Shape().fromJSON( json[ i ] );\n \n                 shapes[ shape.uuid ] = shape;\n \n             }\n \n         }\n \n         return shapes;\n \n     }\n \n     parseSkeletons( json, object ) {\n \n         const skeletons = {};\n         const bones = {};\n \n         // generate bone lookup table\n \n         object.traverse( function ( child ) {\n \n             if ( child.isBone ) bones[ child.uuid ] = child;\n \n         } );\n \n         // create skeletons\n \n         if ( json !== undefined ) {\n \n             for ( let i = 0, l = json.length; i < l; i ++ ) {\n \n                 const skeleton = new Skeleton().fromJSON( json[ i ], bones );\n \n                 skeletons[ skeleton.uuid ] = skeleton;\n \n             }\n \n         }\n \n         return skeletons;\n \n     }\n \n     parseGeometries( json, shapes ) {\n \n         const geometries = {};\n \n         if ( json !== undefined ) {\n \n             const bufferGeometryLoader = new BufferGeometryLoader();\n \n             for ( let i = 0, l = json.length; i < l; i ++ ) {\n \n                 let geometry;\n                 const data = json[ i ];\n \n                 switch ( data.type ) {\n \n                     case 'BufferGeometry':\n                     case 'InstancedBufferGeometry':\n \n                         geometry = bufferGeometryLoader.parse( data );\n \n                         break;\n \n                     case 'Geometry':\n \n                         console.error( 'THREE.ObjectLoader: The legacy Geometry type is no longer supported.' );\n \n                         break;\n \n                     default:\n \n                         if ( data.type in Geometries ) {\n \n                             geometry = Geometries[ data.type ].fromJSON( data, shapes );\n \n                         } else {\n \n                             console.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n \n                         }\n \n                 }\n \n                 geometry.uuid = data.uuid;\n \n                 if ( data.name !== undefined ) geometry.name = data.name;\n                 if ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n \n                 geometries[ data.uuid ] = geometry;\n \n             }\n \n         }\n \n         return geometries;\n \n     }\n \n     parseMaterials( json, textures ) {\n \n         const cache = {}; // MultiMaterial\n         const materials = {};\n \n         if ( json !== undefined ) {\n \n             const loader = new MaterialLoader();\n             loader.setTextures( textures );\n \n             for ( let i = 0, l = json.length; i < l; i ++ ) {\n \n                 const data = json[ i ];\n \n                 if ( data.type === 'MultiMaterial' ) {\n \n                     // Deprecated\n \n                     const array = [];\n \n                     for ( let j = 0; j < data.materials.length; j ++ ) {\n \n                         const material = data.materials[ j ];\n \n                         if ( cache[ material.uuid ] === undefined ) {\n \n                             cache[ material.uuid ] = loader.parse( material );\n \n                         }\n \n                         array.push( cache[ material.uuid ] );\n \n                     }\n \n                     materials[ data.uuid ] = array;\n \n                 } else {\n \n                     if ( cache[ data.uuid ] === undefined ) {\n \n                         cache[ data.uuid ] = loader.parse( data );\n \n                     }\n \n                     materials[ data.uuid ] = cache[ data.uuid ];\n \n                 }\n \n             }\n \n         }\n \n         return materials;\n \n     }\n \n     parseAnimations( json ) {\n \n         const animations = {};\n \n         if ( json !== undefined ) {\n \n             for ( let i = 0; i < json.length; i ++ ) {\n \n                 const data = json[ i ];\n \n                 const clip = AnimationClip.parse( data );\n \n                 animations[ clip.uuid ] = clip;\n \n             }\n \n         }\n \n         return animations;\n \n     }\n \n     parseImages( json, onLoad ) {\n \n         const scope = this;\n         const images = {};\n \n         let loader;\n \n         function loadImage( url ) {\n \n             scope.manager.itemStart( url );\n \n             return loader.load( url, function () {\n \n                 scope.manager.itemEnd( url );\n \n             }, undefined, function () {\n \n                 scope.manager.itemError( url );\n                 scope.manager.itemEnd( url );\n \n             } );\n \n         }\n \n         function deserializeImage( image ) {\n \n             if ( typeof image === 'string' ) {\n \n                 const url = image;\n \n                 const path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n \n                 return loadImage( path );\n \n             } else {\n \n                 if ( image.data ) {\n \n                     return {\n                         data: getTypedArray( image.type, image.data ),\n                         width: image.width,\n                         height: image.height\n                     };\n \n                 } else {\n \n                     return null;\n \n                 }\n \n             }\n \n         }\n \n         if ( json !== undefined && json.length > 0 ) {\n \n             const manager = new LoadingManager( onLoad );\n \n             loader = new ImageLoader( manager );\n             loader.setCrossOrigin( this.crossOrigin );\n \n             for ( let i = 0, il = json.length; i < il; i ++ ) {\n \n                 const image = json[ i ];\n                 const url = image.url;\n \n                 if ( Array.isArray( url ) ) {\n \n                     // load array of images e.g CubeTexture\n \n                     const imageArray = [];\n \n                     for ( let j = 0, jl = url.length; j < jl; j ++ ) {\n \n                         const currentUrl = url[ j ];\n \n                         const deserializedImage = deserializeImage( currentUrl );\n \n                         if ( deserializedImage !== null ) {\n \n                             if ( deserializedImage instanceof HTMLImageElement ) {\n \n                                 imageArray.push( deserializedImage );\n \n                             } else {\n \n                                 // special case: handle array of data textures for cube textures\n \n                                 imageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n \n                             }\n \n                         }\n \n                     }\n \n                     images[ image.uuid ] = new Source( imageArray );\n \n                 } else {\n \n                     // load single image\n \n                     const deserializedImage = deserializeImage( image.url );\n                     images[ image.uuid ] = new Source( deserializedImage );\n \n \n                 }\n \n             }\n \n         }\n \n         return images;\n \n     }\n \n     async parseImagesAsync( json ) {\n \n         const scope = this;\n         const images = {};\n \n         let loader;\n \n         async function deserializeImage( image ) {\n \n             if ( typeof image === 'string' ) {\n \n                 const url = image;\n \n                 const path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n \n                 return await loader.loadAsync( path );\n \n             } else {\n \n                 if ( image.data ) {\n \n                     return {\n                         data: getTypedArray( image.type, image.data ),\n                         width: image.width,\n                         height: image.height\n                     };\n \n                 } else {\n \n                     return null;\n \n                 }\n \n             }\n \n         }\n \n         if ( json !== undefined && json.length > 0 ) {\n \n             loader = new ImageLoader( this.manager );\n             loader.setCrossOrigin( this.crossOrigin );\n \n             for ( let i = 0, il = json.length; i < il; i ++ ) {\n \n                 const image = json[ i ];\n                 const url = image.url;\n \n                 if ( Array.isArray( url ) ) {\n \n                     // load array of images e.g CubeTexture\n \n                     const imageArray = [];\n \n                     for ( let j = 0, jl = url.length; j < jl; j ++ ) {\n \n                         const currentUrl = url[ j ];\n \n                         const deserializedImage = await deserializeImage( currentUrl );\n \n                         if ( deserializedImage !== null ) {\n \n                             if ( deserializedImage instanceof HTMLImageElement ) {\n \n                                 imageArray.push( deserializedImage );\n \n                             } else {\n \n                                 // special case: handle array of data textures for cube textures\n \n                                 imageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n \n                             }\n \n                         }\n \n                     }\n \n                     images[ image.uuid ] = new Source( imageArray );\n \n                 } else {\n \n                     // load single image\n \n                     const deserializedImage = await deserializeImage( image.url );\n                     images[ image.uuid ] = new Source( deserializedImage );\n \n                 }\n \n             }\n \n         }\n \n         return images;\n \n     }\n \n     parseTextures( json, images ) {\n \n         function parseConstant( value, type ) {\n \n             if ( typeof value === 'number' ) return value;\n \n             console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n \n             return type[ value ];\n \n         }\n \n         const textures = {};\n \n         if ( json !== undefined ) {\n \n             for ( let i = 0, l = json.length; i < l; i ++ ) {\n \n                 const data = json[ i ];\n \n                 if ( data.image === undefined ) {\n \n                     console.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n \n                 }\n \n                 if ( images[ data.image ] === undefined ) {\n \n                     console.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n \n                 }\n \n                 const source = images[ data.image ];\n                 const image = source.data;\n \n                 let texture;\n \n                 if ( Array.isArray( image ) ) {\n \n                     texture = new CubeTexture();\n \n                     if ( image.length === 6 ) texture.needsUpdate = true;\n \n                 } else {\n \n                     if ( image && image.data ) {\n \n                         texture = new DataTexture();\n \n                     } else {\n \n                         texture = new Texture();\n \n                     }\n \n                     if ( image ) texture.needsUpdate = true; // textures can have undefined image data\n \n                 }\n \n                 texture.source = source;\n \n                 texture.uuid = data.uuid;\n \n                 if ( data.name !== undefined ) texture.name = data.name;\n \n                 if ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n \n                 if ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n                 if ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n                 if ( data.center !== undefined ) texture.center.fromArray( data.center );\n                 if ( data.rotation !== undefined ) texture.rotation = data.rotation;\n \n                 if ( data.wrap !== undefined ) {\n \n                     texture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n                     texture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n \n                 }\n \n                 if ( data.format !== undefined ) texture.format = data.format;\n                 if ( data.type !== undefined ) texture.type = data.type;\n                 if ( data.encoding !== undefined ) texture.encoding = data.encoding;\n \n                 if ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n                 if ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n                 if ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n \n                 if ( data.flipY !== undefined ) texture.flipY = data.flipY;\n \n                 if ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n                 if ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n \n                 if ( data.userData !== undefined ) texture.userData = data.userData;\n \n                 textures[ data.uuid ] = texture;\n \n             }\n \n         }\n \n         return textures;\n \n     }\n \n     parseObject( data, geometries, materials, textures, animations ) {\n \n         let object;\n \n         function getGeometry( name ) {\n \n             if ( geometries[ name ] === undefined ) {\n \n                 console.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n \n             }\n \n             return geometries[ name ];\n \n         }\n \n         function getMaterial( name ) {\n \n             if ( name === undefined ) return undefined;\n \n             if ( Array.isArray( name ) ) {\n \n                 const array = [];\n \n                 for ( let i = 0, l = name.length; i < l; i ++ ) {\n \n                     const uuid = name[ i ];\n \n                     if ( materials[ uuid ] === undefined ) {\n \n                         console.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n \n                     }\n \n                     array.push( materials[ uuid ] );\n \n                 }\n \n                 return array;\n \n             }\n \n             if ( materials[ name ] === undefined ) {\n \n                 console.warn( 'THREE.ObjectLoader: Undefined material', name );\n \n             }\n \n             return materials[ name ];\n \n         }\n \n         function getTexture( uuid ) {\n \n             if ( textures[ uuid ] === undefined ) {\n \n                 console.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n \n             }\n \n             return textures[ uuid ];\n \n         }\n \n         let geometry, material;\n \n         switch ( data.type ) {\n \n             case 'Scene':\n \n                 object = new Scene();\n \n                 if ( data.background !== undefined ) {\n \n                     if ( Number.isInteger( data.background ) ) {\n \n                         object.background = new Color( data.background );\n \n                     } else {\n \n                         object.background = getTexture( data.background );\n \n                     }\n \n                 }\n \n                 if ( data.environment !== undefined ) {\n \n                     object.environment = getTexture( data.environment );\n \n                 }\n \n                 if ( data.fog !== undefined ) {\n \n                     if ( data.fog.type === 'Fog' ) {\n \n                         object.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n \n                     } else if ( data.fog.type === 'FogExp2' ) {\n \n                         object.fog = new FogExp2( data.fog.color, data.fog.density );\n \n                     }\n \n                 }\n \n                 break;\n \n             case 'PerspectiveCamera':\n \n                 object = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n \n                 if ( data.focus !== undefined ) object.focus = data.focus;\n                 if ( data.zoom !== undefined ) object.zoom = data.zoom;\n                 if ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n                 if ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n                 if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n \n                 break;\n \n             case 'OrthographicCamera':\n \n                 object = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n \n                 if ( data.zoom !== undefined ) object.zoom = data.zoom;\n                 if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n \n                 break;\n \n             case 'AmbientLight':\n \n                 object = new AmbientLight( data.color, data.intensity );\n \n                 break;\n \n             case 'DirectionalLight':\n \n                 object = new DirectionalLight( data.color, data.intensity );\n \n                 break;\n \n             case 'PointLight':\n \n                 object = new PointLight( data.color, data.intensity, data.distance, data.decay );\n \n                 break;\n \n             case 'RectAreaLight':\n \n                 object = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n \n                 break;\n \n             case 'SpotLight':\n \n                 object = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n \n                 break;\n \n             case 'HemisphereLight':\n \n                 object = new HemisphereLight( data.color, data.groundColor, data.intensity );\n \n                 break;\n \n             case 'LightProbe':\n \n                 object = new LightProbe().fromJSON( data );\n \n                 break;\n \n             case 'SkinnedMesh':\n \n                 geometry = getGeometry( data.geometry );\n                  material = getMaterial( data.material );\n \n                 object = new SkinnedMesh( geometry, material );\n \n                 if ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n                 if ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n                 if ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n \n                 break;\n \n             case 'Mesh':\n \n                 geometry = getGeometry( data.geometry );\n                 material = getMaterial( data.material );\n \n                 object = new Mesh( geometry, material );\n \n                 break;\n \n             case 'InstancedMesh':\n \n                 geometry = getGeometry( data.geometry );\n                 material = getMaterial( data.material );\n                 const count = data.count;\n                 const instanceMatrix = data.instanceMatrix;\n                 const instanceColor = data.instanceColor;\n \n                 object = new InstancedMesh( geometry, material, count );\n                 object.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n                 if ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n \n                 break;\n \n             case 'LOD':\n \n                 object = new LOD();\n \n                 break;\n \n             case 'Line':\n \n                 object = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n \n                 break;\n \n             case 'LineLoop':\n \n                 object = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n \n                 break;\n \n             case 'LineSegments':\n \n                 object = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n \n                 break;\n \n             case 'PointCloud':\n             case 'Points':\n \n                 object = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n \n                 break;\n \n             case 'Sprite':\n \n                 object = new Sprite( getMaterial( data.material ) );\n \n                 break;\n \n             case 'Group':\n \n                 object = new Group();\n \n                 break;\n \n             case 'Bone':\n \n                 object = new Bone();\n \n                 break;\n \n             default:\n \n                 object = new Object3D();\n \n         }\n \n         object.uuid = data.uuid;\n \n         if ( data.name !== undefined ) object.name = data.name;\n \n         if ( data.matrix !== undefined ) {\n \n             object.matrix.fromArray( data.matrix );\n \n             if ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n             if ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n \n         } else {\n \n             if ( data.position !== undefined ) object.position.fromArray( data.position );\n             if ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n             if ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n             if ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n \n         }\n \n         if ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n         if ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n \n         if ( data.shadow ) {\n \n             if ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n             if ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n             if ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n             if ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n             if ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n \n         }\n \n         if ( data.visible !== undefined ) object.visible = data.visible;\n         if ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n         if ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n         if ( data.userData !== undefined ) object.userData = data.userData;\n         if ( data.layers !== undefined ) object.layers.mask = data.layers;\n \n         if ( data.children !== undefined ) {\n \n             const children = data.children;\n \n             for ( let i = 0; i < children.length; i ++ ) {\n \n                 object.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n \n             }\n \n         }\n \n         if ( data.animations !== undefined ) {\n \n             const objectAnimations = data.animations;\n \n             for ( let i = 0; i < objectAnimations.length; i ++ ) {\n \n                 const uuid = objectAnimations[ i ];\n \n                 object.animations.push( animations[ uuid ] );\n \n             }\n \n         }\n \n         if ( data.type === 'LOD' ) {\n \n             if ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n \n             const levels = data.levels;\n \n             for ( let l = 0; l < levels.length; l ++ ) {\n \n                 const level = levels[ l ];\n                 const child = object.getObjectByProperty( 'uuid', level.object );\n \n                 if ( child !== undefined ) {\n \n                     object.addLevel( child, level.distance );\n \n                 }\n \n             }\n \n         }\n \n         return object;\n \n     }\n \n     bindSkeletons( object, skeletons ) {\n \n         if ( Object.keys( skeletons ).length === 0 ) return;\n \n         object.traverse( function ( child ) {\n \n             if ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n \n                 const skeleton = skeletons[ child.skeleton ];\n \n                 if ( skeleton === undefined ) {\n \n                     console.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n \n                 } else {\n \n                     child.bind( skeleton, child.bindMatrix );\n \n                 }\n \n             }\n \n         } );\n \n     }\n \n     /* DEPRECATED */\n \n     setTexturePath( value ) {\n \n         console.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n         return this.setResourcePath( value );\n \n     }\n \n }\n \n const TEXTURE_MAPPING = {\n     UVMapping: UVMapping,\n     CubeReflectionMapping: CubeReflectionMapping,\n     CubeRefractionMapping: CubeRefractionMapping,\n     EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n     EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n     CubeUVReflectionMapping: CubeUVReflectionMapping\n };\n \n const TEXTURE_WRAPPING = {\n     RepeatWrapping: RepeatWrapping,\n     ClampToEdgeWrapping: ClampToEdgeWrapping,\n     MirroredRepeatWrapping: MirroredRepeatWrapping\n };\n \n const TEXTURE_FILTER = {\n     NearestFilter: NearestFilter,\n     NearestMipmapNearestFilter: NearestMipmapNearestFilter,\n     NearestMipmapLinearFilter: NearestMipmapLinearFilter,\n     LinearFilter: LinearFilter,\n     LinearMipmapNearestFilter: LinearMipmapNearestFilter,\n     LinearMipmapLinearFilter: LinearMipmapLinearFilter\n };\n \n class ImageBitmapLoader extends Loader {\n \n     constructor( manager ) {\n \n         super( manager );\n \n         if ( typeof createImageBitmap === 'undefined' ) {\n \n             console.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n \n         }\n \n         if ( typeof fetch === 'undefined' ) {\n \n             console.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n \n         }\n \n         this.options = { premultiplyAlpha: 'none' };\n \n     }\n \n     setOptions( options ) {\n \n         this.options = options;\n \n         return this;\n \n     }\n \n     load( url, onLoad, onProgress, onError ) {\n \n         if ( url === undefined ) url = '';\n \n         if ( this.path !== undefined ) url = this.path + url;\n \n         url = this.manager.resolveURL( url );\n \n         const scope = this;\n \n         const cached = Cache.get( url );\n \n         if ( cached !== undefined ) {\n \n             scope.manager.itemStart( url );\n \n             setTimeout( function () {\n \n                 if ( onLoad ) onLoad( cached );\n \n                 scope.manager.itemEnd( url );\n \n             }, 0 );\n \n             return cached;\n \n         }\n \n         const fetchOptions = {};\n         fetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n         fetchOptions.headers = this.requestHeader;\n \n         fetch( url, fetchOptions ).then( function ( res ) {\n \n             return res.blob();\n \n         } ).then( function ( blob ) {\n \n             return createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n \n         } ).then( function ( imageBitmap ) {\n \n             Cache.add( url, imageBitmap );\n \n             if ( onLoad ) onLoad( imageBitmap );\n \n             scope.manager.itemEnd( url );\n \n         } ).catch( function ( e ) {\n \n             if ( onError ) onError( e );\n \n             scope.manager.itemError( url );\n             scope.manager.itemEnd( url );\n \n         } );\n \n         scope.manager.itemStart( url );\n \n     }\n \n }\n \n ImageBitmapLoader.prototype.isImageBitmapLoader = true;\n \n let _context;\n \n const AudioContext = {\n \n     getContext: function () {\n \n         if ( _context === undefined ) {\n \n             _context = new ( window.AudioContext || window.webkitAudioContext )();\n \n         }\n \n         return _context;\n \n     },\n \n     setContext: function ( value ) {\n \n         _context = value;\n \n     }\n \n };\n \n class AudioLoader extends Loader {\n \n     constructor( manager ) {\n \n         super( manager );\n \n     }\n \n     load( url, onLoad, onProgress, onError ) {\n \n         const scope = this;\n \n         const loader = new FileLoader( this.manager );\n         loader.setResponseType( 'arraybuffer' );\n         loader.setPath( this.path );\n         loader.setRequestHeader( this.requestHeader );\n         loader.setWithCredentials( this.withCredentials );\n         loader.load( url, function ( buffer ) {\n \n             try {\n \n                 // Create a copy of the buffer. The `decodeAudioData` method\n                 // detaches the buffer when complete, preventing reuse.\n                 const bufferCopy = buffer.slice( 0 );\n \n                 const context = AudioContext.getContext();\n                 context.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n \n                     onLoad( audioBuffer );\n \n                 } );\n \n             } catch ( e ) {\n \n                 if ( onError ) {\n \n                     onError( e );\n \n                 } else {\n \n                     console.error( e );\n \n                 }\n \n                 scope.manager.itemError( url );\n \n             }\n \n         }, onProgress, onError );\n \n     }\n \n }\n \n class HemisphereLightProbe extends LightProbe {\n \n     constructor( skyColor, groundColor, intensity = 1 ) {\n \n         super( undefined, intensity );\n \n         const color1 = new Color().set( skyColor );\n         const color2 = new Color().set( groundColor );\n \n         const sky = new Vector3( color1.r, color1.g, color1.b );\n         const ground = new Vector3( color2.r, color2.g, color2.b );\n \n         // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n         const c0 = Math.sqrt( Math.PI );\n         const c1 = c0 * Math.sqrt( 0.75 );\n \n         this.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n         this.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n \n     }\n \n }\n \n HemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n \n class AmbientLightProbe extends LightProbe {\n \n     constructor( color, intensity = 1 ) {\n \n         super( undefined, intensity );\n \n         const color1 = new Color().set( color );\n \n         // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n         this.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n \n     }\n \n }\n \n AmbientLightProbe.prototype.isAmbientLightProbe = true;\n \n const _eyeRight = /*@__PURE__*/ new Matrix4();\n const _eyeLeft = /*@__PURE__*/ new Matrix4();\n const _projectionMatrix = /*@__PURE__*/ new Matrix4();\n \n class StereoCamera {\n \n     constructor() {\n \n         this.type = 'StereoCamera';\n \n         this.aspect = 1;\n \n         this.eyeSep = 0.064;\n \n         this.cameraL = new PerspectiveCamera();\n         this.cameraL.layers.enable( 1 );\n         this.cameraL.matrixAutoUpdate = false;\n \n         this.cameraR = new PerspectiveCamera();\n         this.cameraR.layers.enable( 2 );\n         this.cameraR.matrixAutoUpdate = false;\n \n         this._cache = {\n             focus: null,\n             fov: null,\n             aspect: null,\n             near: null,\n             far: null,\n             zoom: null,\n             eyeSep: null\n         };\n \n     }\n \n     update( camera ) {\n \n         const cache = this._cache;\n \n         const needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n             cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n             cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n \n         if ( needsUpdate ) {\n \n             cache.focus = camera.focus;\n             cache.fov = camera.fov;\n             cache.aspect = camera.aspect * this.aspect;\n             cache.near = camera.near;\n             cache.far = camera.far;\n             cache.zoom = camera.zoom;\n             cache.eyeSep = this.eyeSep;\n \n             // Off-axis stereoscopic effect based on\n             // http://paulbourke.net/stereographics/stereorender/\n \n             _projectionMatrix.copy( camera.projectionMatrix );\n             const eyeSepHalf = cache.eyeSep / 2;\n             const eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n             const ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n             let xmin, xmax;\n \n             // translate xOffset\n \n             _eyeLeft.elements[ 12 ] = - eyeSepHalf;\n             _eyeRight.elements[ 12 ] = eyeSepHalf;\n \n             // for left eye\n \n             xmin = - ymax * cache.aspect + eyeSepOnProjection;\n             xmax = ymax * cache.aspect + eyeSepOnProjection;\n \n             _projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n             _projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n \n             this.cameraL.projectionMatrix.copy( _projectionMatrix );\n \n             // for right eye\n \n             xmin = - ymax * cache.aspect - eyeSepOnProjection;\n             xmax = ymax * cache.aspect - eyeSepOnProjection;\n \n             _projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n             _projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n \n             this.cameraR.projectionMatrix.copy( _projectionMatrix );\n \n         }\n \n         this.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n         this.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n \n     }\n \n }\n \n class Clock {\n \n     constructor( autoStart = true ) {\n \n         this.autoStart = autoStart;\n \n         this.startTime = 0;\n         this.oldTime = 0;\n         this.elapsedTime = 0;\n \n         this.running = false;\n \n     }\n \n     start() {\n \n         this.startTime = now();\n \n         this.oldTime = this.startTime;\n         this.elapsedTime = 0;\n         this.running = true;\n \n     }\n \n     stop() {\n \n         this.getElapsedTime();\n         this.running = false;\n         this.autoStart = false;\n \n     }\n \n     getElapsedTime() {\n \n         this.getDelta();\n         return this.elapsedTime;\n \n     }\n \n     getDelta() {\n \n         let diff = 0;\n \n         if ( this.autoStart && ! this.running ) {\n \n             this.start();\n             return 0;\n \n         }\n \n         if ( this.running ) {\n \n             const newTime = now();\n \n             diff = ( newTime - this.oldTime ) / 1000;\n             this.oldTime = newTime;\n \n             this.elapsedTime += diff;\n \n         }\n \n         return diff;\n \n     }\n \n }\n \n function now() {\n \n     return ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n \n }\n \n const _position$1 = /*@__PURE__*/ new Vector3();\n const _quaternion$1 = /*@__PURE__*/ new Quaternion();\n const _scale$1 = /*@__PURE__*/ new Vector3();\n const _orientation$1 = /*@__PURE__*/ new Vector3();\n \n class AudioListener extends Object3D {\n \n     constructor() {\n \n         super();\n \n         this.type = 'AudioListener';\n \n         this.context = AudioContext.getContext();\n \n         this.gain = this.context.createGain();\n         this.gain.connect( this.context.destination );\n \n         this.filter = null;\n \n         this.timeDelta = 0;\n \n         // private\n \n         this._clock = new Clock();\n \n     }\n \n     getInput() {\n \n         return this.gain;\n \n     }\n \n     removeFilter() {\n \n         if ( this.filter !== null ) {\n \n             this.gain.disconnect( this.filter );\n             this.filter.disconnect( this.context.destination );\n             this.gain.connect( this.context.destination );\n             this.filter = null;\n \n         }\n \n         return this;\n \n     }\n \n     getFilter() {\n \n         return this.filter;\n \n     }\n \n     setFilter( value ) {\n \n         if ( this.filter !== null ) {\n \n             this.gain.disconnect( this.filter );\n             this.filter.disconnect( this.context.destination );\n \n         } else {\n \n             this.gain.disconnect( this.context.destination );\n \n         }\n \n         this.filter = value;\n         this.gain.connect( this.filter );\n         this.filter.connect( this.context.destination );\n \n         return this;\n \n     }\n \n     getMasterVolume() {\n \n         return this.gain.gain.value;\n \n     }\n \n     setMasterVolume( value ) {\n \n         this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n \n         return this;\n \n     }\n \n     updateMatrixWorld( force ) {\n \n         super.updateMatrixWorld( force );\n \n         const listener = this.context.listener;\n         const up = this.up;\n \n         this.timeDelta = this._clock.getDelta();\n \n         this.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n \n         _orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n \n         if ( listener.positionX ) {\n \n             // code path for Chrome (see #14393)\n \n             const endTime = this.context.currentTime + this.timeDelta;\n \n             listener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n             listener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n             listener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n             listener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n             listener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n             listener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n             listener.upX.linearRampToValueAtTime( up.x, endTime );\n             listener.upY.linearRampToValueAtTime( up.y, endTime );\n             listener.upZ.linearRampToValueAtTime( up.z, endTime );\n \n         } else {\n \n             listener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n             listener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n \n         }\n \n     }\n \n }\n \n class Audio extends Object3D {\n \n     constructor( listener ) {\n \n         super();\n \n         this.type = 'Audio';\n \n         this.listener = listener;\n         this.context = listener.context;\n \n         this.gain = this.context.createGain();\n         this.gain.connect( listener.getInput() );\n \n         this.autoplay = false;\n \n         this.buffer = null;\n         this.detune = 0;\n         this.loop = false;\n         this.loopStart = 0;\n         this.loopEnd = 0;\n         this.offset = 0;\n         this.duration = undefined;\n         this.playbackRate = 1;\n         this.isPlaying = false;\n         this.hasPlaybackControl = true;\n         this.source = null;\n         this.sourceType = 'empty';\n \n         this._startedAt = 0;\n         this._progress = 0;\n         this._connected = false;\n \n         this.filters = [];\n \n     }\n \n     getOutput() {\n \n         return this.gain;\n \n     }\n \n     setNodeSource( audioNode ) {\n \n         this.hasPlaybackControl = false;\n         this.sourceType = 'audioNode';\n         this.source = audioNode;\n         this.connect();\n \n         return this;\n \n     }\n \n     setMediaElementSource( mediaElement ) {\n \n         this.hasPlaybackControl = false;\n         this.sourceType = 'mediaNode';\n         this.source = this.context.createMediaElementSource( mediaElement );\n         this.connect();\n \n         return this;\n \n     }\n \n     setMediaStreamSource( mediaStream ) {\n \n         this.hasPlaybackControl = false;\n         this.sourceType = 'mediaStreamNode';\n         this.source = this.context.createMediaStreamSource( mediaStream );\n         this.connect();\n \n         return this;\n \n     }\n \n     setBuffer( audioBuffer ) {\n \n         this.buffer = audioBuffer;\n         this.sourceType = 'buffer';\n \n         if ( this.autoplay ) this.play();\n \n         return this;\n \n     }\n \n     play( delay = 0 ) {\n \n         if ( this.isPlaying === true ) {\n \n             console.warn( 'THREE.Audio: Audio is already playing.' );\n             return;\n \n         }\n \n         if ( this.hasPlaybackControl === false ) {\n \n             console.warn( 'THREE.Audio: this Audio has no playback control.' );\n             return;\n \n         }\n \n         this._startedAt = this.context.currentTime + delay;\n \n         const source = this.context.createBufferSource();\n         source.buffer = this.buffer;\n         source.loop = this.loop;\n         source.loopStart = this.loopStart;\n         source.loopEnd = this.loopEnd;\n         source.onended = this.onEnded.bind( this );\n         source.start( this._startedAt, this._progress + this.offset, this.duration );\n \n         this.isPlaying = true;\n \n         this.source = source;\n \n         this.setDetune( this.detune );\n         this.setPlaybackRate( this.playbackRate );\n \n         return this.connect();\n \n     }\n \n     pause() {\n \n         if ( this.hasPlaybackControl === false ) {\n \n             console.warn( 'THREE.Audio: this Audio has no playback control.' );\n             return;\n \n         }\n \n         if ( this.isPlaying === true ) {\n \n             // update current progress\n \n             this._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n \n             if ( this.loop === true ) {\n \n                 // ensure _progress does not exceed duration with looped audios\n \n                 this._progress = this._progress % ( this.duration || this.buffer.duration );\n \n             }\n \n             this.source.stop();\n             this.source.onended = null;\n \n             this.isPlaying = false;\n \n         }\n \n         return this;\n \n     }\n \n     stop() {\n \n         if ( this.hasPlaybackControl === false ) {\n \n             console.warn( 'THREE.Audio: this Audio has no playback control.' );\n             return;\n \n         }\n \n         this._progress = 0;\n \n         this.source.stop();\n         this.source.onended = null;\n         this.isPlaying = false;\n \n         return this;\n \n     }\n \n     connect() {\n \n         if ( this.filters.length > 0 ) {\n \n             this.source.connect( this.filters[ 0 ] );\n \n             for ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n \n                 this.filters[ i - 1 ].connect( this.filters[ i ] );\n \n             }\n \n             this.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n \n         } else {\n \n             this.source.connect( this.getOutput() );\n \n         }\n \n         this._connected = true;\n \n         return this;\n \n     }\n \n     disconnect() {\n \n         if ( this.filters.length > 0 ) {\n \n             this.source.disconnect( this.filters[ 0 ] );\n \n             for ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n \n                 this.filters[ i - 1 ].disconnect( this.filters[ i ] );\n \n             }\n \n             this.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n \n         } else {\n \n             this.source.disconnect( this.getOutput() );\n \n         }\n \n         this._connected = false;\n \n         return this;\n \n     }\n \n     getFilters() {\n \n         return this.filters;\n \n     }\n \n     setFilters( value ) {\n \n         if ( ! value ) value = [];\n \n         if ( this._connected === true ) {\n \n             this.disconnect();\n             this.filters = value.slice();\n             this.connect();\n \n         } else {\n \n             this.filters = value.slice();\n \n         }\n \n         return this;\n \n     }\n \n     setDetune( value ) {\n \n         this.detune = value;\n \n         if ( this.source.detune === undefined ) return; // only set detune when available\n \n         if ( this.isPlaying === true ) {\n \n             this.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n \n         }\n \n         return this;\n \n     }\n \n     getDetune() {\n \n         return this.detune;\n \n     }\n \n     getFilter() {\n \n         return this.getFilters()[ 0 ];\n \n     }\n \n     setFilter( filter ) {\n \n         return this.setFilters( filter ? [ filter ] : [] );\n \n     }\n \n     setPlaybackRate( value ) {\n \n         if ( this.hasPlaybackControl === false ) {\n \n             console.warn( 'THREE.Audio: this Audio has no playback control.' );\n             return;\n \n         }\n \n         this.playbackRate = value;\n \n         if ( this.isPlaying === true ) {\n \n             this.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n \n         }\n \n         return this;\n \n     }\n \n     getPlaybackRate() {\n \n         return this.playbackRate;\n \n     }\n \n     onEnded() {\n \n         this.isPlaying = false;\n \n     }\n \n     getLoop() {\n \n         if ( this.hasPlaybackControl === false ) {\n \n             console.warn( 'THREE.Audio: this Audio has no playback control.' );\n             return false;\n \n         }\n \n         return this.loop;\n \n     }\n \n     setLoop( value ) {\n \n         if ( this.hasPlaybackControl === false ) {\n \n             console.warn( 'THREE.Audio: this Audio has no playback control.' );\n             return;\n \n         }\n \n         this.loop = value;\n \n         if ( this.isPlaying === true ) {\n \n             this.source.loop = this.loop;\n \n         }\n \n         return this;\n \n     }\n \n     setLoopStart( value ) {\n \n         this.loopStart = value;\n \n         return this;\n \n     }\n \n     setLoopEnd( value ) {\n \n         this.loopEnd = value;\n \n         return this;\n \n     }\n \n     getVolume() {\n \n         return this.gain.gain.value;\n \n     }\n \n     setVolume( value ) {\n \n         this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n \n         return this;\n \n     }\n \n }\n \n const _position = /*@__PURE__*/ new Vector3();\n const _quaternion = /*@__PURE__*/ new Quaternion();\n const _scale = /*@__PURE__*/ new Vector3();\n const _orientation = /*@__PURE__*/ new Vector3();\n \n class PositionalAudio extends Audio {\n \n     constructor( listener ) {\n \n         super( listener );\n \n         this.panner = this.context.createPanner();\n         this.panner.panningModel = 'HRTF';\n         this.panner.connect( this.gain );\n \n     }\n \n     disconnect() {\n \n         super.disconnect();\n \n         this.panner.disconnect( this.gain );\n \n     }\n \n     getOutput() {\n \n         return this.panner;\n \n     }\n \n     getRefDistance() {\n \n         return this.panner.refDistance;\n \n     }\n \n     setRefDistance( value ) {\n \n         this.panner.refDistance = value;\n \n         return this;\n \n     }\n \n     getRolloffFactor() {\n \n         return this.panner.rolloffFactor;\n \n     }\n \n     setRolloffFactor( value ) {\n \n         this.panner.rolloffFactor = value;\n \n         return this;\n \n     }\n \n     getDistanceModel() {\n \n         return this.panner.distanceModel;\n \n     }\n \n     setDistanceModel( value ) {\n \n         this.panner.distanceModel = value;\n \n         return this;\n \n     }\n \n     getMaxDistance() {\n \n         return this.panner.maxDistance;\n \n     }\n \n     setMaxDistance( value ) {\n \n         this.panner.maxDistance = value;\n \n         return this;\n \n     }\n \n     setDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n \n         this.panner.coneInnerAngle = coneInnerAngle;\n         this.panner.coneOuterAngle = coneOuterAngle;\n         this.panner.coneOuterGain = coneOuterGain;\n \n         return this;\n \n     }\n \n     updateMatrixWorld( force ) {\n \n         super.updateMatrixWorld( force );\n \n         if ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n \n         this.matrixWorld.decompose( _position, _quaternion, _scale );\n \n         _orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n \n         const panner = this.panner;\n \n         if ( panner.positionX ) {\n \n             // code path for Chrome and Firefox (see #14393)\n \n             const endTime = this.context.currentTime + this.listener.timeDelta;\n \n             panner.positionX.linearRampToValueAtTime( _position.x, endTime );\n             panner.positionY.linearRampToValueAtTime( _position.y, endTime );\n             panner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n             panner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n             panner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n             panner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n \n         } else {\n \n             panner.setPosition( _position.x, _position.y, _position.z );\n             panner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n \n         }\n \n     }\n \n }\n \n class AudioAnalyser {\n \n     constructor( audio, fftSize = 2048 ) {\n \n         this.analyser = audio.context.createAnalyser();\n         this.analyser.fftSize = fftSize;\n \n         this.data = new Uint8Array( this.analyser.frequencyBinCount );\n \n         audio.getOutput().connect( this.analyser );\n \n     }\n \n \n     getFrequencyData() {\n \n         this.analyser.getByteFrequencyData( this.data );\n \n         return this.data;\n \n     }\n \n     getAverageFrequency() {\n \n         let value = 0;\n         const data = this.getFrequencyData();\n \n         for ( let i = 0; i < data.length; i ++ ) {\n \n             value += data[ i ];\n \n         }\n \n         return value / data.length;\n \n     }\n \n }\n \n class PropertyMixer {\n \n     constructor( binding, typeName, valueSize ) {\n \n         this.binding = binding;\n         this.valueSize = valueSize;\n \n         let mixFunction,\n             mixFunctionAdditive,\n             setIdentity;\n \n         // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n         //\n         // interpolators can use .buffer as their .result\n         // the data then goes to 'incoming'\n         //\n         // 'accu0' and 'accu1' are used frame-interleaved for\n         // the cumulative result and are compared to detect\n         // changes\n         //\n         // 'orig' stores the original state of the property\n         //\n         // 'add' is used for additive cumulative results\n         //\n         // 'work' is optional and is only present for quaternion types. It is used\n         // to store intermediate quaternion multiplication results\n \n         switch ( typeName ) {\n \n             case 'quaternion':\n                 mixFunction = this._slerp;\n                 mixFunctionAdditive = this._slerpAdditive;\n                 setIdentity = this._setAdditiveIdentityQuaternion;\n \n                 this.buffer = new Float64Array( valueSize * 6 );\n                 this._workIndex = 5;\n                 break;\n \n             case 'string':\n             case 'bool':\n                 mixFunction = this._select;\n \n                 // Use the regular mix function and for additive on these types,\n                 // additive is not relevant for non-numeric types\n                 mixFunctionAdditive = this._select;\n \n                 setIdentity = this._setAdditiveIdentityOther;\n \n                 this.buffer = new Array( valueSize * 5 );\n                 break;\n \n             default:\n                 mixFunction = this._lerp;\n                 mixFunctionAdditive = this._lerpAdditive;\n                 setIdentity = this._setAdditiveIdentityNumeric;\n \n                 this.buffer = new Float64Array( valueSize * 5 );\n \n         }\n \n         this._mixBufferRegion = mixFunction;\n         this._mixBufferRegionAdditive = mixFunctionAdditive;\n         this._setIdentity = setIdentity;\n         this._origIndex = 3;\n         this._addIndex = 4;\n \n         this.cumulativeWeight = 0;\n         this.cumulativeWeightAdditive = 0;\n \n         this.useCount = 0;\n         this.referenceCount = 0;\n \n     }\n \n     // accumulate data in the 'incoming' region into 'accu<i>'\n     accumulate( accuIndex, weight ) {\n \n         // note: happily accumulating nothing when weight = 0, the caller knows\n         // the weight and shouldn't have made the call in the first place\n \n         const buffer = this.buffer,\n             stride = this.valueSize,\n             offset = accuIndex * stride + stride;\n \n         let currentWeight = this.cumulativeWeight;\n \n         if ( currentWeight === 0 ) {\n \n             // accuN := incoming * weight\n \n             for ( let i = 0; i !== stride; ++ i ) {\n \n                 buffer[ offset + i ] = buffer[ i ];\n \n             }\n \n             currentWeight = weight;\n \n         } else {\n \n             // accuN := accuN + incoming * weight\n \n             currentWeight += weight;\n             const mix = weight / currentWeight;\n             this._mixBufferRegion( buffer, offset, 0, mix, stride );\n \n         }\n \n         this.cumulativeWeight = currentWeight;\n \n     }\n \n     // accumulate data in the 'incoming' region into 'add'\n     accumulateAdditive( weight ) {\n \n         const buffer = this.buffer,\n             stride = this.valueSize,\n             offset = stride * this._addIndex;\n \n         if ( this.cumulativeWeightAdditive === 0 ) {\n \n             // add = identity\n \n             this._setIdentity();\n \n         }\n \n         // add := add + incoming * weight\n \n         this._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n         this.cumulativeWeightAdditive += weight;\n \n     }\n \n     // apply the state of 'accu<i>' to the binding when accus differ\n     apply( accuIndex ) {\n \n         const stride = this.valueSize,\n             buffer = this.buffer,\n             offset = accuIndex * stride + stride,\n \n             weight = this.cumulativeWeight,\n             weightAdditive = this.cumulativeWeightAdditive,\n \n             binding = this.binding;\n \n         this.cumulativeWeight = 0;\n         this.cumulativeWeightAdditive = 0;\n \n         if ( weight < 1 ) {\n \n             // accuN := accuN + original * ( 1 - cumulativeWeight )\n \n             const originalValueOffset = stride * this._origIndex;\n \n             this._mixBufferRegion(\n                 buffer, offset, originalValueOffset, 1 - weight, stride );\n \n         }\n \n         if ( weightAdditive > 0 ) {\n \n             // accuN := accuN + additive accuN\n \n             this._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n \n         }\n \n         for ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n \n             if ( buffer[ i ] !== buffer[ i + stride ] ) {\n \n                 // value has changed -> update scene graph\n \n                 binding.setValue( buffer, offset );\n                 break;\n \n             }\n \n         }\n \n     }\n \n     // remember the state of the bound property and copy it to both accus\n     saveOriginalState() {\n \n         const binding = this.binding;\n \n         const buffer = this.buffer,\n             stride = this.valueSize,\n \n             originalValueOffset = stride * this._origIndex;\n \n         binding.getValue( buffer, originalValueOffset );\n \n         // accu[0..1] := orig -- initially detect changes against the original\n         for ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n \n             buffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n \n         }\n \n         // Add to identity for additive\n         this._setIdentity();\n \n         this.cumulativeWeight = 0;\n         this.cumulativeWeightAdditive = 0;\n \n     }\n \n     // apply the state previously taken via 'saveOriginalState' to the binding\n     restoreOriginalState() {\n \n         const originalValueOffset = this.valueSize * 3;\n         this.binding.setValue( this.buffer, originalValueOffset );\n \n     }\n \n     _setAdditiveIdentityNumeric() {\n \n         const startIndex = this._addIndex * this.valueSize;\n         const endIndex = startIndex + this.valueSize;\n \n         for ( let i = startIndex; i < endIndex; i ++ ) {\n \n             this.buffer[ i ] = 0;\n \n         }\n \n     }\n \n     _setAdditiveIdentityQuaternion() {\n \n         this._setAdditiveIdentityNumeric();\n         this.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n \n     }\n \n     _setAdditiveIdentityOther() {\n \n         const startIndex = this._origIndex * this.valueSize;\n         const targetIndex = this._addIndex * this.valueSize;\n \n         for ( let i = 0; i < this.valueSize; i ++ ) {\n \n             this.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n \n         }\n \n     }\n \n \n     // mix functions\n \n     _select( buffer, dstOffset, srcOffset, t, stride ) {\n \n         if ( t >= 0.5 ) {\n \n             for ( let i = 0; i !== stride; ++ i ) {\n \n                 buffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n \n             }\n \n         }\n \n     }\n \n     _slerp( buffer, dstOffset, srcOffset, t ) {\n \n         Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n \n     }\n \n     _slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n \n         const workOffset = this._workIndex * stride;\n \n         // Store result in intermediate buffer offset\n         Quaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n \n         // Slerp to the intermediate result\n         Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n \n     }\n \n     _lerp( buffer, dstOffset, srcOffset, t, stride ) {\n \n         const s = 1 - t;\n \n         for ( let i = 0; i !== stride; ++ i ) {\n \n             const j = dstOffset + i;\n \n             buffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n \n         }\n \n     }\n \n     _lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n \n         for ( let i = 0; i !== stride; ++ i ) {\n \n             const j = dstOffset + i;\n \n             buffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n \n         }\n \n     }\n \n }\n \n // Characters [].:/ are reserved for track binding syntax.\n const _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n const _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n \n // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n // only latin characters, and the unicode \\p{L} is not yet supported. So\n // instead, we exclude reserved characters and match everything else.\n const _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n const _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n \n // Parent directories, delimited by '/' or ':'. Currently unused, but must\n // be matched to parse the rest of the track name.\n const _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n \n // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n const _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n \n // Object on target node, and accessor. May not contain reserved\n // characters. Accessor may contain any character except closing bracket.\n const _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n \n // Property and accessor. May not contain reserved characters. Accessor may\n // contain any non-bracket characters.\n const _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n \n const _trackRe = new RegExp( ''\n     + '^'\n     + _directoryRe\n     + _nodeRe\n     + _objectRe\n     + _propertyRe\n     + '$'\n );\n \n const _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n \n class Composite {\n \n     constructor( targetGroup, path, optionalParsedPath ) {\n \n         const parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n \n         this._targetGroup = targetGroup;\n         this._bindings = targetGroup.subscribe_( path, parsedPath );\n \n     }\n \n     getValue( array, offset ) {\n \n         this.bind(); // bind all binding\n \n         const firstValidIndex = this._targetGroup.nCachedObjects_,\n             binding = this._bindings[ firstValidIndex ];\n \n         // and only call .getValue on the first\n         if ( binding !== undefined ) binding.getValue( array, offset );\n \n     }\n \n     setValue( array, offset ) {\n \n         const bindings = this._bindings;\n \n         for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n \n             bindings[ i ].setValue( array, offset );\n \n         }\n \n     }\n \n     bind() {\n \n         const bindings = this._bindings;\n \n         for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n \n             bindings[ i ].bind();\n \n         }\n \n     }\n \n     unbind() {\n \n         const bindings = this._bindings;\n \n         for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n \n             bindings[ i ].unbind();\n \n         }\n \n     }\n \n }\n \n // Note: This class uses a State pattern on a per-method basis:\n // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n // prototype version of these methods with one that represents\n // the bound state. When the property is not found, the methods\n // become no-ops.\n class PropertyBinding {\n \n     constructor( rootNode, path, parsedPath ) {\n \n         this.path = path;\n         this.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n \n         this.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n \n         this.rootNode = rootNode;\n \n         // initial state of these methods that calls 'bind'\n         this.getValue = this._getValue_unbound;\n         this.setValue = this._setValue_unbound;\n \n     }\n \n \n     static create( root, path, parsedPath ) {\n \n         if ( ! ( root && root.isAnimationObjectGroup ) ) {\n \n             return new PropertyBinding( root, path, parsedPath );\n \n         } else {\n \n             return new PropertyBinding.Composite( root, path, parsedPath );\n \n         }\n \n     }\n \n     /**\n      * Replaces spaces with underscores and removes unsupported characters from\n      * node names, to ensure compatibility with parseTrackName().\n      *\n      * @param {string} name Node name to be sanitized.\n      * @return {string}\n      */\n     static sanitizeNodeName( name ) {\n \n         return name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n \n     }\n \n     static parseTrackName( trackName ) {\n \n         const matches = _trackRe.exec( trackName );\n \n         if ( matches === null ) {\n \n             throw new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n \n         }\n \n         const results = {\n             // directoryName: matches[ 1 ], // (tschw) currently unused\n             nodeName: matches[ 2 ],\n             objectName: matches[ 3 ],\n             objectIndex: matches[ 4 ],\n             propertyName: matches[ 5 ], // required\n             propertyIndex: matches[ 6 ]\n         };\n \n         const lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n \n         if ( lastDot !== undefined && lastDot !== - 1 ) {\n \n             const objectName = results.nodeName.substring( lastDot + 1 );\n \n             // Object names must be checked against an allowlist. Otherwise, there\n             // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n             // 'bar' could be the objectName, or part of a nodeName (which can\n             // include '.' characters).\n             if ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n \n                 results.nodeName = results.nodeName.substring( 0, lastDot );\n                 results.objectName = objectName;\n \n             }\n \n         }\n \n         if ( results.propertyName === null || results.propertyName.length === 0 ) {\n \n             throw new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n \n         }\n \n         return results;\n \n     }\n \n     static findNode( root, nodeName ) {\n \n         if ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n \n             return root;\n \n         }\n \n         // search into skeleton bones.\n         if ( root.skeleton ) {\n \n             const bone = root.skeleton.getBoneByName( nodeName );\n \n             if ( bone !== undefined ) {\n \n                 return bone;\n \n             }\n \n         }\n \n         // search into node subtree.\n         if ( root.children ) {\n \n             const searchNodeSubtree = function ( children ) {\n \n                 for ( let i = 0; i < children.length; i ++ ) {\n \n                     const childNode = children[ i ];\n \n                     if ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n \n                         return childNode;\n \n                     }\n \n                     const result = searchNodeSubtree( childNode.children );\n \n                     if ( result ) return result;\n \n                 }\n \n                 return null;\n \n             };\n \n             const subTreeNode = searchNodeSubtree( root.children );\n \n             if ( subTreeNode ) {\n \n                 return subTreeNode;\n \n             }\n \n         }\n \n         return null;\n \n     }\n \n     // these are used to \"bind\" a nonexistent property\n     _getValue_unavailable() {}\n     _setValue_unavailable() {}\n \n     // Getters\n \n     _getValue_direct( buffer, offset ) {\n \n         buffer[ offset ] = this.targetObject[ this.propertyName ];\n \n     }\n \n     _getValue_array( buffer, offset ) {\n \n         const source = this.resolvedProperty;\n \n         for ( let i = 0, n = source.length; i !== n; ++ i ) {\n \n             buffer[ offset ++ ] = source[ i ];\n \n         }\n \n     }\n \n     _getValue_arrayElement( buffer, offset ) {\n \n         buffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n \n     }\n \n     _getValue_toArray( buffer, offset ) {\n \n         this.resolvedProperty.toArray( buffer, offset );\n \n     }\n \n     // Direct\n \n     _setValue_direct( buffer, offset ) {\n \n         this.targetObject[ this.propertyName ] = buffer[ offset ];\n \n     }\n \n     _setValue_direct_setNeedsUpdate( buffer, offset ) {\n \n         this.targetObject[ this.propertyName ] = buffer[ offset ];\n         this.targetObject.needsUpdate = true;\n \n     }\n \n     _setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n \n         this.targetObject[ this.propertyName ] = buffer[ offset ];\n         this.targetObject.matrixWorldNeedsUpdate = true;\n \n     }\n \n     // EntireArray\n \n     _setValue_array( buffer, offset ) {\n \n         const dest = this.resolvedProperty;\n \n         for ( let i = 0, n = dest.length; i !== n; ++ i ) {\n \n             dest[ i ] = buffer[ offset ++ ];\n \n         }\n \n     }\n \n     _setValue_array_setNeedsUpdate( buffer, offset ) {\n \n         const dest = this.resolvedProperty;\n \n         for ( let i = 0, n = dest.length; i !== n; ++ i ) {\n \n             dest[ i ] = buffer[ offset ++ ];\n \n         }\n \n         this.targetObject.needsUpdate = true;\n \n     }\n \n     _setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n \n         const dest = this.resolvedProperty;\n \n         for ( let i = 0, n = dest.length; i !== n; ++ i ) {\n \n             dest[ i ] = buffer[ offset ++ ];\n \n         }\n \n         this.targetObject.matrixWorldNeedsUpdate = true;\n \n     }\n \n     // ArrayElement\n \n     _setValue_arrayElement( buffer, offset ) {\n \n         this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n \n     }\n \n     _setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n \n         this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n         this.targetObject.needsUpdate = true;\n \n     }\n \n     _setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n \n         this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n         this.targetObject.matrixWorldNeedsUpdate = true;\n \n     }\n \n     // HasToFromArray\n \n     _setValue_fromArray( buffer, offset ) {\n \n         this.resolvedProperty.fromArray( buffer, offset );\n \n     }\n \n     _setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n \n         this.resolvedProperty.fromArray( buffer, offset );\n         this.targetObject.needsUpdate = true;\n \n     }\n \n     _setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n \n         this.resolvedProperty.fromArray( buffer, offset );\n         this.targetObject.matrixWorldNeedsUpdate = true;\n \n     }\n \n     _getValue_unbound( targetArray, offset ) {\n \n         this.bind();\n         this.getValue( targetArray, offset );\n \n     }\n \n     _setValue_unbound( sourceArray, offset ) {\n \n         this.bind();\n         this.setValue( sourceArray, offset );\n \n     }\n \n     // create getter / setter pair for a property in the scene graph\n     bind() {\n \n         let targetObject = this.node;\n         const parsedPath = this.parsedPath;\n \n         const objectName = parsedPath.objectName;\n         const propertyName = parsedPath.propertyName;\n         let propertyIndex = parsedPath.propertyIndex;\n \n         if ( ! targetObject ) {\n \n             targetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n \n             this.node = targetObject;\n \n         }\n \n         // set fail state so we can just 'return' on error\n         this.getValue = this._getValue_unavailable;\n         this.setValue = this._setValue_unavailable;\n \n         // ensure there is a value node\n         if ( ! targetObject ) {\n \n             console.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n             return;\n \n         }\n \n         if ( objectName ) {\n \n             let objectIndex = parsedPath.objectIndex;\n \n             // special cases were we need to reach deeper into the hierarchy to get the face materials....\n             switch ( objectName ) {\n \n                 case 'materials':\n \n                     if ( ! targetObject.material ) {\n \n                         console.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n                         return;\n \n                     }\n \n                     if ( ! targetObject.material.materials ) {\n \n                         console.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n                         return;\n \n                     }\n \n                     targetObject = targetObject.material.materials;\n \n                     break;\n \n                 case 'bones':\n \n                     if ( ! targetObject.skeleton ) {\n \n                         console.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n                         return;\n \n                     }\n \n                     // potential future optimization: skip this if propertyIndex is already an integer\n                     // and convert the integer string to a true integer.\n \n                     targetObject = targetObject.skeleton.bones;\n \n                     // support resolving morphTarget names into indices.\n                     for ( let i = 0; i < targetObject.length; i ++ ) {\n \n                         if ( targetObject[ i ].name === objectIndex ) {\n \n                             objectIndex = i;\n                             break;\n \n                         }\n \n                     }\n \n                     break;\n \n                 default:\n \n                     if ( targetObject[ objectName ] === undefined ) {\n \n                         console.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n                         return;\n \n                     }\n \n                     targetObject = targetObject[ objectName ];\n \n             }\n \n \n             if ( objectIndex !== undefined ) {\n \n                 if ( targetObject[ objectIndex ] === undefined ) {\n \n                     console.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n                     return;\n \n                 }\n \n                 targetObject = targetObject[ objectIndex ];\n \n             }\n \n         }\n \n         // resolve property\n         const nodeProperty = targetObject[ propertyName ];\n \n         if ( nodeProperty === undefined ) {\n \n             const nodeName = parsedPath.nodeName;\n \n             console.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n                 '.' + propertyName + ' but it wasn\\'t found.', targetObject );\n             return;\n \n         }\n \n         // determine versioning scheme\n         let versioning = this.Versioning.None;\n \n         this.targetObject = targetObject;\n \n         if ( targetObject.needsUpdate !== undefined ) { // material\n \n             versioning = this.Versioning.NeedsUpdate;\n \n         } else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n \n             versioning = this.Versioning.MatrixWorldNeedsUpdate;\n \n         }\n \n         // determine how the property gets bound\n         let bindingType = this.BindingType.Direct;\n \n         if ( propertyIndex !== undefined ) {\n \n             // access a sub element of the property array (only primitives are supported right now)\n \n             if ( propertyName === 'morphTargetInfluences' ) {\n \n                 // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n \n                 // support resolving morphTarget names into indices.\n                 if ( ! targetObject.geometry ) {\n \n                     console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n                     return;\n \n                 }\n \n                 if ( targetObject.geometry.isBufferGeometry ) {\n \n                     if ( ! targetObject.geometry.morphAttributes ) {\n \n                         console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n                         return;\n \n                     }\n \n                     if ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n \n                         propertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n \n                     }\n \n \n                 } else {\n \n                     console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n                     return;\n \n                 }\n \n             }\n \n             bindingType = this.BindingType.ArrayElement;\n \n             this.resolvedProperty = nodeProperty;\n             this.propertyIndex = propertyIndex;\n \n         } else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n \n             // must use copy for Object3D.Euler/Quaternion\n \n             bindingType = this.BindingType.HasFromToArray;\n \n             this.resolvedProperty = nodeProperty;\n \n         } else if ( Array.isArray( nodeProperty ) ) {\n \n             bindingType = this.BindingType.EntireArray;\n \n             this.resolvedProperty = nodeProperty;\n \n         } else {\n \n             this.propertyName = propertyName;\n \n         }\n \n         // select getter / setter\n         this.getValue = this.GetterByBindingType[ bindingType ];\n         this.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n \n     }\n \n     unbind() {\n \n         this.node = null;\n \n         // back to the prototype version of getValue / setValue\n         // note: avoiding to mutate the shape of 'this' via 'delete'\n         this.getValue = this._getValue_unbound;\n         this.setValue = this._setValue_unbound;\n \n     }\n \n }\n \n PropertyBinding.Composite = Composite;\n \n PropertyBinding.prototype.BindingType = {\n     Direct: 0,\n     EntireArray: 1,\n     ArrayElement: 2,\n     HasFromToArray: 3\n };\n \n PropertyBinding.prototype.Versioning = {\n     None: 0,\n     NeedsUpdate: 1,\n     MatrixWorldNeedsUpdate: 2\n };\n \n PropertyBinding.prototype.GetterByBindingType = [\n \n     PropertyBinding.prototype._getValue_direct,\n     PropertyBinding.prototype._getValue_array,\n     PropertyBinding.prototype._getValue_arrayElement,\n     PropertyBinding.prototype._getValue_toArray,\n \n ];\n \n PropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n \n     [\n         // Direct\n         PropertyBinding.prototype._setValue_direct,\n         PropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n         PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n \n     ], [\n \n         // EntireArray\n \n         PropertyBinding.prototype._setValue_array,\n         PropertyBinding.prototype._setValue_array_setNeedsUpdate,\n         PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n \n     ], [\n \n         // ArrayElement\n         PropertyBinding.prototype._setValue_arrayElement,\n         PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n         PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n \n     ], [\n \n         // HasToFromArray\n         PropertyBinding.prototype._setValue_fromArray,\n         PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n         PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n \n     ]\n \n ];\n \n /**\n  *\n  * A group of objects that receives a shared animation state.\n  *\n  * Usage:\n  *\n  *  - Add objects you would otherwise pass as 'root' to the\n  *    constructor or the .clipAction method of AnimationMixer.\n  *\n  *  - Instead pass this object as 'root'.\n  *\n  *  - You can also add and remove objects later when the mixer\n  *    is running.\n  *\n  * Note:\n  *\n  *    Objects of this class appear as one object to the mixer,\n  *    so cache control of the individual objects must be done\n  *    on the group.\n  *\n  * Limitation:\n  *\n  *  - The animated properties must be compatible among the\n  *    all objects in the group.\n  *\n  *  - A single property can either be controlled through a\n  *    target group or directly, but not both.\n  */\n \n class AnimationObjectGroup {\n \n     constructor() {\n \n         this.uuid = generateUUID();\n \n         // cached objects followed by the active ones\n         this._objects = Array.prototype.slice.call( arguments );\n \n         this.nCachedObjects_ = 0; // threshold\n         // note: read by PropertyBinding.Composite\n \n         const indices = {};\n         this._indicesByUUID = indices; // for bookkeeping\n \n         for ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n \n             indices[ arguments[ i ].uuid ] = i;\n \n         }\n \n         this._paths = []; // inside: string\n         this._parsedPaths = []; // inside: { we don't care, here }\n         this._bindings = []; // inside: Array< PropertyBinding >\n         this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n \n         const scope = this;\n \n         this.stats = {\n \n             objects: {\n                 get total() {\n \n                     return scope._objects.length;\n \n                 },\n                 get inUse() {\n \n                     return this.total - scope.nCachedObjects_;\n \n                 }\n             },\n             get bindingsPerObject() {\n \n                 return scope._bindings.length;\n \n             }\n \n         };\n \n     }\n \n     add() {\n \n         const objects = this._objects,\n             indicesByUUID = this._indicesByUUID,\n             paths = this._paths,\n             parsedPaths = this._parsedPaths,\n             bindings = this._bindings,\n             nBindings = bindings.length;\n \n         let knownObject = undefined,\n             nObjects = objects.length,\n             nCachedObjects = this.nCachedObjects_;\n \n         for ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n \n             const object = arguments[ i ],\n                 uuid = object.uuid;\n             let index = indicesByUUID[ uuid ];\n \n             if ( index === undefined ) {\n \n                 // unknown object -> add it to the ACTIVE region\n \n                 index = nObjects ++;\n                 indicesByUUID[ uuid ] = index;\n                 objects.push( object );\n \n                 // accounting is done, now do the same for all bindings\n \n                 for ( let j = 0, m = nBindings; j !== m; ++ j ) {\n \n                     bindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n \n                 }\n \n             } else if ( index < nCachedObjects ) {\n \n                 knownObject = objects[ index ];\n \n                 // move existing object to the ACTIVE region\n \n                 const firstActiveIndex = -- nCachedObjects,\n                     lastCachedObject = objects[ firstActiveIndex ];\n \n                 indicesByUUID[ lastCachedObject.uuid ] = index;\n                 objects[ index ] = lastCachedObject;\n \n                 indicesByUUID[ uuid ] = firstActiveIndex;\n                 objects[ firstActiveIndex ] = object;\n \n                 // accounting is done, now do the same for all bindings\n \n                 for ( let j = 0, m = nBindings; j !== m; ++ j ) {\n \n                     const bindingsForPath = bindings[ j ],\n                         lastCached = bindingsForPath[ firstActiveIndex ];\n \n                     let binding = bindingsForPath[ index ];\n \n                     bindingsForPath[ index ] = lastCached;\n \n                     if ( binding === undefined ) {\n \n                         // since we do not bother to create new bindings\n                         // for objects that are cached, the binding may\n                         // or may not exist\n \n                         binding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n \n                     }\n \n                     bindingsForPath[ firstActiveIndex ] = binding;\n \n                 }\n \n             } else if ( objects[ index ] !== knownObject ) {\n \n                 console.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n                     'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n \n             } // else the object is already where we want it to be\n \n         } // for arguments\n \n         this.nCachedObjects_ = nCachedObjects;\n \n     }\n \n     remove() {\n \n         const objects = this._objects,\n             indicesByUUID = this._indicesByUUID,\n             bindings = this._bindings,\n             nBindings = bindings.length;\n \n         let nCachedObjects = this.nCachedObjects_;\n \n         for ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n \n             const object = arguments[ i ],\n                 uuid = object.uuid,\n                 index = indicesByUUID[ uuid ];\n \n             if ( index !== undefined && index >= nCachedObjects ) {\n \n                 // move existing object into the CACHED region\n \n                 const lastCachedIndex = nCachedObjects ++,\n                     firstActiveObject = objects[ lastCachedIndex ];\n \n                 indicesByUUID[ firstActiveObject.uuid ] = index;\n                 objects[ index ] = firstActiveObject;\n \n                 indicesByUUID[ uuid ] = lastCachedIndex;\n                 objects[ lastCachedIndex ] = object;\n \n                 // accounting is done, now do the same for all bindings\n \n                 for ( let j = 0, m = nBindings; j !== m; ++ j ) {\n \n                     const bindingsForPath = bindings[ j ],\n                         firstActive = bindingsForPath[ lastCachedIndex ],\n                         binding = bindingsForPath[ index ];\n \n                     bindingsForPath[ index ] = firstActive;\n                     bindingsForPath[ lastCachedIndex ] = binding;\n \n                 }\n \n             }\n \n         } // for arguments\n \n         this.nCachedObjects_ = nCachedObjects;\n \n     }\n \n     // remove & forget\n     uncache() {\n \n         const objects = this._objects,\n             indicesByUUID = this._indicesByUUID,\n             bindings = this._bindings,\n             nBindings = bindings.length;\n \n         let nCachedObjects = this.nCachedObjects_,\n             nObjects = objects.length;\n \n         for ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n \n             const object = arguments[ i ],\n                 uuid = object.uuid,\n                 index = indicesByUUID[ uuid ];\n \n             if ( index !== undefined ) {\n \n                 delete indicesByUUID[ uuid ];\n \n                 if ( index < nCachedObjects ) {\n \n                     // object is cached, shrink the CACHED region\n \n                     const firstActiveIndex = -- nCachedObjects,\n                         lastCachedObject = objects[ firstActiveIndex ],\n                         lastIndex = -- nObjects,\n                         lastObject = objects[ lastIndex ];\n \n                     // last cached object takes this object's place\n                     indicesByUUID[ lastCachedObject.uuid ] = index;\n                     objects[ index ] = lastCachedObject;\n \n                     // last object goes to the activated slot and pop\n                     indicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n                     objects[ firstActiveIndex ] = lastObject;\n                     objects.pop();\n \n                     // accounting is done, now do the same for all bindings\n \n                     for ( let j = 0, m = nBindings; j !== m; ++ j ) {\n \n                         const bindingsForPath = bindings[ j ],\n                             lastCached = bindingsForPath[ firstActiveIndex ],\n                             last = bindingsForPath[ lastIndex ];\n \n                         bindingsForPath[ index ] = lastCached;\n                         bindingsForPath[ firstActiveIndex ] = last;\n                         bindingsForPath.pop();\n \n                     }\n \n                 } else {\n \n                     // object is active, just swap with the last and pop\n \n                     const lastIndex = -- nObjects,\n                         lastObject = objects[ lastIndex ];\n \n                     if ( lastIndex > 0 ) {\n \n                         indicesByUUID[ lastObject.uuid ] = index;\n \n                     }\n \n                     objects[ index ] = lastObject;\n                     objects.pop();\n \n                     // accounting is done, now do the same for all bindings\n \n                     for ( let j = 0, m = nBindings; j !== m; ++ j ) {\n \n                         const bindingsForPath = bindings[ j ];\n \n                         bindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n                         bindingsForPath.pop();\n \n                     }\n \n                 } // cached or active\n \n             } // if object is known\n \n         } // for arguments\n \n         this.nCachedObjects_ = nCachedObjects;\n \n     }\n \n     // Internal interface used by befriended PropertyBinding.Composite:\n \n     subscribe_( path, parsedPath ) {\n \n         // returns an array of bindings for the given path that is changed\n         // according to the contained objects in the group\n \n         const indicesByPath = this._bindingsIndicesByPath;\n         let index = indicesByPath[ path ];\n         const bindings = this._bindings;\n \n         if ( index !== undefined ) return bindings[ index ];\n \n         const paths = this._paths,\n             parsedPaths = this._parsedPaths,\n             objects = this._objects,\n             nObjects = objects.length,\n             nCachedObjects = this.nCachedObjects_,\n             bindingsForPath = new Array( nObjects );\n \n         index = bindings.length;\n \n         indicesByPath[ path ] = index;\n \n         paths.push( path );\n         parsedPaths.push( parsedPath );\n         bindings.push( bindingsForPath );\n \n         for ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n \n             const object = objects[ i ];\n             bindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n \n         }\n \n         return bindingsForPath;\n \n     }\n \n     unsubscribe_( path ) {\n \n         // tells the group to forget about a property path and no longer\n         // update the array previously obtained with 'subscribe_'\n \n         const indicesByPath = this._bindingsIndicesByPath,\n             index = indicesByPath[ path ];\n \n         if ( index !== undefined ) {\n \n             const paths = this._paths,\n                 parsedPaths = this._parsedPaths,\n                 bindings = this._bindings,\n                 lastBindingsIndex = bindings.length - 1,\n                 lastBindings = bindings[ lastBindingsIndex ],\n                 lastBindingsPath = path[ lastBindingsIndex ];\n \n             indicesByPath[ lastBindingsPath ] = index;\n \n             bindings[ index ] = lastBindings;\n             bindings.pop();\n \n             parsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n             parsedPaths.pop();\n \n             paths[ index ] = paths[ lastBindingsIndex ];\n             paths.pop();\n \n         }\n \n     }\n \n }\n \n AnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n \n class AnimationAction {\n \n     constructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n \n         this._mixer = mixer;\n         this._clip = clip;\n         this._localRoot = localRoot;\n         this.blendMode = blendMode;\n \n         const tracks = clip.tracks,\n             nTracks = tracks.length,\n             interpolants = new Array( nTracks );\n \n         const interpolantSettings = {\n             endingStart: ZeroCurvatureEnding,\n             endingEnd: ZeroCurvatureEnding\n         };\n \n         for ( let i = 0; i !== nTracks; ++ i ) {\n \n             const interpolant = tracks[ i ].createInterpolant( null );\n             interpolants[ i ] = interpolant;\n             interpolant.settings = interpolantSettings;\n \n         }\n \n         this._interpolantSettings = interpolantSettings;\n \n         this._interpolants = interpolants; // bound by the mixer\n \n         // inside: PropertyMixer (managed by the mixer)\n         this._propertyBindings = new Array( nTracks );\n \n         this._cacheIndex = null; // for the memory manager\n         this._byClipCacheIndex = null; // for the memory manager\n \n         this._timeScaleInterpolant = null;\n         this._weightInterpolant = null;\n \n         this.loop = LoopRepeat;\n         this._loopCount = - 1;\n \n         // global mixer time when the action is to be started\n         // it's set back to 'null' upon start of the action\n         this._startTime = null;\n \n         // scaled local time of the action\n         // gets clamped or wrapped to 0..clip.duration according to loop\n         this.time = 0;\n \n         this.timeScale = 1;\n         this._effectiveTimeScale = 1;\n \n         this.weight = 1;\n         this._effectiveWeight = 1;\n \n         this.repetitions = Infinity; // no. of repetitions when looping\n \n         this.paused = false; // true -> zero effective time scale\n         this.enabled = true; // false -> zero effective weight\n \n         this.clampWhenFinished = false;// keep feeding the last frame?\n \n         this.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n         this.zeroSlopeAtEnd = true;// clips for start, loop and end\n \n     }\n \n     // State & Scheduling\n \n     play() {\n \n         this._mixer._activateAction( this );\n \n         return this;\n \n     }\n \n     stop() {\n \n         this._mixer._deactivateAction( this );\n \n         return this.reset();\n \n     }\n \n     reset() {\n \n         this.paused = false;\n         this.enabled = true;\n \n         this.time = 0; // restart clip\n         this._loopCount = - 1;// forget previous loops\n         this._startTime = null;// forget scheduling\n \n         return this.stopFading().stopWarping();\n \n     }\n \n     isRunning() {\n \n         return this.enabled && ! this.paused && this.timeScale !== 0 &&\n             this._startTime === null && this._mixer._isActiveAction( this );\n \n     }\n \n     // return true when play has been called\n     isScheduled() {\n \n         return this._mixer._isActiveAction( this );\n \n     }\n \n     startAt( time ) {\n \n         this._startTime = time;\n \n         return this;\n \n     }\n \n     setLoop( mode, repetitions ) {\n \n         this.loop = mode;\n         this.repetitions = repetitions;\n \n         return this;\n \n     }\n \n     // Weight\n \n     // set the weight stopping any scheduled fading\n     // although .enabled = false yields an effective weight of zero, this\n     // method does *not* change .enabled, because it would be confusing\n     setEffectiveWeight( weight ) {\n \n         this.weight = weight;\n \n         // note: same logic as when updated at runtime\n         this._effectiveWeight = this.enabled ? weight : 0;\n \n         return this.stopFading();\n \n     }\n \n     // return the weight considering fading and .enabled\n     getEffectiveWeight() {\n \n         return this._effectiveWeight;\n \n     }\n \n     fadeIn( duration ) {\n \n         return this._scheduleFading( duration, 0, 1 );\n \n     }\n \n     fadeOut( duration ) {\n \n         return this._scheduleFading( duration, 1, 0 );\n \n     }\n \n     crossFadeFrom( fadeOutAction, duration, warp ) {\n \n         fadeOutAction.fadeOut( duration );\n         this.fadeIn( duration );\n \n         if ( warp ) {\n \n             const fadeInDuration = this._clip.duration,\n                 fadeOutDuration = fadeOutAction._clip.duration,\n \n                 startEndRatio = fadeOutDuration / fadeInDuration,\n                 endStartRatio = fadeInDuration / fadeOutDuration;\n \n             fadeOutAction.warp( 1.0, startEndRatio, duration );\n             this.warp( endStartRatio, 1.0, duration );\n \n         }\n \n         return this;\n \n     }\n \n     crossFadeTo( fadeInAction, duration, warp ) {\n \n         return fadeInAction.crossFadeFrom( this, duration, warp );\n \n     }\n \n     stopFading() {\n \n         const weightInterpolant = this._weightInterpolant;\n \n         if ( weightInterpolant !== null ) {\n \n             this._weightInterpolant = null;\n             this._mixer._takeBackControlInterpolant( weightInterpolant );\n \n         }\n \n         return this;\n \n     }\n \n     // Time Scale Control\n \n     // set the time scale stopping any scheduled warping\n     // although .paused = true yields an effective time scale of zero, this\n     // method does *not* change .paused, because it would be confusing\n     setEffectiveTimeScale( timeScale ) {\n \n         this.timeScale = timeScale;\n         this._effectiveTimeScale = this.paused ? 0 : timeScale;\n \n         return this.stopWarping();\n \n     }\n \n     // return the time scale considering warping and .paused\n     getEffectiveTimeScale() {\n \n         return this._effectiveTimeScale;\n \n     }\n \n     setDuration( duration ) {\n \n         this.timeScale = this._clip.duration / duration;\n \n         return this.stopWarping();\n \n     }\n \n     syncWith( action ) {\n \n         this.time = action.time;\n         this.timeScale = action.timeScale;\n \n         return this.stopWarping();\n \n     }\n \n     halt( duration ) {\n \n         return this.warp( this._effectiveTimeScale, 0, duration );\n \n     }\n \n     warp( startTimeScale, endTimeScale, duration ) {\n \n         const mixer = this._mixer,\n             now = mixer.time,\n             timeScale = this.timeScale;\n \n         let interpolant = this._timeScaleInterpolant;\n \n         if ( interpolant === null ) {\n \n             interpolant = mixer._lendControlInterpolant();\n             this._timeScaleInterpolant = interpolant;\n \n         }\n \n         const times = interpolant.parameterPositions,\n             values = interpolant.sampleValues;\n \n         times[ 0 ] = now;\n         times[ 1 ] = now + duration;\n \n         values[ 0 ] = startTimeScale / timeScale;\n         values[ 1 ] = endTimeScale / timeScale;\n \n         return this;\n \n     }\n \n     stopWarping() {\n \n         const timeScaleInterpolant = this._timeScaleInterpolant;\n \n         if ( timeScaleInterpolant !== null ) {\n \n             this._timeScaleInterpolant = null;\n             this._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n \n         }\n \n         return this;\n \n     }\n \n     // Object Accessors\n \n     getMixer() {\n \n         return this._mixer;\n \n     }\n \n     getClip() {\n \n         return this._clip;\n \n     }\n \n     getRoot() {\n \n         return this._localRoot || this._mixer._root;\n \n     }\n \n     // Interna\n \n     _update( time, deltaTime, timeDirection, accuIndex ) {\n \n         // called by the mixer\n \n         if ( ! this.enabled ) {\n \n             // call ._updateWeight() to update ._effectiveWeight\n \n             this._updateWeight( time );\n             return;\n \n         }\n \n         const startTime = this._startTime;\n \n         if ( startTime !== null ) {\n \n             // check for scheduled start of action\n \n             const timeRunning = ( time - startTime ) * timeDirection;\n             if ( timeRunning < 0 || timeDirection === 0 ) {\n \n                 return; // yet to come / don't decide when delta = 0\n \n             }\n \n             // start\n \n             this._startTime = null; // unschedule\n             deltaTime = timeDirection * timeRunning;\n \n         }\n \n         // apply time scale and advance time\n \n         deltaTime *= this._updateTimeScale( time );\n         const clipTime = this._updateTime( deltaTime );\n \n         // note: _updateTime may disable the action resulting in\n         // an effective weight of 0\n \n         const weight = this._updateWeight( time );\n \n         if ( weight > 0 ) {\n \n             const interpolants = this._interpolants;\n             const propertyMixers = this._propertyBindings;\n \n             switch ( this.blendMode ) {\n \n                 case AdditiveAnimationBlendMode:\n \n                     for ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n \n                         interpolants[ j ].evaluate( clipTime );\n                         propertyMixers[ j ].accumulateAdditive( weight );\n \n                     }\n \n                     break;\n \n                 case NormalAnimationBlendMode:\n                 default:\n \n                     for ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n \n                         interpolants[ j ].evaluate( clipTime );\n                         propertyMixers[ j ].accumulate( accuIndex, weight );\n \n                     }\n \n             }\n \n         }\n \n     }\n \n     _updateWeight( time ) {\n \n         let weight = 0;\n \n         if ( this.enabled ) {\n \n             weight = this.weight;\n             const interpolant = this._weightInterpolant;\n \n             if ( interpolant !== null ) {\n \n                 const interpolantValue = interpolant.evaluate( time )[ 0 ];\n \n                 weight *= interpolantValue;\n \n                 if ( time > interpolant.parameterPositions[ 1 ] ) {\n \n                     this.stopFading();\n \n                     if ( interpolantValue === 0 ) {\n \n                         // faded out, disable\n                         this.enabled = false;\n \n                     }\n \n                 }\n \n             }\n \n         }\n \n         this._effectiveWeight = weight;\n         return weight;\n \n     }\n \n     _updateTimeScale( time ) {\n \n         let timeScale = 0;\n \n         if ( ! this.paused ) {\n \n             timeScale = this.timeScale;\n \n             const interpolant = this._timeScaleInterpolant;\n \n             if ( interpolant !== null ) {\n \n                 const interpolantValue = interpolant.evaluate( time )[ 0 ];\n \n                 timeScale *= interpolantValue;\n \n                 if ( time > interpolant.parameterPositions[ 1 ] ) {\n \n                     this.stopWarping();\n \n                     if ( timeScale === 0 ) {\n \n                         // motion has halted, pause\n                         this.paused = true;\n \n                     } else {\n \n                         // warp done - apply final time scale\n                         this.timeScale = timeScale;\n \n                     }\n \n                 }\n \n             }\n \n         }\n \n         this._effectiveTimeScale = timeScale;\n         return timeScale;\n \n     }\n \n     _updateTime( deltaTime ) {\n \n         const duration = this._clip.duration;\n         const loop = this.loop;\n \n         let time = this.time + deltaTime;\n         let loopCount = this._loopCount;\n \n         const pingPong = ( loop === LoopPingPong );\n \n         if ( deltaTime === 0 ) {\n \n             if ( loopCount === - 1 ) return time;\n \n             return ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n \n         }\n \n         if ( loop === LoopOnce ) {\n \n             if ( loopCount === - 1 ) {\n \n                 // just started\n \n                 this._loopCount = 0;\n                 this._setEndings( true, true, false );\n \n             }\n \n             handle_stop: {\n \n                 if ( time >= duration ) {\n \n                     time = duration;\n \n                 } else if ( time < 0 ) {\n \n                     time = 0;\n \n                 } else {\n \n                     this.time = time;\n \n                     break handle_stop;\n \n                 }\n \n                 if ( this.clampWhenFinished ) this.paused = true;\n                 else this.enabled = false;\n \n                 this.time = time;\n \n                 this._mixer.dispatchEvent( {\n                     type: 'finished', action: this,\n                     direction: deltaTime < 0 ? - 1 : 1\n                 } );\n \n             }\n \n         } else { // repetitive Repeat or PingPong\n \n             if ( loopCount === - 1 ) {\n \n                 // just started\n \n                 if ( deltaTime >= 0 ) {\n \n                     loopCount = 0;\n \n                     this._setEndings( true, this.repetitions === 0, pingPong );\n \n                 } else {\n \n                     // when looping in reverse direction, the initial\n                     // transition through zero counts as a repetition,\n                     // so leave loopCount at -1\n \n                     this._setEndings( this.repetitions === 0, true, pingPong );\n \n                 }\n \n             }\n \n             if ( time >= duration || time < 0 ) {\n \n                 // wrap around\n \n                 const loopDelta = Math.floor( time / duration ); // signed\n                 time -= duration * loopDelta;\n \n                 loopCount += Math.abs( loopDelta );\n \n                 const pending = this.repetitions - loopCount;\n \n                 if ( pending <= 0 ) {\n \n                     // have to stop (switch state, clamp time, fire event)\n \n                     if ( this.clampWhenFinished ) this.paused = true;\n                     else this.enabled = false;\n \n                     time = deltaTime > 0 ? duration : 0;\n \n                     this.time = time;\n \n                     this._mixer.dispatchEvent( {\n                         type: 'finished', action: this,\n                         direction: deltaTime > 0 ? 1 : - 1\n                     } );\n \n                 } else {\n \n                     // keep running\n \n                     if ( pending === 1 ) {\n \n                         // entering the last round\n \n                         const atStart = deltaTime < 0;\n                         this._setEndings( atStart, ! atStart, pingPong );\n \n                     } else {\n \n                         this._setEndings( false, false, pingPong );\n \n                     }\n \n                     this._loopCount = loopCount;\n \n                     this.time = time;\n \n                     this._mixer.dispatchEvent( {\n                         type: 'loop', action: this, loopDelta: loopDelta\n                     } );\n \n                 }\n \n             } else {\n \n                 this.time = time;\n \n             }\n \n             if ( pingPong && ( loopCount & 1 ) === 1 ) {\n \n                 // invert time for the \"pong round\"\n \n                 return duration - time;\n \n             }\n \n         }\n \n         return time;\n \n     }\n \n     _setEndings( atStart, atEnd, pingPong ) {\n \n         const settings = this._interpolantSettings;\n \n         if ( pingPong ) {\n \n             settings.endingStart = ZeroSlopeEnding;\n             settings.endingEnd = ZeroSlopeEnding;\n \n         } else {\n \n             // assuming for LoopOnce atStart == atEnd == true\n \n             if ( atStart ) {\n \n                 settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n \n             } else {\n \n                 settings.endingStart = WrapAroundEnding;\n \n             }\n \n             if ( atEnd ) {\n \n                 settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n \n             } else {\n \n                 settings.endingEnd \t = WrapAroundEnding;\n \n             }\n \n         }\n \n     }\n \n     _scheduleFading( duration, weightNow, weightThen ) {\n \n         const mixer = this._mixer, now = mixer.time;\n         let interpolant = this._weightInterpolant;\n \n         if ( interpolant === null ) {\n \n             interpolant = mixer._lendControlInterpolant();\n             this._weightInterpolant = interpolant;\n \n         }\n \n         const times = interpolant.parameterPositions,\n             values = interpolant.sampleValues;\n \n         times[ 0 ] = now;\n         values[ 0 ] = weightNow;\n         times[ 1 ] = now + duration;\n         values[ 1 ] = weightThen;\n \n         return this;\n \n     }\n \n }\n \n class AnimationMixer extends EventDispatcher {\n \n     constructor( root ) {\n \n         super();\n \n         this._root = root;\n         this._initMemoryManager();\n         this._accuIndex = 0;\n         this.time = 0;\n         this.timeScale = 1.0;\n \n     }\n \n     _bindAction( action, prototypeAction ) {\n \n         const root = action._localRoot || this._root,\n             tracks = action._clip.tracks,\n             nTracks = tracks.length,\n             bindings = action._propertyBindings,\n             interpolants = action._interpolants,\n             rootUuid = root.uuid,\n             bindingsByRoot = this._bindingsByRootAndName;\n \n         let bindingsByName = bindingsByRoot[ rootUuid ];\n \n         if ( bindingsByName === undefined ) {\n \n             bindingsByName = {};\n             bindingsByRoot[ rootUuid ] = bindingsByName;\n \n         }\n \n         for ( let i = 0; i !== nTracks; ++ i ) {\n \n             const track = tracks[ i ],\n                 trackName = track.name;\n \n             let binding = bindingsByName[ trackName ];\n \n             if ( binding !== undefined ) {\n \n                 ++ binding.referenceCount;\n                 bindings[ i ] = binding;\n \n             } else {\n \n                 binding = bindings[ i ];\n \n                 if ( binding !== undefined ) {\n \n                     // existing binding, make sure the cache knows\n \n                     if ( binding._cacheIndex === null ) {\n \n                         ++ binding.referenceCount;\n                         this._addInactiveBinding( binding, rootUuid, trackName );\n \n                     }\n \n                     continue;\n \n                 }\n \n                 const path = prototypeAction && prototypeAction.\n                     _propertyBindings[ i ].binding.parsedPath;\n \n                 binding = new PropertyMixer(\n                     PropertyBinding.create( root, trackName, path ),\n                     track.ValueTypeName, track.getValueSize() );\n \n                 ++ binding.referenceCount;\n                 this._addInactiveBinding( binding, rootUuid, trackName );\n \n                 bindings[ i ] = binding;\n \n             }\n \n             interpolants[ i ].resultBuffer = binding.buffer;\n \n         }\n \n     }\n \n     _activateAction( action ) {\n \n         if ( ! this._isActiveAction( action ) ) {\n \n             if ( action._cacheIndex === null ) {\n \n                 // this action has been forgotten by the cache, but the user\n                 // appears to be still using it -> rebind\n \n                 const rootUuid = ( action._localRoot || this._root ).uuid,\n                     clipUuid = action._clip.uuid,\n                     actionsForClip = this._actionsByClip[ clipUuid ];\n \n                 this._bindAction( action,\n                     actionsForClip && actionsForClip.knownActions[ 0 ] );\n \n                 this._addInactiveAction( action, clipUuid, rootUuid );\n \n             }\n \n             const bindings = action._propertyBindings;\n \n             // increment reference counts / sort out state\n             for ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n \n                 const binding = bindings[ i ];\n \n                 if ( binding.useCount ++ === 0 ) {\n \n                     this._lendBinding( binding );\n                     binding.saveOriginalState();\n \n                 }\n \n             }\n \n             this._lendAction( action );\n \n         }\n \n     }\n \n     _deactivateAction( action ) {\n \n         if ( this._isActiveAction( action ) ) {\n \n             const bindings = action._propertyBindings;\n \n             // decrement reference counts / sort out state\n             for ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n \n                 const binding = bindings[ i ];\n \n                 if ( -- binding.useCount === 0 ) {\n \n                     binding.restoreOriginalState();\n                     this._takeBackBinding( binding );\n \n                 }\n \n             }\n \n             this._takeBackAction( action );\n \n         }\n \n     }\n \n     // Memory manager\n \n     _initMemoryManager() {\n \n         this._actions = []; // 'nActiveActions' followed by inactive ones\n         this._nActiveActions = 0;\n \n         this._actionsByClip = {};\n         // inside:\n         // {\n         // \tknownActions: Array< AnimationAction > - used as prototypes\n         // \tactionByRoot: AnimationAction - lookup\n         // }\n \n \n         this._bindings = []; // 'nActiveBindings' followed by inactive ones\n         this._nActiveBindings = 0;\n \n         this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n \n \n         this._controlInterpolants = []; // same game as above\n         this._nActiveControlInterpolants = 0;\n \n         const scope = this;\n \n         this.stats = {\n \n             actions: {\n                 get total() {\n \n                     return scope._actions.length;\n \n                 },\n                 get inUse() {\n \n                     return scope._nActiveActions;\n \n                 }\n             },\n             bindings: {\n                 get total() {\n \n                     return scope._bindings.length;\n \n                 },\n                 get inUse() {\n \n                     return scope._nActiveBindings;\n \n                 }\n             },\n             controlInterpolants: {\n                 get total() {\n \n                     return scope._controlInterpolants.length;\n \n                 },\n                 get inUse() {\n \n                     return scope._nActiveControlInterpolants;\n \n                 }\n             }\n \n         };\n \n     }\n \n     // Memory management for AnimationAction objects\n \n     _isActiveAction( action ) {\n \n         const index = action._cacheIndex;\n         return index !== null && index < this._nActiveActions;\n \n     }\n \n     _addInactiveAction( action, clipUuid, rootUuid ) {\n \n         const actions = this._actions,\n             actionsByClip = this._actionsByClip;\n \n         let actionsForClip = actionsByClip[ clipUuid ];\n \n         if ( actionsForClip === undefined ) {\n \n             actionsForClip = {\n \n                 knownActions: [ action ],\n                 actionByRoot: {}\n \n             };\n \n             action._byClipCacheIndex = 0;\n \n             actionsByClip[ clipUuid ] = actionsForClip;\n \n         } else {\n \n             const knownActions = actionsForClip.knownActions;\n \n             action._byClipCacheIndex = knownActions.length;\n             knownActions.push( action );\n \n         }\n \n         action._cacheIndex = actions.length;\n         actions.push( action );\n \n         actionsForClip.actionByRoot[ rootUuid ] = action;\n \n     }\n \n     _removeInactiveAction( action ) {\n \n         const actions = this._actions,\n             lastInactiveAction = actions[ actions.length - 1 ],\n             cacheIndex = action._cacheIndex;\n \n         lastInactiveAction._cacheIndex = cacheIndex;\n         actions[ cacheIndex ] = lastInactiveAction;\n         actions.pop();\n \n         action._cacheIndex = null;\n \n \n         const clipUuid = action._clip.uuid,\n             actionsByClip = this._actionsByClip,\n             actionsForClip = actionsByClip[ clipUuid ],\n             knownActionsForClip = actionsForClip.knownActions,\n \n             lastKnownAction =\n                 knownActionsForClip[ knownActionsForClip.length - 1 ],\n \n             byClipCacheIndex = action._byClipCacheIndex;\n \n         lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n         knownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n         knownActionsForClip.pop();\n \n         action._byClipCacheIndex = null;\n \n \n         const actionByRoot = actionsForClip.actionByRoot,\n             rootUuid = ( action._localRoot || this._root ).uuid;\n \n         delete actionByRoot[ rootUuid ];\n \n         if ( knownActionsForClip.length === 0 ) {\n \n             delete actionsByClip[ clipUuid ];\n \n         }\n \n         this._removeInactiveBindingsForAction( action );\n \n     }\n \n     _removeInactiveBindingsForAction( action ) {\n \n         const bindings = action._propertyBindings;\n \n         for ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n \n             const binding = bindings[ i ];\n \n             if ( -- binding.referenceCount === 0 ) {\n \n                 this._removeInactiveBinding( binding );\n \n             }\n \n         }\n \n     }\n \n     _lendAction( action ) {\n \n         // [ active actions |  inactive actions  ]\n         // [  active actions >| inactive actions ]\n         //                 s        a\n         //                  <-swap->\n         //                 a        s\n \n         const actions = this._actions,\n             prevIndex = action._cacheIndex,\n \n             lastActiveIndex = this._nActiveActions ++,\n \n             firstInactiveAction = actions[ lastActiveIndex ];\n \n         action._cacheIndex = lastActiveIndex;\n         actions[ lastActiveIndex ] = action;\n \n         firstInactiveAction._cacheIndex = prevIndex;\n         actions[ prevIndex ] = firstInactiveAction;\n \n     }\n \n     _takeBackAction( action ) {\n \n         // [  active actions  | inactive actions ]\n         // [ active actions |< inactive actions  ]\n         //        a        s\n         //         <-swap->\n         //        s        a\n \n         const actions = this._actions,\n             prevIndex = action._cacheIndex,\n \n             firstInactiveIndex = -- this._nActiveActions,\n \n             lastActiveAction = actions[ firstInactiveIndex ];\n \n         action._cacheIndex = firstInactiveIndex;\n         actions[ firstInactiveIndex ] = action;\n \n         lastActiveAction._cacheIndex = prevIndex;\n         actions[ prevIndex ] = lastActiveAction;\n \n     }\n \n     // Memory management for PropertyMixer objects\n \n     _addInactiveBinding( binding, rootUuid, trackName ) {\n \n         const bindingsByRoot = this._bindingsByRootAndName,\n             bindings = this._bindings;\n \n         let bindingByName = bindingsByRoot[ rootUuid ];\n \n         if ( bindingByName === undefined ) {\n \n             bindingByName = {};\n             bindingsByRoot[ rootUuid ] = bindingByName;\n \n         }\n \n         bindingByName[ trackName ] = binding;\n \n         binding._cacheIndex = bindings.length;\n         bindings.push( binding );\n \n     }\n \n     _removeInactiveBinding( binding ) {\n \n         const bindings = this._bindings,\n             propBinding = binding.binding,\n             rootUuid = propBinding.rootNode.uuid,\n             trackName = propBinding.path,\n             bindingsByRoot = this._bindingsByRootAndName,\n             bindingByName = bindingsByRoot[ rootUuid ],\n \n             lastInactiveBinding = bindings[ bindings.length - 1 ],\n             cacheIndex = binding._cacheIndex;\n \n         lastInactiveBinding._cacheIndex = cacheIndex;\n         bindings[ cacheIndex ] = lastInactiveBinding;\n         bindings.pop();\n \n         delete bindingByName[ trackName ];\n \n         if ( Object.keys( bindingByName ).length === 0 ) {\n \n             delete bindingsByRoot[ rootUuid ];\n \n         }\n \n     }\n \n     _lendBinding( binding ) {\n \n         const bindings = this._bindings,\n             prevIndex = binding._cacheIndex,\n \n             lastActiveIndex = this._nActiveBindings ++,\n \n             firstInactiveBinding = bindings[ lastActiveIndex ];\n \n         binding._cacheIndex = lastActiveIndex;\n         bindings[ lastActiveIndex ] = binding;\n \n         firstInactiveBinding._cacheIndex = prevIndex;\n         bindings[ prevIndex ] = firstInactiveBinding;\n \n     }\n \n     _takeBackBinding( binding ) {\n \n         const bindings = this._bindings,\n             prevIndex = binding._cacheIndex,\n \n             firstInactiveIndex = -- this._nActiveBindings,\n \n             lastActiveBinding = bindings[ firstInactiveIndex ];\n \n         binding._cacheIndex = firstInactiveIndex;\n         bindings[ firstInactiveIndex ] = binding;\n \n         lastActiveBinding._cacheIndex = prevIndex;\n         bindings[ prevIndex ] = lastActiveBinding;\n \n     }\n \n \n     // Memory management of Interpolants for weight and time scale\n \n     _lendControlInterpolant() {\n \n         const interpolants = this._controlInterpolants,\n             lastActiveIndex = this._nActiveControlInterpolants ++;\n \n         let interpolant = interpolants[ lastActiveIndex ];\n \n         if ( interpolant === undefined ) {\n \n             interpolant = new LinearInterpolant(\n                 new Float32Array( 2 ), new Float32Array( 2 ),\n                 1, this._controlInterpolantsResultBuffer );\n \n             interpolant.__cacheIndex = lastActiveIndex;\n             interpolants[ lastActiveIndex ] = interpolant;\n \n         }\n \n         return interpolant;\n \n     }\n \n     _takeBackControlInterpolant( interpolant ) {\n \n         const interpolants = this._controlInterpolants,\n             prevIndex = interpolant.__cacheIndex,\n \n             firstInactiveIndex = -- this._nActiveControlInterpolants,\n \n             lastActiveInterpolant = interpolants[ firstInactiveIndex ];\n \n         interpolant.__cacheIndex = firstInactiveIndex;\n         interpolants[ firstInactiveIndex ] = interpolant;\n \n         lastActiveInterpolant.__cacheIndex = prevIndex;\n         interpolants[ prevIndex ] = lastActiveInterpolant;\n \n     }\n \n     // return an action for a clip optionally using a custom root target\n     // object (this method allocates a lot of dynamic memory in case a\n     // previously unknown clip/root combination is specified)\n     clipAction( clip, optionalRoot, blendMode ) {\n \n         const root = optionalRoot || this._root,\n             rootUuid = root.uuid;\n \n         let clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n \n         const clipUuid = clipObject !== null ? clipObject.uuid : clip;\n \n         const actionsForClip = this._actionsByClip[ clipUuid ];\n         let prototypeAction = null;\n \n         if ( blendMode === undefined ) {\n \n             if ( clipObject !== null ) {\n \n                 blendMode = clipObject.blendMode;\n \n             } else {\n \n                 blendMode = NormalAnimationBlendMode;\n \n             }\n \n         }\n \n         if ( actionsForClip !== undefined ) {\n \n             const existingAction = actionsForClip.actionByRoot[ rootUuid ];\n \n             if ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n \n                 return existingAction;\n \n             }\n \n             // we know the clip, so we don't have to parse all\n             // the bindings again but can just copy\n             prototypeAction = actionsForClip.knownActions[ 0 ];\n \n             // also, take the clip from the prototype action\n             if ( clipObject === null )\n                 clipObject = prototypeAction._clip;\n \n         }\n \n         // clip must be known when specified via string\n         if ( clipObject === null ) return null;\n \n         // allocate all resources required to run it\n         const newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n \n         this._bindAction( newAction, prototypeAction );\n \n         // and make the action known to the memory manager\n         this._addInactiveAction( newAction, clipUuid, rootUuid );\n \n         return newAction;\n \n     }\n \n     // get an existing action\n     existingAction( clip, optionalRoot ) {\n \n         const root = optionalRoot || this._root,\n             rootUuid = root.uuid,\n \n             clipObject = typeof clip === 'string' ?\n                 AnimationClip.findByName( root, clip ) : clip,\n \n             clipUuid = clipObject ? clipObject.uuid : clip,\n \n             actionsForClip = this._actionsByClip[ clipUuid ];\n \n         if ( actionsForClip !== undefined ) {\n \n             return actionsForClip.actionByRoot[ rootUuid ] || null;\n \n         }\n \n         return null;\n \n     }\n \n     // deactivates all previously scheduled actions\n     stopAllAction() {\n \n         const actions = this._actions,\n             nActions = this._nActiveActions;\n \n         for ( let i = nActions - 1; i >= 0; -- i ) {\n \n             actions[ i ].stop();\n \n         }\n \n         return this;\n \n     }\n \n     // advance the time and update apply the animation\n     update( deltaTime ) {\n \n         deltaTime *= this.timeScale;\n \n         const actions = this._actions,\n             nActions = this._nActiveActions,\n \n             time = this.time += deltaTime,\n             timeDirection = Math.sign( deltaTime ),\n \n             accuIndex = this._accuIndex ^= 1;\n \n         // run active actions\n \n         for ( let i = 0; i !== nActions; ++ i ) {\n \n             const action = actions[ i ];\n \n             action._update( time, deltaTime, timeDirection, accuIndex );\n \n         }\n \n         // update scene graph\n \n         const bindings = this._bindings,\n             nBindings = this._nActiveBindings;\n \n         for ( let i = 0; i !== nBindings; ++ i ) {\n \n             bindings[ i ].apply( accuIndex );\n \n         }\n \n         return this;\n \n     }\n \n     // Allows you to seek to a specific time in an animation.\n     setTime( timeInSeconds ) {\n \n         this.time = 0; // Zero out time attribute for AnimationMixer object;\n         for ( let i = 0; i < this._actions.length; i ++ ) {\n \n             this._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n \n         }\n \n         return this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n \n     }\n \n     // return this mixer's root target object\n     getRoot() {\n \n         return this._root;\n \n     }\n \n     // free all resources specific to a particular clip\n     uncacheClip( clip ) {\n \n         const actions = this._actions,\n             clipUuid = clip.uuid,\n             actionsByClip = this._actionsByClip,\n             actionsForClip = actionsByClip[ clipUuid ];\n \n         if ( actionsForClip !== undefined ) {\n \n             // note: just calling _removeInactiveAction would mess up the\n             // iteration state and also require updating the state we can\n             // just throw away\n \n             const actionsToRemove = actionsForClip.knownActions;\n \n             for ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n \n                 const action = actionsToRemove[ i ];\n \n                 this._deactivateAction( action );\n \n                 const cacheIndex = action._cacheIndex,\n                     lastInactiveAction = actions[ actions.length - 1 ];\n \n                 action._cacheIndex = null;\n                 action._byClipCacheIndex = null;\n \n                 lastInactiveAction._cacheIndex = cacheIndex;\n                 actions[ cacheIndex ] = lastInactiveAction;\n                 actions.pop();\n \n                 this._removeInactiveBindingsForAction( action );\n \n             }\n \n             delete actionsByClip[ clipUuid ];\n \n         }\n \n     }\n \n     // free all resources specific to a particular root target object\n     uncacheRoot( root ) {\n \n         const rootUuid = root.uuid,\n             actionsByClip = this._actionsByClip;\n \n         for ( const clipUuid in actionsByClip ) {\n \n             const actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n                 action = actionByRoot[ rootUuid ];\n \n             if ( action !== undefined ) {\n \n                 this._deactivateAction( action );\n                 this._removeInactiveAction( action );\n \n             }\n \n         }\n \n         const bindingsByRoot = this._bindingsByRootAndName,\n             bindingByName = bindingsByRoot[ rootUuid ];\n \n         if ( bindingByName !== undefined ) {\n \n             for ( const trackName in bindingByName ) {\n \n                 const binding = bindingByName[ trackName ];\n                 binding.restoreOriginalState();\n                 this._removeInactiveBinding( binding );\n \n             }\n \n         }\n \n     }\n \n     // remove a targeted clip from the cache\n     uncacheAction( clip, optionalRoot ) {\n \n         const action = this.existingAction( clip, optionalRoot );\n \n         if ( action !== null ) {\n \n             this._deactivateAction( action );\n             this._removeInactiveAction( action );\n \n         }\n \n     }\n \n }\n \n AnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array( 1 );\n \n class Uniform {\n \n     constructor( value ) {\n \n         if ( typeof value === 'string' ) {\n \n             console.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n             value = arguments[ 1 ];\n \n         }\n \n         this.value = value;\n \n     }\n \n     clone() {\n \n         return new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n \n     }\n \n }\n \n class InstancedInterleavedBuffer extends InterleavedBuffer {\n \n     constructor( array, stride, meshPerAttribute = 1 ) {\n \n         super( array, stride );\n \n         this.meshPerAttribute = meshPerAttribute;\n \n     }\n \n     copy( source ) {\n \n         super.copy( source );\n \n         this.meshPerAttribute = source.meshPerAttribute;\n \n         return this;\n \n     }\n \n     clone( data ) {\n \n         const ib = super.clone( data );\n \n         ib.meshPerAttribute = this.meshPerAttribute;\n \n         return ib;\n \n     }\n \n     toJSON( data ) {\n \n         const json = super.toJSON( data );\n \n         json.isInstancedInterleavedBuffer = true;\n         json.meshPerAttribute = this.meshPerAttribute;\n \n         return json;\n \n     }\n \n }\n \n InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n \n class GLBufferAttribute {\n \n     constructor( buffer, type, itemSize, elementSize, count ) {\n \n         this.buffer = buffer;\n         this.type = type;\n         this.itemSize = itemSize;\n         this.elementSize = elementSize;\n         this.count = count;\n \n         this.version = 0;\n \n     }\n \n     set needsUpdate( value ) {\n \n         if ( value === true ) this.version ++;\n \n     }\n \n     setBuffer( buffer ) {\n \n         this.buffer = buffer;\n \n         return this;\n \n     }\n \n     setType( type, elementSize ) {\n \n         this.type = type;\n         this.elementSize = elementSize;\n \n         return this;\n \n     }\n \n     setItemSize( itemSize ) {\n \n         this.itemSize = itemSize;\n \n         return this;\n \n     }\n \n     setCount( count ) {\n \n         this.count = count;\n \n         return this;\n \n     }\n \n }\n \n GLBufferAttribute.prototype.isGLBufferAttribute = true;\n \n class Raycaster {\n \n     constructor( origin, direction, near = 0, far = Infinity ) {\n \n         this.ray = new Ray( origin, direction );\n         // direction is assumed to be normalized (for accurate distance calculations)\n \n         this.near = near;\n         this.far = far;\n         this.camera = null;\n         this.layers = new Layers();\n \n         this.params = {\n             Mesh: {},\n             Line: { threshold: 1 },\n             LOD: {},\n             Points: { threshold: 1 },\n             Sprite: {}\n         };\n \n     }\n \n     set( origin, direction ) {\n \n         // direction is assumed to be normalized (for accurate distance calculations)\n \n         this.ray.set( origin, direction );\n \n     }\n \n     setFromCamera( coords, camera ) {\n \n         if ( camera.isPerspectiveCamera ) {\n \n             this.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n             this.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n             this.camera = camera;\n \n         } else if ( camera.isOrthographicCamera ) {\n \n             this.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n             this.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n             this.camera = camera;\n \n         } else {\n \n             console.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n \n         }\n \n     }\n \n     intersectObject( object, recursive = true, intersects = [] ) {\n \n         intersectObject( object, this, intersects, recursive );\n \n         intersects.sort( ascSort );\n \n         return intersects;\n \n     }\n \n     intersectObjects( objects, recursive = true, intersects = [] ) {\n \n         for ( let i = 0, l = objects.length; i < l; i ++ ) {\n \n             intersectObject( objects[ i ], this, intersects, recursive );\n \n         }\n \n         intersects.sort( ascSort );\n \n         return intersects;\n \n     }\n \n }\n \n function ascSort( a, b ) {\n \n     return a.distance - b.distance;\n \n }\n \n function intersectObject( object, raycaster, intersects, recursive ) {\n \n     if ( object.layers.test( raycaster.layers ) ) {\n \n         object.raycast( raycaster, intersects );\n \n     }\n \n     if ( recursive === true ) {\n \n         const children = object.children;\n \n         for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n             intersectObject( children[ i ], raycaster, intersects, true );\n \n         }\n \n     }\n \n }\n \n /**\n  * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n  *\n  * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n  * The azimuthal angle (theta) is measured from the positive z-axis.\n  */\n \n class Spherical {\n \n     constructor( radius = 1, phi = 0, theta = 0 ) {\n \n         this.radius = radius;\n         this.phi = phi; // polar angle\n         this.theta = theta; // azimuthal angle\n \n         return this;\n \n     }\n \n     set( radius, phi, theta ) {\n \n         this.radius = radius;\n         this.phi = phi;\n         this.theta = theta;\n \n         return this;\n \n     }\n \n     copy( other ) {\n \n         this.radius = other.radius;\n         this.phi = other.phi;\n         this.theta = other.theta;\n \n         return this;\n \n     }\n \n     // restrict phi to be between EPS and PI-EPS\n     makeSafe() {\n \n         const EPS = 0.000001;\n         this.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n \n         return this;\n \n     }\n \n     setFromVector3( v ) {\n \n         return this.setFromCartesianCoords( v.x, v.y, v.z );\n \n     }\n \n     setFromCartesianCoords( x, y, z ) {\n \n         this.radius = Math.sqrt( x * x + y * y + z * z );\n \n         if ( this.radius === 0 ) {\n \n             this.theta = 0;\n             this.phi = 0;\n \n         } else {\n \n             this.theta = Math.atan2( x, z );\n             this.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n \n         }\n \n         return this;\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n }\n \n /**\n  * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n  */\n \n class Cylindrical {\n \n     constructor( radius = 1, theta = 0, y = 0 ) {\n \n         this.radius = radius; // distance from the origin to a point in the x-z plane\n         this.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n         this.y = y; // height above the x-z plane\n \n         return this;\n \n     }\n \n     set( radius, theta, y ) {\n \n         this.radius = radius;\n         this.theta = theta;\n         this.y = y;\n \n         return this;\n \n     }\n \n     copy( other ) {\n \n         this.radius = other.radius;\n         this.theta = other.theta;\n         this.y = other.y;\n \n         return this;\n \n     }\n \n     setFromVector3( v ) {\n \n         return this.setFromCartesianCoords( v.x, v.y, v.z );\n \n     }\n \n     setFromCartesianCoords( x, y, z ) {\n \n         this.radius = Math.sqrt( x * x + z * z );\n         this.theta = Math.atan2( x, z );\n         this.y = y;\n \n         return this;\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n }\n \n const _vector$4 = /*@__PURE__*/ new Vector2();\n \n class Box2 {\n \n     constructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n \n         this.min = min;\n         this.max = max;\n \n     }\n \n     set( min, max ) {\n \n         this.min.copy( min );\n         this.max.copy( max );\n \n         return this;\n \n     }\n \n     setFromPoints( points ) {\n \n         this.makeEmpty();\n \n         for ( let i = 0, il = points.length; i < il; i ++ ) {\n \n             this.expandByPoint( points[ i ] );\n \n         }\n \n         return this;\n \n     }\n \n     setFromCenterAndSize( center, size ) {\n \n         const halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n         this.min.copy( center ).sub( halfSize );\n         this.max.copy( center ).add( halfSize );\n \n         return this;\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n     copy( box ) {\n \n         this.min.copy( box.min );\n         this.max.copy( box.max );\n \n         return this;\n \n     }\n \n     makeEmpty() {\n \n         this.min.x = this.min.y = + Infinity;\n         this.max.x = this.max.y = - Infinity;\n \n         return this;\n \n     }\n \n     isEmpty() {\n \n         // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n \n         return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n \n     }\n \n     getCenter( target ) {\n \n         return this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n \n     }\n \n     getSize( target ) {\n \n         return this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n \n     }\n \n     expandByPoint( point ) {\n \n         this.min.min( point );\n         this.max.max( point );\n \n         return this;\n \n     }\n \n     expandByVector( vector ) {\n \n         this.min.sub( vector );\n         this.max.add( vector );\n \n         return this;\n \n     }\n \n     expandByScalar( scalar ) {\n \n         this.min.addScalar( - scalar );\n         this.max.addScalar( scalar );\n \n         return this;\n \n     }\n \n     containsPoint( point ) {\n \n         return point.x < this.min.x || point.x > this.max.x ||\n             point.y < this.min.y || point.y > this.max.y ? false : true;\n \n     }\n \n     containsBox( box ) {\n \n         return this.min.x <= box.min.x && box.max.x <= this.max.x &&\n             this.min.y <= box.min.y && box.max.y <= this.max.y;\n \n     }\n \n     getParameter( point, target ) {\n \n         // This can potentially have a divide by zero if the box\n         // has a size dimension of 0.\n \n         return target.set(\n             ( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n             ( point.y - this.min.y ) / ( this.max.y - this.min.y )\n         );\n \n     }\n \n     intersectsBox( box ) {\n \n         // using 4 splitting planes to rule out intersections\n \n         return box.max.x < this.min.x || box.min.x > this.max.x ||\n             box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n \n     }\n \n     clampPoint( point, target ) {\n \n         return target.copy( point ).clamp( this.min, this.max );\n \n     }\n \n     distanceToPoint( point ) {\n \n         const clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n         return clampedPoint.sub( point ).length();\n \n     }\n \n     intersect( box ) {\n \n         this.min.max( box.min );\n         this.max.min( box.max );\n \n         return this;\n \n     }\n \n     union( box ) {\n \n         this.min.min( box.min );\n         this.max.max( box.max );\n \n         return this;\n \n     }\n \n     translate( offset ) {\n \n         this.min.add( offset );\n         this.max.add( offset );\n \n         return this;\n \n     }\n \n     equals( box ) {\n \n         return box.min.equals( this.min ) && box.max.equals( this.max );\n \n     }\n \n }\n \n Box2.prototype.isBox2 = true;\n \n const _startP = /*@__PURE__*/ new Vector3();\n const _startEnd = /*@__PURE__*/ new Vector3();\n \n class Line3 {\n \n     constructor( start = new Vector3(), end = new Vector3() ) {\n \n         this.start = start;\n         this.end = end;\n \n     }\n \n     set( start, end ) {\n \n         this.start.copy( start );\n         this.end.copy( end );\n \n         return this;\n \n     }\n \n     copy( line ) {\n \n         this.start.copy( line.start );\n         this.end.copy( line.end );\n \n         return this;\n \n     }\n \n     getCenter( target ) {\n \n         return target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n \n     }\n \n     delta( target ) {\n \n         return target.subVectors( this.end, this.start );\n \n     }\n \n     distanceSq() {\n \n         return this.start.distanceToSquared( this.end );\n \n     }\n \n     distance() {\n \n         return this.start.distanceTo( this.end );\n \n     }\n \n     at( t, target ) {\n \n         return this.delta( target ).multiplyScalar( t ).add( this.start );\n \n     }\n \n     closestPointToPointParameter( point, clampToLine ) {\n \n         _startP.subVectors( point, this.start );\n         _startEnd.subVectors( this.end, this.start );\n \n         const startEnd2 = _startEnd.dot( _startEnd );\n         const startEnd_startP = _startEnd.dot( _startP );\n \n         let t = startEnd_startP / startEnd2;\n \n         if ( clampToLine ) {\n \n             t = clamp( t, 0, 1 );\n \n         }\n \n         return t;\n \n     }\n \n     closestPointToPoint( point, clampToLine, target ) {\n \n         const t = this.closestPointToPointParameter( point, clampToLine );\n \n         return this.delta( target ).multiplyScalar( t ).add( this.start );\n \n     }\n \n     applyMatrix4( matrix ) {\n \n         this.start.applyMatrix4( matrix );\n         this.end.applyMatrix4( matrix );\n \n         return this;\n \n     }\n \n     equals( line ) {\n \n         return line.start.equals( this.start ) && line.end.equals( this.end );\n \n     }\n \n     clone() {\n \n         return new this.constructor().copy( this );\n \n     }\n \n }\n \n const _vector$3 = /*@__PURE__*/ new Vector3();\n \n class SpotLightHelper extends Object3D {\n \n     constructor( light, color ) {\n \n         super();\n         this.light = light;\n         this.light.updateMatrixWorld();\n \n         this.matrix = light.matrixWorld;\n         this.matrixAutoUpdate = false;\n \n         this.color = color;\n \n         const geometry = new BufferGeometry();\n \n         const positions = [\n             0, 0, 0, \t0, 0, 1,\n             0, 0, 0, \t1, 0, 1,\n             0, 0, 0,\t- 1, 0, 1,\n             0, 0, 0, \t0, 1, 1,\n             0, 0, 0, \t0, - 1, 1\n         ];\n \n         for ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n \n             const p1 = ( i / l ) * Math.PI * 2;\n             const p2 = ( j / l ) * Math.PI * 2;\n \n             positions.push(\n                 Math.cos( p1 ), Math.sin( p1 ), 1,\n                 Math.cos( p2 ), Math.sin( p2 ), 1\n             );\n \n         }\n \n         geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n \n         const material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n \n         this.cone = new LineSegments( geometry, material );\n         this.add( this.cone );\n \n         this.update();\n \n     }\n \n     dispose() {\n \n         this.cone.geometry.dispose();\n         this.cone.material.dispose();\n \n     }\n \n     update() {\n \n         this.light.updateMatrixWorld();\n \n         const coneLength = this.light.distance ? this.light.distance : 1000;\n         const coneWidth = coneLength * Math.tan( this.light.angle );\n \n         this.cone.scale.set( coneWidth, coneWidth, coneLength );\n \n         _vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n \n         this.cone.lookAt( _vector$3 );\n \n         if ( this.color !== undefined ) {\n \n             this.cone.material.color.set( this.color );\n \n         } else {\n \n             this.cone.material.color.copy( this.light.color );\n \n         }\n \n     }\n \n }\n \n const _vector$2 = /*@__PURE__*/ new Vector3();\n const _boneMatrix = /*@__PURE__*/ new Matrix4();\n const _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n \n \n class SkeletonHelper extends LineSegments {\n \n     constructor( object ) {\n \n         const bones = getBoneList( object );\n \n         const geometry = new BufferGeometry();\n \n         const vertices = [];\n         const colors = [];\n \n         const color1 = new Color( 0, 0, 1 );\n         const color2 = new Color( 0, 1, 0 );\n \n         for ( let i = 0; i < bones.length; i ++ ) {\n \n             const bone = bones[ i ];\n \n             if ( bone.parent && bone.parent.isBone ) {\n \n                 vertices.push( 0, 0, 0 );\n                 vertices.push( 0, 0, 0 );\n                 colors.push( color1.r, color1.g, color1.b );\n                 colors.push( color2.r, color2.g, color2.b );\n \n             }\n \n         }\n \n         geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n \n         const material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n \n         super( geometry, material );\n \n         this.type = 'SkeletonHelper';\n         this.isSkeletonHelper = true;\n \n         this.root = object;\n         this.bones = bones;\n \n         this.matrix = object.matrixWorld;\n         this.matrixAutoUpdate = false;\n \n     }\n \n     updateMatrixWorld( force ) {\n \n         const bones = this.bones;\n \n         const geometry = this.geometry;\n         const position = geometry.getAttribute( 'position' );\n \n         _matrixWorldInv.copy( this.root.matrixWorld ).invert();\n \n         for ( let i = 0, j = 0; i < bones.length; i ++ ) {\n \n             const bone = bones[ i ];\n \n             if ( bone.parent && bone.parent.isBone ) {\n \n                 _boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n                 _vector$2.setFromMatrixPosition( _boneMatrix );\n                 position.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n \n                 _boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n                 _vector$2.setFromMatrixPosition( _boneMatrix );\n                 position.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n \n                 j += 2;\n \n             }\n \n         }\n \n         geometry.getAttribute( 'position' ).needsUpdate = true;\n \n         super.updateMatrixWorld( force );\n \n     }\n \n }\n \n \n function getBoneList( object ) {\n \n     const boneList = [];\n \n     if ( object.isBone === true ) {\n \n         boneList.push( object );\n \n     }\n \n     for ( let i = 0; i < object.children.length; i ++ ) {\n \n         boneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n \n     }\n \n     return boneList;\n \n }\n \n class PointLightHelper extends Mesh {\n \n     constructor( light, sphereSize, color ) {\n \n         const geometry = new SphereGeometry( sphereSize, 4, 2 );\n         const material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n \n         super( geometry, material );\n \n         this.light = light;\n         this.light.updateMatrixWorld();\n \n         this.color = color;\n \n         this.type = 'PointLightHelper';\n \n         this.matrix = this.light.matrixWorld;\n         this.matrixAutoUpdate = false;\n \n         this.update();\n \n \n         /*\n     // TODO: delete this comment?\n     const distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n     const distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n \n     this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n     this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n \n     const d = light.distance;\n \n     if ( d === 0.0 ) {\n \n         this.lightDistance.visible = false;\n \n     } else {\n \n         this.lightDistance.scale.set( d, d, d );\n \n     }\n \n     this.add( this.lightDistance );\n     */\n \n     }\n \n     dispose() {\n \n         this.geometry.dispose();\n         this.material.dispose();\n \n     }\n \n     update() {\n \n         if ( this.color !== undefined ) {\n \n             this.material.color.set( this.color );\n \n         } else {\n \n             this.material.color.copy( this.light.color );\n \n         }\n \n         /*\n         const d = this.light.distance;\n \n         if ( d === 0.0 ) {\n \n             this.lightDistance.visible = false;\n \n         } else {\n \n             this.lightDistance.visible = true;\n             this.lightDistance.scale.set( d, d, d );\n \n         }\n         */\n \n     }\n \n }\n \n const _vector$1 = /*@__PURE__*/ new Vector3();\n const _color1 = /*@__PURE__*/ new Color();\n const _color2 = /*@__PURE__*/ new Color();\n \n class HemisphereLightHelper extends Object3D {\n \n     constructor( light, size, color ) {\n \n         super();\n         this.light = light;\n         this.light.updateMatrixWorld();\n \n         this.matrix = light.matrixWorld;\n         this.matrixAutoUpdate = false;\n \n         this.color = color;\n \n         const geometry = new OctahedronGeometry( size );\n         geometry.rotateY( Math.PI * 0.5 );\n \n         this.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n         if ( this.color === undefined ) this.material.vertexColors = true;\n \n         const position = geometry.getAttribute( 'position' );\n         const colors = new Float32Array( position.count * 3 );\n \n         geometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n \n         this.add( new Mesh( geometry, this.material ) );\n \n         this.update();\n \n     }\n \n     dispose() {\n \n         this.children[ 0 ].geometry.dispose();\n         this.children[ 0 ].material.dispose();\n \n     }\n \n     update() {\n \n         const mesh = this.children[ 0 ];\n \n         if ( this.color !== undefined ) {\n \n             this.material.color.set( this.color );\n \n         } else {\n \n             const colors = mesh.geometry.getAttribute( 'color' );\n \n             _color1.copy( this.light.color );\n             _color2.copy( this.light.groundColor );\n \n             for ( let i = 0, l = colors.count; i < l; i ++ ) {\n \n                 const color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n \n                 colors.setXYZ( i, color.r, color.g, color.b );\n \n             }\n \n             colors.needsUpdate = true;\n \n         }\n \n         mesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n \n     }\n \n }\n \n class GridHelper extends LineSegments {\n \n     constructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n \n         color1 = new Color( color1 );\n         color2 = new Color( color2 );\n \n         const center = divisions / 2;\n         const step = size / divisions;\n         const halfSize = size / 2;\n \n         const vertices = [], colors = [];\n \n         for ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n \n             vertices.push( - halfSize, 0, k, halfSize, 0, k );\n             vertices.push( k, 0, - halfSize, k, 0, halfSize );\n \n             const color = i === center ? color1 : color2;\n \n             color.toArray( colors, j ); j += 3;\n             color.toArray( colors, j ); j += 3;\n             color.toArray( colors, j ); j += 3;\n             color.toArray( colors, j ); j += 3;\n \n         }\n \n         const geometry = new BufferGeometry();\n         geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n \n         const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n \n         super( geometry, material );\n \n         this.type = 'GridHelper';\n \n     }\n \n }\n \n class PolarGridHelper extends LineSegments {\n \n     constructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n \n         color1 = new Color( color1 );\n         color2 = new Color( color2 );\n \n         const vertices = [];\n         const colors = [];\n \n         // create the radials\n \n         for ( let i = 0; i <= radials; i ++ ) {\n \n             const v = ( i / radials ) * ( Math.PI * 2 );\n \n             const x = Math.sin( v ) * radius;\n             const z = Math.cos( v ) * radius;\n \n             vertices.push( 0, 0, 0 );\n             vertices.push( x, 0, z );\n \n             const color = ( i & 1 ) ? color1 : color2;\n \n             colors.push( color.r, color.g, color.b );\n             colors.push( color.r, color.g, color.b );\n \n         }\n \n         // create the circles\n \n         for ( let i = 0; i <= circles; i ++ ) {\n \n             const color = ( i & 1 ) ? color1 : color2;\n \n             const r = radius - ( radius / circles * i );\n \n             for ( let j = 0; j < divisions; j ++ ) {\n \n                 // first vertex\n \n                 let v = ( j / divisions ) * ( Math.PI * 2 );\n \n                 let x = Math.sin( v ) * r;\n                 let z = Math.cos( v ) * r;\n \n                 vertices.push( x, 0, z );\n                 colors.push( color.r, color.g, color.b );\n \n                 // second vertex\n \n                 v = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n \n                 x = Math.sin( v ) * r;\n                 z = Math.cos( v ) * r;\n \n                 vertices.push( x, 0, z );\n                 colors.push( color.r, color.g, color.b );\n \n             }\n \n         }\n \n         const geometry = new BufferGeometry();\n         geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n \n         const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n \n         super( geometry, material );\n \n         this.type = 'PolarGridHelper';\n \n     }\n \n }\n \n const _v1 = /*@__PURE__*/ new Vector3();\n const _v2 = /*@__PURE__*/ new Vector3();\n const _v3 = /*@__PURE__*/ new Vector3();\n \n class DirectionalLightHelper extends Object3D {\n \n     constructor( light, size, color ) {\n \n         super();\n         this.light = light;\n         this.light.updateMatrixWorld();\n \n         this.matrix = light.matrixWorld;\n         this.matrixAutoUpdate = false;\n \n         this.color = color;\n \n         if ( size === undefined ) size = 1;\n \n         let geometry = new BufferGeometry();\n         geometry.setAttribute( 'position', new Float32BufferAttribute( [\n             - size, size, 0,\n             size, size, 0,\n             size, - size, 0,\n             - size, - size, 0,\n             - size, size, 0\n         ], 3 ) );\n \n         const material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n \n         this.lightPlane = new Line( geometry, material );\n         this.add( this.lightPlane );\n \n         geometry = new BufferGeometry();\n         geometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n \n         this.targetLine = new Line( geometry, material );\n         this.add( this.targetLine );\n \n         this.update();\n \n     }\n \n     dispose() {\n \n         this.lightPlane.geometry.dispose();\n         this.lightPlane.material.dispose();\n         this.targetLine.geometry.dispose();\n         this.targetLine.material.dispose();\n \n     }\n \n     update() {\n \n         _v1.setFromMatrixPosition( this.light.matrixWorld );\n         _v2.setFromMatrixPosition( this.light.target.matrixWorld );\n         _v3.subVectors( _v2, _v1 );\n \n         this.lightPlane.lookAt( _v2 );\n \n         if ( this.color !== undefined ) {\n \n             this.lightPlane.material.color.set( this.color );\n             this.targetLine.material.color.set( this.color );\n \n         } else {\n \n             this.lightPlane.material.color.copy( this.light.color );\n             this.targetLine.material.color.copy( this.light.color );\n \n         }\n \n         this.targetLine.lookAt( _v2 );\n         this.targetLine.scale.z = _v3.length();\n \n     }\n \n }\n \n const _vector = /*@__PURE__*/ new Vector3();\n const _camera = /*@__PURE__*/ new Camera();\n \n /**\n  *\t- shows frustum, line of sight and up of the camera\n  *\t- suitable for fast updates\n  * \t- based on frustum visualization in lightgl.js shadowmap example\n  *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n  */\n \n class CameraHelper extends LineSegments {\n \n     constructor( camera ) {\n \n         const geometry = new BufferGeometry();\n         const material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n \n         const vertices = [];\n         const colors = [];\n \n         const pointMap = {};\n \n         // colors\n \n         const colorFrustum = new Color( 0xffaa00 );\n         const colorCone = new Color( 0xff0000 );\n         const colorUp = new Color( 0x00aaff );\n         const colorTarget = new Color( 0xffffff );\n         const colorCross = new Color( 0x333333 );\n \n         // near\n \n         addLine( 'n1', 'n2', colorFrustum );\n         addLine( 'n2', 'n4', colorFrustum );\n         addLine( 'n4', 'n3', colorFrustum );\n         addLine( 'n3', 'n1', colorFrustum );\n \n         // far\n \n         addLine( 'f1', 'f2', colorFrustum );\n         addLine( 'f2', 'f4', colorFrustum );\n         addLine( 'f4', 'f3', colorFrustum );\n         addLine( 'f3', 'f1', colorFrustum );\n \n         // sides\n \n         addLine( 'n1', 'f1', colorFrustum );\n         addLine( 'n2', 'f2', colorFrustum );\n         addLine( 'n3', 'f3', colorFrustum );\n         addLine( 'n4', 'f4', colorFrustum );\n \n         // cone\n \n         addLine( 'p', 'n1', colorCone );\n         addLine( 'p', 'n2', colorCone );\n         addLine( 'p', 'n3', colorCone );\n         addLine( 'p', 'n4', colorCone );\n \n         // up\n \n         addLine( 'u1', 'u2', colorUp );\n         addLine( 'u2', 'u3', colorUp );\n         addLine( 'u3', 'u1', colorUp );\n \n         // target\n \n         addLine( 'c', 't', colorTarget );\n         addLine( 'p', 'c', colorCross );\n \n         // cross\n \n         addLine( 'cn1', 'cn2', colorCross );\n         addLine( 'cn3', 'cn4', colorCross );\n \n         addLine( 'cf1', 'cf2', colorCross );\n         addLine( 'cf3', 'cf4', colorCross );\n \n         function addLine( a, b, color ) {\n \n             addPoint( a, color );\n             addPoint( b, color );\n \n         }\n \n         function addPoint( id, color ) {\n \n             vertices.push( 0, 0, 0 );\n             colors.push( color.r, color.g, color.b );\n \n             if ( pointMap[ id ] === undefined ) {\n \n                 pointMap[ id ] = [];\n \n             }\n \n             pointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n \n         }\n \n         geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n \n         super( geometry, material );\n \n         this.type = 'CameraHelper';\n \n         this.camera = camera;\n         if ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n \n         this.matrix = camera.matrixWorld;\n         this.matrixAutoUpdate = false;\n \n         this.pointMap = pointMap;\n \n         this.update();\n \n     }\n \n     update() {\n \n         const geometry = this.geometry;\n         const pointMap = this.pointMap;\n \n         const w = 1, h = 1;\n \n         // we need just camera projection matrix inverse\n         // world matrix must be identity\n \n         _camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n \n         // center / target\n \n         setPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n         setPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n \n         // near\n \n         setPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n         setPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n         setPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n         setPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n \n         // far\n \n         setPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n         setPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n         setPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n         setPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n \n         // up\n \n         setPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n         setPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n         setPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n \n         // cross\n \n         setPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n         setPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n         setPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n         setPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n \n         setPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n         setPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n         setPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n         setPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n \n         geometry.getAttribute( 'position' ).needsUpdate = true;\n \n     }\n \n     dispose() {\n \n         this.geometry.dispose();\n         this.material.dispose();\n \n     }\n \n }\n \n \n function setPoint( point, pointMap, geometry, camera, x, y, z ) {\n \n     _vector.set( x, y, z ).unproject( camera );\n \n     const points = pointMap[ point ];\n \n     if ( points !== undefined ) {\n \n         const position = geometry.getAttribute( 'position' );\n \n         for ( let i = 0, l = points.length; i < l; i ++ ) {\n \n             position.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n \n         }\n \n     }\n \n }\n \n const _box = /*@__PURE__*/ new Box3();\n \n class BoxHelper extends LineSegments {\n \n     constructor( object, color = 0xffff00 ) {\n \n         const indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n         const positions = new Float32Array( 8 * 3 );\n \n         const geometry = new BufferGeometry();\n         geometry.setIndex( new BufferAttribute( indices, 1 ) );\n         geometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n \n         super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n \n         this.object = object;\n         this.type = 'BoxHelper';\n \n         this.matrixAutoUpdate = false;\n \n         this.update();\n \n     }\n \n     update( object ) {\n \n         if ( object !== undefined ) {\n \n             console.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n \n         }\n \n         if ( this.object !== undefined ) {\n \n             _box.setFromObject( this.object );\n \n         }\n \n         if ( _box.isEmpty() ) return;\n \n         const min = _box.min;\n         const max = _box.max;\n \n         /*\n             5____4\n         1/___0/|\n         | 6__|_7\n         2/___3/\n \n         0: max.x, max.y, max.z\n         1: min.x, max.y, max.z\n         2: min.x, min.y, max.z\n         3: max.x, min.y, max.z\n         4: max.x, max.y, min.z\n         5: min.x, max.y, min.z\n         6: min.x, min.y, min.z\n         7: max.x, min.y, min.z\n         */\n \n         const position = this.geometry.attributes.position;\n         const array = position.array;\n \n         array[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n         array[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n         array[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n         array[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n         array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n         array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n         array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n         array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n \n         position.needsUpdate = true;\n \n         this.geometry.computeBoundingSphere();\n \n \n     }\n \n     setFromObject( object ) {\n \n         this.object = object;\n         this.update();\n \n         return this;\n \n     }\n \n     copy( source ) {\n \n         LineSegments.prototype.copy.call( this, source );\n \n         this.object = source.object;\n \n         return this;\n \n     }\n \n }\n \n class Box3Helper extends LineSegments {\n \n     constructor( box, color = 0xffff00 ) {\n \n         const indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n \n         const positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n \n         const geometry = new BufferGeometry();\n \n         geometry.setIndex( new BufferAttribute( indices, 1 ) );\n \n         geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n \n         super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n \n         this.box = box;\n \n         this.type = 'Box3Helper';\n \n         this.geometry.computeBoundingSphere();\n \n     }\n \n     updateMatrixWorld( force ) {\n \n         const box = this.box;\n \n         if ( box.isEmpty() ) return;\n \n         box.getCenter( this.position );\n \n         box.getSize( this.scale );\n \n         this.scale.multiplyScalar( 0.5 );\n \n         super.updateMatrixWorld( force );\n \n     }\n \n }\n \n class PlaneHelper extends Line {\n \n     constructor( plane, size = 1, hex = 0xffff00 ) {\n \n         const color = hex;\n \n         const positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n \n         const geometry = new BufferGeometry();\n         geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n         geometry.computeBoundingSphere();\n \n         super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n \n         this.type = 'PlaneHelper';\n \n         this.plane = plane;\n \n         this.size = size;\n \n         const positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n \n         const geometry2 = new BufferGeometry();\n         geometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n         geometry2.computeBoundingSphere();\n \n         this.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n \n     }\n \n     updateMatrixWorld( force ) {\n \n         let scale = - this.plane.constant;\n \n         if ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n \n         this.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n \n         this.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n \n         this.lookAt( this.plane.normal );\n \n         super.updateMatrixWorld( force );\n \n     }\n \n }\n \n const _axis = /*@__PURE__*/ new Vector3();\n let _lineGeometry, _coneGeometry;\n \n class ArrowHelper extends Object3D {\n \n     // dir is assumed to be normalized\n \n     constructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n \n         super();\n \n         this.type = 'ArrowHelper';\n \n         if ( _lineGeometry === undefined ) {\n \n             _lineGeometry = new BufferGeometry();\n             _lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n \n             _coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n             _coneGeometry.translate( 0, - 0.5, 0 );\n \n         }\n \n         this.position.copy( origin );\n \n         this.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n         this.line.matrixAutoUpdate = false;\n         this.add( this.line );\n \n         this.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n         this.cone.matrixAutoUpdate = false;\n         this.add( this.cone );\n \n         this.setDirection( dir );\n         this.setLength( length, headLength, headWidth );\n \n     }\n \n     setDirection( dir ) {\n \n         // dir is assumed to be normalized\n \n         if ( dir.y > 0.99999 ) {\n \n             this.quaternion.set( 0, 0, 0, 1 );\n \n         } else if ( dir.y < - 0.99999 ) {\n \n             this.quaternion.set( 1, 0, 0, 0 );\n \n         } else {\n \n             _axis.set( dir.z, 0, - dir.x ).normalize();\n \n             const radians = Math.acos( dir.y );\n \n             this.quaternion.setFromAxisAngle( _axis, radians );\n \n         }\n \n     }\n \n     setLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n \n         this.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n         this.line.updateMatrix();\n \n         this.cone.scale.set( headWidth, headLength, headWidth );\n         this.cone.position.y = length;\n         this.cone.updateMatrix();\n \n     }\n \n     setColor( color ) {\n \n         this.line.material.color.set( color );\n         this.cone.material.color.set( color );\n \n     }\n \n     copy( source ) {\n \n         super.copy( source, false );\n \n         this.line.copy( source.line );\n         this.cone.copy( source.cone );\n \n         return this;\n \n     }\n \n }\n \n class AxesHelper extends LineSegments {\n \n     constructor( size = 1 ) {\n \n         const vertices = [\n             0, 0, 0,\tsize, 0, 0,\n             0, 0, 0,\t0, size, 0,\n             0, 0, 0,\t0, 0, size\n         ];\n \n         const colors = [\n             1, 0, 0,\t1, 0.6, 0,\n             0, 1, 0,\t0.6, 1, 0,\n             0, 0, 1,\t0, 0.6, 1\n         ];\n \n         const geometry = new BufferGeometry();\n         geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n         geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n \n         const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n \n         super( geometry, material );\n \n         this.type = 'AxesHelper';\n \n     }\n \n     setColors( xAxisColor, yAxisColor, zAxisColor ) {\n \n         const color = new Color();\n         const array = this.geometry.attributes.color.array;\n \n         color.set( xAxisColor );\n         color.toArray( array, 0 );\n         color.toArray( array, 3 );\n \n         color.set( yAxisColor );\n         color.toArray( array, 6 );\n         color.toArray( array, 9 );\n \n         color.set( zAxisColor );\n         color.toArray( array, 12 );\n         color.toArray( array, 15 );\n \n         this.geometry.attributes.color.needsUpdate = true;\n \n         return this;\n \n     }\n \n     dispose() {\n \n         this.geometry.dispose();\n         this.material.dispose();\n \n     }\n \n }\n \n class ShapePath {\n \n     constructor() {\n \n         this.type = 'ShapePath';\n \n         this.color = new Color();\n \n         this.subPaths = [];\n         this.currentPath = null;\n \n     }\n \n     moveTo( x, y ) {\n \n         this.currentPath = new Path();\n         this.subPaths.push( this.currentPath );\n         this.currentPath.moveTo( x, y );\n \n         return this;\n \n     }\n \n     lineTo( x, y ) {\n \n         this.currentPath.lineTo( x, y );\n \n         return this;\n \n     }\n \n     quadraticCurveTo( aCPx, aCPy, aX, aY ) {\n \n         this.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n \n         return this;\n \n     }\n \n     bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n \n         this.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n \n         return this;\n \n     }\n \n     splineThru( pts ) {\n \n         this.currentPath.splineThru( pts );\n \n         return this;\n \n     }\n \n     toShapes( isCCW, noHoles ) {\n \n         function toShapesNoHoles( inSubpaths ) {\n \n             const shapes = [];\n \n             for ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n \n                 const tmpPath = inSubpaths[ i ];\n \n                 const tmpShape = new Shape();\n                 tmpShape.curves = tmpPath.curves;\n \n                 shapes.push( tmpShape );\n \n             }\n \n             return shapes;\n \n         }\n \n         function isPointInsidePolygon( inPt, inPolygon ) {\n \n             const polyLen = inPolygon.length;\n \n             // inPt on polygon contour => immediate success    or\n             // toggling of inside/outside at every single! intersection point of an edge\n             //  with the horizontal line through inPt, left of inPt\n             //  not counting lowerY endpoints of edges and whole edges on that line\n             let inside = false;\n             for ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n \n                 let edgeLowPt = inPolygon[ p ];\n                 let edgeHighPt = inPolygon[ q ];\n \n                 let edgeDx = edgeHighPt.x - edgeLowPt.x;\n                 let edgeDy = edgeHighPt.y - edgeLowPt.y;\n \n                 if ( Math.abs( edgeDy ) > Number.EPSILON ) {\n \n                     // not parallel\n                     if ( edgeDy < 0 ) {\n \n                         edgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n                         edgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n \n                     }\n \n                     if ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n \n                     if ( inPt.y === edgeLowPt.y ) {\n \n                         if ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n                         // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n \n                     } else {\n \n                         const perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n                         if ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n                         if ( perpEdge < 0 ) \t\t\t\tcontinue;\n                         inside = ! inside;\t\t// true intersection left of inPt\n \n                     }\n \n                 } else {\n \n                     // parallel or collinear\n                     if ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n                     // edge lies on the same horizontal line as inPt\n                     if ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n                          ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n                     // continue;\n \n                 }\n \n             }\n \n             return\tinside;\n \n         }\n \n         const isClockWise = ShapeUtils.isClockWise;\n \n         const subPaths = this.subPaths;\n         if ( subPaths.length === 0 ) return [];\n \n         if ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n \n \n         let solid, tmpPath, tmpShape;\n         const shapes = [];\n \n         if ( subPaths.length === 1 ) {\n \n             tmpPath = subPaths[ 0 ];\n             tmpShape = new Shape();\n             tmpShape.curves = tmpPath.curves;\n             shapes.push( tmpShape );\n             return shapes;\n \n         }\n \n         let holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n         holesFirst = isCCW ? ! holesFirst : holesFirst;\n \n         // console.log(\"Holes first\", holesFirst);\n \n         const betterShapeHoles = [];\n         const newShapes = [];\n         let newShapeHoles = [];\n         let mainIdx = 0;\n         let tmpPoints;\n \n         newShapes[ mainIdx ] = undefined;\n         newShapeHoles[ mainIdx ] = [];\n \n         for ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n \n             tmpPath = subPaths[ i ];\n             tmpPoints = tmpPath.getPoints();\n             solid = isClockWise( tmpPoints );\n             solid = isCCW ? ! solid : solid;\n \n             if ( solid ) {\n \n                 if ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n \n                 newShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n                 newShapes[ mainIdx ].s.curves = tmpPath.curves;\n \n                 if ( holesFirst )\tmainIdx ++;\n                 newShapeHoles[ mainIdx ] = [];\n \n                 //console.log('cw', i);\n \n             } else {\n \n                 newShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n \n                 //console.log('ccw', i);\n \n             }\n \n         }\n \n         // only Holes? -> probably all Shapes with wrong orientation\n         if ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n \n \n         if ( newShapes.length > 1 ) {\n \n             let ambiguous = false;\n             let toChange = 0;\n \n             for ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n \n                 betterShapeHoles[ sIdx ] = [];\n \n             }\n \n             for ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n \n                 const sho = newShapeHoles[ sIdx ];\n \n                 for ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n \n                     const ho = sho[ hIdx ];\n                     let hole_unassigned = true;\n \n                     for ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n \n                         if ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n \n                             if ( sIdx !== s2Idx )\ttoChange ++;\n \n                             if ( hole_unassigned ) {\n \n                                 hole_unassigned = false;\n                                 betterShapeHoles[ s2Idx ].push( ho );\n \n                             } else {\n \n                                 ambiguous = true;\n \n                             }\n \n                         }\n \n                     }\n \n                     if ( hole_unassigned ) {\n \n                         betterShapeHoles[ sIdx ].push( ho );\n \n                     }\n \n                 }\n \n             }\n \n             if ( toChange > 0 && ambiguous === false ) {\n \n                 newShapeHoles = betterShapeHoles;\n \n             }\n \n         }\n \n         let tmpHoles;\n \n         for ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n \n             tmpShape = newShapes[ i ].s;\n             shapes.push( tmpShape );\n             tmpHoles = newShapeHoles[ i ];\n \n             for ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n \n                 tmpShape.holes.push( tmpHoles[ j ].h );\n \n             }\n \n         }\n \n         //console.log(\"shape\", shapes);\n \n         return shapes;\n \n     }\n \n }\n \n // Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n \n class DataUtils {\n \n     // float32 to float16\n \n     static toHalfFloat( val ) {\n \n         if ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n \n         val = clamp( val, - 65504, 65504 );\n \n         _floatView[ 0 ] = val;\n         const f = _uint32View[ 0 ];\n         const e = ( f >> 23 ) & 0x1ff;\n         return _baseTable[ e ] + ( ( f & 0x007fffff ) >> _shiftTable[ e ] );\n \n     }\n \n     // float16 to float32\n \n     static fromHalfFloat( val ) {\n \n         const m = val >> 10;\n         _uint32View[ 0 ] = _mantissaTable[ _offsetTable[ m ] + ( val & 0x3ff ) ] + _exponentTable[ m ];\n         return _floatView[ 0 ];\n \n     }\n \n }\n \n // float32 to float16 helpers\n \n const _buffer = new ArrayBuffer( 4 );\n const _floatView = new Float32Array( _buffer );\n const _uint32View = new Uint32Array( _buffer );\n \n const _baseTable = new Uint32Array( 512 );\n const _shiftTable = new Uint32Array( 512 );\n \n for ( let i = 0; i < 256; ++ i ) {\n \n     const e = i - 127;\n \n     // very small number (0, -0)\n \n     if ( e < - 27 ) {\n \n         _baseTable[ i ] = 0x0000;\n         _baseTable[ i | 0x100 ] = 0x8000;\n         _shiftTable[ i ] = 24;\n         _shiftTable[ i | 0x100 ] = 24;\n \n         // small number (denorm)\n \n     } else if ( e < - 14 ) {\n \n         _baseTable[ i ] = 0x0400 >> ( - e - 14 );\n         _baseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n         _shiftTable[ i ] = - e - 1;\n         _shiftTable[ i | 0x100 ] = - e - 1;\n \n         // normal number\n \n     } else if ( e <= 15 ) {\n \n         _baseTable[ i ] = ( e + 15 ) << 10;\n         _baseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n         _shiftTable[ i ] = 13;\n         _shiftTable[ i | 0x100 ] = 13;\n \n         // large number (Infinity, -Infinity)\n \n     } else if ( e < 128 ) {\n \n         _baseTable[ i ] = 0x7c00;\n         _baseTable[ i | 0x100 ] = 0xfc00;\n         _shiftTable[ i ] = 24;\n         _shiftTable[ i | 0x100 ] = 24;\n \n         // stay (NaN, Infinity, -Infinity)\n \n     } else {\n \n         _baseTable[ i ] = 0x7c00;\n         _baseTable[ i | 0x100 ] = 0xfc00;\n         _shiftTable[ i ] = 13;\n         _shiftTable[ i | 0x100 ] = 13;\n \n     }\n \n }\n \n // float16 to float32 helpers\n \n const _mantissaTable = new Uint32Array( 2048 );\n const _exponentTable = new Uint32Array( 64 );\n const _offsetTable = new Uint32Array( 64 );\n \n for ( let i = 1; i < 1024; ++ i ) {\n \n     let m = i << 13; // zero pad mantissa bits\n     let e = 0; // zero exponent\n \n     // normalized\n     while ( ( m & 0x00800000 ) === 0 ) {\n \n         m <<= 1;\n         e -= 0x00800000; // decrement exponent\n \n     }\n \n     m &= ~ 0x00800000; // clear leading 1 bit\n     e += 0x38800000; // adjust bias\n \n     _mantissaTable[ i ] = m | e;\n \n }\n \n for ( let i = 1024; i < 2048; ++ i ) {\n \n     _mantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n \n }\n \n for ( let i = 1; i < 31; ++ i ) {\n \n     _exponentTable[ i ] = i << 23;\n \n }\n \n _exponentTable[ 31 ] = 0x47800000;\n _exponentTable[ 32 ] = 0x80000000;\n for ( let i = 33; i < 63; ++ i ) {\n \n     _exponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n \n }\n \n _exponentTable[ 63 ] = 0xc7800000;\n \n for ( let i = 1; i < 64; ++ i ) {\n \n     if ( i !== 32 ) {\n \n         _offsetTable[ i ] = 1024;\n \n     }\n \n }\n \n const LineStrip = 0;\n const LinePieces = 1;\n const NoColors = 0;\n const FaceColors = 1;\n const VertexColors = 2;\n \n function MeshFaceMaterial( materials ) {\n \n     console.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n     return materials;\n \n }\n \n function MultiMaterial( materials = [] ) {\n \n     console.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n     materials.isMultiMaterial = true;\n     materials.materials = materials;\n     materials.clone = function () {\n \n         return materials.slice();\n \n     };\n \n     return materials;\n \n }\n \n class PointCloud extends Points {\n \n     constructor( geometry, material ) {\n \n         console.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n         super( geometry, material );\n \n     }\n \n }\n \n class Particle extends Sprite {\n \n     constructor( material ) {\n \n         console.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n         super( material );\n \n     }\n \n }\n \n class ParticleSystem extends Points {\n \n     constructor( geometry, material ) {\n \n         console.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n         super( geometry, material );\n \n     }\n \n }\n \n class PointCloudMaterial extends PointsMaterial {\n \n     constructor( parameters ) {\n \n         console.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n         super( parameters );\n \n     }\n \n }\n \n class ParticleBasicMaterial extends PointsMaterial {\n \n     constructor( parameters ) {\n \n         console.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n         super( parameters );\n \n     }\n \n }\n \n class ParticleSystemMaterial extends PointsMaterial {\n \n     constructor( parameters ) {\n \n         console.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n         super( parameters );\n \n     }\n \n }\n \n class Vertex extends Vector3 {\n \n     constructor( x, y, z ) {\n \n         console.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n         super( x, y, z );\n \n     }\n \n }\n \n //\n \n class DynamicBufferAttribute extends BufferAttribute {\n \n     constructor( array, itemSize ) {\n \n         console.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n         super( array, itemSize );\n         this.setUsage( DynamicDrawUsage );\n \n     }\n \n }\n \n class Int8Attribute extends Int8BufferAttribute {\n \n     constructor( array, itemSize ) {\n \n         console.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n         super( array, itemSize );\n \n     }\n \n }\n \n class Uint8Attribute extends Uint8BufferAttribute {\n \n     constructor( array, itemSize ) {\n \n         console.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n         super( array, itemSize );\n \n     }\n \n }\n \n class Uint8ClampedAttribute extends Uint8ClampedBufferAttribute {\n \n     constructor( array, itemSize ) {\n \n         console.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n         super( array, itemSize );\n \n     }\n \n }\n \n class Int16Attribute extends Int16BufferAttribute {\n \n     constructor( array, itemSize ) {\n \n         console.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n         super( array, itemSize );\n \n     }\n \n }\n \n class Uint16Attribute extends Uint16BufferAttribute {\n \n     constructor( array, itemSize ) {\n \n         console.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n         super( array, itemSize );\n \n     }\n \n }\n \n class Int32Attribute extends Int32BufferAttribute {\n \n     constructor( array, itemSize ) {\n \n         console.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n         super( array, itemSize );\n \n     }\n \n }\n \n class Uint32Attribute extends Uint32BufferAttribute {\n \n     constructor( array, itemSize ) {\n \n         console.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n         super( array, itemSize );\n \n     }\n \n }\n \n class Float32Attribute extends Float32BufferAttribute {\n \n     constructor( array, itemSize ) {\n \n         console.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n         super( array, itemSize );\n \n     }\n \n }\n \n class Float64Attribute extends Float64BufferAttribute {\n \n     constructor( array, itemSize ) {\n \n         console.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n         super( array, itemSize );\n \n     }\n \n }\n \n //\n \n Curve.create = function ( construct, getPoint ) {\n \n     console.log( 'THREE.Curve.create() has been deprecated' );\n \n     construct.prototype = Object.create( Curve.prototype );\n     construct.prototype.constructor = construct;\n     construct.prototype.getPoint = getPoint;\n \n     return construct;\n \n };\n \n //\n \n Path.prototype.fromPoints = function ( points ) {\n \n     console.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n     return this.setFromPoints( points );\n \n };\n \n //\n \n class AxisHelper extends AxesHelper {\n \n     constructor( size ) {\n \n         console.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n         super( size );\n \n     }\n \n }\n \n class BoundingBoxHelper extends BoxHelper {\n \n     constructor( object, color ) {\n \n         console.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n         super( object, color );\n \n     }\n \n }\n \n class EdgesHelper extends LineSegments {\n \n     constructor( object, hex ) {\n \n         console.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n         super( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n \n     }\n \n }\n \n GridHelper.prototype.setColors = function () {\n \n     console.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n \n };\n \n SkeletonHelper.prototype.update = function () {\n \n     console.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n \n };\n \n class WireframeHelper extends LineSegments {\n \n     constructor( object, hex ) {\n \n         console.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n         super( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n \n     }\n \n }\n \n //\n \n Loader.prototype.extractUrlBase = function ( url ) {\n \n     console.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n     return LoaderUtils.extractUrlBase( url );\n \n };\n \n Loader.Handlers = {\n \n     add: function ( /* regex, loader */ ) {\n \n         console.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n \n     },\n \n     get: function ( /* file */ ) {\n \n         console.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n \n     }\n \n };\n \n class XHRLoader extends FileLoader {\n \n     constructor( manager ) {\n \n         console.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n         super( manager );\n \n     }\n \n }\n \n class BinaryTextureLoader extends DataTextureLoader {\n \n     constructor( manager ) {\n \n         console.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n         super( manager );\n \n     }\n \n }\n \n //\n \n Box2.prototype.center = function ( optionalTarget ) {\n \n     console.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n     return this.getCenter( optionalTarget );\n \n };\n \n Box2.prototype.empty = function () {\n \n     console.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n     return this.isEmpty();\n \n };\n \n Box2.prototype.isIntersectionBox = function ( box ) {\n \n     console.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n     return this.intersectsBox( box );\n \n };\n \n Box2.prototype.size = function ( optionalTarget ) {\n \n     console.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n     return this.getSize( optionalTarget );\n \n };\n \n //\n \n Box3.prototype.center = function ( optionalTarget ) {\n \n     console.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n     return this.getCenter( optionalTarget );\n \n };\n \n Box3.prototype.empty = function () {\n \n     console.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n     return this.isEmpty();\n \n };\n \n Box3.prototype.isIntersectionBox = function ( box ) {\n \n     console.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n     return this.intersectsBox( box );\n \n };\n \n Box3.prototype.isIntersectionSphere = function ( sphere ) {\n \n     console.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n     return this.intersectsSphere( sphere );\n \n };\n \n Box3.prototype.size = function ( optionalTarget ) {\n \n     console.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n     return this.getSize( optionalTarget );\n \n };\n \n //\n \n Euler.prototype.toVector3 = function () {\n \n     console.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\n \n };\n \n \n //\n \n Sphere.prototype.empty = function () {\n \n     console.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\n     return this.isEmpty();\n \n };\n \n //\n \n Frustum.prototype.setFromMatrix = function ( m ) {\n \n     console.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n     return this.setFromProjectionMatrix( m );\n \n };\n \n //\n \n Line3.prototype.center = function ( optionalTarget ) {\n \n     console.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n     return this.getCenter( optionalTarget );\n \n };\n \n //\n \n Matrix3.prototype.flattenToArrayOffset = function ( array, offset ) {\n \n     console.warn( 'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n     return this.toArray( array, offset );\n \n };\n \n Matrix3.prototype.multiplyVector3 = function ( vector ) {\n \n     console.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n     return vector.applyMatrix3( this );\n \n };\n \n Matrix3.prototype.multiplyVector3Array = function ( /* a */ ) {\n \n     console.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n \n };\n \n Matrix3.prototype.applyToBufferAttribute = function ( attribute ) {\n \n     console.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n     return attribute.applyMatrix3( this );\n \n };\n \n Matrix3.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n \n     console.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n \n };\n \n Matrix3.prototype.getInverse = function ( matrix ) {\n \n     console.warn( 'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n     return this.copy( matrix ).invert();\n \n };\n \n //\n \n Matrix4.prototype.extractPosition = function ( m ) {\n \n     console.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n     return this.copyPosition( m );\n \n };\n \n Matrix4.prototype.flattenToArrayOffset = function ( array, offset ) {\n \n     console.warn( 'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n     return this.toArray( array, offset );\n \n };\n \n Matrix4.prototype.getPosition = function () {\n \n     console.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n     return new Vector3().setFromMatrixColumn( this, 3 );\n \n };\n \n Matrix4.prototype.setRotationFromQuaternion = function ( q ) {\n \n     console.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n     return this.makeRotationFromQuaternion( q );\n \n };\n \n Matrix4.prototype.multiplyToArray = function () {\n \n     console.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n \n };\n \n Matrix4.prototype.multiplyVector3 = function ( vector ) {\n \n     console.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n     return vector.applyMatrix4( this );\n \n };\n \n Matrix4.prototype.multiplyVector4 = function ( vector ) {\n \n     console.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n     return vector.applyMatrix4( this );\n \n };\n \n Matrix4.prototype.multiplyVector3Array = function ( /* a */ ) {\n \n     console.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n \n };\n \n Matrix4.prototype.rotateAxis = function ( v ) {\n \n     console.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n     v.transformDirection( this );\n \n };\n \n Matrix4.prototype.crossVector = function ( vector ) {\n \n     console.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n     return vector.applyMatrix4( this );\n \n };\n \n Matrix4.prototype.translate = function () {\n \n     console.error( 'THREE.Matrix4: .translate() has been removed.' );\n \n };\n \n Matrix4.prototype.rotateX = function () {\n \n     console.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n \n };\n \n Matrix4.prototype.rotateY = function () {\n \n     console.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n \n };\n \n Matrix4.prototype.rotateZ = function () {\n \n     console.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n \n };\n \n Matrix4.prototype.rotateByAxis = function () {\n \n     console.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n \n };\n \n Matrix4.prototype.applyToBufferAttribute = function ( attribute ) {\n \n     console.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n     return attribute.applyMatrix4( this );\n \n };\n \n Matrix4.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n \n     console.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n \n };\n \n Matrix4.prototype.makeFrustum = function ( left, right, bottom, top, near, far ) {\n \n     console.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n     return this.makePerspective( left, right, top, bottom, near, far );\n \n };\n \n Matrix4.prototype.getInverse = function ( matrix ) {\n \n     console.warn( 'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n     return this.copy( matrix ).invert();\n \n };\n \n //\n \n Plane.prototype.isIntersectionLine = function ( line ) {\n \n     console.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n     return this.intersectsLine( line );\n \n };\n \n //\n \n Quaternion.prototype.multiplyVector3 = function ( vector ) {\n \n     console.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n     return vector.applyQuaternion( this );\n \n };\n \n Quaternion.prototype.inverse = function ( ) {\n \n     console.warn( 'THREE.Quaternion: .inverse() has been renamed to invert().' );\n     return this.invert();\n \n };\n \n //\n \n Ray.prototype.isIntersectionBox = function ( box ) {\n \n     console.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n     return this.intersectsBox( box );\n \n };\n \n Ray.prototype.isIntersectionPlane = function ( plane ) {\n \n     console.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n     return this.intersectsPlane( plane );\n \n };\n \n Ray.prototype.isIntersectionSphere = function ( sphere ) {\n \n     console.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n     return this.intersectsSphere( sphere );\n \n };\n \n //\n \n Triangle.prototype.area = function () {\n \n     console.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n     return this.getArea();\n \n };\n \n Triangle.prototype.barycoordFromPoint = function ( point, target ) {\n \n     console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n     return this.getBarycoord( point, target );\n \n };\n \n Triangle.prototype.midpoint = function ( target ) {\n \n     console.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n     return this.getMidpoint( target );\n \n };\n \n Triangle.prototypenormal = function ( target ) {\n \n     console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n     return this.getNormal( target );\n \n };\n \n Triangle.prototype.plane = function ( target ) {\n \n     console.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n     return this.getPlane( target );\n \n };\n \n Triangle.barycoordFromPoint = function ( point, a, b, c, target ) {\n \n     console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n     return Triangle.getBarycoord( point, a, b, c, target );\n \n };\n \n Triangle.normal = function ( a, b, c, target ) {\n \n     console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n     return Triangle.getNormal( a, b, c, target );\n \n };\n \n //\n \n Shape.prototype.extractAllPoints = function ( divisions ) {\n \n     console.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n     return this.extractPoints( divisions );\n \n };\n \n Shape.prototype.extrude = function ( options ) {\n \n     console.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n     return new ExtrudeGeometry( this, options );\n \n };\n \n Shape.prototype.makeGeometry = function ( options ) {\n \n     console.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n     return new ShapeGeometry( this, options );\n \n };\n \n //\n \n Vector2.prototype.fromAttribute = function ( attribute, index, offset ) {\n \n     console.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n     return this.fromBufferAttribute( attribute, index, offset );\n \n };\n \n Vector2.prototype.distanceToManhattan = function ( v ) {\n \n     console.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n     return this.manhattanDistanceTo( v );\n \n };\n \n Vector2.prototype.lengthManhattan = function () {\n \n     console.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n     return this.manhattanLength();\n \n };\n \n //\n \n Vector3.prototype.setEulerFromRotationMatrix = function () {\n \n     console.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n \n };\n \n Vector3.prototype.setEulerFromQuaternion = function () {\n \n     console.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n \n };\n \n Vector3.prototype.getPositionFromMatrix = function ( m ) {\n \n     console.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n     return this.setFromMatrixPosition( m );\n \n };\n \n Vector3.prototype.getScaleFromMatrix = function ( m ) {\n \n     console.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n     return this.setFromMatrixScale( m );\n \n };\n \n Vector3.prototype.getColumnFromMatrix = function ( index, matrix ) {\n \n     console.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n     return this.setFromMatrixColumn( matrix, index );\n \n };\n \n Vector3.prototype.applyProjection = function ( m ) {\n \n     console.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n     return this.applyMatrix4( m );\n \n };\n \n Vector3.prototype.fromAttribute = function ( attribute, index, offset ) {\n \n     console.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n     return this.fromBufferAttribute( attribute, index, offset );\n \n };\n \n Vector3.prototype.distanceToManhattan = function ( v ) {\n \n     console.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n     return this.manhattanDistanceTo( v );\n \n };\n \n Vector3.prototype.lengthManhattan = function () {\n \n     console.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n     return this.manhattanLength();\n \n };\n \n //\n \n Vector4.prototype.fromAttribute = function ( attribute, index, offset ) {\n \n     console.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n     return this.fromBufferAttribute( attribute, index, offset );\n \n };\n \n Vector4.prototype.lengthManhattan = function () {\n \n     console.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n     return this.manhattanLength();\n \n };\n \n //\n \n Object3D.prototype.getChildByName = function ( name ) {\n \n     console.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n     return this.getObjectByName( name );\n \n };\n \n Object3D.prototype.renderDepth = function () {\n \n     console.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n \n };\n \n Object3D.prototype.translate = function ( distance, axis ) {\n \n     console.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n     return this.translateOnAxis( axis, distance );\n \n };\n \n Object3D.prototype.getWorldRotation = function () {\n \n     console.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n \n };\n \n Object3D.prototype.applyMatrix = function ( matrix ) {\n \n     console.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n     return this.applyMatrix4( matrix );\n \n };\n \n Object.defineProperties( Object3D.prototype, {\n \n     eulerOrder: {\n         get: function () {\n \n             console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n             return this.rotation.order;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n             this.rotation.order = value;\n \n         }\n     },\n     useQuaternion: {\n         get: function () {\n \n             console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n \n         },\n         set: function () {\n \n             console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n \n         }\n     }\n \n } );\n \n Mesh.prototype.setDrawMode = function () {\n \n     console.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n \n };\n \n Object.defineProperties( Mesh.prototype, {\n \n     drawMode: {\n         get: function () {\n \n             console.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n             return TrianglesDrawMode;\n \n         },\n         set: function () {\n \n             console.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n \n         }\n     }\n \n } );\n \n SkinnedMesh.prototype.initBones = function () {\n \n     console.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n \n };\n \n //\n \n PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n \n     console.warn( 'THREE.PerspectiveCamera.setLens is deprecated. ' +\n             'Use .setFocalLength and .filmGauge for a photographic setup.' );\n \n     if ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n     this.setFocalLength( focalLength );\n \n };\n \n //\n \n Object.defineProperties( Light.prototype, {\n     onlyShadow: {\n         set: function () {\n \n             console.warn( 'THREE.Light: .onlyShadow has been removed.' );\n \n         }\n     },\n     shadowCameraFov: {\n         set: function ( value ) {\n \n             console.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n             this.shadow.camera.fov = value;\n \n         }\n     },\n     shadowCameraLeft: {\n         set: function ( value ) {\n \n             console.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n             this.shadow.camera.left = value;\n \n         }\n     },\n     shadowCameraRight: {\n         set: function ( value ) {\n \n             console.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n             this.shadow.camera.right = value;\n \n         }\n     },\n     shadowCameraTop: {\n         set: function ( value ) {\n \n             console.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n             this.shadow.camera.top = value;\n \n         }\n     },\n     shadowCameraBottom: {\n         set: function ( value ) {\n \n             console.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n             this.shadow.camera.bottom = value;\n \n         }\n     },\n     shadowCameraNear: {\n         set: function ( value ) {\n \n             console.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n             this.shadow.camera.near = value;\n \n         }\n     },\n     shadowCameraFar: {\n         set: function ( value ) {\n \n             console.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n             this.shadow.camera.far = value;\n \n         }\n     },\n     shadowCameraVisible: {\n         set: function () {\n \n             console.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n \n         }\n     },\n     shadowBias: {\n         set: function ( value ) {\n \n             console.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n             this.shadow.bias = value;\n \n         }\n     },\n     shadowDarkness: {\n         set: function () {\n \n             console.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n \n         }\n     },\n     shadowMapWidth: {\n         set: function ( value ) {\n \n             console.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n             this.shadow.mapSize.width = value;\n \n         }\n     },\n     shadowMapHeight: {\n         set: function ( value ) {\n \n             console.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n             this.shadow.mapSize.height = value;\n \n         }\n     }\n } );\n \n //\n \n Object.defineProperties( BufferAttribute.prototype, {\n \n     length: {\n         get: function () {\n \n             console.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n             return this.array.length;\n \n         }\n     },\n     dynamic: {\n         get: function () {\n \n             console.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n             return this.usage === DynamicDrawUsage;\n \n         },\n         set: function ( /* value */ ) {\n \n             console.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n             this.setUsage( DynamicDrawUsage );\n \n         }\n     }\n \n } );\n \n BufferAttribute.prototype.setDynamic = function ( value ) {\n \n     console.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n     this.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n     return this;\n \n };\n \n BufferAttribute.prototype.copyIndicesArray = function ( /* indices */ ) {\n \n     console.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n \n },\n \n BufferAttribute.prototype.setArray = function ( /* array */ ) {\n \n     console.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n \n };\n \n //\n \n BufferGeometry.prototype.addIndex = function ( index ) {\n \n     console.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n     this.setIndex( index );\n \n };\n \n BufferGeometry.prototype.addAttribute = function ( name, attribute ) {\n \n     console.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n \n     if ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n \n         console.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n \n         return this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n \n     }\n \n     if ( name === 'index' ) {\n \n         console.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n         this.setIndex( attribute );\n \n         return this;\n \n     }\n \n     return this.setAttribute( name, attribute );\n \n };\n \n BufferGeometry.prototype.addDrawCall = function ( start, count, indexOffset ) {\n \n     if ( indexOffset !== undefined ) {\n \n         console.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n \n     }\n \n     console.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n     this.addGroup( start, count );\n \n };\n \n BufferGeometry.prototype.clearDrawCalls = function () {\n \n     console.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n     this.clearGroups();\n \n };\n \n BufferGeometry.prototype.computeOffsets = function () {\n \n     console.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n \n };\n \n BufferGeometry.prototype.removeAttribute = function ( name ) {\n \n     console.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n \n     return this.deleteAttribute( name );\n \n };\n \n BufferGeometry.prototype.applyMatrix = function ( matrix ) {\n \n     console.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n     return this.applyMatrix4( matrix );\n \n };\n \n Object.defineProperties( BufferGeometry.prototype, {\n \n     drawcalls: {\n         get: function () {\n \n             console.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n             return this.groups;\n \n         }\n     },\n     offsets: {\n         get: function () {\n \n             console.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n             return this.groups;\n \n         }\n     }\n \n } );\n \n InterleavedBuffer.prototype.setDynamic = function ( value ) {\n \n     console.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n     this.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n     return this;\n \n };\n \n InterleavedBuffer.prototype.setArray = function ( /* array */ ) {\n \n     console.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n \n };\n \n //\n \n ExtrudeGeometry.prototype.getArrays = function () {\n \n     console.error( 'THREE.ExtrudeGeometry: .getArrays() has been removed.' );\n \n };\n \n ExtrudeGeometry.prototype.addShapeList = function () {\n \n     console.error( 'THREE.ExtrudeGeometry: .addShapeList() has been removed.' );\n \n };\n \n ExtrudeGeometry.prototype.addShape = function () {\n \n     console.error( 'THREE.ExtrudeGeometry: .addShape() has been removed.' );\n \n };\n \n //\n \n Scene.prototype.dispose = function () {\n \n     console.error( 'THREE.Scene: .dispose() has been removed.' );\n \n };\n \n //\n \n Uniform.prototype.onUpdate = function () {\n \n     console.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n     return this;\n \n };\n \n //\n \n Object.defineProperties( Material.prototype, {\n \n     wrapAround: {\n         get: function () {\n \n             console.warn( 'THREE.Material: .wrapAround has been removed.' );\n \n         },\n         set: function () {\n \n             console.warn( 'THREE.Material: .wrapAround has been removed.' );\n \n         }\n     },\n \n     overdraw: {\n         get: function () {\n \n             console.warn( 'THREE.Material: .overdraw has been removed.' );\n \n         },\n         set: function () {\n \n             console.warn( 'THREE.Material: .overdraw has been removed.' );\n \n         }\n     },\n \n     wrapRGB: {\n         get: function () {\n \n             console.warn( 'THREE.Material: .wrapRGB has been removed.' );\n             return new Color();\n \n         }\n     },\n \n     shading: {\n         get: function () {\n \n             console.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n             this.flatShading = ( value === FlatShading );\n \n         }\n     },\n \n     stencilMask: {\n         get: function () {\n \n             console.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n             return this.stencilFuncMask;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n             this.stencilFuncMask = value;\n \n         }\n     },\n \n     vertexTangents: {\n         get: function () {\n \n             console.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\n \n         },\n         set: function () {\n \n             console.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\n \n         }\n     },\n \n } );\n \n Object.defineProperties( ShaderMaterial.prototype, {\n \n     derivatives: {\n         get: function () {\n \n             console.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n             return this.extensions.derivatives;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n             this.extensions.derivatives = value;\n \n         }\n     }\n \n } );\n \n //\n \n WebGLRenderer.prototype.clearTarget = function ( renderTarget, color, depth, stencil ) {\n \n     console.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n     this.setRenderTarget( renderTarget );\n     this.clear( color, depth, stencil );\n \n };\n \n WebGLRenderer.prototype.animate = function ( callback ) {\n \n     console.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n     this.setAnimationLoop( callback );\n \n };\n \n WebGLRenderer.prototype.getCurrentRenderTarget = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n     return this.getRenderTarget();\n \n };\n \n WebGLRenderer.prototype.getMaxAnisotropy = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n     return this.capabilities.getMaxAnisotropy();\n \n };\n \n WebGLRenderer.prototype.getPrecision = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n     return this.capabilities.precision;\n \n };\n \n WebGLRenderer.prototype.resetGLState = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n     return this.state.reset();\n \n };\n \n WebGLRenderer.prototype.supportsFloatTextures = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n     return this.extensions.get( 'OES_texture_float' );\n \n };\n \n WebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n     return this.extensions.get( 'OES_texture_half_float' );\n \n };\n \n WebGLRenderer.prototype.supportsStandardDerivatives = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n     return this.extensions.get( 'OES_standard_derivatives' );\n \n };\n \n WebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n     return this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n \n };\n \n WebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n     return this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n \n };\n \n WebGLRenderer.prototype.supportsBlendMinMax = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n     return this.extensions.get( 'EXT_blend_minmax' );\n \n };\n \n WebGLRenderer.prototype.supportsVertexTextures = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n     return this.capabilities.vertexTextures;\n \n };\n \n WebGLRenderer.prototype.supportsInstancedArrays = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n     return this.extensions.get( 'ANGLE_instanced_arrays' );\n \n };\n \n WebGLRenderer.prototype.enableScissorTest = function ( boolean ) {\n \n     console.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n     this.setScissorTest( boolean );\n \n };\n \n WebGLRenderer.prototype.initMaterial = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.addPrePlugin = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.addPostPlugin = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.updateShadowMap = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.setFaceCulling = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.allocTextureUnit = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.setTexture = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.setTexture2D = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.setTextureCube = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.getActiveMipMapLevel = function () {\n \n     console.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n     return this.getActiveMipmapLevel();\n \n };\n \n Object.defineProperties( WebGLRenderer.prototype, {\n \n     shadowMapEnabled: {\n         get: function () {\n \n             return this.shadowMap.enabled;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n             this.shadowMap.enabled = value;\n \n         }\n     },\n     shadowMapType: {\n         get: function () {\n \n             return this.shadowMap.type;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n             this.shadowMap.type = value;\n \n         }\n     },\n     shadowMapCullFace: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n             return undefined;\n \n         },\n         set: function ( /* value */ ) {\n \n             console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n \n         }\n     },\n     context: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n             return this.getContext();\n \n         }\n     },\n     vr: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n             return this.xr;\n \n         }\n     },\n     gammaInput: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n             return false;\n \n         },\n         set: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n \n         }\n     },\n     gammaOutput: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n             return false;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n             this.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n \n         }\n     },\n     toneMappingWhitePoint: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n             return 1.0;\n \n         },\n         set: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n \n         }\n     },\n     gammaFactor: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n             return 2;\n \n         },\n         set: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n \n         }\n     }\n } );\n \n Object.defineProperties( WebGLShadowMap.prototype, {\n \n     cullFace: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n             return undefined;\n \n         },\n         set: function ( /* cullFace */ ) {\n \n             console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n \n         }\n     },\n     renderReverseSided: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n             return undefined;\n \n         },\n         set: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n \n         }\n     },\n     renderSingleSided: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n             return undefined;\n \n         },\n         set: function () {\n \n             console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n \n         }\n     }\n \n } );\n \n class WebGLRenderTargetCube extends WebGLCubeRenderTarget {\n \n     constructor( width, height, options ) {\n \n         console.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n         super( width, options );\n \n     }\n \n }\n \n //\n \n Object.defineProperties( WebGLRenderTarget.prototype, {\n \n     wrapS: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n             return this.texture.wrapS;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n             this.texture.wrapS = value;\n \n         }\n     },\n     wrapT: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n             return this.texture.wrapT;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n             this.texture.wrapT = value;\n \n         }\n     },\n     magFilter: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n             return this.texture.magFilter;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n             this.texture.magFilter = value;\n \n         }\n     },\n     minFilter: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n             return this.texture.minFilter;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n             this.texture.minFilter = value;\n \n         }\n     },\n     anisotropy: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n             return this.texture.anisotropy;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n             this.texture.anisotropy = value;\n \n         }\n     },\n     offset: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n             return this.texture.offset;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n             this.texture.offset = value;\n \n         }\n     },\n     repeat: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n             return this.texture.repeat;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n             this.texture.repeat = value;\n \n         }\n     },\n     format: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n             return this.texture.format;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n             this.texture.format = value;\n \n         }\n     },\n     type: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n             return this.texture.type;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n             this.texture.type = value;\n \n         }\n     },\n     generateMipmaps: {\n         get: function () {\n \n             console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n             return this.texture.generateMipmaps;\n \n         },\n         set: function ( value ) {\n \n             console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n             this.texture.generateMipmaps = value;\n \n         }\n     }\n \n } );\n \n //\n \n Audio.prototype.load = function ( file ) {\n \n     console.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n     const scope = this;\n     const audioLoader = new AudioLoader();\n     audioLoader.load( file, function ( buffer ) {\n \n         scope.setBuffer( buffer );\n \n     } );\n     return this;\n \n };\n \n \n AudioAnalyser.prototype.getData = function () {\n \n     console.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n     return this.getFrequencyData();\n \n };\n \n //\n \n CubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n \n     console.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n     return this.update( renderer, scene );\n \n };\n \n CubeCamera.prototype.clear = function ( renderer, color, depth, stencil ) {\n \n     console.warn( 'THREE.CubeCamera: .clear() is now .renderTarget.clear().' );\n     return this.renderTarget.clear( renderer, color, depth, stencil );\n \n };\n \n ImageUtils.crossOrigin = undefined;\n \n ImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n \n     console.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n \n     const loader = new TextureLoader();\n     loader.setCrossOrigin( this.crossOrigin );\n \n     const texture = loader.load( url, onLoad, undefined, onError );\n \n     if ( mapping ) texture.mapping = mapping;\n \n     return texture;\n \n };\n \n ImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n \n     console.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n \n     const loader = new CubeTextureLoader();\n     loader.setCrossOrigin( this.crossOrigin );\n \n     const texture = loader.load( urls, onLoad, undefined, onError );\n \n     if ( mapping ) texture.mapping = mapping;\n \n     return texture;\n \n };\n \n ImageUtils.loadCompressedTexture = function () {\n \n     console.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n \n };\n \n ImageUtils.loadCompressedTextureCube = function () {\n \n     console.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n \n };\n \n //\n \n function CanvasRenderer() {\n \n     console.error( 'THREE.CanvasRenderer has been removed' );\n \n }\n \n //\n \n function JSONLoader() {\n \n     console.error( 'THREE.JSONLoader has been removed.' );\n \n }\n \n //\n \n const SceneUtils = {\n \n     createMultiMaterialObject: function ( /* geometry, materials */ ) {\n \n         console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n \n     },\n \n     detach: function ( /* child, parent, scene */ ) {\n \n         console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n \n     },\n \n     attach: function ( /* child, scene, parent */ ) {\n \n         console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n \n     }\n \n };\n \n //\n \n function LensFlare() {\n \n     console.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\n \n }\n \n //\n \n class ParametricGeometry extends BufferGeometry {\n \n     constructor() {\n \n         console.error( 'THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js' );\n         super();\n \n     }\n \n }\n \n class TextGeometry extends BufferGeometry {\n \n     constructor() {\n \n         console.error( 'THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js' );\n         super();\n \n     }\n \n }\n \n function FontLoader() {\n \n     console.error( 'THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js' );\n \n }\n \n function Font() {\n \n     console.error( 'THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js' );\n \n }\n \n function ImmediateRenderObject() {\n \n     console.error( 'THREE.ImmediateRenderObject has been removed.' );\n \n }\n \n class WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n \n     constructor( width, height, options ) {\n \n         console.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\n         super( width, height, options );\n         this.samples = 4;\n \n     }\n \n }\n \n class DataTexture2DArray extends DataArrayTexture {\n \n     constructor( data, width, height, depth ) {\n \n         console.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\n         super( data, width, height, depth );\n \n     }\n \n }\n \n class DataTexture3D extends Data3DTexture {\n \n     constructor( data, width, height, depth ) {\n \n         console.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\n         super( data, width, height, depth );\n \n     }\n \n }\n \n if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n \n     __THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n         revision: REVISION,\n     } } ) );\n \n }\n \n if ( typeof window !== 'undefined' ) {\n \n     if ( window.__THREE__ ) {\n \n         console.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n \n     } else {\n \n         window.__THREE__ = REVISION;\n \n     }\n \n }\n \n export { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CapsuleGeometry as CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FaceColors, FileLoader, FlatShading, Float16BufferAttribute, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, JSONLoader, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils as Math, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoColors, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, SRGBColorSpace, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Source, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n ","import {\n    EventDispatcher,\n    MOUSE,\n    Quaternion,\n    Spherical,\n    TOUCH,\n    Vector2,\n    Vector3,\n} from \"./three.module.js\";\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: \"change\" };\nconst _startEvent = { type: \"start\" };\nconst _endEvent = { type: \"end\" };\n\nclass OrbitControls extends EventDispatcher {\n    constructor(object, domElement) {\n        super();\n\n        if (domElement === undefined)\n            console.warn(\n                'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.'\n            );\n        if (domElement === document)\n            console.error(\n                'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n            );\n\n        this.object = object;\n        this.domElement = domElement;\n        this.domElement.style.touchAction = \"none\"; // disable touch scroll\n\n        // Set to false to disable this control\n        this.enabled = true;\n\n        // \"target\" sets the location of focus, where the object orbits around\n        this.target = new Vector3();\n\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0;\n        this.maxDistance = Infinity;\n\n        // How far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0;\n        this.maxZoom = Infinity;\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0; // radians\n        this.maxPolarAngle = Math.PI; // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n        this.minAzimuthAngle = -Infinity; // radians\n        this.maxAzimuthAngle = Infinity; // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false;\n        this.dampingFactor = 0.05;\n\n        // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true;\n        this.zoomSpeed = 1.0;\n\n        // Set to false to disable rotating\n        this.enableRotate = true;\n        this.rotateSpeed = 1.0;\n\n        // Set to false to disable panning\n        this.enablePan = true;\n        this.panSpeed = 1.0;\n        this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n        this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false;\n        this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n        // The four arrow keys\n        this.keys = {\n            LEFT: \"ArrowLeft\",\n            UP: \"ArrowUp\",\n            RIGHT: \"ArrowRight\",\n            BOTTOM: \"ArrowDown\",\n        };\n\n        // Mouse buttons\n        this.mouseButtons = {\n            LEFT: MOUSE.ROTATE,\n            MIDDLE: MOUSE.DOLLY,\n            RIGHT: MOUSE.PAN,\n        };\n\n        // Touch fingers\n        this.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n        // for reset\n        this.target0 = this.target.clone();\n        this.position0 = this.object.position.clone();\n        this.zoom0 = this.object.zoom;\n\n        // the target DOM element for key events\n        this._domElementKeyEvents = null;\n\n        //\n        // public methods\n        //\n\n        this.getPolarAngle = function () {\n            return spherical.phi;\n        };\n\n        this.getAzimuthalAngle = function () {\n            return spherical.theta;\n        };\n\n        this.getDistance = function () {\n            return this.object.position.distanceTo(this.target);\n        };\n\n        this.listenToKeyEvents = function (domElement) {\n            domElement.addEventListener(\"keydown\", onKeyDown);\n            this._domElementKeyEvents = domElement;\n        };\n\n        this.saveState = function () {\n            scope.target0.copy(scope.target);\n            scope.position0.copy(scope.object.position);\n            scope.zoom0 = scope.object.zoom;\n        };\n\n        this.reset = function () {\n            scope.target.copy(scope.target0);\n            scope.object.position.copy(scope.position0);\n            scope.object.zoom = scope.zoom0;\n\n            scope.object.updateProjectionMatrix();\n            scope.dispatchEvent(_changeEvent);\n\n            scope.update();\n\n            state = STATE.NONE;\n        };\n\n        // this method is exposed, but perhaps it would be better if we can make it private...\n        this.update = (function () {\n            const offset = new Vector3();\n\n            // so camera.up is the orbit axis\n            const quat = new Quaternion().setFromUnitVectors(\n                object.up,\n                new Vector3(0, 1, 0)\n            );\n            const quatInverse = quat.clone().invert();\n\n            const lastPosition = new Vector3();\n            const lastQuaternion = new Quaternion();\n\n            const twoPI = 2 * Math.PI;\n\n            return function update() {\n                const position = scope.object.position;\n\n                offset.copy(position).sub(scope.target);\n\n                // rotate offset to \"y-axis-is-up\" space\n                offset.applyQuaternion(quat);\n\n                // angle from z-axis around y-axis\n                spherical.setFromVector3(offset);\n\n                if (scope.autoRotate && state === STATE.NONE) {\n                    rotateLeft(getAutoRotationAngle());\n                }\n\n                if (scope.enableDamping) {\n                    spherical.theta +=\n                        sphericalDelta.theta * scope.dampingFactor;\n                    spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n                } else {\n                    spherical.theta += sphericalDelta.theta;\n                    spherical.phi += sphericalDelta.phi;\n                }\n\n                // restrict theta to be between desired limits\n\n                let min = scope.minAzimuthAngle;\n                let max = scope.maxAzimuthAngle;\n\n                if (isFinite(min) && isFinite(max)) {\n                    if (min < -Math.PI) min += twoPI;\n                    else if (min > Math.PI) min -= twoPI;\n\n                    if (max < -Math.PI) max += twoPI;\n                    else if (max > Math.PI) max -= twoPI;\n\n                    if (min <= max) {\n                        spherical.theta = Math.max(\n                            min,\n                            Math.min(max, spherical.theta)\n                        );\n                    } else {\n                        spherical.theta =\n                            spherical.theta > (min + max) / 2\n                                ? Math.max(min, spherical.theta)\n                                : Math.min(max, spherical.theta);\n                    }\n                }\n\n                // restrict phi to be between desired limits\n                spherical.phi = Math.max(\n                    scope.minPolarAngle,\n                    Math.min(scope.maxPolarAngle, spherical.phi)\n                );\n\n                spherical.makeSafe();\n\n                spherical.radius *= scale;\n\n                // restrict radius to be between desired limits\n                spherical.radius = Math.max(\n                    scope.minDistance,\n                    Math.min(scope.maxDistance, spherical.radius)\n                );\n\n                // move target to panned location\n\n                if (scope.enableDamping === true) {\n                    scope.target.addScaledVector(\n                        panOffset,\n                        scope.dampingFactor\n                    );\n                } else {\n                    scope.target.add(panOffset);\n                }\n\n                offset.setFromSpherical(spherical);\n\n                // rotate offset back to \"camera-up-vector-is-up\" space\n                offset.applyQuaternion(quatInverse);\n\n                position.copy(scope.target).add(offset);\n\n                scope.object.lookAt(scope.target);\n\n                if (scope.enableDamping === true) {\n                    sphericalDelta.theta *= 1 - scope.dampingFactor;\n                    sphericalDelta.phi *= 1 - scope.dampingFactor;\n\n                    panOffset.multiplyScalar(1 - scope.dampingFactor);\n                } else {\n                    sphericalDelta.set(0, 0, 0);\n\n                    panOffset.set(0, 0, 0);\n                }\n\n                scale = 1;\n\n                // update condition is:\n                // min(camera displacement, camera rotation in radians)^2 > EPS\n                // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n                if (\n                    zoomChanged ||\n                    lastPosition.distanceToSquared(scope.object.position) >\n                        EPS ||\n                    8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n                ) {\n                    scope.dispatchEvent(_changeEvent);\n\n                    lastPosition.copy(scope.object.position);\n                    lastQuaternion.copy(scope.object.quaternion);\n                    zoomChanged = false;\n\n                    return true;\n                }\n\n                return false;\n            };\n        })();\n\n        this.dispose = function () {\n            scope.domElement.removeEventListener(\"contextmenu\", onContextMenu);\n\n            scope.domElement.removeEventListener(\"pointerdown\", onPointerDown);\n            scope.domElement.removeEventListener(\n                \"pointercancel\",\n                onPointerCancel\n            );\n            scope.domElement.removeEventListener(\"wheel\", onMouseWheel);\n\n            scope.domElement.removeEventListener(\"pointermove\", onPointerMove);\n            scope.domElement.removeEventListener(\"pointerup\", onPointerUp);\n\n            if (scope._domElementKeyEvents !== null) {\n                scope._domElementKeyEvents.removeEventListener(\n                    \"keydown\",\n                    onKeyDown\n                );\n            }\n\n            //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n        };\n\n        //\n        // internals\n        //\n\n        const scope = this;\n\n        const STATE = {\n            NONE: -1,\n            ROTATE: 0,\n            DOLLY: 1,\n            PAN: 2,\n            TOUCH_ROTATE: 3,\n            TOUCH_PAN: 4,\n            TOUCH_DOLLY_PAN: 5,\n            TOUCH_DOLLY_ROTATE: 6,\n        };\n\n        let state = STATE.NONE;\n\n        const EPS = 0.000001;\n\n        // current position in spherical coordinates\n        const spherical = new Spherical();\n        const sphericalDelta = new Spherical();\n\n        let scale = 1;\n        const panOffset = new Vector3();\n        let zoomChanged = false;\n\n        const rotateStart = new Vector2();\n        const rotateEnd = new Vector2();\n        const rotateDelta = new Vector2();\n\n        const panStart = new Vector2();\n        const panEnd = new Vector2();\n        const panDelta = new Vector2();\n\n        const dollyStart = new Vector2();\n        const dollyEnd = new Vector2();\n        const dollyDelta = new Vector2();\n\n        const pointers = [];\n        const pointerPositions = {};\n\n        function getAutoRotationAngle() {\n            return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n        }\n\n        function getZoomScale() {\n            return Math.pow(0.95, scope.zoomSpeed);\n        }\n\n        function rotateLeft(angle) {\n            sphericalDelta.theta -= angle;\n        }\n\n        function rotateUp(angle) {\n            sphericalDelta.phi -= angle;\n        }\n\n        const panLeft = (function () {\n            const v = new Vector3();\n\n            return function panLeft(distance, objectMatrix) {\n                v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n                v.multiplyScalar(-distance);\n\n                panOffset.add(v);\n            };\n        })();\n\n        const panUp = (function () {\n            const v = new Vector3();\n\n            return function panUp(distance, objectMatrix) {\n                if (scope.screenSpacePanning === true) {\n                    v.setFromMatrixColumn(objectMatrix, 1);\n                } else {\n                    v.setFromMatrixColumn(objectMatrix, 0);\n                    v.crossVectors(scope.object.up, v);\n                }\n\n                v.multiplyScalar(distance);\n\n                panOffset.add(v);\n            };\n        })();\n\n        // deltaX and deltaY are in pixels; right and down are positive\n        const pan = (function () {\n            const offset = new Vector3();\n\n            return function pan(deltaX, deltaY) {\n                const element = scope.domElement;\n\n                if (scope.object.isPerspectiveCamera) {\n                    // perspective\n                    const position = scope.object.position;\n                    offset.copy(position).sub(scope.target);\n                    let targetDistance = offset.length();\n\n                    // half of the fov is center to top of screen\n                    targetDistance *= Math.tan(\n                        ((scope.object.fov / 2) * Math.PI) / 180.0\n                    );\n\n                    // we use only clientHeight here so aspect ratio does not distort speed\n                    panLeft(\n                        (2 * deltaX * targetDistance) / element.clientHeight,\n                        scope.object.matrix\n                    );\n                    panUp(\n                        (2 * deltaY * targetDistance) / element.clientHeight,\n                        scope.object.matrix\n                    );\n                } else if (scope.object.isOrthographicCamera) {\n                    // orthographic\n                    panLeft(\n                        (deltaX * (scope.object.right - scope.object.left)) /\n                            scope.object.zoom /\n                            element.clientWidth,\n                        scope.object.matrix\n                    );\n                    panUp(\n                        (deltaY * (scope.object.top - scope.object.bottom)) /\n                            scope.object.zoom /\n                            element.clientHeight,\n                        scope.object.matrix\n                    );\n                } else {\n                    // camera neither orthographic nor perspective\n                    console.warn(\n                        \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n                    );\n                    scope.enablePan = false;\n                }\n            };\n        })();\n\n        function dollyOut(dollyScale) {\n            if (scope.object.isPerspectiveCamera) {\n                scale /= dollyScale;\n            } else if (scope.object.isOrthographicCamera) {\n                scope.object.zoom = Math.max(\n                    scope.minZoom,\n                    Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n                );\n                scope.object.updateProjectionMatrix();\n                zoomChanged = true;\n            } else {\n                console.warn(\n                    \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n                );\n                scope.enableZoom = false;\n            }\n        }\n\n        function dollyIn(dollyScale) {\n            if (scope.object.isPerspectiveCamera) {\n                scale *= dollyScale;\n            } else if (scope.object.isOrthographicCamera) {\n                scope.object.zoom = Math.max(\n                    scope.minZoom,\n                    Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n                );\n                scope.object.updateProjectionMatrix();\n                zoomChanged = true;\n            } else {\n                console.warn(\n                    \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n                );\n                scope.enableZoom = false;\n            }\n        }\n\n        //\n        // event callbacks - update the object state\n        //\n\n        function handleMouseDownRotate(event) {\n            rotateStart.set(event.clientX, event.clientY);\n        }\n\n        function handleMouseDownDolly(event) {\n            dollyStart.set(event.clientX, event.clientY);\n        }\n\n        function handleMouseDownPan(event) {\n            panStart.set(event.clientX, event.clientY);\n        }\n\n        function handleMouseMoveRotate(event) {\n            rotateEnd.set(event.clientX, event.clientY);\n\n            rotateDelta\n                .subVectors(rotateEnd, rotateStart)\n                .multiplyScalar(scope.rotateSpeed);\n\n            const element = scope.domElement;\n\n            rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight); // yes, height\n\n            rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight);\n\n            rotateStart.copy(rotateEnd);\n\n            scope.update();\n        }\n\n        function handleMouseMoveDolly(event) {\n            dollyEnd.set(event.clientX, event.clientY);\n\n            dollyDelta.subVectors(dollyEnd, dollyStart);\n\n            if (dollyDelta.y > 0) {\n                dollyOut(getZoomScale());\n            } else if (dollyDelta.y < 0) {\n                dollyIn(getZoomScale());\n            }\n\n            dollyStart.copy(dollyEnd);\n\n            scope.update();\n        }\n\n        function handleMouseMovePan(event) {\n            panEnd.set(event.clientX, event.clientY);\n\n            panDelta\n                .subVectors(panEnd, panStart)\n                .multiplyScalar(scope.panSpeed);\n\n            pan(panDelta.x, panDelta.y);\n\n            panStart.copy(panEnd);\n\n            scope.update();\n        }\n\n        function handleMouseWheel(event) {\n            if (event.deltaY < 0) {\n                dollyIn(getZoomScale());\n            } else if (event.deltaY > 0) {\n                dollyOut(getZoomScale());\n            }\n\n            scope.update();\n        }\n\n        function handleKeyDown(event) {\n            let needsUpdate = false;\n\n            switch (event.code) {\n                case scope.keys.UP:\n                    pan(0, scope.keyPanSpeed);\n                    needsUpdate = true;\n                    break;\n\n                case scope.keys.BOTTOM:\n                    pan(0, -scope.keyPanSpeed);\n                    needsUpdate = true;\n                    break;\n\n                case scope.keys.LEFT:\n                    pan(scope.keyPanSpeed, 0);\n                    needsUpdate = true;\n                    break;\n\n                case scope.keys.RIGHT:\n                    pan(-scope.keyPanSpeed, 0);\n                    needsUpdate = true;\n                    break;\n            }\n\n            if (needsUpdate) {\n                // prevent the browser from scrolling on cursor keys\n                event.preventDefault();\n\n                scope.update();\n            }\n        }\n\n        function handleTouchStartRotate() {\n            if (pointers.length === 1) {\n                rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n            } else {\n                const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n                const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n\n                rotateStart.set(x, y);\n            }\n        }\n\n        function handleTouchStartPan() {\n            if (pointers.length === 1) {\n                panStart.set(pointers[0].pageX, pointers[0].pageY);\n            } else {\n                const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n                const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n\n                panStart.set(x, y);\n            }\n        }\n\n        function handleTouchStartDolly() {\n            const dx = pointers[0].pageX - pointers[1].pageX;\n            const dy = pointers[0].pageY - pointers[1].pageY;\n\n            const distance = Math.sqrt(dx * dx + dy * dy);\n\n            dollyStart.set(0, distance);\n        }\n\n        function handleTouchStartDollyPan() {\n            if (scope.enableZoom) handleTouchStartDolly();\n\n            if (scope.enablePan) handleTouchStartPan();\n        }\n\n        function handleTouchStartDollyRotate() {\n            if (scope.enableZoom) handleTouchStartDolly();\n\n            if (scope.enableRotate) handleTouchStartRotate();\n        }\n\n        function handleTouchMoveRotate(event) {\n            if (pointers.length == 1) {\n                rotateEnd.set(event.pageX, event.pageY);\n            } else {\n                const position = getSecondPointerPosition(event);\n\n                const x = 0.5 * (event.pageX + position.x);\n                const y = 0.5 * (event.pageY + position.y);\n\n                rotateEnd.set(x, y);\n            }\n\n            rotateDelta\n                .subVectors(rotateEnd, rotateStart)\n                .multiplyScalar(scope.rotateSpeed);\n\n            const element = scope.domElement;\n\n            rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight); // yes, height\n\n            rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight);\n\n            rotateStart.copy(rotateEnd);\n        }\n\n        function handleTouchMovePan(event) {\n            if (pointers.length === 1) {\n                panEnd.set(event.pageX, event.pageY);\n            } else {\n                const position = getSecondPointerPosition(event);\n\n                const x = 0.5 * (event.pageX + position.x);\n                const y = 0.5 * (event.pageY + position.y);\n\n                panEnd.set(x, y);\n            }\n\n            panDelta\n                .subVectors(panEnd, panStart)\n                .multiplyScalar(scope.panSpeed);\n\n            pan(panDelta.x, panDelta.y);\n\n            panStart.copy(panEnd);\n        }\n\n        function handleTouchMoveDolly(event) {\n            const position = getSecondPointerPosition(event);\n\n            const dx = event.pageX - position.x;\n            const dy = event.pageY - position.y;\n\n            const distance = Math.sqrt(dx * dx + dy * dy);\n\n            dollyEnd.set(0, distance);\n\n            dollyDelta.set(\n                0,\n                Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed)\n            );\n\n            dollyOut(dollyDelta.y);\n\n            dollyStart.copy(dollyEnd);\n        }\n\n        function handleTouchMoveDollyPan(event) {\n            if (scope.enableZoom) handleTouchMoveDolly(event);\n\n            if (scope.enablePan) handleTouchMovePan(event);\n        }\n\n        function handleTouchMoveDollyRotate(event) {\n            if (scope.enableZoom) handleTouchMoveDolly(event);\n\n            if (scope.enableRotate) handleTouchMoveRotate(event);\n        }\n\n        //\n        // event handlers - FSM: listen for events and reset state\n        //\n\n        function onPointerDown(event) {\n            if (scope.enabled === false) return;\n\n            if (pointers.length === 0) {\n                scope.domElement.setPointerCapture(event.pointerId);\n\n                scope.domElement.addEventListener(\"pointermove\", onPointerMove);\n                scope.domElement.addEventListener(\"pointerup\", onPointerUp);\n            }\n\n            //\n\n            addPointer(event);\n\n            if (event.pointerType === \"touch\") {\n                onTouchStart(event);\n            } else {\n                onMouseDown(event);\n            }\n        }\n\n        function onPointerMove(event) {\n            if (scope.enabled === false) return;\n\n            if (event.pointerType === \"touch\") {\n                onTouchMove(event);\n            } else {\n                onMouseMove(event);\n            }\n        }\n\n        function onPointerUp(event) {\n            removePointer(event);\n\n            if (pointers.length === 0) {\n                scope.domElement.releasePointerCapture(event.pointerId);\n\n                scope.domElement.removeEventListener(\n                    \"pointermove\",\n                    onPointerMove\n                );\n                scope.domElement.removeEventListener(\"pointerup\", onPointerUp);\n            }\n\n            scope.dispatchEvent(_endEvent);\n\n            state = STATE.NONE;\n        }\n\n        function onPointerCancel(event) {\n            removePointer(event);\n        }\n\n        function onMouseDown(event) {\n            let mouseAction;\n\n            switch (event.button) {\n                case 0:\n                    mouseAction = scope.mouseButtons.LEFT;\n                    break;\n\n                case 1:\n                    mouseAction = scope.mouseButtons.MIDDLE;\n                    break;\n\n                case 2:\n                    mouseAction = scope.mouseButtons.RIGHT;\n                    break;\n\n                default:\n                    mouseAction = -1;\n            }\n\n            switch (mouseAction) {\n                case MOUSE.DOLLY:\n                    if (scope.enableZoom === false) return;\n\n                    handleMouseDownDolly(event);\n\n                    state = STATE.DOLLY;\n\n                    break;\n\n                case MOUSE.ROTATE:\n                    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n                        if (scope.enablePan === false) return;\n\n                        handleMouseDownPan(event);\n\n                        state = STATE.PAN;\n                    } else {\n                        if (scope.enableRotate === false) return;\n\n                        handleMouseDownRotate(event);\n\n                        state = STATE.ROTATE;\n                    }\n\n                    break;\n\n                case MOUSE.PAN:\n                    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n                        if (scope.enableRotate === false) return;\n\n                        handleMouseDownRotate(event);\n\n                        state = STATE.ROTATE;\n                    } else {\n                        if (scope.enablePan === false) return;\n\n                        handleMouseDownPan(event);\n\n                        state = STATE.PAN;\n                    }\n\n                    break;\n\n                default:\n                    state = STATE.NONE;\n            }\n\n            if (state !== STATE.NONE) {\n                scope.dispatchEvent(_startEvent);\n            }\n        }\n\n        function onMouseMove(event) {\n            if (scope.enabled === false) return;\n\n            switch (state) {\n                case STATE.ROTATE:\n                    if (scope.enableRotate === false) return;\n\n                    handleMouseMoveRotate(event);\n\n                    break;\n\n                case STATE.DOLLY:\n                    if (scope.enableZoom === false) return;\n\n                    handleMouseMoveDolly(event);\n\n                    break;\n\n                case STATE.PAN:\n                    if (scope.enablePan === false) return;\n\n                    handleMouseMovePan(event);\n\n                    break;\n            }\n        }\n\n        function onMouseWheel(event) {\n            if (\n                scope.enabled === false ||\n                scope.enableZoom === false ||\n                state !== STATE.NONE\n            )\n                return;\n\n            event.preventDefault();\n\n            scope.dispatchEvent(_startEvent);\n\n            handleMouseWheel(event);\n\n            scope.dispatchEvent(_endEvent);\n        }\n\n        function onKeyDown(event) {\n            if (scope.enabled === false || scope.enablePan === false) return;\n\n            handleKeyDown(event);\n        }\n\n        function onTouchStart(event) {\n            trackPointer(event);\n\n            switch (pointers.length) {\n                case 1:\n                    switch (scope.touches.ONE) {\n                        case TOUCH.ROTATE:\n                            if (scope.enableRotate === false) return;\n\n                            handleTouchStartRotate();\n\n                            state = STATE.TOUCH_ROTATE;\n\n                            break;\n\n                        case TOUCH.PAN:\n                            if (scope.enablePan === false) return;\n\n                            handleTouchStartPan();\n\n                            state = STATE.TOUCH_PAN;\n\n                            break;\n\n                        default:\n                            state = STATE.NONE;\n                    }\n\n                    break;\n\n                case 2:\n                    switch (scope.touches.TWO) {\n                        case TOUCH.DOLLY_PAN:\n                            if (\n                                scope.enableZoom === false &&\n                                scope.enablePan === false\n                            )\n                                return;\n\n                            handleTouchStartDollyPan();\n\n                            state = STATE.TOUCH_DOLLY_PAN;\n\n                            break;\n\n                        case TOUCH.DOLLY_ROTATE:\n                            if (\n                                scope.enableZoom === false &&\n                                scope.enableRotate === false\n                            )\n                                return;\n\n                            handleTouchStartDollyRotate();\n\n                            state = STATE.TOUCH_DOLLY_ROTATE;\n\n                            break;\n\n                        default:\n                            state = STATE.NONE;\n                    }\n\n                    break;\n\n                default:\n                    state = STATE.NONE;\n            }\n\n            if (state !== STATE.NONE) {\n                scope.dispatchEvent(_startEvent);\n            }\n        }\n\n        function onTouchMove(event) {\n            trackPointer(event);\n\n            switch (state) {\n                case STATE.TOUCH_ROTATE:\n                    if (scope.enableRotate === false) return;\n\n                    handleTouchMoveRotate(event);\n\n                    scope.update();\n\n                    break;\n\n                case STATE.TOUCH_PAN:\n                    if (scope.enablePan === false) return;\n\n                    handleTouchMovePan(event);\n\n                    scope.update();\n\n                    break;\n\n                case STATE.TOUCH_DOLLY_PAN:\n                    if (scope.enableZoom === false && scope.enablePan === false)\n                        return;\n\n                    handleTouchMoveDollyPan(event);\n\n                    scope.update();\n\n                    break;\n\n                case STATE.TOUCH_DOLLY_ROTATE:\n                    if (\n                        scope.enableZoom === false &&\n                        scope.enableRotate === false\n                    )\n                        return;\n\n                    handleTouchMoveDollyRotate(event);\n\n                    scope.update();\n\n                    break;\n\n                default:\n                    state = STATE.NONE;\n            }\n        }\n\n        function onContextMenu(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n        }\n\n        function addPointer(event) {\n            pointers.push(event);\n        }\n\n        function removePointer(event) {\n            delete pointerPositions[event.pointerId];\n\n            for (let i = 0; i < pointers.length; i++) {\n                if (pointers[i].pointerId == event.pointerId) {\n                    pointers.splice(i, 1);\n                    return;\n                }\n            }\n        }\n\n        function trackPointer(event) {\n            let position = pointerPositions[event.pointerId];\n\n            if (position === undefined) {\n                position = new Vector2();\n                pointerPositions[event.pointerId] = position;\n            }\n\n            position.set(event.pageX, event.pageY);\n        }\n\n        function getSecondPointerPosition(event) {\n            const pointer =\n                event.pointerId === pointers[0].pointerId\n                    ? pointers[1]\n                    : pointers[0];\n\n            return pointerPositions[pointer.pointerId];\n        }\n\n        //\n\n        scope.domElement.addEventListener(\"contextmenu\", onContextMenu);\n\n        scope.domElement.addEventListener(\"pointerdown\", onPointerDown);\n        scope.domElement.addEventListener(\"pointercancel\", onPointerCancel);\n        scope.domElement.addEventListener(\"wheel\", onMouseWheel, {\n            passive: false,\n        });\n\n        // force an update at start\n\n        this.update();\n    }\n}\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n    constructor(object, domElement) {\n        super(object, domElement);\n\n        this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n        this.mouseButtons.LEFT = MOUSE.PAN;\n        this.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n        this.touches.ONE = TOUCH.PAN;\n        this.touches.TWO = TOUCH.DOLLY_ROTATE;\n    }\n}\n\nexport { OrbitControls, MapControls };\n"],"names":[],"version":3,"file":"index.db5c7f49.js.map","sourceRoot":"/__parcel_source_root/"}